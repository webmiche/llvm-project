*** IR Dump After Annotation2MetadataPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %idxprom162 = zext i32 %and2 to i64
  %arrayidx163 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom162
  %10 = load i32, ptr %arrayidx163, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %psq_score393 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %15 = load i32, ptr %psq_score393, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %psq_score452 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %16 = load i32, ptr %psq_score452, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After ForceFunctionAttrsPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %idxprom162 = zext i32 %and2 to i64
  %arrayidx163 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom162
  %10 = load i32, ptr %arrayidx163, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %psq_score393 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %15 = load i32, ptr %psq_score393, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %psq_score452 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %16 = load i32, ptr %psq_score452, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After InferFunctionAttrsPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %idxprom162 = zext i32 %and2 to i64
  %arrayidx163 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom162
  %10 = load i32, ptr %arrayidx163, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %psq_score393 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %15 = load i32, ptr %psq_score393, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %psq_score452 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %16 = load i32, ptr %psq_score452, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After CoroEarlyPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %idxprom162 = zext i32 %and2 to i64
  %arrayidx163 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom162
  %10 = load i32, ptr %arrayidx163, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %psq_score393 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %15 = load i32, ptr %psq_score393, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %psq_score452 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %16 = load i32, ptr %psq_score452, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After LowerExpectIntrinsicPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %idxprom162 = zext i32 %and2 to i64
  %arrayidx163 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom162
  %10 = load i32, ptr %arrayidx163, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %psq_score393 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %15 = load i32, ptr %psq_score393, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %psq_score452 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %16 = load i32, ptr %psq_score452, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After SimplifyCFGPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %idxprom162 = zext i32 %and2 to i64
  %arrayidx163 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom162
  %10 = load i32, ptr %arrayidx163, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %psq_score393 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %15 = load i32, ptr %psq_score393, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %psq_score452 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %16 = load i32, ptr %psq_score452, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After SROAPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %idxprom162 = zext i32 %and2 to i64
  %arrayidx163 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom162
  %10 = load i32, ptr %arrayidx163, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %psq_score393 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %15 = load i32, ptr %psq_score393, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %psq_score452 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %16 = load i32, ptr %psq_score452, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After EarlyCSEPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After OpenMPOptPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After IPSCCPPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After CalledValuePropagationPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After GlobalOptPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After PromotePass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After InstCombinePass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After SimplifyCFGPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After RequireAnalysisPass<GlobalsAA, Module> on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After InvalidateAnalysisPass<AAManager> on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After RequireAnalysisPass<ProfileSummaryAnalysis, Module> on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After InlinerPass on (_Z4makeP7state_ti) ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After InlinerPass on (_Z4makeP7state_ti) ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize
define void @_Z4makeP7state_ti(ptr %s, i32 %move, i32 %0, i32 %1, ptr %2, i32 %3, ptr %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr %psq_score184, ptr %zobrist, i64 %idxprom199, ptr %hash201, ptr %6, ptr %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After PostOrderFunctionAttrsPass on (_Z4makeP7state_ti) ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After SROAPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After EarlyCSEPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After SpeculativeExecutionPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After JumpThreadingPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After CorrelatedValuePropagationPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After SimplifyCFGPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After InstCombinePass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After ConstraintEliminationPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After TailCallElimPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After SimplifyCFGPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After ReassociatePass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp57.not, %cmp440.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %conv456, %16
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After RequireAnalysisPass<OptimizationRemarkEmitterAnalysis, Function> on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp57.not, %cmp440.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %conv456, %16
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After LoopSimplifyPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp57.not, %cmp440.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %conv456, %16
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After LCSSAPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp57.not, %cmp440.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %conv456, %16
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After SimplifyCFGPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp57.not, %cmp440.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %conv456, %16
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After InstCombinePass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After LoopSimplifyPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After LCSSAPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After SROAPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After VectorCombinePass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After MergedLoadStoreMotionPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After GVNPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After SCCPPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After BDCEPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After InstCombinePass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After JumpThreadingPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After CorrelatedValuePropagationPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After ADCEPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After MemCpyOptPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After DSEPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After LoopSimplifyPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After LCSSAPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After CoroElidePass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After SimplifyCFGPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After InstCombinePass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After CoroSplitPass on (_Z4makeP7state_ti) ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After InvalidateAnalysisPass<ShouldNotRunFunctionPassesAnalysis> on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After DeadArgumentEliminationPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After CoroCleanupPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After GlobalOptPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After GlobalDCEPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After EliminateAvailableExternallyPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After ReversePostOrderFunctionAttrsPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After RecomputeGlobalsAAPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After Float2IntPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After LowerConstantIntrinsicsPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After LoopSimplifyPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After LCSSAPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After LoopDistributePass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After InjectTLIMappings on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After LoopVectorizePass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After LoopLoadEliminationPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After InstCombinePass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After SimplifyCFGPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After VectorCombinePass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After InstCombinePass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After LoopUnrollPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After WarnMissedTransformationsPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After SROAPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After InstCombinePass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After RequireAnalysisPass<OptimizationRemarkEmitterAnalysis, Function> on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After LoopSimplifyPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After LCSSAPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After AlignmentFromAssumptionsPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After LoopSinkPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After InstSimplifyPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After DivRemPairsPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After TailCallElimPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After SimplifyCFGPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After GlobalDCEPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After ConstantMergePass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After CGProfilePass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After RelLookupTableConverterPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After AnnotationRemarksPass on _Z4makeP7state_ti ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After VerifierPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
*** IR Dump After BitcodeWriterPass on [module] ***
; ModuleID = 'reduced_make.bc'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113 = type { i32, [64 x i32], i64, i64, i64, [13 x i64], i32, i32, [13 x i32], i32, i32, i32, i32, i32, i32, i32, i64, i64, [64 x %struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111], [64 x i32], [64 x i32], [64 x %struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112], i64, i64, i32, [64 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1000 x i64] }
%struct.move_x.0.3.18.24.384.1062.1068.1092.1161.1287.3843.3861.3882.3888.3894.3918.3957.4149.4155.4164.4167.4173.4185.4188.4191.4197.4203.4209.3.84.90.99.105.111 = type { i32, i32, i32, i32, i64, i64 }
%struct.anon.1.4.19.25.385.1063.1069.1093.1162.1288.3844.3862.3883.3889.3895.3919.3958.4150.4156.4165.4168.4174.4186.4189.4192.4198.4204.4210.4.85.91.100.106.112 = type { i32, i32, i32, i32 }

@psq_table = external local_unnamed_addr global [12 x [64 x i8]]

; Function Attrs: minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @_Z4makeP7state_ti(ptr nocapture %s, i32 %move, i32 %0, i32 %1, ptr nocapture %2, i32 %3, ptr nocapture writeonly %Mask, i32 %4, i1 %tobool49.not, i32 %5, i1 %cmp57.not, ptr nocapture readonly %psq_score184, ptr nocapture writeonly %zobrist, i64 %idxprom199, ptr nocapture writeonly %hash201, ptr nocapture writeonly %6, ptr nocapture readonly %hash363, i64 %7, i64 %xor364, i1 %cmp369, i64 %idxprom381, ptr nocapture writeonly %arrayidx382, i64 %8, i1 %cmp442.not, i1 %cmp96) local_unnamed_addr #0 {
entry:
  %and2 = and i32 %0, 1
  br i1 %tobool49.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, ptr %zobrist, align 4
  %idxprom27 = zext i32 %and2 to i64
  %arrayidx28 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 1, i64 %idxprom27
  %9 = load i32, ptr %arrayidx28, align 4
  %shr29.mask = and i32 %9, -2
  %cmp = icmp eq i32 %shr29.mask, 2
  br i1 %cmp, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end
  %fifty32 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 15
  store i32 0, ptr %fifty32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end
  store i64 %idxprom199, ptr %s, align 8, !tbaa !0
  br i1 %tobool49.not, label %if.then50, label %if.else92

if.then50:                                        ; preds = %if.end34
  %cmp51.not = icmp eq i32 %move, 0
  %or.cond59 = or i1 %cmp51.not, %cmp57.not
  br i1 %or.cond59, label %if.end160, label %if.then58

if.then58:                                        ; preds = %if.then50
  %WhitePieces = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 4
  store i64 0, ptr %WhitePieces, align 8
  br label %if.end160

if.else92:                                        ; preds = %if.end34
  br i1 %cmp96, label %if.end145, label %if.else121

if.else121:                                       ; preds = %if.else92
  store i32 0, ptr %6, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.else121, %if.else92
  store i32 0, ptr %Mask, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.end145, %if.then58, %if.then50
  %10 = load i32, ptr %arrayidx28, align 4, !tbaa !6
  %11 = load i8, ptr @psq_table, align 1
  %conv175 = sext i8 %11 to i32
  %sub177 = sub nsw i32 1, %conv175
  store i32 %sub177, ptr %s, align 4
  %12 = load i8, ptr %psq_score184, align 1
  %conv183 = sext i8 %12 to i32
  %psq_score1847 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 7
  %add185 = or i32 %conv183, %5
  store i32 %add185, ptr %psq_score1847, align 4
  %cmp188 = icmp ult i32 %10, 2
  br i1 %cmp188, label %if.then189, label %if.end196

if.then189:                                       ; preds = %if.end160
  store i64 %xor364, ptr %s, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then189, %if.end160
  %13 = load i64, ptr %2, align 8
  store i64 %13, ptr %s, align 8
  %tobool203.not = icmp eq i32 %1, 0
  br i1 %tobool203.not, label %if.else215, label %if.end219

common.ret:                                       ; preds = %if.then497, %if.end491, %if.else215
  ret void

if.else215:                                       ; preds = %if.end196
  store i64 %idxprom199, ptr %s, align 16
  br label %common.ret

if.end219:                                        ; preds = %if.end196
  %or.cond1 = icmp ult i32 %move, -2
  br i1 %or.cond1, label %if.then351, label %if.else358

if.then351:                                       ; preds = %if.end219
  store i64 0, ptr %s, align 32
  br label %if.end491

if.else358:                                       ; preds = %if.end219
  br i1 %tobool49.not, label %if.then360, label %if.else424

if.then360:                                       ; preds = %if.else358
  %hash36310 = getelementptr %struct.state_t.2.5.20.26.386.1064.1070.1094.1163.1289.3845.3863.3884.3890.3896.3920.3959.4151.4157.4166.4169.4175.4187.4190.4193.4199.4205.4211.5.86.92.101.107.113, ptr %s, i64 0, i32 16
  store i64 %xor364, ptr %hash36310, align 8
  store i32 %4, ptr %s, align 8
  %rook_end.0 = select i1 %cmp369, i32 61, i32 1
  %cmp376.not = icmp eq i32 %rook_end.0, %0
  br i1 %cmp376.not, label %if.end384, label %if.then379

if.then379:                                       ; preds = %if.then360
  store i32 0, ptr %Mask, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.then360
  %14 = load i8, ptr %hash363, align 1
  %conv392 = sext i8 %14 to i32
  %15 = load i32, ptr %psq_score1847, align 4
  %add394 = or i32 %15, %conv392
  store i32 %add394, ptr %arrayidx382, align 4
  store i64 %idxprom381, ptr %zobrist, align 8
  store i64 %8, ptr %s, align 8
  store i64 %7, ptr %6, align 8
  br label %if.end491

if.else424:                                       ; preds = %if.else358
  store i64 %xor364, ptr %s, align 8
  %cmp440.not1 = icmp eq i32 %3, 0
  %cmp440.not = select i1 %cmp442.not, i1 true, i1 %cmp440.not1
  %or.cond57 = or i1 %cmp440.not, %cmp57.not
  br i1 %or.cond57, label %if.end448, label %if.then443

if.then443:                                       ; preds = %if.else424
  store i32 0, ptr %2, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.then443, %if.else424
  %16 = load i32, ptr %psq_score1847, align 4
  %17 = load i8, ptr %psq_score184, align 1
  %conv456 = sext i8 %17 to i32
  %add458 = or i32 %16, %conv456
  store i32 %add458, ptr %hash201, align 4
  br label %if.end491

if.end491:                                        ; preds = %if.end448, %if.end384, %if.then351
  %cmp493 = icmp eq i32 %0, 0
  %or.cond58 = or i1 %cmp493, %cmp57.not
  br i1 %or.cond58, label %if.then497, label %common.ret

if.then497:                                       ; preds = %if.end491
  store i32 0, ptr %2, align 4
  br label %common.ret
}

attributes #0 = { minsize mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }

!0 = !{!1, !5, i64 24}
!1 = !{!"_ZTS6move_x", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !5, i64 16, !5, i64 24}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!"long long", !3, i64 0}
!6 = !{!2, !2, i64 0}
