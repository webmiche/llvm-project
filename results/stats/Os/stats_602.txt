counts per function per file: {"PosixPath('602/diagnostic.bc')": {'build_message_string': 1, 'diagnostic_report_current_module': 42, 'trim_filename': 11, 'diagnostic_set_info_translated': 22, 'diagnostic_set_info': 22, 'internal_error': 34, 'diagnostic_action_after_output': 6, 'diagnostic_report_diagnostic': 115, 'diagnostic_build_prefix': 34, 'diagnostic_initialize': 31, 'verbatim': 18, 'emit_diagnostic': 67, 'inform': 34, 'inform_n': 34, 'warning': 34, 'warning_at': 34, 'pedwarn': 34, 'permerror': 34, 'error': 34, 'error_n': 34, 'error_at': 34, 'sorry': 34, 'fatal_error': 34}, "PosixPath('602/decContext.bc')": {'decContextSetStatus': 2, 'decContextDefault': 49, 'decContextSetStatusFromString': 14}, "PosixPath('602/alloca.bc')": {'find_stack_direction': 1, 'C_alloca': 7}, "PosixPath('602/tree-ssa-loop-unswitch.bc')": {'VEC_loop_p_base_iterate': 2, 'VEC_int_base_quick_push': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 14, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 12, 'op_iter_next_tree': 6, 'op_iter_init_tree': 46, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'tree_may_unswitch_on': 25, 'single_pred_edge': 1, 'simplify_using_entry_checks': 19, 'tree_unswitch_loop': 1, 'tree_unswitch_single_loop': 45, 'tree_ssa_unswitch_loops': 12}, "PosixPath('602/reload.bc')": {'find_reloads_address': 149, 'push_reload': 1623, 'push_secondary_reload': 305, 'find_reloads': 16722, 'find_reloads_toplev': 140, 'copy_replacements': 5, 'find_reloads_subreg_address': 78, 'scratch_reload_class': 4, 'secondary_reload_class': 4, 'reload_inner_reg_of_subreg': 4, 'find_valid_class': 2, 'refers_to_mem_for_reload_p': 4, 'refers_to_regno_for_reload_p': 75, 'reg_overlap_mentioned_for_reload_p': 21, 'find_reusable_reload': 162, 'remove_address_replacements': 30, 'df_lr_get_bb_info': 2, 'hard_reg_set_here_p': 4, 'find_dummy_reload': 35, 'find_equiv_reg': 113, 'recog_memoized': 3, 'can_reload_into': 7, 'push_reg_equiv_alt_mem': 2, 'regno_clobbered_p': 9, 'subst_reg_equivs': 10, 'copy_replacements_1': 51, 'find_inc_amount': 14, 'form_sum': 10, 'subst_indexed_address': 27, 'get_secondary_mem': 28, 'find_reloads_address_1': 358, 'find_reloads_address_part': 17, 'transfer_replacements': 2, 'operands_match_p': 44, 'decompose': 67, 'immune_p': 52, 'safe_from_earlyclobber': 2, 'skip_alternative': 2, 'alternative_allows_const_pool_ref': 2, 'push_replacement': 10, 'dup_replacements': 18, 'combine_reloads': 443, 'reload_adjust_reg_for_mode': 2, 'subst_reloads': 43, 'move_replacements': 5, 'find_replacement': 30, 'debug_reload_to_stream': 54}, "PosixPath('602/debug.bc')": {}, "PosixPath('602/tree-chrec.bc')": {'tree_fold_binomial': 44, 'tree_operand_length': 3, 'evolution_function_is_invariant_rec_p': 10, 'evolution_function_is_affine_p': 5, 'get_chrec_loop': 2, 'initial_condition': 2, 'hide_evolution_in_other_loops_than_loop': 9, 'build_polynomial_chrec': 6, 'chrec_convert_1': 75, 'convert_affine_scev': 7, 'tree_contains_chrecs': 3, 'chrec_fold_plus_1': 29, 'chrec_fold_plus_poly_poly': 45, 'chrec_fold_multiply': 6, 'chrec_fold_multiply_poly_poly': 32, 'chrec_evaluate': 11, 'chrec_apply': 7, 'chrec_replace_initial_condition': 7, 'chrec_component_in_loop_num': 11, 'reset_evolution_in_loop': 22, 'eq_evolutions_p': 8, 'is_multivariate_chrec_rec': 7, 'is_multivariate_chrec': 7, 'chrec_contains_symbols': 3, 'chrec_contains_undetermined': 3, 'evolution_function_is_affine_multivariate_p': 8, 'evolution_function_is_univariate_p': 13, 'nb_vars_in_chrec': 2, 'chrec_convert_aggressive': 12, 'scev_direction': 5, 'for_each_scev_op': 1, 'scev_is_linear_expression': 8, 'evolution_function_right_is_integer_cst': 5}, "PosixPath('602/cgraphunit.bc')": {'cgraph_build_static_cdtor': 20, 'save_inline_function_body': 28, 'init_lowered_empty_function': 8, 'cgraph_decide_is_function_needed': 75, 'cgraph_reset_node': 13, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 5, 'record_cdtor_fn': 11, 'cgraph_finalize_function': 36, 'cgraph_lower_function': 4, 'bb_seq': 2, 'gsi_start_bb': 6, 'thunk_adjust': 5, 'gimple_ops': 1, 'gimple_set_op': 4, 'gimple_call_set_lhs': 3, 'single_succ_edge': 1, 'gsi_last_bb': 6, 'assemble_thunk': 58, 'cgraph_expand_function': 107, 'cgraph_process_new_functions': 12, 'gsi_stmt': 1, 'gimple_op': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'verify_cgraph_node': 187, 'verify_cgraph': 4, 'build_cdtor': 2, 'cgraph_build_cdtor_fns': 2, 'process_function_and_variable_attributes': 18, 'cgraph_analyze_functions': 68, 'cgraph_materialize_clone': 18, 'gimple_vdef': 2, 'gimple_call_set_fndecl': 3, 'cgraph_redirect_edge_call_stmt_to_callee': 42, 'cgraph_materialize_all_clones': 60, 'cgraph_mark_functions_to_output': 46, 'cgraph_output_in_order': 19, 'cgraph_output_pending_asms': 4, 'cgraph_expand_all_functions': 2, 'cgraph_optimize': 17, 'cgraph_finalize_compilation_unit': 2, 'VEC_cgraph_edge_p_base_iterate': 2, 'cgraph_copy_node_for_versioning': 30, 'update_call_expr': 7, 'cgraph_function_versioning': 39}, "PosixPath('602/c-omp.bc')": {'c_finish_omp_critical': 7, 'c_finish_omp_atomic': 6, 'check_omp_for_incr_expr': 16, 'c_finish_omp_for': 93, 'c_split_parallel_clauses': 4}, "PosixPath('602/make-relative-prefix.bc')": {'split_directories': 20, 'make_relative_prefix_1': 104}, "PosixPath('602/dce.bc')": {'VEC_rtx_base_space': 2, 'VEC_rtx_heap_reserve': 2, 'VEC_rtx_base_quick_push': 2, 'VEC_rtx_heap_safe_push': 4, 'deletable_insn_p': 12, 'find_call_stack_args': 185, 'mark_insn': 27, 'prescan_insns_for_dce': 33, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'bb_has_eh_pred': 4, 'df_byte_lr_get_bb_info': 2, 'byte_dce_process_block': 45, 'df_lr_get_bb_info': 2, 'dce_process_block': 33, 'delete_corresponding_reg_eq_notes': 7, 'delete_unmarked_insns': 26, 'fast_dce': 85, 'df_scan_get_bb_info': 2, 'df_get_artificial_uses': 2, 'mark_artificial_uses': 18, 'VEC_rtx_base_pop': 2, 'mark_reg_dependencies': 12, 'rest_of_handle_ud_dce': 66}, "PosixPath('602/regcprop.bc')": {'debug_value_data': 18, 'single_pred_edge': 1, 'init_value_data': 8, 'mode_change_ok': 2, 'maybe_mode_change': 5, 'find_oldest_value_reg': 20, 'replace_oldest_value_reg': 14, 'replace_oldest_value_addr': 18, 'free_debug_insn_changes': 4, 'kill_value_one_regno': 15, 'kill_value': 6, 'set_value_regno': 1, 'copy_value': 13, 'kill_set_value': 3, 'kill_autoinc_value': 5, 'apply_debug_insn_changes': 6, 'cprop_find_used_regs_1': 2, 'copyprop_hardreg_forward_1': 274, 'copyprop_hardreg_forward': 397}, "PosixPath('602/tree-ssa-structalias.bc')": {'heapvar_insert': 6, 'create_variable_info_for': 244, 'get_constraint_for_ptr_offset': 67, 'do_structure_copy': 155, 'get_constraint_for_ssa_var': 29, 'init_graph': 24, 'build_pred_graph': 144, 'dump_constraint': 5, 'VEC_constraint_t_base_iterate': 2, 'dump_constraints': 2, 'dump_constraint_edge': 13, 'dump_constraint_graph': 16, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'dump_solution_for_var': 12, 'pt_solution_reset': 1, 'is_global_var': 2, 'pt_solution_set': 14, 'pt_solution_includes_global': 1, 'pt_solution_includes_1': 9, 'pt_solution_empty_p': 3, 'pt_solutions_intersect_1': 5, 'pt_solutions_same_restrict_base': 6, 'VEC_varinfo_t_base_space': 2, 'VEC_varinfo_t_heap_reserve': 2, 'VEC_varinfo_t_base_quick_push': 2, 'VEC_varinfo_t_heap_safe_push': 4, 'new_var_info': 18, 'new_constraint': 7, 'VEC_constraint_t_base_space': 2, 'VEC_constraint_t_heap_reserve': 2, 'VEC_constraint_t_base_quick_push': 2, 'VEC_constraint_t_heap_safe_push': 4, 'new_scalar_tmp_constraint_exp': 11, 'process_constraint': 83, 'init_base_vars': 180, 'init_alias_vars': 148, 'heapvar_map_eq': 4, 'type_could_have_pointers': 2, 'heapvar_map_hash': 3, 'heapvar_lookup': 6, 'get_var_ann': 2, 'alias_get_name': 7, 'var_can_have_subvars': 2, 'bitpos_of_field': 2, 'VEC_fieldoff_s_base_space': 2, 'VEC_fieldoff_s_heap_reserve': 2, 'VEC_fieldoff_s_heap_safe_push': 3, 'push_fields_onto_fieldstack': 54, 'make_constraint_from': 7, 'make_constraint_from_heapvar': 12, 'make_copy_constraint': 7, 'fieldoff_compare': 4, 'get_vi_for_tree': 194, 'intra_create_variable_infos': 57, 'gsi_stmt': 1, 'VEC_ce_s_base_space': 2, 'VEC_ce_s_heap_reserve': 2, 'VEC_ce_s_base_quick_push': 3, 'VEC_ce_s_heap_safe_push': 6, 'do_deref': 27, 'ref_contains_array_ref': 2, 'get_constraint_for_1': 231, 'get_constraint_for_address_of': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_call_lhs': 1, 'gimple_call_arg': 1, 'first_or_preceding_vi_for_offset': 8, 'process_all_all_constraints': 54, 'gimple_call_chain': 1, 'make_constraint_to': 18, 'handle_const_call': 67, 'handle_pure_call': 25, 'handle_rhs_call': 49, 'handle_lhs_call': 55, 'first_vi_for_offset': 11, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'gimple_call_return_type': 2, 'gimple_expr_type': 4, 'gimple_assign_cast_p': 2, 'gimple_return_retval': 1, 'gimple_asm_output_op': 5, 'gimple_asm_input_op': 3, 'find_func_aliases': 1250, 'bb_seq': 2, 'gsi_start_bb': 6, 'add_pred_graph_edge': 2, 'add_implicit_graph_edge': 2, 'init_scc_info': 6, 'VEC_unsigned_base_last': 2, 'VEC_unsigned_base_pop': 2, 'VEC_unsigned_base_space': 2, 'VEC_unsigned_heap_reserve': 2, 'VEC_unsigned_base_quick_push': 2, 'VEC_unsigned_heap_safe_push': 5, 'condense_visit': 121, 'equiv_class_lookup': 1, 'equiv_class_add': 2, 'label_visit': 55, 'equiv_class_label_eq': 4, 'perform_var_substitution': 95, 'merge_graph_nodes': 8, 'constraint_less': 14, 'constraint_equal': 30, 'constraint_vec_find': 49, 'VEC_constraint_t_base_quick_insert': 3, 'VEC_constraint_t_heap_safe_insert': 6, 'constraint_set_union': 113, 'merge_node_constraints': 136, 'unify_nodes': 227, 'find_equivalent_node': 7, 'rewrite_constraints': 17, 'add_graph_edge': 4, 'build_succ_graph': 24, 'free_scc_info': 1, 'free_var_substitution_info': 6, 'insert_into_complex': 24, 'move_complex_constraints': 25, 'unite_pointer_equivalences': 7, 'scc_visit': 67, 'find_indirect_cycles': 2, 'remove_preds_and_fake_succs': 21, 'topo_visit': 16, 'compute_topo_order': 1, 'VEC_unsigned_base_iterate': 2, 'eliminate_indirect_cycles': 25, 'solution_set_expand': 34, 'do_ds_constraint': 64, 'do_sd_constraint': 59, 'solution_set_add': 17, 'set_union_with_increment': 17, 'do_complex_constraint': 144, 'free_topo_info': 1, 'solve_graph': 271, 'solve_constraints': 676, 'set_uids_in_ptset': 16, 'shared_bitmap_lookup': 2, 'shared_bitmap_add': 1, 'find_what_var_points_to': 42, 'VEC_varinfo_t_base_iterate': 2, 'find_what_p_points_to': 3, 'compute_points_to_sets': 69, 'delete_points_to_sets': 15, 'compute_may_aliases': 67, 'count_num_arguments': 4, 'insert_into_field_list_sorted': 4, 'create_function_info_for': 110, 'ipa_pta_execute': 154, 'gate_ipa_pta': 2}, "PosixPath('602/tree-dfa.bc')": {'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'renumber_gimple_stmt_uids': 19, 'renumber_gimple_stmt_uids_in_blocks': 19, 'get_var_ann': 2, 'referenced_var_check_and_insert': 5, 'add_referenced_var': 9, 'find_vars_r': 2, 'make_rename_temp': 4, 'first_htab_element': 7, 'first_referenced_var': 5, 'end_htab_p': 2, 'end_referenced_vars_p': 2, 'var_ann': 2, 'is_global_var': 2, 'may_be_aliased': 7, 'is_call_clobbered': 9, 'is_call_used': 14, 'gimple_default_def': 21, 'dump_variable': 33, 'next_htab_element': 4, 'next_referenced_var': 2, 'dump_referenced_vars': 2, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_next_tree': 6, 'op_iter_init_tree': 71, 'num_ssa_operands': 22, 'collect_dfa_stats': 135, 'dump_dfa_stats': 69, 'gimple_ops': 1, 'gimple_op_ptr': 1, 'find_referenced_vars_in': 14, 'referenced_var_lookup': 2, 'set_default_def': 36, 'remove_referenced_var': 46, 'get_virtual_var': 5, 'mark_symbols_for_renaming': 24, 'find_new_referenced_vars_1': 5, 'get_ref_base_and_extent': 25, 'op_iter_next_use': 7, 'op_iter_init_use': 45, 'stmt_references_abnormal_ssa_name': 9, 'find_referenced_vars': 22}, "PosixPath('602/dbxout.bc')": {'dbxout_init': 34, 'dbxout_end_source_file': 6, 'dbxout_symbol': 235, 'dbxout_type': 581, 'stabstr_D': 17, 'stabstr_U': 12, 'dbxout_int': 5, 'dbxout_stab_value_internal_label': 1, 'dbxout_stab_value_internal_label_diff': 1, 'emit_pending_bincls': 14, 'emit_pending_bincls_if_required': 14, 'VEC_tree_base_iterate': 2, 'output_types_sort': 6, 'VEC_tree_base_quick_push': 2, 'output_used_types_helper': 10, 'output_used_types': 5, 'dbxout_begin_complex_stabs': 17, 'dbxout_type_index': 2, 'print_int_cst_bounds_in_octal_p': 3, 'stabstr_O': 31, 'dbxout_type_name': 6, 'dbxout_type_methods': 52, 'dbxout_type_fields': 39, 'dbxout_range_type': 9, 'dbxout_finish_complex_stabs': 4, 'dbxout_class_name_qualifiers': 9, 'dbxout_symbol_name': 8, 'dbxout_expand_expr': 24, 'dbxout_common_check': 20, 'dbxout_symbol_location': 133, 'dbxout_syms': 1, 'dbxout_parms': 182, 'dbxout_reg_parms': 58, 'dbxout_start_source_file': 14, 'dbxout_global_decl': 2, 'dbxout_block': 18, 'dbxout_function_end': 6, 'dbxout_function_decl': 29, 'dbxout_begin_function': 5, 'dbxout_source_line': 5, 'dbxout_begin_prologue': 23, 'dbxout_end_block': 18, 'dbxout_begin_block': 18, 'dbxout_typedefs': 8}, "PosixPath('602/sese.bc')": {'bb_in_sese_p': 2, 'VEC_loop_p_base_space': 2, 'VEC_loop_p_heap_reserve': 2, 'VEC_loop_p_base_quick_push': 2, 'VEC_loop_p_heap_safe_push': 5, 'sese_record_loop': 4, 'VEC_loop_p_base_iterate': 2, 'build_sese_loop_nests': 32, 'new_sese': 8, 'free_sese': 7, 'ei_end_p': 1, 'ei_cond': 3, 'gsi_stmt': 1, 'sese_build_liveouts_use': 6, 'ei_next': 4, 'bb_seq': 2, 'gsi_start_bb': 6, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_next_use': 7, 'op_iter_init_use': 29, 'sese_build_liveouts_bb': 27, 'sese_bad_liveouts_use': 4, 'gimple_ops': 1, 'gimple_set_op': 4, 'gimple_debug_bind_reset_value': 3, 'sese_reset_debug_liveouts_bb': 23, 'sese_build_liveouts': 87, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'sese_insert_phis_for_liveouts': 92, 'new_rename_map_elt': 2, 'set_rename': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 19, 'get_rename': 1, 'rename_variables_in_expr': 6, 'rename_nb_iterations': 19, 'VEC_tree_base_iterate': 2, 'rename_sese_parameters': 4, 'gimple_vuse_op': 2, 'get_vdef_before_sese': 23, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'sese_adjust_vphi': 28, 'sese_adjust_liveout_phis': 72, 'get_true_edge_from_guard_bb': 4, 'get_false_edge_from_guard_bb': 4, 'VEC_rename_map_elt_base_iterate': 2, 'name_defined_in_loop_p': 2, 'expr_defined_in_loop_p': 12, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'next_readonly_imm_use': 2, 'alive_after_loop': 5, 'close_phi_not_yet_inserted_p': 3, 'single_pred_edge': 1, 'VEC_rename_map_elt_base_space': 2, 'VEC_rename_map_elt_heap_reserve': 2, 'VEC_rename_map_elt_base_quick_push': 2, 'VEC_rename_map_elt_heap_safe_push': 5, 'add_loop_exit_phis': 31, 'insert_loop_close_phis': 5, 'convert_for_phi_arg': 4, 'add_guard_exit_phis': 9, 'insert_guard_phis': 6, 'single_succ_edge': 1, 'gimple_vop': 2, 'op_iter_next_def': 4, 'op_iter_init_def': 20, 'graphite_copy_stmts_from_block': 43, 'gsi_last_bb': 6, 'remove_condition': 14, 'gsi_after_labels': 41, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'gimple_call_fn': 1, 'gimple_call_return_type': 2, 'gimple_expr_type': 4, 'gimple_call_fndecl': 4, 'gimple_call_arg': 1, 'VEC_tree_base_quick_push': 2, 'gimple_call_lhs': 1, 'gimple_call_set_lhs': 3, 'expand_scalar_variables_stmt': 11, 'expand_scalar_variables_expr': 17, 'expand_scalar_variables_ssa_name': 2, 'expand_scalar_variables_call': 17, 'expand_scalar_variables': 12, 'rename_variables_in_stmt': 17, 'rename_variables': 73, 'copy_bb_and_scalar_dependences': 200, 'loop_in_sese_p': 2, 'outermost_loop_in_sese': 5, 'if_region_set_false_region': 10, 'create_if_region_on_edge': 14, 'move_sese_in_condition': 2, 'set_ifsese_condition': 17, 'defined_in_sese_p': 2, 'scalar_evolution_in_region': 2}, "PosixPath('602/tree-ssa-ifcombine.bc')": {'tree_ssa_ifcombine_bb': 176, 'recognize_if_then_else': 14, 'single_pred_edge': 1, 'gsi_stmt': 1, 'same_phi_args_p': 6, 'bb_seq': 2, 'gsi_start_bb': 6, 'gimple_vuse': 2, 'bb_no_side_effects_p': 9, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'gimple_assign_lhs': 1, 'has_single_use': 4, 'get_name_for_bit_test': 19, 'recognize_single_bit_test': 67, 'ifcombine_ifandif': 52, 'recognize_bits_test': 15, 'ifcombine_iforif': 112, 'tree_ssa_ifcombine': 222}, "PosixPath('602/options.bc')": {'cl_optimization_save': 23997, 'cl_optimization_restore': 5512, 'cl_optimization_print': 11313, 'cl_target_option_save': 6, 'cl_target_option_restore': 2, 'cl_target_option_print': 2}, "PosixPath('602/getopt1.bc')": {}, "PosixPath('602/graphite-poly.bc')": {}, "PosixPath('602/print-tree.bc')": {'print_node': 398, 'print_node_brief': 42, 'init_call_expr_arg_iterator': 3, 'next_call_expr_arg': 4, 'first_call_expr_arg': 6, 'tree_operand_length': 3}, "PosixPath('602/unlink-if-ordinary.bc')": {'unlink_if_ordinary': 2}, "PosixPath('602/double-int.bc')": {'dump_double_int': 35, 'tree_to_double_int': 2, 'double_int_mul': 1, 'double_int_add': 1, 'double_int_neg': 1, 'double_int_divmod': 1, 'double_int_sdivmod': 1, 'double_int_udivmod': 1, 'double_int_div': 1, 'double_int_sdiv': 1, 'double_int_udiv': 1, 'double_int_mod': 3, 'double_int_smod': 3, 'double_int_umod': 3, 'double_int_to_tree': 2, 'double_int_fits_to_tree_p': 2, 'double_int_split_digit': 17, 'mpz_set_double_int': 11, 'mpz_get_double_int': 16}, "PosixPath('602/tree-switch-conversion.bc')": {'gimple_ops': 1, 'gimple_op': 1, 'gimple_switch_index': 1, 'gimple_switch_label': 3, 'check_range': 19, 'single_succ_edge': 1, 'check_process_case': 12, 'gsi_stmt': 1, 'single_pred_edge': 1, 'check_final_bb': 30, 'create_temp_arrays': 2, 'gather_default_values': 17, 'build_constructors': 56, 'build_one_array': 16, 'build_arrays': 50, 'gen_def_assigns': 2, 'bb_seq': 2, 'gsi_start_bb': 6, 'ei_end_p': 1, 'ei_safe_edge': 3, 'prune_bbs': 2, 'fix_phi_nodes': 2, 'gen_inbound_check': 96, 'process_switch': 324, 'do_switchconv': 282}, "PosixPath('602/langhooks.bc')": {'add_builtin_function_common': 9, 'lhd_warn_unused_global_decl': 5, 'lhd_set_decl_assembler_name': 16, 'lhd_decl_printable_name': 2, 'lhd_dwarf_name': 1, 'lhd_tree_dump_type_quals': 2, 'lhd_print_error_function': 36}, "PosixPath('602/tree-ssa-address.bc')": {'VEC_mem_addr_template_base_space': 2, 'VEC_mem_addr_template_gc_reserve_exact': 2, 'VEC_mem_addr_template_gc_safe_grow': 2, 'VEC_mem_addr_template_gc_safe_grow_cleared': 2, 'gen_addr_rtx': 2, 'addr_for_mem_ref': 50, 'tree_mem_ref_addr': 21, 'fixed_address_object_p': 4, 'move_fixed_address_to_symbol': 10, 'most_expensive_mult_to_index': 14, 'move_hint_to_base': 7, 'move_pointer_to_base': 4, 'add_to_parts': 5, 'addr_to_parts': 56, 'gimplify_mem_ref_parts': 2, 'create_mem_ref_raw': 23, 'create_mem_ref': 224, 'get_address_description': 5, 'copy_mem_ref_info': 3, 'maybe_fold_tmr': 101, 'dump_mem_address': 11}, "PosixPath('602/tree-ssa-loop-ch.bc')": {'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 19, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'should_duplicate_loop_header_p': 9, 'single_pred_edge': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'copy_loop_headers': 83}, "PosixPath('602/regex.bc')": {'byte_re_match_2_internal': 1080, 'byte_re_compile_fastmap': 176, 'xre_set_registers': 10, 'byte_group_match_null_string_p': 42, 'byte_alt_match_null_string_p': 16, 'byte_common_op_match_null_string_p': 30, 'byte_bcmp_translate': 9, 'byte_re_search_2': 28, 'xre_search_2': 27, 'byte_at_begline_loc_p': 2, 'byte_at_endline_loc_p': 3, 'byte_store_op1': 4, 'byte_insert_op1': 6, 'byte_compile_range': 3, 'byte_store_op2': 11, 'byte_insert_op2': 13, 'byte_regex_compile': 747, 'xre_compile_pattern': 2, 'xre_comp': 4, 'xregcomp': 26, 'xregexec': 40, 'xregfree': 19}, "PosixPath('602/tree-ssa.bc')": {'insert_debug_temp_for_var_def': 230, 'first_imm_use_on_stmt': 2, 'next_imm_use_on_stmt': 2, 'delete_tree_ssa': 30, 'VEC_edge_var_map_base_space': 2, 'VEC_edge_var_map_heap_reserve': 2, 'VEC_edge_var_map_base_quick_push': 3, 'VEC_edge_var_map_heap_safe_push': 6, 'redirect_edge_var_map_add': 10, 'VEC_edge_var_map_heap_copy': 2, 'redirect_edge_var_map_dup': 2, 'gsi_stmt': 1, 'ssa_redirect_edge': 13, 'flush_pending_stmts': 7, 'target_for_debug_bind': 2, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_debug_bind_get_value': 1, 'next_readonly_imm_use': 2, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'move_use_after_head': 5, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_init_use': 55, 'gimple_vuse_op': 2, 'link_use_stmts_after': 350, 'first_imm_use_stmt': 13, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'gimple_set_op': 4, 'gimple_debug_bind_reset_value': 3, 'next_imm_use_stmt': 10, 'op_iter_init_phidef': 2, 'op_iter_next_def': 4, 'op_iter_init_def': 43, 'insert_debug_temps_for_defs': 18, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'end_imm_use_stmt_traverse': 3, 'release_defs_bitset': 114, 'gimple_vop': 2, 'verify_ssa_name': 6, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'verify_use': 11, 'verify_phi_args': 18, 'bb_seq': 2, 'gsi_start_bb': 6, 'gimple_assign_lhs': 1, 'gimple_debug_bind_has_value_p': 1, 'gimple_vdef_op': 2, 'op_iter_next_tree': 6, 'op_iter_init_tree': 71, 'verify_ssa': 230, 'first_htab_element': 7, 'first_referenced_var': 5, 'end_htab_p': 2, 'end_referenced_vars_p': 1, 'is_global_var': 2, 'var_ann': 2, 'next_htab_element': 4, 'next_referenced_var': 1, 'useless_type_conversion_p': 114, 'tree_ssa_useless_type_conversion': 4, 'tree_ssa_strip_useless_type_conversions': 4, 'walk_use_def_chains_1': 34, 'walk_use_def_chains': 2, 'ssa_undefined_value_p': 4, 'gimple_references_memory_p': 2, 'execute_update_addresses_taken': 110, 'single_succ_edge': 1, 'warn_uninit': 30, 'warn_uninitialized_var': 17, 'warn_uninitialized_vars': 48, 'warn_uninitialized_phi': 5, 'execute_late_warn_uninitialized': 12}, "PosixPath('602/safe-ctype.bc')": {}, "PosixPath('602/partition.bc')": {'partition_new': 7, 'partition_union': 26, 'partition_print': 2}, "PosixPath('602/ipa-type-escape.bc')": {'ipa_type_escape_star_count_of_interesting_type': 2, 'ipa_type_escape_star_count_of_interesting_or_array_type': 2, 'type_to_consider': 2, 'get_name_of_type': 3, 'discover_unique_type': 9, 'get_canon_type': 21, 'ipa_type_escape_field_does_not_clobber_p': 7, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_next_tree': 6, 'op_iter_init_tree': 48, 'single_ssa_tree_operand': 8, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'gimple_assign_cast_p': 2, 'count_stars': 2, 'VEC_tree_base_iterate': 2, 'parent_type_p': 20, 'check_cast_type': 4, 'gimple_call_lhs': 1, 'is_malloc_result': 2, 'check_cast': 12, 'look_for_casts': 9, 'look_for_casts_stmt': 7, 'op_iter_next_use': 7, 'op_iter_init_use': 29, 'is_cast_from_non_pointer': 13, 'is_array_access_through_pointer_and_index': 66, 'compare_type_brand': 4, 'mark_interesting_type': 2, 'check_function_parameter_and_return_types': 4, 'has_proper_scope_for_analysis': 8, 'check_operand': 9, 'check_tree': 6, 'analyze_variable': 4, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'okay_pointer_operation': 28, 'mark_interesting_addressof': 6, 'look_for_address_of': 21, 'check_rhs_var': 21, 'check_assign': 32, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_call_arg': 1, 'check_call': 22, 'gimple_asm_output_op': 5, 'gimple_asm_input_op': 3, 'check_asm': 10, 'scan_for_refs': 61, 'analyze_function': 164, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'close_type_seen': 8, 'close_type_exposed_parameter': 8, 'close_type_full_escape': 47, 'close_addressof_down': 9, 'type_escape_execute': 300, 'gate_type_escape_vars': 2}, "PosixPath('602/fwprop.bc')": {'propagate_rtx': 16, 'propagate_rtx_1': 146, 'VEC_df_ref_base_space': 2, 'VEC_df_ref_heap_reserve_exact': 2, 'VEC_df_ref_heap_safe_grow': 3, 'VEC_df_ref_heap_safe_grow_cleared': 3, 'VEC_df_ref_base_pop': 2, 'single_def_use_leave_block': 9, 'df_md_get_bb_info': 2, 'df_lr_get_bb_info': 2, 'VEC_df_ref_heap_reserve': 2, 'VEC_df_ref_base_quick_push': 2, 'VEC_df_ref_heap_safe_push': 5, 'df_scan_get_bb_info': 2, 'df_get_artificial_uses': 2, 'process_uses': 13, 'df_get_artificial_defs': 2, 'process_defs': 33, 'single_def_use_enter_block': 37, 'build_single_def_use_links': 56, 'fwprop_init': 57, 'loop_outer': 2, 'local_ref_killed_between_p': 6, 'single_pred_edge': 1, 'use_killed_between': 30, 'all_uses_available_at': 13, 'can_simplify_addr': 2, 'canonicalize_address': 8, 'forward_propagate_asm': 25, 'find_occurrence': 5, 'update_df': 45, 'try_fwprop_subst': 9, 'forward_propagate_and_simplify': 67, 'forward_propagate_subreg': 12, 'forward_propagate_into': 15, 'fwprop_addr': 20, 'fwprop': 20}, "PosixPath('602/expmed.bc')": {'choose_mult_variant': 79, 'choose_multiplier': 29, 'synth_mult': 463, 'init_expmed': 1265, 'mode_for_extraction': 1, 'make_tree': 34, 'expand_shift': 27, 'extract_fixed_bit_field': 11, 'extract_split_bit_field': 13, 'store_fixed_bit_field': 6, 'store_split_bit_field': 14, 'store_bit_field_1': 65, 'convert_extracted_bit_field': 1, 'extract_bit_field_1': 65, 'extract_low_bits': 8, 'expand_mult_const': 5, 'expand_mult': 47, 'emit_cstore': 9, 'emit_store_flag': 55, 'emit_store_flag_1': 19, 'emit_store_flag_force': 43, 'extract_high_half': 3, 'expand_mult_highpart_optab': 86, 'expand_mult_highpart': 29, 'expand_divmod': 416}, "PosixPath('602/tree-ssa-operands.bc')": {'init_ssa_operands': 22, 'create_vop_var': 7, 'fini_ssa_operands': 74, 'first_imm_use_on_stmt': 2, 'next_imm_use_on_stmt': 2, 'gimple_def_ops': 2, 'gimple_use_ops': 2, 'delink_imm_use': 3, 'free_stmt_operands': 31, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_asm_output_op': 5, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 5, 'append_def': 4, 'append_use': 4, 'gimple_vop': 2, 'add_virtual_operand': 15, 'add_stmt_operand': 14, 'get_expr_operands': 6, 'gimple_asm_input_op': 3, 'gimple_asm_clobber_op': 8, 'get_asm_expr_operands': 82, 'gimple_debug_bind_has_value_p': 1, 'gimple_op_ptr': 1, 'gimple_debug_bind_get_value_ptr': 1, 'parse_ssa_operands': 6, 'gimple_vdef': 2, 'VEC_tree_base_quick_insert': 3, 'VEC_tree_heap_safe_insert': 6, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'link_imm_use_to_list': 3, 'move_use_after_head': 5, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_init_use': 55, 'gimple_vuse_op': 2, 'link_use_stmts_after': 63, 'first_imm_use_stmt': 13, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'next_imm_use_stmt': 10, 'unlink_stmt_vdef': 115, 'ssa_operand_alloc': 23, 'alloc_def': 9, 'add_def_op': 11, 'finalize_ssa_defs': 136, 'alloc_use': 9, 'link_imm_use_stmt': 6, 'add_use_op': 19, 'finalize_ssa_uses': 152, 'finalize_ssa_stmt_operands': 383, 'build_ssa_operands': 426, 'update_stmt_operands': 433, 'swap_tree_operands': 16, 'verify_imm_links': 18, 'has_zero_uses': 1, 'has_single_use': 4, 'num_imm_uses': 2, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'next_readonly_imm_use': 2, 'dump_immediate_uses_for': 13, 'dump_immediate_uses': 4}, "PosixPath('602/tree-ssa-loop-im.bc')": {'for_each_index': 5, 'gimple_vdef': 2, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_lhs': 1, 'gimple_assign_lhs': 1, 'movement_possibility': 2, 'lsm_tmp_name_add': 1, 'gen_lsm_tmp_name': 8, 'get_lsm_tmp_name': 4, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'fill_always_executed_in': 14, 'tree_ssa_lim_initialize': 33, 'VEC_bitmap_base_quick_push': 2, 'VEC_htab_t_base_quick_push': 2, 'gimple_vuse': 2, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_op_ptr': 1, 'gimple_assign_lhs_ptr': 1, 'gimple_assign_rhs1_ptr': 1, 'simple_mem_ref_in_stmt': 17, 'mem_ref_alloc': 5, 'VEC_mem_ref_p_base_space': 2, 'VEC_mem_ref_p_heap_reserve': 2, 'VEC_mem_ref_p_base_quick_push': 2, 'VEC_mem_ref_p_heap_safe_push': 4, 'loop_outer': 2, 'mark_ref_stored': 6, 'VEC_mem_ref_locs_p_base_space': 2, 'VEC_mem_ref_locs_p_heap_reserve_exact': 2, 'VEC_mem_ref_locs_p_heap_safe_grow': 3, 'VEC_mem_ref_locs_p_heap_safe_grow_cleared': 3, 'VEC_mem_ref_loc_p_base_space': 2, 'VEC_mem_ref_loc_p_heap_reserve': 2, 'VEC_mem_ref_loc_p_base_quick_push': 2, 'VEC_mem_ref_loc_p_heap_safe_push': 5, 'record_mem_ref_loc': 12, 'gather_mem_refs_stmt': 55, 'VEC_int_base_quick_push': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 52, 'gather_mem_refs_in_loops': 222, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'bmp_iter_and_compl_init': 24, 'bmp_iter_and_compl': 34, 'add_vop_ref_mapping': 50, 'create_vop_ref_mapping_loop': 130, 'create_vop_ref_mapping': 202, 'vtoe_free': 2, 'VEC_mem_ref_locs_p_base_iterate': 2, 'VEC_mem_ref_loc_p_base_iterate': 2, 'free_mem_ref_locs': 2, 'memref_free': 20, 'analyze_memory_references': 349, 'gimple_assign_rhs2': 3, 'outermost_invariant_loop': 4, 'gimple_set_op': 4, 'gimple_assign_set_lhs': 3, 'rewrite_reciprocal': 21, 'has_single_use': 4, 'single_imm_use': 4, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'gimple_cond_set_rhs': 3, 'rewrite_bittest': 59, 'gimple_use_ops': 2, 'op_iter_init': 12, 'op_iter_next_tree': 6, 'op_iter_init_tree': 46, 'add_dependency': 2, 'mem_ref_in_stmt': 3, 'cannot_overlap_p': 4, 'mem_refs_may_alias_p': 21, 'refs_independent_p': 59, 'ref_indep_loop_p_1': 184, 'ref_indep_loop_p': 162, 'gimple_references_memory_p': 2, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'stmt_cost': 8, 'determine_max_movement': 75, 'set_level': 5, 'set_profitable_level': 2, 'determine_invariantness_stmt': 502, 'determine_invariantness': 2, 'VEC_edge_base_iterate': 2, 'get_all_locs_in_loop': 9, 'ref_always_accessed_p': 22, 'may_move_till': 4, 'can_sm_ref_p': 25, 'find_refs_for_sm': 86, 'rewrite_mem_refs': 6, 'force_move_till_op': 2, 'force_move_till': 7, 'execute_sm': 28, 'hoist_memory_references': 63, 'store_motion_loop': 148, 'move_computations_stmt': 34, 'move_computations': 2, 'VEC_bitmap_base_iterate': 2, 'VEC_htab_t_base_iterate': 2, 'tree_ssa_lim_finalize': 18, 'tree_ssa_lim': 432}, "PosixPath('602/c-lang.bc')": {}, "PosixPath('602/sdbout.bc')": {}, "PosixPath('602/c-decl.bc')": {'push_scope': 29, 'c_bindings_end_stmt_expr': 19, 'pushdecl': 157, 'implicitly_declare': 90, 'groktypename': 15, 'grokdeclarator': 719, 'start_decl': 196, 'build_compound_literal': 20, 'parser_xref_tag': 50, 'finish_struct': 429, 'finish_enum': 112, 'start_function': 389, 'merge_decls': 788, 'grokparms': 49, 'add_stmt': 6, 'c_print_identifier': 3, 'c_finish_incomplete_decl': 10, 'record_inline_static': 14, 'objc_mark_locals_volatile': 4, 'update_spot_bindings': 2, 'decl_jump_unsafe': 5, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 5, 'VEC_c_goto_bindings_p_base_iterate': 2, 'update_label_decls': 33, 'set_type_context': 3, 'free_binding_and_advance': 5, 'pop_scope': 498, 'bind': 26, 'push_file_scope': 4, 'check_inline_statics': 11, 'pop_file_scope': 14, 'c_bindings_start_stmt_expr': 12, 'locate_old_decl': 10, 'match_builtin_function_types': 17, 'diagnose_arglist_conflict': 12, 'validate_proto_after_old_defn': 8, 'diagnose_mismatched_decls': 565, 'duplicate_decls': 1503, 'warn_if_shadowing': 19, 'pushdecl_top_level': 7, 'set_spot_bindings': 8, 'make_label': 17, 'bind_label': 4, 'lookup_label': 17, 'VEC_c_goto_bindings_p_base_space': 2, 'VEC_c_goto_bindings_p_gc_reserve': 2, 'VEC_c_goto_bindings_p_base_quick_push': 2, 'VEC_c_goto_bindings_p_gc_safe_push': 5, 'VEC_tree_base_iterate': 2, 'lookup_label_for_goto': 25, 'declare_label': 14, 'check_earlier_gotos': 21, 'lookup_name': 2, 'define_label': 82, 'c_get_switch_bindings': 8, 'c_release_switch_bindings': 2, 'c_check_switch_jump_warnings': 4, 'add_flexible_array_elts_to_size': 19, 'finish_decl': 269, 'c_make_fname_decl': 10, 'c_builtin_function': 13, 'c_builtin_function_ext_scope': 13, 'lookup_tag': 19, 'pushtag': 25, 'shadow_tag_warned': 141, 'quals_from_declspecs': 22, 'build_array_declarator': 43, 'flexible_array_type_p': 11, 'c_variable_size': 3, 'check_bitfield_type_and_width': 16, 'identifier_global_value': 3, 'grokparm': 14, 'push_parm_decl': 15, 'mark_forward_parm_decls': 7, 'get_parm_info': 98, 'xref_tag': 2, 'start_struct': 20, 'VEC_c_binding_ptr_base_space': 2, 'VEC_c_binding_ptr_heap_reserve': 2, 'VEC_c_binding_ptr_base_quick_push': 2, 'VEC_c_binding_ptr_heap_safe_push': 5, 'grokfield': 38, 'detect_field_duplicates': 13, 'VEC_c_binding_ptr_base_iterate': 2, 'warn_cxx_compat_finish_struct': 15, 'VEC_tree_heap_reserve': 2, 'VEC_tree_heap_safe_push': 5, 'start_enum': 22, 'build_enumerator': 13, 'lookup_name_in_scope': 3, 'store_parm_decls_newstyle': 52, 'store_parm_decls_oldstyle': 98, 'store_parm_decls': 142, 'finish_function': 103, 'check_for_loop_decls': 8, 'c_push_function_context': 104, 'c_pop_function_context': 68, 'build_c_parm': 4, 'build_attrs_declarator': 5, 'build_function_declarator': 5, 'build_id_declarator': 10, 'make_pointer_declarator': 5, 'build_null_declspecs': 30, 'declspecs_add_addrspace': 3, 'declspecs_add_qual': 19, 'declspecs_add_type': 215, 'declspecs_add_scspec': 21, 'declspecs_add_attrs': 3, 'finish_declspecs': 60, 'c_write_global_declarations_1': 7, 'c_write_global_declarations_2': 1, 'c_write_global_declarations': 34, 'tree_operand_length': 3, 'gt_ggc_mx_lang_tree_node': 1641, 'gt_ggc_mx_c_binding': 15, 'gt_ggc_mx_c_label_vars': 11, 'gt_ggc_mx_c_goto_bindings': 2, 'gt_ggc_mx_c_scope': 15, 'gt_ggc_mx_lang_type': 7, 'gt_ggc_mx_c_inline_static': 5, 'gt_ggc_mx_language_function': 4, 'gt_pch_p_14lang_tree_node': 4, 'gt_pch_nx_lang_tree_node': 1641, 'gt_pch_nx_c_binding': 15, 'gt_pch_nx_c_label_vars': 11, 'gt_pch_nx_c_goto_bindings': 2, 'gt_pch_nx_c_scope': 15, 'gt_pch_nx_lang_type': 4, 'gt_pch_nx_c_inline_static': 5, 'gt_pch_nx_language_function': 4}, "PosixPath('602/tree-ssanames.bc')": {'release_ssa_name': 49, 'VEC_tree_base_quick_push': 2, 'init_ssanames': 2, 'fini_ssanames': 2, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 2, 'VEC_tree_gc_safe_push': 5, 'make_ssa_name_fn': 51, 'delink_imm_use': 3, 'duplicate_ssa_name_ptr_info': 2, 'duplicate_ssa_name': 1, 'gimple_def_ops': 2, 'op_iter_init': 6, 'op_iter_next_tree': 6, 'op_iter_init_tree': 22, 'release_defs': 21, 'replace_ssa_name_symbol': 2, 'first_htab_element': 7, 'first_referenced_var': 5, 'end_htab_p': 2, 'end_referenced_vars_p': 1, 'next_htab_element': 4, 'next_referenced_var': 1, 'release_dead_ssa_names': 11}, "PosixPath('602/insn-recog.bc')": {'recog_1': 83, 'recog_2': 132, 'recog_3': 111, 'recog_4': 122, 'recog_5': 53, 'recog_6': 125, 'recog_7': 182, 'recog_8': 150, 'recog_9': 133, 'recog_10': 103, 'recog_11': 526, 'recog_12': 241, 'recog_13': 175, 'recog_14': 108, 'recog_15': 126, 'recog_16': 312, 'recog_17': 119, 'recog_18': 189, 'recog_19': 269, 'recog_20': 288, 'recog_21': 265, 'recog_22': 549, 'recog_23': 812, 'recog_24': 257, 'recog_25': 249, 'recog_26': 615, 'recog_27': 219, 'recog_28': 187, 'recog_29': 479, 'recog_30': 79, 'recog_31': 63, 'recog_32': 3054, 'recog_33': 231, 'recog_34': 217, 'recog_35': 594, 'recog_36': 176, 'recog_37': 158, 'recog_38': 178, 'recog_39': 207, 'recog_40': 132, 'recog_41': 98, 'recog_42': 143, 'recog_43': 2027, 'recog_44': 198, 'recog_45': 927, 'recog_46': 165, 'recog_47': 542, 'recog_48': 108, 'recog': 194, 'satisfies_constraint_K': 2, 'split_1': 1397, 'split_2': 524, 'split_3': 438, 'split_4': 502, 'split_insns': 528, 'peephole2_insns': 816}, "PosixPath('602/tracer.bc')": {'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'count_insns': 5, 'ei_end_p': 1, 'ei_cond': 3, 'better_p': 18, 'ei_next': 4, 'find_best_predecessor': 10, 'find_best_successor': 5, 'find_trace': 18, 'mark_bb_seen': 6, 'tail_duplicate': 145, 'tracer': 129}, "PosixPath('602/bb-reorder.bc')": {'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'bb_to_key': 24, 'push_to_next_round_p': 2, 'mark_bb_visited': 7, 'better_edge_p': 4, 'copy_bb_p': 14, 'single_succ_edge': 1, 'copy_bb': 68, 'rotate_loop': 110, 'find_traces_1_round': 443, 'find_traces': 476, 'connect_traces': 354, 'verify_hot_cold_block_grouping': 16, 'reorder_basic_blocks': 839, 'find_rarely_executed_basic_blocks_and_crossing_edges': 48, 'add_labels_and_missing_jumps': 10, 'fix_up_fall_thru_edges': 51, 'add_reg_crossing_jump_notes': 20, 'fix_edges_for_rarely_executed_code': 78, 'partition_hot_cold_basic_blocks': 104, 'rest_of_handle_partition_blocks': 104, 'gate_handle_partition_blocks': 1, 'insert_section_boundary_note': 6, 'rest_of_handle_reorder_blocks': 11, 'duplicate_computed_gotos': 77}, "PosixPath('602/cfgbuild.bc')": {'find_many_sub_basic_blocks': 341, 'find_bb_boundaries': 51, 'compute_outgoing_frequencies': 26, 'inside_basic_block_p': 5, 'control_flow_insn_p': 8, 'make_label_edge': 4, 'rtl_make_eh_edge': 3, 'mark_tablejump_edge': 4, 'ei_end_p': 1, 'ei_safe_edge': 3, 'ei_next': 4, 'purge_dead_tablejump_edges': 26, 'ei_cond': 3, 'make_edges': 123, 'single_succ_edge': 1}, "PosixPath('602/sel-sched.bc')": {'create_block_for_bookkeeping': 259, 'compute_av_set_inside_bb': 119, 'fill_vec_av_set': 811, 'hard_reg_set_iter_init': 13, 'advance_state_on_fence': 55, 'find_ebb_boundaries': 85, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'propagate_lv_set': 5, 'compute_live': 32, 'compute_live_after_bb': 9, 'sel_add_to_insn_priority': 13, 'current_region_empty_p': 4, 'sel_setup_region_sched_flags': 2, 'VEC_basic_block_base_quick_push': 2, 'bitmap_initialize_stat': 2, 'sel_region_init': 36, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, '_succ_iter_start': 113, 'VEC_edge_base_iterate': 2, 'sel_bb_empty_or_nop_p': 2, '_eligible_successor_edge_p': 16, 'single_succ_edge': 1, 'inner_loop_header_p': 1, 'loop_outer': 2, 'VEC_edge_base_space': 2, 'VEC_edge_heap_reserve': 2, 'VEC_edge_base_quick_push': 2, 'VEC_edge_heap_safe_push': 5, 'get_loop_exit_edges_unique_dests': 21, 'VEC_edge_base_ordered_remove': 3, 'get_all_loop_exits': 46, '_succ_iter_cond': 131, '_succ_iter_next': 25, 'init_seqno_1': 282, 'init_seqno': 28, 'find_min_max_seqno': 6, '_xlist_is_in_p': 2, 'is_ineligible_successor': 56, '_xlist_add': 2, 'VEC_rtx_base_iterate': 2, '_list_iter_start': 4, '_list_iter_next': 3, 'try_bitmap_cache': 32, 'try_transformation_cache': 63, 'block_valid_for_bookkeeping_p': 5, 'find_block_for_bookkeeping': 17, 'moving_insn_creates_bookkeeping_block_p': 15, 'can_substitute_through_p': 2, 'count_occurrences_1': 6, 'count_occurrences_equiv': 3, 'rtx_ok_for_substitution_p': 3, 'substitute_reg_in_expr': 34, 'moveup_expr': 26, 'update_bitmap_cache': 2, 'update_transformation_cache': 20, 'moveup_expr_cached': 172, 'moveup_set_expr': 9, 'compute_av_set_at_bb_end': 200, 'compute_av_set_on_boundaries': 42, 'remove_insns_that_need_bookkeeping': 44, 'remove_insns_for_debug': 24, 'process_pipelined_exprs': 24, 'process_spec_exprs': 41, 'recog_memoized': 3, 'process_use_exprs': 46, 'VEC_expr_t_base_block_remove': 2, 'VEC_expr_t_base_space': 2, 'VEC_expr_t_heap_reserve': 2, 'VEC_expr_t_base_quick_push': 2, 'VEC_expr_t_heap_safe_push': 4, 'sel_target_adjust_priority': 16, 'VEC_expr_t_base_unordered_remove': 4, 'VEC_vinsn_t_base_iterate': 2, 'vinsn_vec_has_expr_p': 2, 'equal_after_moveup_path_p': 1, 'replace_dest_with_reg_in_expr': 2, 'find_sequential_best_exprs': 45, 'identical_copy_p': 8, 'undo_transformations': 85, 'code_motion_path_driver': 861, 'get_reg_class': 10, 'init_regs_for_mode': 9, 'hard_reg_set_iter_set': 15, 'init_hard_regno_rename': 1, 'sel_hard_regno_rename_ok': 1, 'mark_unavailable_hard_regs': 141, 'fur_orig_expr_not_found': 7, 'compute_live_below_insn': 153, 'fur_orig_expr_found': 189, 'fur_on_enter': 5, 'find_used_regs': 329, 'collect_unavailable_regs_from_bnds': 420, 'verify_target_availability': 16, 'choose_best_reg_1': 26, 'choose_best_reg': 27, 'choose_best_pseudo_reg': 12, 'replace_src_with_reg_ok_p': 20, 'replace_dest_with_reg_ok_p': 4, 'try_replace_dest_reg': 55, 'vinsn_writes_one_of_regs_p': 20, 'find_best_reg_for_expr': 629, 'VEC_expr_t_base_iterate': 2, 'sel_rank_for_schedule': 58, 'convert_vec_av_set_to_ready': 2, 'fill_ready_list': 148, 'invoke_reorder_hooks': 7, 'invoke_dfa_lookahead_guard': 14, 'calculate_privileged_insns': 14, 'get_expr_cost': 7, 'choose_best_insn': 33, 'VEC_rtx_base_unordered_remove': 4, 'debug_state': 7, 'advance_one_cycle': 64, 'sel_dfa_new_cycle': 31, 'invoke_aftermath_hooks': 42, 'find_best_expr': 530, 'stall_for_cycles': 3, 'move_cond_jump': 27, 'prepare_place_to_insert': 6, 'get_dest_from_orig_ops': 5, 'single_pred_edge': 1, 'find_place_for_bookkeeping': 28, 'find_seqno_for_bookkeeping': 16, 'emit_insn_from_expr_after': 5, 'emit_bookkeeping_insn': 3, 'generate_bookkeeping_insn': 19, 'VEC_vinsn_t_base_space': 2, 'VEC_vinsn_t_heap_reserve': 2, 'VEC_vinsn_t_base_quick_push': 2, 'VEC_vinsn_t_heap_safe_push': 5, 'vinsn_vec_add': 4, 'update_and_record_unavailable_insns': 8, 'move_op_at_first_insn': 20, 'move_op_ascend': 1, 'move_op_merge_succs': 2, 'track_scheduled_insns_and_blocks': 18, 'maybe_emit_renaming_copy': 6, 'get_spec_check_type_for_insn': 2, 'create_speculation_check': 5, 'maybe_emit_speculative_check': 11, 'handle_emitting_transformations': 26, 'need_nop_to_preserve_insn_bb': 8, 'VEC_insn_t_base_space': 2, 'VEC_insn_t_heap_reserve': 2, 'VEC_insn_t_base_quick_push': 2, 'VEC_insn_t_heap_safe_push': 4, 'remove_insn_from_stream': 14, 'move_op_orig_expr_found': 61, 'move_op': 25, 'move_exprs_to_boundary': 130, 'VEC_insn_t_base_iterate': 2, 'VEC_insn_t_base_block_remove': 2, 'remove_temp_moveop_nops': 2, 'schedule_expr_on_boundary': 197, 'VEC_rtx_base_space': 2, 'VEC_rtx_gc_reserve': 2, 'VEC_rtx_base_quick_push': 2, 'VEC_rtx_gc_safe_push': 5, 'update_fence_and_insn': 99, 'update_boundaries': 381, 'fill_insns': 646, 'VEC_vinsn_t_base_block_remove': 2, 'vinsn_vec_clear': 9, 'schedule_on_fences': 10, 'extract_new_fences_from': 399, 'calculate_new_fences': 35, 'update_seqnos_and_stage': 44, 'sel_sched_region_2': 193, 'sel_sched_region_1': 46, 'simplify_changed_insns': 47, 'bb_next_bb': 9, 'reset_sched_cycles_in_current_ebb': 79, 'put_TImodes': 61, 'sel_region_target_finish': 10, 'sel_region_finish': 432, 'sel_sched_region': 470, 'init_hard_regs_data': 1, 'sel_global_init': 1, 'run_selective_scheduling': 1}, "PosixPath('602/ira-emit.bc')": {'emit_moves': 75, 'add_range_and_copies_from_move_list': 112, 'print_move_list': 6, 'ira_debug_move_list': 6, 'set_allocno_somewhere_renamed_p': 13, 'VEC_loop_p_base_iterate': 2, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'entered_from_non_parent_p': 18, 'setup_entered_from_non_parent_p': 28, 'df_lr_get_bb_info': 2, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'store_can_be_removed_p': 5, 'create_move': 22, 'generate_edge_moves': 131, 'eq_move_lists_p': 8, 'eq_edge_move_lists_p': 10, 'free_move_list': 2, 'unify_moves': 45, 'VEC_move_t_base_space': 2, 'VEC_move_t_heap_reserve': 2, 'VEC_move_t_base_quick_push': 2, 'VEC_move_t_heap_safe_push': 4, 'traverse_moves': 10, 'VEC_move_t_base_last': 2, 'create_new_reg': 11, 'modify_move_list': 250, 'recog_memoized': 3, 'ira_get_register_move_cost': 1, 'emit_move_list': 42, 'update_costs': 35, 'add_ranges_and_copies': 50, 'change_regs': 7, 'set_allocno_reg': 13, 'change_loop': 218, 'ira_emit': 583}, "PosixPath('602/cpp_symtab.bc')": {'ht_create': 4, 'ht_destroy': 20, 'calc_hash': 2, 'ht_expand': 10, 'ht_lookup_with_hash': 97, 'ht_lookup': 2, 'ht_forall': 6, 'ht_purge': 6, 'ht_load': 8, 'ht_dump_statistics': 8}, "PosixPath('602/tree-ssa-uncprop.bc')": {'gsi_start': 8, 'bb_seq': 2, 'gsi_last_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'gimple_switch_index': 1, 'gimple_switch_label': 3, 'associate_equivalences_with_edges': 175, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'VEC_tree_base_pop': 2, 'remove_equivalence': 3, 'uncprop_leave_block': 9, 'single_incoming_edge_ignoring_loop_edges': 5, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 5, 'record_equiv': 8, 'phi_nodes': 2, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'uncprop_into_successor_phis': 80, 'uncprop_enter_block': 99, 'equiv_free': 1, 'tree_ssa_uncprop': 270}, "PosixPath('602/vasprintf.bc')": {}, "PosixPath('602/varray.bc')": {'varray_init': 7, 'varray_grow': 3, 'varray_clear': 4}, "PosixPath('602/calls.bc')": {'expand_call': 1023, 'initialize_argument_information': 88, 'precompute_arguments': 27, 'emit_library_call_value_1': 373, 'special_function_p': 14, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_alloca_call_p': 3, 'alloca_call_p': 4, 'flags_from_decl_or_type': 2, 'call_expr_flags': 2, 'shift_return_value': 3, 'init_call_expr_arg_iterator': 3, 'next_call_expr_arg': 4, 'first_call_expr_arg': 6, 'split_complex_types': 5, 'finalize_must_preallocate': 14, 'compute_argument_block_size': 4, 'compute_argument_addresses': 27, 'rtx_for_function_call': 2, 'precompute_register_parameters': 33, 'save_fixed_argument_area': 1, 'mem_overlaps_already_clobbered_arg_p': 14, 'store_one_arg': 390, 'check_sibcall_argument_overlap_1': 6, 'check_sibcall_argument_overlap': 17, 'load_register_parameters': 29, 'emit_call_1': 2, 'avoid_likely_spilled_reg': 2, 'fixup_tail_calls': 2, 'must_pass_in_stack_var_size': 2, 'must_pass_in_stack_var_size_or_pad': 2}, "PosixPath('602/jump.bc')": {'init_label_info': 15, 'mark_jump_label': 6, 'mark_jump_label_1': 11, 'pc_set': 4, 'mark_all_labels': 35, 'rebuild_jump_labels': 64, 'cleanup_barriers': 2, 'reversed_comparison_code_parts': 10, 'reversed_comparison_code': 4, 'reversed_comparison': 2, 'simplejump_p': 6, 'condjump_p': 12, 'condjump_in_parallel_p': 21, 'any_condjump_p': 4, 'condjump_label': 11, 'onlyjump_p': 4, 'delete_related_insns': 54, 'delete_for_peephole': 6, 'redirect_exp_1': 7, 'redirect_jump_1': 5, 'invert_exp_1': 7, 'redirect_jump_2': 2, 'rtx_renumbered_equal_p': 71, 'true_regnum': 14, 'reg_or_subregno': 2}, "PosixPath('602/host-ieee64.bc')": {}, "PosixPath('602/varasm.bc')": {'emutls_decl': 77, 'output_constructor': 122, 'compute_reloc_for_rtx': 3, 'output_constructor_bitfield': 1, 'default_emutls_var_fields': 8, 'prefix_name': 3, 'get_emutls_object_type': 9, 'make_decl_one_only': 5, 'emutls_common_1': 6, 'emutls_finish': 2, 'get_unnamed_section': 9, 'get_section': 4, 'initialize_cold_section_name': 3, 'get_named_section': 3, 'unlikely_text_section_p': 2, 'resolve_unique_section': 2, 'hot_function_section': 1, 'default_function_rodata_section': 16, 'mergeable_constant_section': 4, 'set_user_assembler_name': 2, 'decode_reg_name': 17, 'align_variable': 16, 'bss_initializer_p': 4, 'contains_pointers_p': 7, 'compute_reloc_for_constant': 12, 'get_variable_section': 57, 'hash_section': 2, 'get_block_for_section': 2, 'get_block_for_decl': 7, 'change_symbol_block': 2, 'use_blocks_for_decl_p': 4, 'create_block_symbol': 15, 'make_decl_rtl': 115, 'make_decl_rtl_for_debug': 9, 'assemble_asm': 3, 'switch_to_section': 12, 'notice_global_symbol': 58, 'copy_constant': 21, 'get_constant_section': 4, 'build_constant_desc': 30, 'get_constant_size': 2, 'VEC_rtx_base_space': 2, 'VEC_rtx_gc_reserve': 2, 'VEC_rtx_base_quick_push': 2, 'VEC_rtx_gc_safe_push': 5, 'place_block_symbol': 32, 'ultimate_transparent_alias_target': 4, 'assemble_name': 9, 'assemble_real': 2, 'array_size_for_constructor': 15, 'assemble_string': 5, 'output_constant': 36, 'assemble_constant_contents': 3, 'output_constant_def_contents': 3, 'output_constant_def': 39, 'const_hash_1': 37, 'decode_addr_const': 8, 'output_addressed_constants': 10, 'mark_constant': 3, 'mark_constants': 5, 'output_constant_pool_2': 14, 'output_constant_pool_1': 8, 'output_constant_pool_contents': 14, 'globalize_decl': 10, 'assemble_start_function': 29, 'default_emutls_var_init': 19, 'get_emutls_init_templ_addr': 33, 'assemble_variable_contents': 6, 'assemble_variable': 72, 'incorporeal_function_p': 2, 'assemble_external_real': 8, 'process_pending_assemble_externals': 8, 'assemble_external': 10, 'mark_decl_referenced': 2, 'assemble_static_space': 2, 'assemble_trampoline_template': 4, 'lookup_constant_def': 2, 'const_desc_rtx_eq': 4, 'create_constant_pool': 4, 'const_rtx_hash_1': 10, 'const_rtx_hash': 1, 'force_const_mem': 106, 'get_pool_constant': 2, 'get_pool_constant_mark': 2, 'get_pool_mode': 2, 'constructor_static_from_elts_p': 4, 'initializer_constant_valid_p_1': 91, 'narrowing_initializer_constant_valid_p': 72, 'initializer_constant_valid_for_bitfield_p': 6, 'mark_weak': 9, 'merge_weak': 9, 'weak_finish_1': 1, 'weak_finish': 9, 'VEC_alias_pair_base_unordered_remove': 4, 'remove_unreachable_alias_pairs': 12, 'finish_aliases_1': 6, 'do_assemble_alias': 30, 'finish_aliases_2': 4, 'VEC_alias_pair_base_space': 2, 'VEC_alias_pair_gc_reserve': 2, 'VEC_alias_pair_gc_safe_push': 2, 'assemble_alias': 27, 'default_assemble_visibility': 3, 'get_noswitch_section': 2, 'asm_output_aligned_bss': 2, 'emit_bss': 3, 'compare_constant': 94, 'const_desc_eq': 4, 'object_block_entry_hash': 2, 'init_varasm_once': 44, 'categorize_decl_for_section': 16, 'default_section_type_flags': 5, 'default_elf_asm_named_section': 6, 'default_coff_asm_named_section': 2, 'default_select_section': 2, 'mergeable_string_section': 18, 'compute_reloc_for_rtx_1': 2, 'default_encode_section_info': 10, 'default_asm_output_anchor': 2, 'default_use_anchors_for_symbol_p': 5, 'default_binds_local_p_1': 13, 'default_globalize_decl_name': 1, 'VEC_rtx_base_quick_insert': 3, 'VEC_rtx_gc_safe_insert': 6, 'get_section_anchor': 35, 'VEC_rtx_base_iterate': 2, 'output_object_block': 22, 'output_object_block_htab': 18, 'elf_record_gcc_switches': 20, 'gt_ggc_mx_constant_descriptor_rtx': 10, 'gt_ggc_m_P23constant_descriptor_rtx4htab': 5, 'gt_ggc_mx_rtx_constant_pool': 4, 'gt_pch_nx_constant_descriptor_rtx': 10, 'gt_pch_p_P23constant_descriptor_rtx4htab': 5, 'gt_pch_n_P23constant_descriptor_rtx4htab': 5, 'gt_pch_nx_rtx_constant_pool': 4}, "PosixPath('602/fdmatch.bc')": {'fdmatch': 9}, "PosixPath('602/c-parser.bc')": {'disable_extension_diagnostics': 15, 'c_parser_binary_expression': 283, 'c_parser_postfix_expression_after_primary': 206, 'c_parser_postfix_expression': 203, 'c_parser_struct_declaration': 137, 'c_parse_init': 8, 'c_lex_one_token': 12, 'c_parser_consume_token': 10, 'pragma_lex': 4, 'c_parser_consume_pragma': 11, 'c_parser_next_token_is': 2, 'c_parser_set_source_position_from_token': 2, 'c_parser_error': 12, 'c_parser_require': 2, 'c_parser_skip_to_pragma_eol': 6, 'c_parser_pragma_pch_preprocess': 6, 'restore_extension_diagnostics': 15, 'c_parser_next_token_is_keyword': 2, 'c_parser_asm_string_literal': 8, 'c_parser_skip_until_found': 5, 'c_parser_simple_asm_expr': 5, 'c_parser_next_token_is_not': 2, 'c_parser_objc_protocol_refs': 6, 'c_parser_objc_method_type': 2, 'c_token_starts_typename': 1, 'c_parser_peek_2nd_token': 2, 'c_parser_objc_selector': 4, 'c_token_starts_declspecs': 1, 'c_parser_skip_to_end_of_block_or_statement': 7, 'c_parser_skip_to_end_of_parameter': 6, 'c_parser_omp_barrier': 2, 'c_parser_omp_variable_list': 15, 'c_parser_omp_var_list_parens': 2, 'c_parser_omp_flush': 5, 'c_parser_omp_taskwait': 2, 'c_parser_omp_threadprivate': 35, 'c_parser_require_keyword': 2, 'c_parser_asm_clobbers': 2, 'c_parser_asm_goto_operands': 11, 'c_parser_omp_clause_name': 6, 'check_no_duplicate_clause': 3, 'c_parser_omp_clause_default': 12, 'c_parser_omp_clause_nowait': 5, 'c_parser_omp_clause_ordered': 5, 'c_parser_omp_clause_reduction': 6, 'c_parser_omp_clause_untied': 5, 'c_parser_objc_selector_arg': 3, 'VEC_tree_base_quick_push': 2, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 2, 'VEC_tree_gc_safe_push': 5, 'c_parser_initval': 27, 'c_parser_braced_init': 368, 'c_parser_expr_no_commas': 84, 'c_parser_conditional_expression': 139, 'c_parser_cast_expression': 64, 'c_parser_type_name': 3, 'c_parser_declspecs': 268, 'c_parser_pragma': 51, 'c_parser_omp_single': 3, 'c_parser_omp_parallel': 14, 'c_parser_omp_sections_scope': 10, 'c_parser_omp_for_loop': 108, 'c_parser_omp_all_clauses': 77, 'c_parser_omp_critical': 6, 'c_parser_omp_atomic': 32, 'c_parser_unary_expression': 175, 'c_parser_compound_statement_nostart': 81, 'c_parser_statement_after_labels': 32, 'c_parser_objc_synchronized_statement': 5, 'c_parser_objc_try_catch_statement': 5, 'c_parser_asm_statement': 20, 'c_parser_asm_operands': 37, 'c_parser_for_statement': 36, 'c_parser_do_statement': 12, 'c_parser_while_statement': 3, 'c_parser_switch_statement': 9, 'c_parser_c99_block_statement': 2, 'c_parser_statement': 4, 'c_parser_if_statement': 14, 'c_parser_condition': 3, 'c_parser_expression_conv': 11, 'c_parser_label': 23, 'c_parser_declaration_or_fndef': 60, 'c_parser_compound_statement': 2, 'c_parser_declarator': 10, 'c_parser_direct_declarator_inner': 28, 'c_parser_parms_declarator': 89, 'c_parser_parms_list_declarator': 58, 'c_parser_parameter_declaration': 14, 'c_parser_alignof_expression': 75, 'c_parser_sizeof_expression': 42, 'c_parser_postfix_expression_after_paren_type': 48, 'c_parser_attributes': 20, 'c_parser_expr_list': 67, 'c_parser_expression': 71, 'c_parser_objc_message_args': 5, 'c_parser_objc_type_name': 6, 'c_parser_objc_method_decl': 6, 'c_parser_objc_methodprotolist': 9, 'c_parser_objc_class_instance_variables': 6, 'c_parser_objc_class_definition': 8, 'c_parser_objc_class_declaration': 6, 'c_parser_objc_alias_declaration': 6, 'c_parser_objc_protocol_definition': 10, 'c_parser_objc_method_definition': 8, 'c_parser_external_declaration': 15, 'c_parser_translation_unit': 10, 'c_parse_file': 26}, "PosixPath('602/decNumber.bc')": {'decNumberFMA': 115, 'decNumberZero': 7, 'decGetDigits': 2, 'decNumberFromUInt32': 9, 'decNumberToInt32': 13, 'decNumberToUInt32': 21, 'decToString': 39, 'decBiStr': 4, 'decSetCoeff': 43, 'decSetMaxValue': 9, 'decSetOverflow': 18, 'decUnitAddSub': 14, 'decApplyRound': 43, 'decShiftToMost': 12, 'decSetSubnormal': 35, 'decUnitCompare': 13, 'decCompare': 47, 'decFinalize': 40, 'decStatus': 11, 'decNumberFromString': 161, 'decNumberCopy': 21, 'decDecap': 4, 'decNaNs': 25, 'decCopyFit': 6, 'decAddOp': 153, 'decNumberAbs': 31, 'decNumberAdd': 2, 'decNumberAnd': 40, 'decCompareOp': 155, 'decNumberCompare': 2, 'decNumberCompareSignal': 2, 'decNumberCompareTotal': 2, 'decNumberCompareTotalMag': 41, 'decShiftToLeast': 14, 'decDivideOp': 427, 'decNumberDivide': 2, 'decNumberDivideInteger': 2, 'decCheckMath': 12, 'decMultiplyOp': 349, 'decExpOp': 505, 'decNumberExp': 3, 'decNumberInvert': 30, 'decGetInt': 17, 'decLnOp': 505, 'decNumberLn': 3, 'decNumberLogB': 35, 'decNumberLog10': 161, 'decNumberMax': 2, 'decNumberMaxMag': 2, 'decNumberMin': 2, 'decNumberMinMag': 2, 'decNumberMinus': 24, 'decNumberNextMinus': 37, 'decNumberNextPlus': 39, 'decNumberIsNormal': 8, 'decNumberNextToward': 79, 'decNumberOr': 40, 'decNumberPlus': 24, 'decNumberMultiply': 2, 'decNumberPower': 339, 'decQuantizeOp': 61, 'decNumberQuantize': 2, 'decTrim': 32, 'decNumberReduce': 31, 'decNumberRescale': 2, 'decNumberRemainder': 2, 'decNumberRemainderNear': 2, 'decReverse': 6, 'decNumberRotate': 70, 'decNumberSameQuantum': 11, 'decNumberScaleB': 34, 'decNumberShift': 25, 'decNumberSquareRoot': 633, 'decNumberSubtract': 2, 'decNumberToIntegralExact': 47, 'decNumberToIntegralValue': 4, 'decNumberXor': 40, 'decNumberClass': 14, 'decNumberGetBCD': 2, 'decNumberSetBCD': 2, 'decNumberIsSubnormal': 8, 'decNumberTrim': 2}, "PosixPath('602/fixed-value.bc')": {'do_fixed_neg': 13, 'do_fixed_add': 18, 'do_fixed_multiply': 154, 'do_fixed_divide': 218, 'fixed_saturate2': 14, 'fixed_saturate1': 14, 'fixed_convert_from_int': 128, 'fixed_convert_from_real': 32, 'fixed_identical': 8, 'fixed_hash': 2, 'check_real_for_fixed_mode': 24, 'fixed_from_string': 20, 'fixed_to_decimal': 23, 'do_fixed_shift': 95, 'fixed_arithmetic': 241, 'fixed_compare': 29, 'fixed_convert': 171, 'real_convert_from_fixed': 23, 'fixed_isneg': 7}, "PosixPath('602/tree-eh.bc')": {'gsi_start': 8, 'lower_eh_must_not_throw': 20, 'lower_resx': 103, 'first_imm_use_on_stmt': 2, 'next_imm_use_on_stmt': 2, 'add_stmt_to_eh_lp_fn': 2, 'lookup_stmt_eh_lp_fn': 2, 'lookup_stmt_eh_lp': 2, 'make_eh_dispatch_edges': 9, 'make_eh_edges': 1, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'redirect_eh_edge_1': 18, 'redirect_eh_dispatch_edge': 10, 'operation_could_trap_helper_p': 1, 'operation_could_trap_p': 6, 'tree_could_trap_p': 21, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_fn': 1, 'gimple_call_return_type': 2, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_expr_type': 4, 'gimple_assign_rhs2': 3, 'stmt_could_throw_1_p': 89, 'stmt_could_throw_p': 91, 'tree_could_throw_p': 6, 'maybe_duplicate_eh_stmt_fn': 3, 'verify_eh_edges': 8, 'verify_eh_dispatch_edge': 26, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gsi_one_before_end_p': 1, 'VEC_eh_region_base_iterate': 2, 'VEC_eh_landing_pad_base_iterate': 2, 'remove_unreachable_handlers': 63, 'gsi_after_labels': 41, 'gsi_next_nondebug': 4, 'gimple_label_label': 1, 'phi_nodes': 2, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'move_use_after_head': 5, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_init_use': 55, 'gimple_vuse_op': 2, 'link_use_stmts_after': 62, 'first_imm_use_stmt': 13, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'next_imm_use_stmt': 10, 'unsplit_eh': 306, 'unsplit_all_eh': 206, 'ei_safe_edge': 3, 'cleanup_empty_eh_merge_phis': 66, 'cleanup_empty_eh_unsplit': 12, 'gsi_last_bb': 6, 'cleanup_empty_eh_move_lp': 40, 'cleanup_empty_eh': 44, 'cleanup_all_empty_eh': 105, 'remove_unreachable_handlers_no_lp': 13, 'execute_cleanup_eh': 404, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 5, 'single_succ_edge': 1, 'gimple_set_op': 4, 'gimple_call_set_lhs': 3, 'lower_eh_dispatch': 59, 'execute_lower_eh_dispatch': 62, 'execute_lower_resx': 101, 'gimple_call_lhs': 1, 'gimple_call_chain': 1, 'gimple_call_arg': 1, 'same_handler_p': 8, 'optimize_double_finally': 27, 'refactor_eh_r': 65, 'record_in_finally_tree': 3, 'collect_finally_tree_1': 7, 'gimple_call_fndecl': 4, 'gimple_call_set_arg': 3, 'gimple_has_lhs': 1, 'record_stmt_eh_region': 5, 'note_eh_region_may_contain_throw': 1, 'gimple_op_ptr': 1, 'gimple_cond_true_label': 1, 'outside_finally_tree': 2, 'record_in_goto_queue': 20, 'record_in_goto_queue_label': 14, 'gimple_cond_false_label': 1, 'gimple_goto_dest': 1, 'maybe_record_in_goto_queue': 5, 'gimple_try_catch_is_cleanup': 1, 'emit_post_landing_pad': 2, 'gimple_return_retval': 1, 'do_return_redirection': 10, 'do_goto_redirection': 4, 'find_goto_replacement': 10, 'gimple_seq_singleton_p': 2, 'replace_goto_queue_cond_clause': 5, 'replace_goto_queue_stmt_list': 30, 'replace_goto_queue': 2, 'lower_try_finally_fallthru_label': 3, 'frob_into_branch_around': 17, 'honor_protect_cleanup_actions': 30, 'lower_eh_constructs_1': 762, 'lower_eh_constructs': 6}, "PosixPath('602/tree-phinodes.bc')": {'gsi_last': 8, 'gsi_start': 8, 'VEC_gimple_base_pop': 2, 'allocate_phi_node': 6, 'make_phi_node': 55, 'delink_imm_use': 3, 'VEC_gimple_base_space': 2, 'VEC_gimple_gc_reserve': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_gc_safe_push': 5, 'release_phi_node': 24, 'relink_imm_use': 7, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'relink_imm_use_stmt': 9, 'resize_phi_node': 63, 'set_ssa_use_from_ptr': 9, 'reserve_phi_args_for_new_edge': 78, 'phi_nodes': 2, 'gsi_stmt': 1, 'set_phi_nodes': 2, 'add_phi_node_to_bb': 16, 'add_phi_arg': 28, 'remove_phi_arg_num': 63, 'remove_phi_args': 66, 'remove_phi_nodes': 8}, "PosixPath('602/lto-cgraph.bc')": {'lto_cgraph_encoder_new': 2, 'lto_cgraph_encoder_delete': 2, 'VEC_cgraph_node_ptr_base_space': 2, 'VEC_cgraph_node_ptr_heap_reserve': 2, 'VEC_cgraph_node_ptr_base_quick_push': 2, 'VEC_cgraph_node_ptr_heap_safe_push': 5, 'lto_cgraph_encoder_encode': 6, 'output_profile_summary': 2, 'lto_output_node': 11, 'output_cgraph': 34, 'input_profile_summary': 2, 'input_edge': 2, 'lto_file_decl_data_get_fn_decl': 2, 'input_overwrite_node': 37, 'input_node': 75, 'VEC_cgraph_node_ptr_base_iterate': 2, 'input_cgraph_1': 96, 'input_cgraph': 121}, "PosixPath('602/tree-ssa-threadedge.bc')": {'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve_exact': 2, 'VEC_tree_heap_safe_grow': 2, 'VEC_tree_heap_safe_grow_cleared': 2, 'set_ssa_name_value': 4, 'bb_seq': 2, 'gsi_last_bb': 6, 'gsi_stmt': 1, 'potentially_threadable_block': 7, 'gimple_use_ops': 2, 'op_iter_init': 7, 'op_iter_next_use': 7, 'op_iter_init_use': 32, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'record_temporary_equivalence': 13, 'record_temporary_equivalences_from_phis': 18, 'gsi_start_bb': 6, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_lhs': 1, 'gimple_call_lhs': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_assign_rhs1': 1, 'op_iter_next_tree': 6, 'op_iter_init_tree': 30, 'num_ssa_operands': 6, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'fold_assignment_stmt': 13, 'record_temporary_equivalences_from_stmts_at_dest': 284, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'next_readonly_imm_use': 2, 'lhs_of_dominating_assert': 6, 'gimple_set_op': 4, 'gimple_cond_set_lhs': 3, 'gimple_cond_set_rhs': 3, 'gimple_switch_index': 1, 'gimple_goto_dest': 1, 'simplify_control_stmt_condition': 40, 'VEC_tree_base_pop': 2, 'remove_temporary_equivalences': 7, 'thread_across_edge': 394}, "PosixPath('602/tree-object-size.bc')": {'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'unknown_object_size': 13, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_call_arg': 1, 'pass_through_call': 8, 'alloc_object_size': 41, 'call_object_size': 66, 'compute_object_offset': 9, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'check_for_plus_in_loops_1': 39, 'check_for_plus_in_loops': 19, 'compute_builtin_object_size': 217, 'addr_object_size': 93, 'collect_object_sizes_for': 199, 'cond_expr_object_size': 11, 'expr_object_size': 27, 'merge_object_sizes': 24, 'init_object_sizes': 3, 'fini_object_sizes': 3, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'compute_object_sizes': 93}, "PosixPath('602/rtl-error.bc')": {'location_for_asm': 7, 'diagnostic_for_asm': 7}, "PosixPath('602/vmsdbgout.bc')": {}, "PosixPath('602/tree-ssa-threadupdate.bc')": {'thread_single_edge': 41, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'redirection_block_p': 8, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'mark_threaded_blocks': 24, 'lookup_redirection_data': 14, 'gsi_last_bb': 6, 'ei_safe_edge': 3, 'remove_ctrl_stmt_and_useless_edges': 28, 'single_succ_edge': 1, 'redirect_edges': 40, 'create_edge_and_update_destination_phis': 24, 'create_block_for_threading': 2, 'create_duplicates': 6, 'thread_block': 40, 'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 40, 'determine_bb_domination_status': 9, 'thread_through_loop_header': 90, 'thread_through_all_blocks': 270, 'VEC_edge_base_space': 2, 'VEC_edge_heap_reserve': 2, 'VEC_edge_base_quick_push': 2, 'VEC_edge_heap_safe_push': 4, 'register_jump_thread': 8}, "PosixPath('602/ira-lives.bc')": {'process_bb_node_lives': 699, 'set_allocno_live': 116, 'ira_implicitly_set_insn_hard_regs': 21, 'create_start_finish_chains': 18, 'ira_print_live_range_list': 2, 'print_allocno_live_ranges': 2, 'ira_debug_allocno_live_ranges': 2, 'print_live_ranges': 2, 'df_lr_get_bb_info': 2, 'sparseset_clear': 2, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'sparseset_bit_p': 7, 'sparseset_insert_bit': 2, 'sparseset_set_bit': 8, 'sparseset_iter_init': 4, 'sparseset_iter_p': 4, 'sparseset_iter_elm': 2, 'sparseset_iter_next': 2, 'make_regno_born': 52, 'mark_reg_live': 58, 'mark_ref_live': 2, 'single_reg_class': 12, 'single_reg_operand_class': 1, 'ira_get_register_move_cost': 1, 'process_single_reg_class_operands': 136, 'update_allocno_pressure_excess_length': 14, 'clear_allocno_live': 105, 'make_regno_dead': 2, 'mark_reg_dead': 182, 'mark_ref_dead': 4, 'make_pseudo_conflict': 4, 'check_and_make_def_use_conflict': 2, 'check_and_make_def_conflict': 40, 'make_early_clobber_and_input_conflicts': 14, 'mark_hard_reg_early_clobbers': 6, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'bb_has_eh_pred': 4, 'bb_has_abnormal_pred': 4, 'bb_has_abnormal_call_pred': 4, 'remove_some_program_points_and_update_live_ranges': 29, 'ira_compress_allocno_live_ranges': 23}, "PosixPath('602/resource.bc')": {'add_to_hard_reg_set': 1, 'mark_referenced_resources': 43, 'mark_set_resources': 57, 'return_insn_p': 5, 'find_basic_block': 2, 'df_lr_get_bb_info': 2, 'remove_from_hard_reg_set': 1, 'next_insn_no_annul': 7, 'find_dead_or_set_registers': 185, 'update_live_status': 7, 'mark_target_live_regs': 566, 'init_resource_info': 8, 'free_resource_info': 10, 'clear_hashed_info_for_insn': 2}, "PosixPath('602/opts.bc')": {'set_struct_debug_option': 5, 'base_of_path': 2, 'matches_main_base': 3, 'should_emit_struct_debug': 9, 'VEC_const_char_p_base_pop': 2, 'print_ignored_options': 4, 'VEC_char_p_base_iterate': 2, 'flag_instrument_functions_exclude_p': 4, 'VEC_const_char_p_base_space': 2, 'VEC_const_char_p_heap_reserve': 2, 'VEC_const_char_p_base_quick_push': 2, 'VEC_const_char_p_heap_safe_push': 4, 'postpone_unknown_option_warning': 4, 'write_langs': 3, 'set_option': 11, 'wrap_help': 5, 'option_enabled': 7, 'print_filtered_help': 38, 'print_specific_help': 29, 'enable_warning_as_error': 1, 'VEC_char_p_base_space': 2, 'VEC_char_p_heap_reserve': 2, 'VEC_char_p_base_quick_push': 2, 'VEC_char_p_heap_safe_push': 5, 'add_comma_separated_to_vector': 13, 'common_handle_option': 75, 'handle_option': 29, 'handle_options': 270, 'decode_options': 426, 'fast_math_flags_struct_set_p': 11, 'get_option_state': 7}, "PosixPath('602/function.bc')": {'allocate_struct_function': 14, 'assign_stack_temp_for_type': 95, 'expand_function_end': 71, 'split_complex_args': 38, 'aggregate_value_p': 13, 'VEC_function_p_base_space': 2, 'VEC_function_p_heap_reserve': 2, 'VEC_function_p_base_quick_push': 2, 'VEC_function_p_heap_safe_push': 5, 'push_function_context': 4, 'VEC_function_p_base_pop': 2, 'pop_function_context': 2, 'free_after_compilation': 6, 'cut_slot_from_list': 3, 'insert_slot_to_list': 3, 'VEC_temp_slot_p_base_space': 2, 'VEC_temp_slot_p_gc_reserve_exact': 2, 'VEC_temp_slot_p_gc_safe_grow': 2, 'VEC_temp_slot_p_gc_safe_grow_cleared': 2, 'temp_slots_at_level': 2, 'temp_slot_address_compute_hash': 3, 'insert_temp_slot_address': 7, 'assign_temp': 13, 'find_temp_slot_from_address': 30, 'update_temp_slot_address': 5, 'mark_temp_addr_taken': 2, 'move_slot_to_level': 7, 'preserve_temp_slots': 11, 'make_slot_available': 9, 'combine_temp_slots': 62, 'free_temp_slots': 3, 'instantiate_virtual_regs_in_rtx': 10, 'instantiate_decl_rtl': 5, 'use_register_for_decl': 15, 'pass_by_reference': 6, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 5, 'VEC_tree_base_quick_insert': 3, 'VEC_tree_heap_safe_insert': 6, 'VEC_tree_base_iterate': 2, 'assign_parms_augmented_arg_list': 52, 'assign_parm_find_data_types': 69, 'gimplify_parm_type': 3, 'gimplify_parameters': 45, 'pad_to_arg_alignment': 6, 'locate_and_pad_parm': 18, 'setjmp_vars_warning': 8, 'setjmp_args_warning': 6, 'generate_setjmp_warnings': 6, 'clear_block_marks': 4, 'VEC_tree_base_pop': 2, 'blocks_nreverse': 1, 'reorder_blocks_1': 30, 'reorder_blocks': 31, 'all_blocks': 2, 'number_blocks': 3, 'debug_find_var_in_block_tree': 2, 'push_cfun': 4, 'pop_cfun': 2, 'push_struct_function': 4, 'init_function_start': 1, 'assign_parms_setup_varargs': 7, 'assign_parm_find_entry_rtl': 31, 'assign_parm_is_stack_parm': 12, 'assign_parm_find_stack_rtl': 23, 'assign_parm_adjust_entry_rtl': 16, 'assign_parm_adjust_stack_rtl': 32, 'assign_parm_setup_block_p': 2, 'assign_parm_setup_block': 9, 'assign_parm_setup_reg': 75, 'assign_parm_setup_stack': 25, 'assign_parms_unsplit_complex': 14, 'assign_parms': 575, 'expand_function_start': 556, 'expand_dummy_function_end': 1, 'diddle_return_value': 9, 'clobber_return_register': 9, 'do_warn_unused_parameter': 7, 'use_return_register': 4, 'contains': 5, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'reposition_prologue_and_epilogue_notes': 31, 'used_types_insert_helper': 3, 'used_types_insert': 49, 'hash_types_used_by_vars_entry': 2, 'types_used_by_vars_eq': 4, 'types_used_by_var_decl_insert': 5, 'gt_ggc_mx_temp_slot': 7, 'gt_ggc_mx_temp_slot_address_entry': 2, 'gt_ggc_m_P23temp_slot_address_entry4htab': 5, 'gt_pch_nx_temp_slot': 7, 'gt_pch_nx_temp_slot_address_entry': 2, 'gt_pch_p_P23temp_slot_address_entry4htab': 5, 'gt_pch_n_P23temp_slot_address_entry4htab': 5, 'match_asm_constraints_1': 40, 'rest_of_match_asm_constraints': 28, 'set_insn_locators': 4, 'single_succ_edge': 1, 'ei_safe_edge': 3, 'thread_prologue_and_epilogue_insns': 159, 'rest_of_handle_thread_prologue_and_epilogue': 88, 'safe_insn_predicate': 2, 'recog_memoized': 3, 'instantiate_virtual_regs_in_insn': 149, 'instantiate_expr': 3, 'instantiate_decls_1': 17, 'instantiate_decls': 15, 'instantiate_virtual_regs': 173}, "PosixPath('602/cfgloopanal.bc')": {'just_once_each_iteration_p': 2, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'mark_irreducible_loops': 89, 'num_loop_insns': 4, 'average_num_loop_insns': 8, 'expected_loop_iterations_unbounded': 23, 'seq_cost': 3, 'init_set_costs': 1, 'estimate_reg_pressure_cost': 14, 'loop_outer': 2, 'mark_loop_exit_edges': 30}, "PosixPath('602/combine-stack-adj.bc')": {'single_set_for_csa': 11, 'try_apply_stack_adjustment': 11, 'adjust_frame_related_expr': 15, 'stack_memref_p': 6, 'record_one_stack_ref': 9, 'record_stack_refs': 10, 'combine_stack_adjustments_for_block': 58, 'combine_stack_adjustments': 87, 'rest_of_handle_stack_adjustments': 83}, "PosixPath('602/var-tracking.bc')": {'dataflow_set_merge': 107, 'dataflow_set_clear_at_call': 2, 'delete_debug_insns': 20, 'dataflow_set_init': 8, 'stack_adjust_offset_pre_post': 24, 'insn_stack_adjust_offset_pre_post': 5, 'ei_one_before_end_p': 1, 'ei_next': 4, 'vt_stack_adjustments': 103, 'VEC_rtx_base_space': 2, 'VEC_rtx_heap_reserve': 2, 'VEC_rtx_base_quick_push': 2, 'VEC_rtx_heap_safe_push': 5, 'preserve_value': 5, 'var_debug_decl': 2, 'attrs_list_insert': 8, 'dv_uid': 3, 'dv_htab_hash': 2, 'shared_hash_find_slot_noinsert': 2, 'shared_hash_find_slot_1': 2, 'shared_hash_find_slot': 4, 'vars_copy_1': 4, 'dv_onepart_p': 1, 'variable_htab_free': 17, 'variable_htab_hash': 2, 'shared_hash_unshare': 2, 'shared_hash_find_slot_unshare_1': 3, 'shared_hash_find_slot_unshare': 8, 'loc_cmp': 16, 'shared_var_p': 2, 'unshare_variable': 128, 'add_value_chain': 20, 'add_value_chains': 5, 'set_dv_changed': 1, 'variable_was_changed': 38, 'set_slot_part': 183, 'set_variable_part': 5, 'var_reg_decl_set': 21, 'vt_init_cfa_base': 6, 'single_succ_edge': 1, 'log_op_type': 7, 'VEC_micro_operation_base_space': 2, 'VEC_micro_operation_heap_reserve': 2, 'VEC_micro_operation_base_quick_push': 3, 'VEC_micro_operation_heap_safe_push': 6, 'use_narrower_mode': 3, 'adjust_mems': 28, 'adjust_insn': 27, 'contains_symbol_ref': 1, 'track_expr_p': 28, 'find_use_val': 6, 'get_address_mode': 2, 'track_loc_p': 4, 'use_type': 28, 'var_lowpart': 2, 'same_variable_part_p': 11, 'replace_expr_with_values': 4, 'reverse_op': 10, 'add_stores': 357, 'add_uses': 291, 'add_with_sets': 163, 'fp_setter': 8, 'vt_get_decl_and_offset': 3, 'vt_add_function_parameters': 112, 'value_chain_htab_hash': 2, 'vt_initialize': 990, 'shared_hash_destroy': 2, 'dataflow_set_destroy': 3, 'vt_finalize': 9, 'dataflow_set_clear': 3, 'ei_end_p': 1, 'ei_cond': 3, 'attrs_list_copy': 19, 'dataflow_set_copy': 24, 'attrs_list_member': 4, 'attrs_list_mpdv_union': 53, 'variable_union_info_cmp_pos': 4, 'variable_union': 470, 'onepart_variable_different_p': 4, 'find_loc_in_1pdv': 11, 'insert_into_intersection': 9, 'shared_hash_find': 2, 'intersect_loc_chains': 20, 'remove_value_chain': 14, 'remove_value_chains': 5, 'delete_slot_part': 82, 'clobber_slot_part': 28, 'clobber_variable_part': 2, 'canonicalize_values_star': 59, 'variable_merge_over_cur': 255, 'variable_merge_over_src': 6, 'canonicalize_vars_star': 21, 'delete_variable_part': 2, 'var_mem_decl_set': 2, 'val_reset': 26, 'variable_post_merge_perm_vals': 34, 'remove_duplicate_values': 14, 'variable_post_merge_new_vals': 103, 'dataflow_post_merge_adjust': 5, 'attrs_list_union': 26, 'dataflow_set_union': 39, 'var_regno_delete': 7, 'may_be_aliased': 7, 'is_global_var': 2, 'mem_dies_at_call': 10, 'dataflow_set_remove_mem_locs': 30, 'find_mem_expr_in_1pdv': 12, 'dataflow_set_preserve_mem_locs': 94, 'var_reg_set': 2, 'var_mem_set': 2, 'val_resolve': 7, 'val_store': 3, 'var_reg_delete': 19, 'var_mem_delete': 4, 'get_init_value': 5, 'find_src_status': 7, 'find_src_set_src': 16, 'var_reg_delete_and_set': 24, 'var_mem_delete_and_set': 4, 'dataflow_set_equiv_regs': 100, 'dump_var': 14, 'variable_part_different_p': 8, 'variable_different_p': 11, 'dataflow_set_different_1': 2, 'canonicalize_values_mark': 17, 'compute_bb_dataflow': 394, 'dump_attrs_list': 1, 'dump_dataflow_set': 2, 'vt_find_locations': 712, 'dump_dataflow_sets': 9, 'VEC_rtx_base_iterate': 2, 'add_cselib_value_chains': 3, 'VEC_variable_base_pop': 2, 'dv_changed_p': 1, 'VEC_variable_base_space': 2, 'VEC_variable_heap_reserve': 2, 'VEC_variable_base_quick_push': 2, 'VEC_variable_heap_safe_push': 4, 'check_changed_vars_0': 19, 'check_changed_vars_2': 2, 'VEC_rtx_base_pop': 2, 'vt_expand_loc_callback': 23, 'vt_expand_loc': 7, 'vt_expand_loc_dummy': 7, 'emit_note_insn_var_location': 340, 'check_changed_vars_3': 31, 'check_changed_vars_1': 3, 'emit_notes_for_changes': 23, 'emit_notes_for_differences_2': 11, 'emit_notes_for_differences_1': 47, 'emit_notes_in_bb': 98, 'vt_emit_notes': 179, 'variable_tracking_main_1': 177, 'variable_tracking_main': 173}, "PosixPath('602/md5.bc')": {'md5_init_ctx': 22, 'md5_read_ctx': 7, 'md5_process_block': 123, 'md5_finish_ctx': 23, 'md5_process_bytes': 7, 'md5_stream': 34, 'md5_buffer': 23}, "PosixPath('602/cgraphbuild.bc')": {'reset_inline_failed': 10, 'compute_call_stmt_bb_frequency': 2, 'record_reference': 4, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'rebuild_cgraph_edges': 79, 'gimple_op_ptr': 1, 'gimple_call_arg_ptr': 1, 'gimple_call_lhs': 1, 'gimple_call_lhs_ptr': 1, 'build_cgraph_edges': 119}, "PosixPath('602/ira.bc')": {'setup_class_subset_and_memory_move_costs': 38, 'fix_reg_equiv_init': 34, 'ira_print_disposition': 5, 'print_class_cover': 4, 'ira_debug_class_cover': 4, 'ira_init_register_move_cost': 20, 'ira_init_once': 3, 'free_register_move_costs': 8, 'setup_reg_mode_hard_regset': 3, 'setup_class_hard_regs': 30, 'setup_available_class_regs': 7, 'setup_alloc_regs': 27, 'setup_reg_subclasses': 25, 'setup_cover_and_important_classes': 87, 'setup_class_translate': 111, 'comp_reg_classes_func': 8, 'reorder_important_classes': 10, 'setup_reg_class_relations': 290, 'find_reg_class_closure': 569, 'setup_hard_regno_cover_class': 10, 'setup_reg_class_nregs': 3, 'setup_prohibited_class_mode_regs': 9, 'ira_init': 951, 'compute_regs_asm_clobbered': 46, 'ira_setup_eliminable_regset': 202, 'df_lr_get_bb_info': 2, 'mark_elimination': 12, 'recog_memoized': 3, 'setup_prohibited_mode_move_regs': 9, 'no_equiv': 9, 'validate_equiv_mem_from_store': 1, 'validate_equiv_mem': 13, 'equiv_init_varies_p': 4, 'equiv_init_movable_p': 12, 'contains_replace_regs': 3, 'memref_referenced_p': 9, 'memref_used_between_p': 4, 'df_live_get_bb_info': 2, 'adjust_cleared_regs': 2, 'update_equiv_regs': 268, 'find_reg_equiv_invariant_const': 2, 'setup_allocno_assignment_flags': 19, 'setup_reg_renumber': 28, 'calculate_allocation_cost': 62, 'VEC_rtx_base_space': 2, 'VEC_rtx_gc_reserve_exact': 2, 'VEC_rtx_gc_safe_grow': 2, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'pseudo_for_reload_consideration_p': 1, 'init_live_subregs': 3, 'build_insn_chain': 294, 'ira': 687}, "PosixPath('602/stor-layout.bc')": {'start_record_layout': 16, 'place_field': 107, 'finalize_type_size': 152, 'finish_builtin_struct': 11, 'layout_type': 195, 'initialize_sizetypes': 19, 'set_sizetype': 43, 'VEC_tree_base_iterate': 2, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 4, 'copy_self_referential_tree_r': 3, 'self_referential_size': 58, 'variable_size': 80, 'finalize_size_functions': 2, 'mode_for_size': 1, 'smallest_mode_for_size': 1, 'int_mode_for_mode': 4, 'vector_type_mode': 20, 'do_type_align': 3, 'layout_decl': 307, 'relayout_decl': 12, 'debug_rli': 7, 'rli_size_unit_so_far': 2, 'rli_size_so_far': 2, 'update_alignment_for_field': 28, 'place_union_field': 19, 'compute_record_mode': 18, 'finalize_record_size': 18, 'finish_record_layout': 23, 'set_min_and_max_values_for_integral_type': 2, 'fixup_unsigned_type': 2, 'make_fract_type': 8, 'make_accum_type': 8, 'get_best_mode': 14}, "PosixPath('602/cpp_directives.bc')": {'do_pragma_push_macro': 18, 'start_directive': 10, 'do_ident': 2, 'parse_answer': 10, 'parse_assertion': 35, 'find_answer': 7, 'do_unassert': 6, 'do_assert': 24, 'do_diagnostic': 4, 'lookup_pragma_entry': 2, 'do_pragma': 80, 'do_elif': 4, 'strtolinenum': 3, 'skip_rest_of_line': 2, 'do_line': 21, 'lex_macro_node': 5, 'do_undef': 8, 'push_conditional': 105, 'do_ifndef': 11, 'do_else': 11, 'do_if': 2, 'do_ifdef': 11, 'do_endif': 34, 'do_define': 4, 'parse_include': 8, 'do_include_common': 41, 'directive_diagnostics': 34, 'prepare_directive_trad': 15, 'end_directive': 43, 'read_flag': 4, 'do_linemarker': 17, '_cpp_handle_directive': 240, 'new_pragma_entry': 2, 'register_pragma_1': 21, 'cpp_register_pragma': 2, 'cpp_register_deferred_pragma': 4, 'register_pragma_internal': 2, 'do_pragma_dependency': 5, 'do_pragma_poison': 4, 'get__Pragma_string': 2, 'cpp_pop_definition': 13, 'do_pragma_pop_macro': 17, 'cpp_push_definition': 2, '_cpp_init_internal_pragmas': 12, 'count_registered_pragmas': 4, 'save_registered_pragmas': 5, 'restore_registered_pragmas': 2, 'cpp_push_buffer': 70, '_cpp_pop_buffer': 17, 'destringize_and_run': 58, '_cpp_test_assertion': 5, 'run_directive': 13, 'cpp_define': 4, 'cpp_define_formatted': 1, 'handle_assertion': 1, 'cpp_get_deps': 1, '_cpp_init_directives': 1}, "PosixPath('602/cp-demangle.bc')": {'cplus_demangle_type': 414, 'd_print_flush': 4, 'd_print_cast': 85, 'cplus_demangle_fill_name': 4, 'cplus_demangle_fill_extended_operator': 4, 'cplus_demangle_fill_ctor': 4, 'cplus_demangle_fill_dtor': 4, 'd_make_empty': 4, 'd_make_comp': 8, 'd_cv_qualifiers': 10, 'd_add_substitution': 4, 'd_make_builtin_type': 6, 'd_number': 1, 'd_make_name': 8, 'd_identifier': 34, 'd_source_name': 37, 'd_make_extended_operator': 8, 'd_make_operator': 6, 'd_make_ctor': 7, 'd_make_dtor': 8, 'd_ctor_dtor_name': 61, 'd_compact_number': 2, 'd_unnamed_type': 13, 'd_make_sub': 8, 'd_substitution': 88, 'd_make_template_param': 6, 'd_template_param': 10, 'd_make_function_param': 5, 'd_make_default_arg': 7, 'd_number_component': 4, 'd_make_character': 6, 'd_java_resource': 67, 'is_ctor_dtor_or_conversion': 2, 'has_return_type': 5, 'd_unqualified_name': 47, 'd_lambda': 13, 'd_operator_name': 26, 'd_vector_type': 14, 'd_pointer_to_member_type': 30, 'd_array_type': 20, 'd_expression': 84, 'd_exprlist': 40, 'd_expr_primary': 24, 'cplus_demangle_mangled_name': 2, 'd_encoding': 131, 'd_name': 111, 'd_template_args': 57, 'd_function_type': 1, 'd_bare_function_type': 8, 'd_parmlist': 48, 'd_print_init': 22, 'd_append_char': 10, 'd_append_buffer': 14, 'd_print_java_identifier': 63, 'd_append_string': 11, 'd_index_template_argument': 3, 'd_lookup_template_argument': 3, 'd_append_num': 27, 'd_find_pack': 3, 'd_pack_length': 4, 'd_print_comp': 655, 'd_print_subexpr': 12, 'd_print_expr_op': 18, 'd_print_function_type': 87, 'd_print_mod_list': 45, 'd_print_array_type': 95, 'd_print_mod': 174, 'cplus_demangle_print_callback': 26, 'd_growable_string_resize': 6, 'd_growable_string_init': 7, 'd_growable_string_append_buffer': 19, 'd_growable_string_callback_adapter': 18, 'cplus_demangle_print': 8, 'cplus_demangle_init_info': 56, 'd_demangle_callback': 167, 'd_demangle': 5, 'cplus_demangle_v3': 1, 'java_demangle_v3': 1, 'is_ctor_or_dtor': 166, 'is_gnu_v3_mangled_ctor': 4, 'is_gnu_v3_mangled_dtor': 4}, "PosixPath('602/genrtl.bc')": {'gen_rtx_fmt_0_stat': 2, 'gen_rtx_fmt_ee_stat': 4, 'gen_rtx_fmt_ue_stat': 4, 'gen_rtx_fmt_E_stat': 2, 'gen_rtx_fmt_e_stat': 2, 'gen_rtx_fmt_iuuBieie_stat': 37, 'gen_rtx_fmt_iuuBieie0_stat': 46, 'gen_rtx_fmt_iuuBieiee_stat': 46, 'gen_rtx_fmt_iuu00000_stat': 11, 'gen_rtx_fmt_iuuB00is_stat': 30, 'gen_rtx_fmt_si_stat': 4, 'gen_rtx_fmt_ssiEEEi_stat': 29, 'gen_rtx_fmt_Ei_stat': 4, 'gen_rtx_fmt_eEee0_stat': 16, 'gen_rtx_fmt_eee_stat': 7, 'gen_rtx_fmt_w_stat': 2, 'gen_rtx_fmt_www_stat': 7, 'gen_rtx_fmt_s_stat': 2, 'gen_rtx_fmt_i00_stat': 4, 'gen_rtx_fmt_ei_stat': 4, 'gen_rtx_fmt_e0_stat': 4, 'gen_rtx_fmt_u_stat': 2, 'gen_rtx_fmt_s00_stat': 4, 'gen_rtx_fmt_tei_stat': 7, 'gen_rtx_fmt_iss_stat': 7, 'gen_rtx_fmt_is_stat': 4, 'gen_rtx_fmt_isE_stat': 7, 'gen_rtx_fmt_i_stat': 2, 'gen_rtx_fmt_iE_stat': 4, 'gen_rtx_fmt_ss_stat': 4, 'gen_rtx_fmt_sEss_stat': 11, 'gen_rtx_fmt_eE_stat': 4, 'gen_rtx_fmt_Ess_stat': 7, 'gen_rtx_fmt_ses_stat': 7, 'gen_rtx_fmt_sss_stat': 7, 'gen_rtx_fmt_sse_stat': 7, 'gen_rtx_fmt_sies_stat': 11, 'gen_rtx_fmt_sE_stat': 4, 'gen_rtx_fmt_ii_stat': 4, 'gen_rtx_fmt_Ee_stat': 4}, "PosixPath('602/ipa-prop.bc')": {'ipa_push_func_to_list_1': 3, 'ipa_init_func_list': 8, 'ipa_initialize_node_params': 2, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'ipa_get_param_decl_index': 2, 'visit_store_addr_for_mod_analysis': 3, 'ipa_detect_param_modifications': 26, 'VEC_ipa_edge_args_t_base_space': 2, 'VEC_ipa_edge_args_t_gc_reserve_exact': 2, 'VEC_ipa_edge_args_t_gc_safe_grow': 2, 'VEC_ipa_edge_args_t_gc_safe_grow_cleared': 2, 'ipa_count_arguments': 10, 'ipa_edge_args_info_available_for_edge_p': 1, 'ipa_print_node_jump_functions': 11, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_arg': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs2': 3, 'gimple_assign_rhs_code': 2, 'compute_complex_pass_through': 85, 'compute_scalar_jump_functions': 114, 'type_like_member_ptr_p': 8, 'compute_pass_through_member_ptrs': 17, 'gimple_assign_lhs': 1, 'get_ssa_def_if_simple_copy': 2, 'fill_member_ptr_cst_jump_function': 4, 'determine_cst_member_ptr': 32, 'compute_cst_member_ptr_arguments': 55, 'ipa_compute_jump_functions': 239, 'gimple_call_fn': 1, 'ipa_note_param_call': 12, 'ipa_get_member_ptr_load_param': 21, 'ipa_get_stmt_member_ptr_load_param': 19, 'single_pred_edge': 1, 'single_succ_edge': 1, 'gimple_cond_rhs': 1, 'gimple_cond_lhs': 1, 'ipa_analyze_call_uses': 36, 'ipa_analyze_stmt_uses': 83, 'ipa_analyze_params_uses': 161, 'print_edge_addition_message': 3, 'ipa_check_create_edge_args': 2, 'VEC_cgraph_edge_p_base_space': 2, 'VEC_cgraph_edge_p_heap_reserve': 2, 'VEC_cgraph_edge_p_base_quick_push': 2, 'VEC_cgraph_edge_p_heap_safe_push': 5, 'update_call_notes_after_inlining': 41, 'update_jump_functions_after_inlining': 12, 'propagate_info_to_inlined_callees': 71, 'ipa_free_all_edge_args': 4, 'ipa_free_node_params_substructures': 2, 'VEC_ipa_node_params_t_base_space': 2, 'VEC_ipa_node_params_t_heap_reserve_exact': 2, 'VEC_ipa_node_params_t_heap_safe_grow': 1, 'VEC_ipa_node_params_t_heap_safe_grow_cleared': 2, 'ipa_check_create_node_params': 2, 'ipa_node_duplication_hook': 34, 'ipa_edge_duplication_hook': 6, 'ipa_edge_removal_hook': 2, 'ipa_print_node_params': 8, 'VEC_tree_base_quick_push': 2, 'ipa_get_vector_of_formal_parms': 2, 'get_vector_of_formal_parm_types': 2, 'ipa_modify_formal_parameters': 50, 'gimple_call_fndecl': 4, 'gimple_call_lhs': 1, 'gimple_set_op': 4, 'gimple_call_set_lhs': 3, 'gimple_call_chain': 1, 'gimple_call_set_chain': 3, 'ipa_modify_call_arguments': 98, 'VEC_ipa_parm_adjustment_t_base_quick_push': 3, 'ipa_combine_adjustments': 55, 'ipa_dump_param_adjustments': 12, 'ipa_write_jump_function': 5, 'ipa_write_param_call_note': 2, 'ipa_write_node_info': 24, 'ipa_prop_write_jump_functions': 37, 'ipa_read_param_call_note': 2, 'ipa_read_node_info': 13, 'ipa_prop_read_section': 26, 'ipa_prop_read_jump_functions': 51, 'ipa_update_after_lto_read': 40, 'lto_ipa_fixup_call_notes': 6}, "PosixPath('602/tree-vect-stmts.bc')": {'vect_mark_stmts_to_be_vectorized': 439, 'gsi_stmt': 1, 'gimple_vdef': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_init_phidef': 2, 'gimple_def_ops': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_next_def': 4, 'op_iter_init_def': 43, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'next_readonly_imm_use': 2, 'vect_stmt_relevant_p': 39, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 5, 'vect_mark_relevant': 22, 'bb_seq': 2, 'gsi_start_bb': 6, 'VEC_gimple_base_pop': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'op_iter_init_use': 45, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'exist_non_indexing_operands_for_use_p': 8, 'gimple_call_lhs': 1, 'vect_is_simple_use': 7, 'process_use': 69, 'vect_model_simple_cost': 9, 'vect_cost_strided_group_size': 4, 'vect_model_store_cost': 16, 'vect_model_load_cost': 27, 'gimple_set_op': 4, 'gimple_assign_set_lhs': 3, 'is_loop_header_bb_p': 2, 'new_stmt_vec_info': 71, 'VEC_vec_void_p_base_space': 2, 'VEC_vec_void_p_heap_reserve': 2, 'VEC_vec_void_p_base_quick_push': 2, 'VEC_vec_void_p_heap_safe_push': 4, 'set_vinfo_for_stmt': 4, 'vect_finish_stmt_generation': 6, 'gsi_after_labels': 41, 'vect_init_vector': 29, 'get_vectype_for_scalar_type': 40, 'vect_get_vec_def_for_operand': 52, 'vect_get_vec_def_for_stmt_copy': 3, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'vectorizable_function': 6, 'gimple_assign_rhs_code': 2, 'vect_is_simple_cond': 44, 'vectorizable_condition': 136, 'gimple_call_return_type': 2, 'gimple_expr_type': 4, 'gimple_assign_rhs2': 3, 'VEC_tree_base_quick_push': 2, 'supportable_widening_operation': 17, 'VEC_tree_base_iterate': 2, 'VEC_tree_heap_copy': 2, 'VEC_tree_base_pop': 2, 'gimple_call_set_lhs': 3, 'vect_gen_widened_results_half': 6, 'vect_create_vectorized_promotion_stmts': 36, 'vectorizable_type_promotion': 878, 'supportable_narrowing_operation': 11, 'vect_get_loop_based_defs': 5, 'vect_create_vectorized_demotion_stmts': 14, 'vectorizable_type_demotion': 431, 'vect_get_vec_defs': 4, 'vect_get_vec_defs_for_stmt_copy': 8, 'vectorizable_conversion': 480, 'vectorizable_operation': 257, 'vectorizable_assignment': 179, 'vectorizable_load': 346, 'gimple_call_arg': 1, 'vectorizable_call': 132, 'vectorizable_store': 355, 'vect_analyze_stmt': 40, 'vect_transform_stmt': 97, 'free_stmt_vec_info': 4}, "PosixPath('602/tree-ssa-copyrename.bc')": {'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'partition_to_var': 3, 'copy_rename_partition_coalesce': 24, 'rename_ssa_copies': 67}, "PosixPath('602/c-semantics.bc')": {'pop_stmt_list': 21, 'build_stmt': 34}, "PosixPath('602/tree-ssa-math-opts.bc')": {'first_imm_use_on_stmt': 2, 'next_imm_use_on_stmt': 2, 'execute_cse_sincos_1': 249, 'find_bswap_1': 73, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gsi_after_labels': 41, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_call_fn': 1, 'gimple_call_return_type': 2, 'gimple_expr_type': 4, 'gimple_assign_rhs_class': 3, 'gimple_assign_rhs2': 3, 'do_shift_rotate': 3, 'verify_symbolic_number_p': 2, 'find_bswap': 3, 'gimple_assign_lhs': 1, 'gimple_set_op': 4, 'gimple_call_set_lhs': 3, 'execute_optimize_bswap': 111, 'gimple_call_lhs': 1, 'gimple_call_fndecl': 4, 'gimple_call_arg': 1, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'move_use_after_head': 5, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_init_use': 55, 'gimple_vuse_op': 2, 'link_use_stmts_after': 62, 'first_imm_use_stmt': 13, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 5, 'maybe_record_sincos': 8, 'next_imm_use_stmt': 10, 'VEC_gimple_base_iterate': 2, 'execute_cse_sincos': 418, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'is_division_by': 6, 'occ_new': 4, 'insert_bb': 13, 'register_division_in': 23, 'next_readonly_imm_use': 2, 'compute_merit': 10, 'insert_reciprocals': 41, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'replace_reciprocal': 11, 'free_bb': 7, 'execute_cse_reciprocals_1': 133, 'gimple_has_lhs': 1, 'op_iter_next_tree': 6, 'op_iter_init_tree': 44, 'single_ssa_tree_operand': 8, 'gimple_call_set_fndecl': 3, 'execute_cse_reciprocals': 389}, "PosixPath('602/pointer-set.bc')": {'pointer_map_create': 7, 'pointer_set_create': 4, 'pointer_set_contains': 4, 'pointer_set_insert': 26, 'pointer_set_traverse': 5, 'pointer_map_contains': 7, 'pointer_map_insert': 39, 'pointer_map_traverse': 8}, "PosixPath('602/gimple.bc')": {'gsi_last': 8, 'gsi_start': 8, 'gimple_size': 1, 'gimple_alloc_stat': 4, 'gimple_build_with_ops_stat': 3, 'gimple_ops': 1, 'gimple_set_op': 4, 'gimple_return_set_retval': 3, 'gimple_build_return': 5, 'gimple_build_call_1': 4, 'gimple_call_set_arg': 3, 'gimple_build_call_vec': 5, 'is_gimple_reg': 9, 'is_gimple_constant': 2, 'strip_invariant_refs': 15, 'is_gimple_invariant_address': 2, 'is_gimple_min_invariant': 2, 'is_gimple_val': 3, 'gimple_build_call': 24, 'gimple_call_set_chain': 3, 'gimple_build_call_from_tree': 13, 'gimple_assign_set_lhs': 3, 'gimple_assign_set_rhs1': 3, 'gimple_assign_set_rhs2': 3, 'gimple_build_assign_with_ops_stat': 7, 'gimple_build_assign_stat': 9, 'gimple_cond_set_lhs': 3, 'gimple_cond_set_rhs': 3, 'gimple_cond_set_true_label': 3, 'gimple_cond_set_false_label': 3, 'gimple_build_cond': 9, 'gimple_cond_get_ops_from_tree': 4, 'gimple_build_cond_from_tree': 6, 'gimple_cond_set_condition': 5, 'gimple_cond_set_condition_from_tree': 23, 'gimple_label_set_label': 3, 'gimple_build_label': 5, 'gimple_goto_set_dest': 3, 'gimple_build_goto': 5, 'gimple_build_nop': 2, 'gimple_build_bind': 11, 'gimple_build_asm_1': 16, 'gimple_asm_set_input_op': 5, 'gimple_asm_set_output_op': 8, 'gimple_asm_set_clobber_op': 12, 'gimple_asm_set_label_op': 12, 'gimple_build_asm_vec': 39, 'gimple_build_catch': 7, 'gimple_build_eh_filter': 7, 'gimple_build_eh_must_not_throw': 2, 'gimple_build_try': 7, 'gimple_build_wce': 4, 'gimple_build_resx': 4, 'gimple_switch_set_index': 5, 'gimple_switch_set_label': 5, 'gimple_switch_set_default_label': 5, 'gimple_build_switch_nlabels': 8, 'gimple_build_switch': 13, 'gimple_build_switch_vec': 5, 'gimple_build_eh_dispatch': 4, 'gimple_debug_bind_set_var': 3, 'gimple_debug_bind_set_value': 3, 'gimple_build_debug_bind_stat': 13, 'gimple_build_omp_critical': 7, 'gimple_build_omp_for': 12, 'gimple_build_omp_parallel': 16, 'gimple_build_omp_task': 37, 'gimple_build_omp_section': 4, 'gimple_build_omp_master': 4, 'gimple_build_omp_continue': 7, 'gimple_build_omp_ordered': 4, 'gimple_build_omp_return': 2, 'gimple_build_omp_sections': 7, 'gimple_build_omp_sections_switch': 2, 'gimple_build_omp_single': 7, 'gimple_build_omp_atomic_load': 7, 'gimple_build_omp_atomic_store': 4, 'gimple_build_predict': 2, 'gimple_seq_alloc': 1, 'gimple_seq_free': 3, 'gimple_seq_add_stmt': 7, 'gimple_seq_add_seq': 7, 'gsi_stmt': 1, 'empty_body_p': 5, 'gimple_omp_for_cond': 2, 'gimple_omp_for_set_cond': 2, 'gimple_omp_for_index': 2, 'gimple_omp_for_set_index': 2, 'gimple_omp_for_initial': 2, 'gimple_omp_for_set_initial': 2, 'gimple_omp_for_final': 2, 'gimple_omp_for_set_final': 2, 'gimple_omp_for_incr': 2, 'gimple_omp_for_set_incr': 2, 'gimple_op': 1, 'gimple_vdef': 2, 'gimple_vuse': 2, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_call_flags': 8, 'VEC_gimple_base_space': 2, 'VEC_gimple_gc_reserve': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_gc_safe_push': 5, 'gimple_set_modified': 4, 'gimple_seq_copy': 8, 'gimple_copy': 65, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_single_p': 3, 'gimple_op_ptr': 1, 'is_gimple_lvalue': 1, 'is_gimple_mem_rhs': 1, 'gimple_call_chain_ptr': 1, 'gimple_call_fn_ptr': 1, 'gimple_call_arg_ptr': 1, 'gimple_call_lhs_ptr': 1, 'gimple_asm_output_op': 5, 'gimple_asm_input_op': 3, 'gimple_asm_label_op': 8, 'walk_gimple_asm': 79, 'gimple_omp_for_index_ptr': 2, 'gimple_omp_for_initial_ptr': 2, 'gimple_omp_for_final_ptr': 2, 'gimple_omp_for_incr_ptr': 2, 'walk_gimple_op': 18, 'walk_gimple_seq': 10, 'walk_gimple_stmt': 18, 'gimple_has_body_p': 2, 'gimple_assign_copy_p': 4, 'gimple_assign_ssa_name_copy_p': 5, 'gimple_assign_unary_nop_p': 26, 'gimple_label_label': 1, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_gc_reserve_exact': 2, 'VEC_basic_block_gc_safe_grow': 3, 'VEC_basic_block_gc_safe_grow_cleared': 3, 'gimple_set_bb': 19, 'gimple_assign_set_rhs_with_ops': 19, 'gimple_assign_set_rhs_from_tree': 9, 'gimple_call_lhs': 1, 'gimple_get_lhs': 2, 'gimple_call_set_lhs': 3, 'gimple_set_lhs': 5, 'gimple_call_arg': 1, 'gimple_has_side_effects': 8, 'gimple_rhs_has_side_effects': 16, 'gimple_call_return_type': 2, 'gimple_expr_type': 4, 'gimple_assign_rhs2': 3, 'gimple_could_trap_p_1': 49, 'is_gimple_address': 2, 'is_gimple_ip_invariant_address': 2, 'is_gimple_ip_invariant': 2, 'is_gimple_stmt': 5, 'is_gimple_non_addressable': 2, 'is_gimple_asm_val': 2, 'get_call_expr_in': 3, 'get_base_address': 3, 'tree_operand_length': 3, 'recalculate_side_effects': 4, 'canonicalize_cond_expr_cond': 18, 'VEC_tree_base_quick_push': 2, 'gimple_call_chain': 1, 'gimple_call_copy_skip_args': 31, 'compare_field_offset': 7, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_heap_safe_push': 5, 'iterative_hash_name': 2, 'VEC_tree_base_pop': 2, 'iterative_hash_gimple_type': 84, 'visit': 12, 'gimple_type_hash': 14, 'type_pair_eq': 9, 'type_pair_hash': 2, 'lookup_type_pair': 15, 'compare_type_names_p': 4, 'gimple_types_compatible_p': 65, 'gimple_register_type': 32, 'print_gimple_types_stats': 4, 'gimple_signed_or_unsigned_type': 343, 'gimple_get_alias_set': 19, 'gimple_use_ops': 2, 'op_iter_init': 12, 'op_iter_next_tree': 6, 'op_iter_init_tree': 46, 'count_ptr_derefs': 7, 'count_uses_and_derefs': 60, 'get_base_loadstore': 2, 'gimple_return_retval': 1, 'walk_stmt_load_store_addr_ops': 145, 'gimple_ior_addresses_taken_1': 3, 'gimple_decl_printable_name': 7}, "PosixPath('602/stub-objc.bc')": {}, "PosixPath('602/tree-loop-distribution.bc')": {'rdg_flag_vertex_and_dependent': 66, 'gsi_start': 8, 'first_imm_use_on_stmt': 2, 'next_imm_use_on_stmt': 2, 'VEC_bitmap_base_iterate': 2, 'dump_rdg_partitions': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 19, 'VEC_gimple_base_iterate': 2, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 2, 'VEC_int_heap_safe_push': 5, 'predecessor_has_mem_write': 6, 'has_anti_dependence': 2, 'mark_nodes_having_upstream_mem_writes': 43, 'VEC_rdgc_base_space': 2, 'VEC_rdgc_heap_reserve': 2, 'VEC_rdgc_base_quick_push': 2, 'VEC_rdgc_heap_safe_push': 5, 'rdg_build_components': 18, 'VEC_rdgc_base_iterate': 2, 'gimple_vuse_op': 2, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_lhs': 1, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'next_readonly_imm_use': 2, 'rdg_flag_vertex': 3, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'rdg_has_similar_memory_accesses': 1, 'VEC_int_base_unordered_remove': 4, 'rdg_flag_similar_memory_accesses': 31, 'VEC_edge_base_iterate': 2, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 5, 'collect_condition_stmts': 5, 'VEC_gimple_base_pop': 2, 'rdg_flag_loop_exits': 47, 'build_rdg_partition_for_component': 74, 'VEC_bitmap_base_space': 2, 'VEC_bitmap_heap_reserve': 2, 'VEC_bitmap_base_quick_push': 2, 'VEC_bitmap_heap_safe_push': 5, 'free_rdg_components': 2, 'rdg_build_partitions': 160, 'number_of_rw_in_rdg': 4, 'number_of_rw_in_partition': 11, 'partition_contains_all_rw': 17, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_assign_rhs1': 1, 'gsi_last_bb': 6, 'gimple_assign_rhs_code': 2, 'build_size_arg_loc': 2, 'generate_memset_zero': 40, 'phi_nodes': 2, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'move_use_after_head': 5, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_init_use': 55, 'link_use_stmts_after': 62, 'first_imm_use_stmt': 13, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'next_imm_use_stmt': 10, 'prop_phis': 103, 'generate_builtin': 236, 'gimple_phi_arg_location_from_edge': 2, 'update_phis_for_loop_copy': 16, 'copy_loop_before': 9, 'generate_loops_for_partition': 29, 'generate_code_for_partition': 267, 'ldist_gen': 902, 'distribute_loop': 922, 'tree_loop_distribution': 913}, "PosixPath('602/cse.bc')": {'cse_extended_basic_block': 420, 'cse_insn': 1956, 'make_new_qty': 47, 'dump_class': 2, 'get_cse_reg_info_1': 14, 'get_cse_reg_info': 12, 'hash_rtx_cb': 110, 'exp_equiv_p': 64, 'init_cse_reg_info': 3, 'single_succ_edge': 1, 'cse_find_path': 114, 'cse_prescan_path': 10, 'cse_dump_path': 3, 'new_basic_block': 9, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'bb_has_eh_pred': 4, 'df_scan_get_bb_info': 2, 'df_get_artificial_defs': 2, 'delete_reg_equiv': 74, 'lookup_for_remove': 9, 'remove_from_table': 51, 'remove_pseudo_from_table': 10, 'cse_rtx_varies_p': 462, 'check_dependence': 4, 'invalidate': 164, 'canon_reg': 31, 'cse_process_notes': 93, 'lookup': 4, 'lookup_as_function': 25, 'equiv_constant': 101, 'notreg_cost': 12, 'fold_rtx': 473, 'find_comparison_args': 72, 'make_regs_eqv': 160, 'remove_invalid_refs': 2, 'remove_invalid_subreg_refs': 9, 'rehash_using_reg': 122, 'insert_regs': 685, 'mention_regs': 352, 'approx_reg_cost_1': 5, 'approx_reg_cost': 1, 'add_to_hard_reg_set': 1, 'fixed_base_plus_p': 5, 'insert': 3, 'insert_with_costs': 654, 'merge_equiv_classes': 97, 'use_related_value': 28, 'find_reg_offset_for_const': 15, 'try_const_anchors': 62, 'invalidate_from_clobbers': 10, 'invalidate_memory': 2, 'invalidate_for_call': 60, 'insert_const_anchor': 36, 'have_eh_succ_edges': 4, 'record_jump_cond': 118, 'record_jump_equiv': 65, 'check_for_label_ref': 5, 'cse_main': 613, 'count_reg_usage': 27, 'is_dead_reg': 2, 'set_live_p': 4, 'insn_live_p': 13, 'delete_trivially_dead_insns': 25, 'cse_change_cc_mode': 6, 'cse_change_cc_mode_insn': 2, 'cse_change_cc_mode_insns': 2, 'cse_cc_succs': 232, 'cse_condition_code_reg': 28, 'rest_of_handle_cse2': 33}, "PosixPath('602/tree-outof-ssa.bc')": {'expand_phi_nodes': 356, 'phi_nodes': 2, 'ei_end_p': 1, 'ei_cond': 3, 'clear_elim_graph': 4, 'gsi_stmt': 1, 'var_to_partition': 4, 'gimple_phi_arg_location_from_edge': 2, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 2, 'VEC_int_base_quick_push': 2, 'VEC_int_heap_safe_push': 5, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 5, 'VEC_source_location_base_space': 2, 'VEC_source_location_heap_reserve': 2, 'VEC_source_location_base_quick_push': 2, 'VEC_source_location_heap_safe_push': 5, 'VEC_int_base_iterate': 2, 'elim_graph_add_node': 7, 'eliminate_name': 5, 'elim_graph_add_edge': 18, 'eliminate_build': 116, 'elim_forward': 14, 'VEC_int_base_pop': 2, 'elim_unvisited_predecessor': 8, 'partition_to_var': 3, 'get_temp_reg': 3, 'bb_seq': 2, 'gsi_last_bb': 6, 'single_pred_edge': 1, 'set_location_for_edge': 27, 'emit_partition_copy': 2, 'insert_part_to_rtx_on_edge': 6, 'insert_partition_copy_on_edge': 7, 'elim_backward': 14, 'insert_rtx_to_part_on_edge': 5, 'elim_graph_remove_succ_edge': 8, 'elim_create': 138, 'VEC_tree_base_pop': 2, 'VEC_source_location_base_pop': 2, 'insert_value_copy_on_edge': 18, 'eliminate_phi': 319, 'ei_next': 4, 'set_phi_nodes': 2, 'ei_safe_edge': 3, 'delete_elim_graph': 43, 'finish_out_of_ssa': 2, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'gsi_start_bb': 6, 'maybe_renumber_stmts_bb': 8, 'next_readonly_imm_use': 2, 'trivially_conflicts_p': 22, 'gimple_ops': 1, 'gimple_set_op': 4, 'gimple_assign_set_lhs': 3, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'insert_backedge_copies': 166, 'has_zero_uses': 1, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'remove_gimple_phi_args': 42, 'eliminate_useless_phis': 21, 'remove_ssa_form': 16, 'rewrite_out_of_ssa': 313}, "PosixPath('602/coverage.bc')": {'coverage_counter_alloc': 36, 'coverage_end_function': 48, 'build_ctr_info_value': 19, 'gcov_write_string': 1, 'gcov_write_tag': 2, 'gcov_read_words': 1, 'gcov_read_counter': 2, 'coverage_checksum_string': 3, 'compute_checksum': 3, 'get_coverage_counts': 28, 'tree_coverage_counter_ref': 8, 'tree_coverage_counter_addr': 9, 'coverage_begin_output': 10, 'htab_counts_entry_eq': 4, 'htab_counts_entry_hash': 2, 'read_counts_file': 124, 'coverage_init': 166, 'build_fn_info_value': 1, 'build_gcov_info': 47, 'create_coverage': 76, 'coverage_finish': 78, 'gcov_read_summary': 3}, "PosixPath('602/sort.bc')": {'sort_pointers': 12}, "PosixPath('602/rtlanal.bc')": {'rtx_unstable_p': 3, 'rtx_varies_p': 6, 'rtx_addr_can_trap_p_1': 24, 'nonzero_address_p': 19, 'rtx_addr_varies_p': 3, 'get_integer_term': 6, 'get_related_value': 9, 'offset_within_block_p': 11, 'split_const': 6, 'count_occurrences': 10, 'reg_mentioned_p': 7, 'subreg_get_info': 82, 'subreg_regno_offset': 1, 'subreg_regno': 10, 'subreg_nregs_with_regno': 9, 'subreg_nregs': 11, 'refers_to_regno_p': 16, 'reg_overlap_mentioned_p': 10, 'find_regno_fusage': 8, 'find_reg_fusage': 8, 'reg_used_between_p': 3, 'reg_referenced_p': 16, 'note_stores': 9, 'set_of': 7, 'reg_set_p': 3, 'reg_set_between_p': 2, 'modified_between_p': 4, 'modified_in_p': 4, 'find_reg_note': 9, 'side_effects_p': 1, 'single_set_2': 5, 'multiple_sets': 4, 'set_noop_p': 17, 'noop_move_p': 9, 'find_last_value': 10, 'note_uses': 14, 'find_regno_note': 8, 'covers_regno_no_parallel_p': 4, 'covers_regno_p': 2, 'dead_or_set_regno_p': 6, 'dead_or_set_p': 3, 'find_reg_equal_equiv_note': 6, 'find_constant_src': 2, 'remove_reg_equal_equiv_notes': 4, 'in_expr_list_p': 2, 'remove_node_from_expr_list': 4, 'volatile_insn_p': 1, 'volatile_refs_p': 1, 'may_trap_p_1': 181, 'inequality_comparisons_p': 3, 'replace_rtx': 7, 'for_each_rtx_1': 6, 'for_each_rtx': 1, 'rtx_referenced_p_1': 4, 'replace_label': 14, 'tablejump_p': 4, 'computed_jump_p_1': 6, 'computed_jump_p': 20, 'regno_use_in': 3, 'commutative_operand_precedence': 2, 'auto_inc_p': 2, 'loc_mentioned_in_p': 1, 'subreg_lsb': 4, 'subreg_offset_representable_p': 1, 'simplify_subreg_regno': 12, 'parms_set': 5, 'find_first_parameter_load': 50, 'keep_with_call_p': 15, 'label_is_jump_target_p': 5, 'rtx_cost': 20, 'cached_nonzero_bits': 12, 'nonzero_bits1': 123, 'cached_num_sign_bit_copies': 12, 'num_sign_bit_copies1': 70, 'insn_rtx_cost': 2, 'canonicalize_condition': 38, 'get_condition': 4, 'truncated_to_mode': 2, 'init_num_sign_bit_copies_in_rep': 20, 'init_rtlanal': 18, 'low_bitmask_len': 1}, "PosixPath('602/cpp_line-map.bc')": {'linemap_init': 37, 'linemap_check_files_exited': 7, 'trace_include': 1, 'linemap_add': 134, 'linemap_line_start': 31, 'linemap_position_for_column': 13, 'linemap_lookup': 6}, "PosixPath('602/tree-ssa-live.bc')": {'init_var_map': 17, 'var_map_base_fini': 5, 'delete_var_map': 2, 'var_union': 7, 'has_zero_uses': 1, 'partition_view_init': 32, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'partition_view_fini': 14, 'partition_to_var': 3, 'var_ann': 2, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 5, 'var_map_base_init': 64, 'partition_view_bitmap': 8, 'dump_scope_block': 14, 'mark_scope_block_unused': 2, 'first_htab_element': 7, 'first_referenced_var': 5, 'end_htab_p': 2, 'end_referenced_vars_p': 2, 'next_htab_element': 4, 'next_referenced_var': 1, 'bb_seq': 2, 'gsi_start_bb': 5, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op_ptr': 1, 'get_var_ann': 2, 'set_is_used': 2, 'mark_all_vars_used_1': 5, 'is_global_var': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 18, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'remove_unused_scope_block_p': 69, 'remove_unused_locals': 179, 'delete_tree_live_info': 6, 'var_to_partition': 4, 'live_on_entry': 4, 'calculate_live_on_exit': 84, 'new_tree_live_info': 6, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'next_readonly_imm_use': 2, 'set_var_live_on_entry': 29, 'loe_visit_block': 24, 'live_worklist': 12, 'calculate_live_ranges': 64, 'dump_var_map': 30, 'dump_live_info': 47}, "PosixPath('602/lcm.bc')": {'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'compute_available': 39, 'compute_antinout_edge': 38, 'compute_earliest': 6, 'compute_laterin': 39, 'compute_insert_delete': 15, 'pre_edge_lcm': 52, 'compute_farthest': 6, 'compute_nearerout': 35, 'compute_rev_insert_delete': 14, 'pre_edge_rev_lcm': 50}, "PosixPath('602/tree-loop-linear.bc')": {'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 19, 'VEC_loop_p_base_space': 2, 'VEC_loop_p_heap_reserve': 2, 'VEC_loop_p_base_quick_push': 2, 'VEC_loop_p_heap_safe_push': 5, 'VEC_ddr_p_base_iterate': 2, 'VEC_data_reference_p_base_iterate': 2, 'VEC_loop_p_base_iterate': 2, 'gather_interchange_stats': 38, 'try_interchange_loops': 231, 'VEC_gimple_base_iterate': 2, 'linear_transform_loops': 557}, "PosixPath('602/filename_cmp.bc')": {}, "PosixPath('602/tree-iterator.bc')": {'alloc_stmt_list': 4, 'free_stmt_list': 4, 'tsi_link_before': 13, 'tsi_link_after': 13, 'tsi_delink': 5, 'expr_first': 2, 'expr_last': 2}, "PosixPath('602/hashtab.bc')": {'htab_elements': 2, 'higher_prime_index': 2, 'htab_create_alloc': 23, 'htab_create_alloc_ex': 30, 'htab_set_functions_ex': 16, 'htab_create': 29, 'htab_try_create': 29, 'htab_delete': 18, 'htab_empty': 31, 'htab_mod': 1, 'htab_mod_m2': 1, 'htab_find_with_hash': 42, 'find_empty_slot_for_expand': 8, 'htab_expand': 74, 'htab_find_slot_with_hash': 73, 'htab_remove_elt_with_hash': 2, 'htab_clear_slot': 7, 'htab_traverse_noresize': 4, 'htab_traverse': 13, 'htab_collisions': 2, 'iterative_hash': 142}, "PosixPath('602/getopt.bc')": {}, "PosixPath('602/ifcvt.bc')": {'single_succ_edge': 1, 'noce_get_condition': 6, 'first_active_insn': 9, 'last_active_insn': 6, 'noce_operand_ok': 2, 'noce_mem_write_may_trap_or_fault_p': 5, 'noce_can_store_speculate_p': 3, 'recog_memoized': 3, 'noce_emit_move_insn': 24, 'end_ifcvt_sequence': 8, 'noce_try_move': 39, 'noce_emit_store_flag': 22, 'noce_try_store_flag': 16, 'noce_try_bitop': 22, 'noce_get_alt_condition': 43, 'noce_try_minmax': 52, 'noce_try_abs': 49, 'noce_emit_cmove': 6, 'noce_try_cmove': 12, 'noce_try_store_flag_constants': 14, 'noce_try_addcc': 15, 'noce_try_store_flag_mask': 16, 'noce_try_cmove_arith': 54, 'noce_try_sign_mask': 14, 'noce_process_if_block': 69, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 2, 'VEC_int_base_quick_push': 2, 'VEC_int_heap_safe_push': 5, 'check_cond_move_block': 15, 'VEC_int_base_iterate': 2, 'cond_move_convert_if_block': 10, 'cond_move_process_if_block': 90, 'noce_find_if_block': 192, 'single_pred_edge': 1, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'block_jumps_and_fallthru_p': 17, 'cond_exec_get_condition': 8, 'count_bb_insns': 4, 'block_fallthru': 6, 'cond_exec_process_insns': 7, 'merge_if_block': 54, 'cond_exec_process_if_block': 90, 'cond_exec_find_if_block': 210, 'block_has_only_trap': 11, 'find_cond_trap': 14, 'cheap_bb_rtx_cost_p': 7, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'dead_or_predicable': 98, 'find_if_case_1': 19, 'find_if_case_2': 19, 'find_if_header': 57, 'if_convert': 2526}, "PosixPath('602/make-temp-file.bc')": {'choose_tmpdir': 1, 'make_temp_file': 1}, "PosixPath('602/reorg.bc')": {}, "PosixPath('602/cgraph.bc')": {'cgraph_node': 10, 'cgraph_make_decl_local': 24, 'cgraph_add_edge_removal_hook': 6, 'cgraph_add_node_removal_hook': 6, 'cgraph_add_function_insertion_hook': 6, 'cgraph_call_function_insertion_hooks': 2, 'cgraph_add_edge_duplication_hook': 6, 'cgraph_add_node_duplication_hook': 6, 'cgraph_allocate_node': 2, 'cgraph_create_node': 46, 'cgraph_same_body_alias_1': 40, 'cgraph_get_node': 4, 'cgraph_call_node_removal_hooks': 2, 'cgraph_call_edge_removal_hooks': 2, 'cgraph_edge_remove_caller': 31, 'cgraph_free_edge': 8, 'cgraph_node_remove_callers': 75, 'cgraph_edge_remove_callee': 9, 'cgraph_node_remove_callees': 52, 'cgraph_remove_same_body_alias': 34, 'cgraph_release_function_body': 13, 'cgraph_remove_node': 409, 'cgraph_add_thunk': 18, 'cgraph_node_for_asm': 10, 'cgraph_edge': 10, 'cgraph_set_call_stmt': 12, 'cgraph_set_call_stmt_including_clones': 5, 'initialize_inline_failed': 4, 'cgraph_create_edge': 80, 'cgraph_create_edge_including_clones': 5, 'cgraph_remove_edge': 81, 'cgraph_redirect_edge_callee': 8, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'cgraph_update_edges_for_call_stmt_node': 12, 'cgraph_update_edges_for_call_stmt': 5, 'cgraph_remove_node_and_inline_clones': 4, 'cgraph_mark_reachable_node': 7, 'cgraph_mark_needed_node': 2, 'cgraph_global_info': 1, 'cgraph_function_body_availability': 6, 'dump_cgraph_node': 134, 'change_decl_assembler_name': 3, 'cgraph_add_asm_node': 8, 'cgraph_call_edge_duplication_hooks': 2, 'cgraph_clone_edge': 23, 'VEC_cgraph_edge_p_base_iterate': 2, 'cgraph_call_node_duplication_hooks': 2, 'cgraph_clone_node': 88, 'clone_function_name': 12, 'cgraph_create_virtual_clone': 69, 'cgraph_unnest_node': 2, 'cgraph_add_new_function': 19, 'cgraph_node_can_be_local_p': 7, 'cgraph_make_node_local': 11, 'cgraph_set_nothrow_flag': 1, 'cgraph_set_readonly_flag': 1, 'cgraph_set_pure_flag': 1, 'cgraph_set_looping_const_or_pure_flag': 1}, "PosixPath('602/c-cppbuiltin.bc')": {'c_cpp_builtins_optimize_pragma': 11, 'define__GNUC__': 3, 'type_suffix': 6, 'builtin_define_type_minmax': 3, 'builtin_define_with_hex_fp_value': 2, 'builtin_define_float_constants': 140, 'builtin_define_decimal_float_constants': 18, 'builtin_define_fixed_point_constants': 43, 'builtin_define_std': 17, 'c_cpp_builtins': 6}, "PosixPath('602/modulo-sched.bc')": {'sbitmap_iter_init': 16, 'ps_insn_find_column': 9, 'print_partial_schedule': 3, 'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 19, 'loop_single_full_bb_p': 25, 'loop_canon_p': 9, 'calculate_order_params': 44, 'sbitmap_iter_cond': 39, 'sbitmap_iter_next': 3, 'find_max_asap': 3, 'find_max_hv_min_mob': 9, 'find_max_dv_min_mob': 6, 'order_nodes_in_scc': 31, 'order_nodes_of_sccs': 3, 'check_nodes_order': 5, 'sms_order_nodes': 52, 'res_MII': 4, 'set_node_sched_params': 7, 'create_partial_schedule': 16, 'get_sched_window': 133, 'calculate_must_precede_follow': 35, 'verify_partial_schedule': 22, 'create_ps_insn': 8, 'add_node_to_ps': 21, 'ps_has_conflicts': 11, 'ps_insn_advance_column': 12, 'remove_node_from_ps': 7, 'ps_add_node_check_conflicts': 43, 'try_scheduling_node_in_cycle': 42, 'free_ps_insns': 3, 'reset_partial_schedule': 7, 'compute_split_row': 31, 'normalize_sched_times': 28, 'rotate_partial_schedule': 12, 'ps_insert_empty_row': 24, 'sms_schedule_by_order': 197, 'set_columns_for_ps': 4, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'canon_loop': 14, 'permute_partial_schedule': 8, 'generate_reg_moves': 64, 'print_node_sched_params': 2, 'duplicate_insns_of_cycles': 24, 'generate_prolog_epilog': 6, 'sms_schedule': 673, 'rest_of_handle_sms': 8}, "PosixPath('602/tree-vect-data-refs.bc')": {'vect_analyze_data_refs': 132, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_fn': 1, 'gimple_call_return_type': 2, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_expr_type': 4, 'gimple_assign_cast_p': 2, 'vect_get_smallest_scalar_type': 18, 'vect_get_place_in_interleaving_chain': 9, 'VEC_ddr_p_base_iterate': 2, 'vect_equal_offsets': 5, 'vect_insert_into_interleaving_chain': 18, 'vect_update_interleaving_chain': 103, 'vect_check_interleaving': 15, 'VEC_ddr_p_base_space': 2, 'VEC_ddr_p_heap_reserve': 2, 'VEC_ddr_p_base_quick_push': 2, 'VEC_ddr_p_heap_safe_push': 5, 'vect_mark_for_runtime_alias_test': 4, 'VEC_loop_p_base_iterate': 2, 'VEC_lambda_vector_base_iterate': 2, 'VEC_dr_p_base_space': 2, 'VEC_dr_p_heap_reserve': 2, 'VEC_dr_p_base_quick_push': 2, 'VEC_dr_p_heap_safe_push': 5, 'vect_analyze_data_ref_dependence': 90, 'vect_analyze_data_ref_dependences': 136, 'VEC_data_reference_p_base_iterate': 2, 'vect_supportable_dr_alignment': 40, 'vect_verify_datarefs_alignment': 6, 'vector_alignment_reachable_p': 25, 'VEC_dr_p_base_iterate': 2, 'vect_update_misalignment_for_peel': 34, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 5, 'VEC_gimple_base_iterate': 2, 'vect_enhance_data_refs_alignment': 96, 'vect_can_force_dr_alignment_p': 2, 'vect_compute_data_ref_alignment': 37, 'vect_compute_data_refs_alignment': 40, 'vect_analyze_data_refs_alignment': 39, 'vect_analyze_group_access': 82, 'vect_analyze_data_ref_access': 76, 'vect_analyze_data_ref_accesses': 104, 'vect_same_range_drs': 16, 'VEC_ddr_p_base_ordered_remove': 3, 'vect_prune_runtime_alias_test_list': 10, 'vect_create_addr_base_for_vector_ref': 22, 'gimple_assign_lhs': 1, 'gimple_set_op': 4, 'gimple_assign_set_lhs': 3, 'gsi_stmt': 1, 'VEC_vec_void_p_base_space': 2, 'VEC_vec_void_p_heap_reserve': 2, 'VEC_vec_void_p_base_quick_push': 2, 'VEC_vec_void_p_heap_safe_push': 4, 'set_vinfo_for_stmt': 4, 'vect_create_data_ref_ptr': 72, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 12, 'op_iter_next_use': 7, 'op_iter_init_use': 43, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'bump_vector_ptr': 42, 'vect_create_destination_var': 2, 'vect_strided_store_supported': 2, 'VEC_tree_heap_copy': 2, 'vect_permute_store_chain': 11, 'gimple_call_set_lhs': 3, 'gimple_call_lhs': 1, 'vect_setup_realignment': 142, 'vect_strided_load_supported': 2, 'vect_permute_load_chain': 12, 'VEC_tree_base_iterate': 2, 'vect_transform_strided_load': 79}, "PosixPath('602/lto-symtab.bc')": {'lto_symtab_register_decl': 21, 'lto_symtab_get': 1, 'lto_symtab_get_resolution': 5, 'lto_symtab_resolve_can_prevail_p': 6, 'lto_symtab_resolve_replaceable_p': 10, 'lto_symtab_resolve_symbols': 48, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 4, 'lto_symtab_merge': 8, 'VEC_tree_heap_reserve': 2, 'VEC_tree_heap_safe_push': 5, 'VEC_tree_base_iterate': 2, 'lto_symtab_merge_decls_2': 29, 'lto_symtab_merge_decls_1': 133, 'lto_cgraph_replace_node': 14, 'lto_symtab_merge_cgraph_nodes_1': 35, 'lto_symtab_prevailing_decl': 4, 'gt_ggc_mx_lto_symtab_entry_def': 7, 'gt_ggc_m_P20lto_symtab_entry_def4htab': 5, 'gt_pch_nx_lto_symtab_entry_def': 7, 'gt_pch_p_P20lto_symtab_entry_def4htab': 5, 'gt_pch_n_P20lto_symtab_entry_def4htab': 5}, "PosixPath('602/tree-ssa-loop-niter.bc')": {'tree_operand_length': 3, 'single_pred_edge': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'expand_simple_operations': 11, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'loop_only_exit_p': 10, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'split_to_var_and_offset': 4, 'refine_bounds_using_guard': 56, 'bound_difference': 183, 'number_of_iterations_ne_max': 6, 'number_of_iterations_ne': 28, 'number_of_iterations_lt_to_ne': 10, 'assert_no_overflow_lt': 4, 'assert_loop_rolls_lt': 9, 'number_of_iterations_lt': 79, 'number_of_iterations_cond': 221, 'simplify_using_outer_evolutions': 3, 'simplify_replace_tree': 3, 'tree_simplify_using_condition_1': 14, 'simplify_using_initial_conditions': 9, 'number_of_iterations_exit': 273, 'VEC_edge_base_iterate': 2, 'find_loop_niter': 12, 'finite_loop_p': 21, 'gimple_vuse': 2, 'gimple_references_memory_p': 2, 'gimple_use_ops': 2, 'op_iter_init': 12, 'op_iter_next_tree': 6, 'op_iter_init_tree': 47, 'single_ssa_tree_operand': 8, 'chain_of_csts_start': 6, 'get_base_for': 3, 'gimple_assign_rhs_class': 3, 'gimple_call_fn': 1, 'gimple_call_return_type': 2, 'gimple_expr_type': 4, 'get_val_for': 45, 'loop_niter_by_eval': 120, 'find_loop_niter_by_eval': 1, 'array_at_struct_end_p': 6, 'record_niter_bound': 31, 'record_estimate': 12, 'gimple_assign_lhs': 1, 'derive_constant_upper_bound': 6, 'derive_constant_upper_bound_ops': 4, 'derive_constant_upper_bound_assign': 7, 'idx_infer_loop_bounds': 2, 'infer_loop_bounds_from_ref': 6, 'gimple_call_lhs': 1, 'gimple_call_arg': 1, 'infer_loop_bounds_from_array': 117, 'infer_loop_bounds_from_signedness': 8, 'infer_loop_bounds_from_undefined': 421, 'estimate_numbers_of_iterations_loop': 502, 'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 19, 'estimate_numbers_of_iterations': 17, 'stmt_dominates_stmt_p': 13, 'n_of_executions_at_most': 3, 'scev_probably_wraps_p': 3, 'free_numbers_of_iterations_estimates_loop': 6, 'free_numbers_of_iterations_estimates': 51}, "PosixPath('602/tree-ssa-loop.bc')": {'tree_complete_unroll': 6}, "PosixPath('602/reg-stack.bc')": {'VEC_char_base_space': 2, 'VEC_char_heap_reserve_exact': 2, 'VEC_char_heap_safe_grow': 2, 'VEC_char_heap_safe_grow_cleared': 2, 'stack_regs_mentioned_p': 3, 'stack_regs_mentioned': 7, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'df_lr_get_bb_info': 2, 'convert_regs_entry': 7, 'stack_result': 7, 'convert_regs_exit': 16, 'better_edge': 27, 'propagate_stack': 16, 'get_hard_regnum': 3, 'emit_pop_insn': 8, 'get_true_reg': 15, 'emit_swap_insn': 78, 'change_stack': 193, 'straighten_stack': 8, 'get_asm_operands_in_out': 2, 'check_asm_stack_operands': 185, 'replace_reg': 5, 'subst_asm_stack_regs': 525, 'move_nan_for_stack_reg': 5, 'move_for_stack_reg': 26, 'next_flags_user': 8, 'swap_rtx_condition_1': 4, 'recog_memoized': 3, 'swap_rtx_condition': 30, 'pop_stack': 5, 'remove_regno_note': 8, 'compare_for_stack_reg': 19, 'swap_to_top': 8, 'subst_stack_regs_pat': 207, 'subst_stack_regs': 27, 'subst_stack_regs_in_debug_insn': 2, 'convert_regs_1': 251, 'convert_regs_2': 311, 'compensate_edge': 26, 'compensate_edges': 57, 'convert_regs': 156, 'reg_to_stack': 230, 'rest_of_handle_stack_regs': 225}, "PosixPath('602/loop-init.bc')": {'loop_optimizer_finalize': 34, 'loop_optimizer_init': 4, 'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 19, 'rtl_unroll_and_peel_loops': 8}, "PosixPath('602/dse.bc')": {'dse_step2_init': 23, 'dse_step7': 36, 'record_store': 871, 'check_mem_read_rtx': 306, 'sbitmap_iter_init': 16, 'dse_record_singleton_alias_set': 6, 'VEC_group_info_t_base_space': 2, 'VEC_group_info_t_heap_reserve': 2, 'VEC_group_info_t_base_quick_push': 2, 'VEC_group_info_t_heap_safe_push': 4, 'get_group_info': 67, 'invariant_group_base_hash': 1, 'df_lr_get_bb_info': 2, 'add_wild_read': 6, 'dump_insn_info': 2, 'get_call_args': 26, 'clear_rhs_from_active_local_stores': 2, 'clear_alias_set_lookup': 2, 'canon_address': 34, 'set_usage_bits': 17, 'set_all_positions_unneeded': 7, 'all_positions_needed_p': 3, 'find_shift_sequence': 10, 'get_stored_val': 18, 'set_position_unneeded': 4, 'any_positions_needed_p': 8, 'replace_inc_dec': 4, 'replace_inc_dec_mem': 4, 'check_for_inc_dec': 1, 'free_store_info': 20, 'delete_dead_store_insn': 9, 'look_for_hardregs': 2, 'replace_read': 14, 'scan_insn': 226, 'single_succ_edge': 1, 'remove_useless_values': 15, 'dse_step1': 383, 'VEC_group_info_t_base_iterate': 2, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'dse_step2_nospill': 92, 'dse_step3_exit_block_scan': 10, 'find_insn_before_first_wild_read': 6, 'get_bitmap_index': 3, 'scan_stores_spill': 13, 'scan_reads_spill': 14, 'scan_stores_nospill': 27, 'scan_reads_nospill': 60, 'dse_step3_scan': 18, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'mark_reachable_blocks': 8, 'sbitmap_iter_cond': 39, 'sbitmap_iter_next': 3, 'dse_step3': 78, 'dse_transfer_function': 15, 'dse_confluence_n': 2, 'dse_confluence_0': 2, 'dse_step4': 9, 'dse_step5_nospill': 147, 'dse_step2_spill': 30, 'dse_step5_spill': 99, 'dse_step6': 35, 'rest_of_handle_dse': 984}, "PosixPath('602/rtlhooks.bc')": {'gen_lowpart_general': 4}, "PosixPath('602/cpp_traditional.bc')": {'check_output_buffer': 5, '_cpp_copy_replacement_text': 26, '_cpp_create_trad_definition': 20, '_cpp_overlay_buffer': 17, '_cpp_remove_overlay': 14, 'skip_macro_block_comment': 6, 'copy_comment': 43, 'lex_identifier': 3, 'maybe_start_funlike': 11, 'recursive_macro': 6, 'push_replacement_text': 7, 'save_replacement_text': 25, 'save_argument': 4, 'replace_args_and_push': 20, '_cpp_scan_out_logical_line': 265, '_cpp_read_logical_line_trad': 3, '_cpp_replacement_text_len': 13, 'scan_parameters': 4, '_cpp_expansions_different_trad': 49}, "PosixPath('602/tree-mudflap.bc')": {'gsi_start': 8, 'mf_build_check_statement_for': 155, 'mf_make_mf_cache_struct_type': 2, 'mf_make_builtin': 3, 'mudflap_init': 29, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 4, 'mudflap_enqueue_decl': 7, 'mf_build_string': 3, 'mudflap_enqueue_constant': 3, 'VEC_tree_base_iterate': 2, 'mf_varname_tree': 13, 'mudflap_finish_file': 16, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'insert_edge_copies_seq': 12, 'mf_decl_cache_locals': 14, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op_ptr': 1, 'gimple_assign_lhs_ptr': 1, 'mf_decl_eligible_p': 6, 'gsi_last_bb': 6, 'mf_file_function_line_tree': 17, 'mf_xform_derefs_1': 206, 'gimple_assign_rhs1_ptr': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_return_retval': 1, 'gimple_return_retval_ptr': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'mf_xform_statements': 217, 'execute_mudflap_function_ops': 273, 'mx_register_decls': 50, 'mx_xfn_xform_decls': 10, 'mf_xform_decls': 7, 'execute_mudflap_function_decls': 17}, "PosixPath('602/sched-vis.bc')": {'print_exp': 2064, 'safe_concat': 2, 'print_value': 227, 'print_pattern': 87, 'print_insn': 56, 'dump_insn_slim': 4, 'print_rtl_slim': 2, 'debug_bb_slim': 2, 'debug_bb_n_slim': 4}, "PosixPath('602/params.bc')": {'add_params': 1, 'set_param_value': 5}, "PosixPath('602/host-linux.bc')": {}, "PosixPath('602/gimplify.bc')": {'create_tmp_var_raw': 6, 'gsi_start': 8, 'gsi_last': 8, 'gimplify_cond_expr': 2, 'gimplify_switch_expr': 1, 'gimplify_asm_expr': 187, 'gimplify_cleanup_point_expr': 2, 'gimplify_statement_list': 1, 'gimplify_omp_atomic': 3, 'force_gimple_operand': 66, 'mark_addressable': 2, 'push_gimplify_context': 3, 'declare_vars': 5, 'pop_gimplify_context': 13, 'VEC_gimple_base_last': 2, 'gimple_current_bind_expr': 2, 'append_to_statement_list_1': 4, 'gimplify_seq_add_seq': 7, 'is_global_var': 2, 'omp_notice_variable': 29, 'omp_add_variable': 7, 'omp_firstprivatize_type_sizes': 10, 'omp_firstprivatize_variable': 2, 'gimplify_var_or_parm_decl': 56, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 5, 'VEC_tree_base_pop': 2, 'canonicalize_component_ref': 15, 'tree_operand_length': 3, 'generic_expr_could_trap_p': 3, 'gimple_boolify': 33, 'create_tmp_var_name': 13, 'force_constant_size': 3, 'gimple_add_tmp_var': 32, 'create_tmp_var': 2, 'build_and_jump': 1, 'shortcut_cond_r': 63, 'shortcut_cond_expr': 187, 'gimple_pop_condition': 3, 'gimplify_seq_add_stmt': 7, 'gimple_tree_eq': 4, 'lookup_tmp_var': 10, 'maybe_with_size_expr': 5, 'VEC_constructor_elt_gc_copy': 2, 'optimize_compound_literals_in_ctor': 6, 'gimplify_init_ctor_preeval_1': 10, 'zero_sized_field_decl': 2, 'force_labels_r': 1, 'gimple_fold_indirect_ref': 36, 'voidify_wrapper_expr': 40, 'zero_sized_type': 2, 'gimple_ops': 1, 'gimple_set_op': 4, 'gimple_call_set_lhs': 3, 'canonicalize_addr_expr': 6, 'gimplify_conversion': 28, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 5, 'gimple_push_bind_expr': 8, 'build_stack_save_restore': 3, 'VEC_gimple_base_pop': 2, 'VEC_tree_base_ordered_remove': 3, 'gimplify_exit_expr': 1, 'gimplify_case_label_expr': 6, 'VEC_tree_gc_reserve': 2, 'VEC_tree_gc_safe_push': 5, 'gimple_try_set_catch_is_cleanup': 1, 'gsi_stmt': 1, 'gsi_one_before_end_p': 1, 'new_omp_context': 9, 'omp_check_private': 4, 'gimplify_adjust_omp_clauses_1': 14, 'gimplify_adjust_omp_clauses': 15, 'omp_is_private': 5, 'gimple_omp_for_set_index': 2, 'gimple_omp_for_set_initial': 2, 'gimple_omp_for_set_cond': 2, 'gimple_omp_for_set_final': 2, 'gimple_omp_for_set_incr': 2, 'goa_lhs_expr_p': 10, 'gimplify_scalar_mode_aggregate_compare': 12, 'gimplify_variable_sized_compare': 11, 'annotate_one_with_location': 2, 'annotate_all_with_location_after': 32, 'annotate_all_with_location': 6, 'gimplify_stmt': 1, 'gimplify_expr': 1527, 'goa_stabilize_expr': 10, 'gimplify_and_return_first': 2, 'gimplify_scan_omp_clauses': 126, 'gimple_push_cleanup': 23, 'gimplify_vla_decl': 10, 'gimplify_type_sizes': 31, 'gimplify_one_sizepos': 12, 'gimplify_modify_expr_complex_part': 4, 'gimplify_modify_expr_to_memcpy': 42, 'prepare_gimple_addressable': 2, 'gimplify_modify_expr_to_memset': 19, 'gimplify_modify_expr_rhs': 92, 'gimplify_init_constructor': 129, 'gimplify_init_ctor_eval': 54, 'gimplify_init_ctor_preeval': 6, 'internal_get_tmp_var': 49, 'gimplify_pure_cond_expr': 4, 'gimplify_body': 50, 'gimplify_function_tree': 37, 'gimple_op_ptr': 1, 'gimple_cond_lhs_ptr': 1, 'gimple_cond_rhs_ptr': 1, 'gimple_switch_index_ptr': 1, 'gimple_op': 1, 'gimple_asm_output_op': 5, 'gimple_asm_input_op': 3, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1_ptr': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_regimplify_operands': 221, 'force_gimple_operand_gsi': 6}, "PosixPath('602/postreload-gcse.bc')": {'alloc_mem': 11, 'reset_opr_set_tables': 3, 'record_last_reg_set_info': 8, 'record_last_reg_set_info_regno': 2, 'record_last_mem_set_info': 2, 'record_last_set_info': 10, 'record_opr_changes': 70, 'reg_changed_after_insn_p': 4, 'find_mem_conflicts': 2, 'load_killed_in_block_p': 21, 'oprs_unchanged_p': 15, 'insert_expr_in_table': 28, 'hash_scan_set': 7, 'compute_hash_table': 111, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'bb_has_well_behaved_predecessors': 14, 'lookup_expr_in_table': 14, 'get_bb_avail_insn': 2, 'get_avail_load_store_reg': 4, 'reg_killed_on_edge': 2, 'reg_used_on_edge': 3, 'eliminate_partially_redundant_load': 116, 'eliminate_partially_redundant_loads': 197, 'delete_redundant_insns_1': 4, 'gcse_after_reload_main': 343, 'rest_of_handle_gcse2': 346}, "PosixPath('602/crc32.bc')": {'xcrc32': 4}, "PosixPath('602/gimple-low.bc')": {'lower_function_body': 183, 'try_catch_may_fallthru': 1, 'gsi_start': 8, 'gsi_last': 8, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_call_arg': 1, 'gimple_check_call_args': 38, 'block_may_fallthru': 10, 'gsi_stmt': 1, 'gimple_stmt_may_fallthru': 16, 'record_vars_into': 10, 'gimple_return_retval': 1, 'VEC_return_statements_t_base_space': 2, 'VEC_return_statements_t_heap_reserve': 2, 'VEC_return_statements_t_base_quick_push': 3, 'VEC_return_statements_t_heap_safe_push': 6, 'lower_gimple_return': 19, 'gimple_call_lhs': 1, 'lower_builtin_setjmp': 12, 'lower_gimple_bind': 11, 'lower_sequence': 168, 'gimple_set_op': 4, 'gimple_call_set_lhs': 3}, "PosixPath('602/sbitmap.bc')": {'sbitmap_iter_init': 16, 'sbitmap_alloc': 4, 'sbitmap_alloc_with_popcount': 5, 'sbitmap_resize': 19, 'sbitmap_realloc': 2, 'sbitmap_vector_alloc': 4, 'sbitmap_copy': 6, 'sbitmap_copy_n': 4, 'sbitmap_range_empty_p': 2, 'sbitmap_zero': 4, 'sbitmap_ones': 13, 'sbitmap_vector_zero': 3, 'sbitmap_union_of_diff_cg': 24, 'sbitmap_union_of_diff': 22, 'sbitmap_not': 9, 'sbitmap_difference': 19, 'sbitmap_any_common_bits': 12, 'sbitmap_a_and_b_cg': 16, 'sbitmap_a_and_b': 12, 'sbitmap_a_xor_b_cg': 16, 'sbitmap_a_xor_b': 12, 'sbitmap_a_or_b_cg': 16, 'sbitmap_a_or_b': 12, 'sbitmap_a_subset_b_p': 10, 'sbitmap_a_or_b_and_c_cg': 24, 'sbitmap_a_or_b_and_c': 16, 'sbitmap_a_and_b_or_c_cg': 24, 'sbitmap_a_and_b_or_c': 14, 'sbitmap_intersection_of_succs': 33, 'sbitmap_intersection_of_preds': 30, 'sbitmap_union_of_succs': 36, 'sbitmap_union_of_preds': 33, 'sbitmap_iter_cond': 39, 'sbitmap_first_set_bit': 2, 'dump_sbitmap': 2, 'dump_sbitmap_file': 3, 'sbitmap_popcount': 8}, "PosixPath('602/regmove.bc')": {'optimize_reg_copy_3': 14, 'optimize_reg_copy_1': 39, 'optimize_reg_copy_2': 30, 'regmove_forward_pass': 168, 'find_matches': 45, 'fixup_match_2': 24, 'reg_is_remote_constant_p': 74, 'copy_src_to_dest': 11, 'regmove_backward_pass': 439, 'regmove_optimize': 1036}, "PosixPath('602/insn-attrtab.bc')": {'recog_memoized': 3, 'insn_current_length': 15, 'insn_variable_length_p': 3, 'get_attr_type': 3, 'get_attr_unit': 3, 'get_attr_prefix_0f': 3, 'get_attr_prefix_extra': 3, 'get_attr_prefix_vex_w': 2, 'get_attr_length_vex': 3, 'get_attr_length_immediate': 3, 'get_attr_mode': 3, 'get_attr_modrm': 3, 'get_attr_length_address': 3, 'get_attr_prefix_rex': 3, 'get_attr_prefix_rep': 3, 'get_attr_prefix_data16': 3, 'insn_min_length': 3, 'insn_default_length': 3, 'get_attr_memory': 3, 'get_attr_use_carry': 3, 'bypass_p': 4, 'get_attr_imm_disp': 3, 'get_attr_pent_prefix': 3, 'get_attr_pent_pair': 3, 'get_attr_athlon_decode': 4, 'get_attr_amdfam10_decode': 3, 'get_attr_atom_unit': 3, 'get_attr_atom_sse_attr': 3, 'get_attr_movu': 3, 'insn_default_latency': 4, 'internal_dfa_insn_code': 4, 'get_attr_fp_int_src': 3, 'get_attr_i387_cw': 3, 'get_attr_prefix': 3}, "PosixPath('602/splay-tree.bc')": {'splay_tree_insert': 21, 'splay_tree_new_with_allocator': 22, 'splay_tree_new': 22, 'splay_tree_delete_helper': 17, 'splay_tree_delete': 24, 'splay_tree_splay': 33, 'splay_tree_remove': 14, 'splay_tree_lookup': 2, 'splay_tree_predecessor': 2, 'splay_tree_successor': 2}, "PosixPath('602/ipa-reference.bc')": {'get_reference_vars_info': 2, 'get_global_reference_vars_info': 2, 'ipa_reference_get_read_global': 2, 'ipa_reference_get_written_global': 2, 'ipa_reference_get_not_read_global': 2, 'ipa_reference_get_not_written_global': 2, 'get_local_reference_vars_info': 2, 'VEC_ipa_reference_vars_info_t_base_space': 2, 'VEC_ipa_reference_vars_info_t_heap_reserve_exact': 2, 'VEC_ipa_reference_vars_info_t_heap_safe_grow': 2, 'VEC_ipa_reference_vars_info_t_heap_safe_grow_cleared': 2, 'set_reference_vars_info': 6, 'init_function_info': 4, 'duplicate_node_data': 24, 'clean_function_local_data': 8, 'clean_function': 19, 'remove_node_data': 2, 'gsi_stmt': 1, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'add_static_var': 3, 'has_proper_scope_for_analysis': 10, 'mark_address_taken': 12, 'bb_seq': 2, 'gsi_start_bb': 6, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'check_call': 5, 'gimple_asm_clobber_op': 8, 'check_asm_memory_clobber': 18, 'mark_address': 2, 'mark_store': 12, 'mark_load': 12, 'scan_stmt_for_static_refs': 27, 'analyze_function': 96, 'lto_file_decl_data_get_var_decl': 2, 'ipa_reference_read_summary': 29, 'write_node_summary_p': 4, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'ipa_reference_write_summary': 41, 'varpool_first_static_initializer': 2, 'analyze_variable': 4, 'varpool_next_static_initializer': 1, 'generate_summary': 130, 'propagate_bits': 16, 'propagate': 191, 'gate_reference': 2}, "PosixPath('602/tree-ssa-loop-manip.bc')": {'tree_transform_and_unroll_loop': 133, 'create_iv': 15, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'get_loops_exits': 14, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'gsi_stmt': 1, 'loop_outer': 2, 'find_uses_to_rename_use': 5, 'bb_seq': 2, 'gsi_start_bb': 6, 'gimple_use_ops': 2, 'op_iter_init': 7, 'op_iter_next_tree': 6, 'op_iter_init_tree': 30, 'find_uses_to_rename_stmt': 10, 'find_uses_to_rename_bb': 31, 'find_uses_to_rename': 14, 'bmp_iter_and_init': 19, 'bmp_iter_and': 44, 'add_exit_phis_edge': 5, 'add_exit_phis_var': 37, 'add_exit_phis': 47, 'rewrite_into_loop_closed_ssa': 77, 'check_loop_closed_ssa_stmt': 8, 'verify_loop_closed_ssa': 41, 'single_succ_edge': 1, 'gimple_phi_arg_location_from_edge': 2, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'split_loop_exit_edge': 21, 'single_pred_edge': 1, 'ip_normal_pos': 7, 'gsi_last_bb': 6, 'standard_iv_increment_position': 11, 'copy_phi_node_args': 12, 'gimple_duplicate_loop_to_header_edge': 7, 'can_unroll_loop_p': 2, 'determine_exit_conditions': 9, 'VEC_edge_base_iterate': 2, 'gimple_ops': 1, 'gimple_set_op': 4, 'gimple_cond_set_lhs': 3, 'gimple_cond_set_rhs': 3, 'gsi_after_labels': 41, 'rewrite_phi_with_iv': 6, 'rewrite_all_phi_nodes_with_iv': 75, 'canonicalize_loop_ivs': 164}, "PosixPath('602/cfgcleanup.bc')": {'try_crossjump_to_edge': 446, 'VEC_basic_block_base_pop': 2, 'delete_unreachable_blocks': 27, 'delete_dead_jumptables': 47, 'update_forwarder_flag': 2, 'trivially_empty_bb_p': 4, 'single_succ_edge': 1, 'single_pred_edge': 1, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'merge_blocks_move_successor_nojumps': 25, 'merge_blocks_move_predecessor_nojumps': 4, 'merge_blocks_move': 39, 'try_simplify_condjump': 33, 'ei_safe_edge': 3, 'mark_effect': 10, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'mentions_nonequal_regs': 2, 'thread_jump': 236, 'try_forward_edges': 565, 'old_insns_match_p': 38, 'outgoing_edges_match': 207, 'merge_memattrs': 30, 'flow_find_cross_jump': 8, 'try_crossjump_bb': 56, 'try_optimize_cfg': 850, 'cleanup_cfg': 888}, "PosixPath('602/stringpool.bc')": {'init_stringpool': 4, 'gt_pch_save_stringpool': 10, 'ggc_alloc_string': 1, 'gt_pch_restore_stringpool': 4, 'gt_ggc_mx_string_pool_data': 4, 'gt_pch_p_16string_pool_data': 9, 'gt_pch_nx_string_pool_data': 4}, "PosixPath('602/cpp_lex.bc')": {'_cpp_clean_line': 52, 'cpp_ideq': 2, 'add_line_note': 15, 'warn_in_comment': 8, '_cpp_process_line_notes': 65, '_cpp_skip_block_comment': 38, 'lex_identifier_intern': 12, '_cpp_lex_identifier': 12, '_cpp_init_tokenrun': 4, 'next_tokenrun': 8, '_cpp_get_fresh_line': 26, 'skip_whitespace': 13, 'forms_identifier_p': 12, 'new_buff': 7, '_cpp_get_buff': 19, '_cpp_unaligned_alloc': 4, 'lex_number': 10, 'cpp_token_len': 6, 'utf8_to_ucn': 4, 'cpp_spell_token': 32, 'warn_about_normalization': 8, 'create_literal': 4, '_cpp_append_extend_buff': 5, 'bufring_append': 6, 'lex_raw_string': 252, 'lex_string': 247, 'lex_identifier': 14, 'skip_line_comment': 3, 'store_comment': 10, 'save_comment': 20, '_cpp_lex_direct': 350, '_cpp_lex_token': 128, 'cpp_peek_token': 11, '_cpp_temp_token': 11, 'cpp_token_as_text': 6, 'cpp_output_token': 31, '_cpp_equiv_tokens': 40, 'name_p': 3, 'cpp_avoid_paste': 24, 'cpp_output_line': 2, 'cpp_output_line_to_string': 4, '_cpp_extend_buff': 3, '_cpp_free_buff': 2, '_cpp_aligned_alloc': 4, 'cpp_token_val_index': 1}, "PosixPath('602/tree-ssa-loop-ivopts.bc')": {'constant_multiple_of': 95, 'get_computation_aff': 92, 'rewrite_use_nonlinear_expr': 84, 'dump_iv': 2, 'dump_uses': 2, 'dump_cand': 9, 'idx_contains_abnormal_ssa_name_p': 4, 'tree_operand_length': 3, 'expr_invariant_in_loop_p': 4, 'gimple_ops': 1, 'gimple_op': 1, 'stmt_invariant_in_loop_p': 5, 'tree_int_cst_sign_bit': 2, 'seq_cost': 3, 'mbc_entry_eq': 4, 'mbc_entry_hash': 2, 'multiply_by_cost': 8, 'VEC_sbitmap_base_space': 2, 'VEC_sbitmap_heap_reserve_exact': 2, 'VEC_sbitmap_heap_safe_grow': 2, 'VEC_sbitmap_heap_safe_grow_cleared': 2, 'multiplier_allowed_in_address_p': 5, 'tree_ssa_iv_optimize_init': 4, 'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 40, 'gsi_stmt': 1, 'determine_biv_step': 3, 'determine_base_object': 4, 'alloc_iv': 26, 'set_iv': 3, 'find_bivs': 10, 'bb_seq': 2, 'gsi_start_bb': 6, 'gimple_assign_lhs': 1, 'find_givs_in_stmt_scev': 2, 'find_givs_in_stmt': 21, 'find_givs_in_bb': 27, 'find_givs': 29, 'get_iv': 8, 'mark_bivs': 5, 'niter_for_exit': 5, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'find_induction_variables': 92, 'ei_end_p': 1, 'ei_cond': 3, 'record_invariant': 13, 'VEC_iv_use_p_base_space': 2, 'VEC_iv_use_p_heap_reserve': 2, 'VEC_iv_use_p_base_quick_push': 2, 'VEC_iv_use_p_heap_safe_push': 5, 'record_use': 19, 'find_interesting_uses_op': 3, 'find_interesting_uses_outside': 5, 'ei_next': 4, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 12, 'op_iter_init_use': 45, 'find_invariants_stmt': 5, 'gimple_op_ptr': 1, 'gimple_cond_lhs_ptr': 1, 'gimple_cond_rhs_ptr': 1, 'gimple_assign_rhs1_ptr': 1, 'gimple_assign_rhs2_ptr': 1, 'extract_cond_operands': 11, 'gimple_assign_lhs_ptr': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'may_be_nonaddressable_p': 6, 'idx_find_step': 31, 'find_interesting_uses_address': 52, 'find_interesting_uses_stmt': 73, 'find_interesting_uses': 67, 'VEC_iv_cand_p_base_space': 2, 'VEC_iv_cand_p_heap_reserve': 2, 'VEC_iv_cand_p_base_quick_push': 2, 'VEC_iv_cand_p_heap_safe_push': 5, 'find_depends': 7, 'add_candidate_1': 112, 'add_candidate': 2, 'add_old_iv_candidates': 6, 'add_old_ivs_candidates': 20, 'strip_offset_1': 25, 'add_iv_value_candidates': 6, 'add_derived_ivs_candidates': 15, 'split_address_cost': 24, 'produce_memory_decl_rtl': 2, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 4, 'prepare_decl_rtl': 15, 'computation_cost': 18, 'add_cost': 3, 'force_expr_to_var_cost': 21, 'force_var_cost': 3, 'ptr_difference_cost': 74, 'difference_cost': 140, 'stmt_after_inc_pos': 4, 'VEC_address_cost_data_base_space': 2, 'VEC_address_cost_data_heap_reserve_exact': 2, 'VEC_address_cost_data_heap_safe_grow': 2, 'VEC_address_cost_data_heap_safe_grow_cleared': 2, 'get_address_cost': 11, 'determine_common_wider_type': 6, 'get_computation_at': 2, 'get_computation_cost_at': 117, 'get_computation_cost': 112, 'autoinc_possible_for_pair': 5, 'set_autoinc_for_original_candidates': 30, 'record_important_candidates': 21, 'find_iv_candidates': 112, 'determine_iv_cost': 5, 'determine_iv_costs': 34, 'alloc_use_cost_map': 16, 'set_use_iv_cost': 14, 'determine_use_iv_cost_generic': 7, 'determine_use_iv_cost_address': 10, 'cand_value_at': 13, 'may_eliminate_iv': 34, 'determine_use_iv_cost_condition': 96, 'determine_use_iv_cost': 163, 'determine_use_iv_costs': 47, 'ivopts_global_cost_for_size': 2, 'determine_set_costs': 40, 'iv_ca_new': 4, 'get_use_iv_cost': 4, 'cheaper_cost_pair': 4, 'iv_ca_set_remove_invariants': 12, 'iv_ca_recount_cost': 10, 'iv_ca_set_no_cp': 24, 'iv_ca_set_add_invariants': 12, 'iv_ca_set_cp': 25, 'iv_ca_add_use': 16, 'iv_ca_cost': 2, 'iv_ca_delta_add': 7, 'iv_ca_has_deps': 10, 'iv_ca_delta_reverse': 11, 'iv_ca_delta_commit': 27, 'iv_ca_extend': 15, 'try_add_cand_for': 138, 'get_initial_solution': 269, 'iv_ca_dump': 4, 'bmp_iter_and_init': 18, 'bmp_iter_and': 44, 'iv_ca_narrow': 63, 'iv_ca_prune': 102, 'try_improve_iv_set': 96, 'find_optimal_iv_set': 359, 'gsi_last_bb': 6, 'create_new_iv': 46, 'create_new_ivs': 72, 'gimple_assign_rhs2': 3, 'gsi_after_labels': 41, 'idx_remove_ssa_names': 11, 'copy_ref_info': 6, 'rewrite_use_address': 18, 'gimple_set_op': 4, 'gimple_cond_set_lhs': 3, 'gimple_cond_set_rhs': 3, 'rewrite_use_compare': 27, 'rewrite_use': 156, 'rewrite_uses': 175, 'remove_unused_ivs': 18, 'VEC_tree_base_iterate': 2, 'free_loop_data': 61, 'tree_ssa_iv_optimize_loop': 1100, 'tree_ssa_iv_optimize_finalize': 11, 'tree_ssa_iv_optimize': 101}, "PosixPath('602/omega.bc')": {'omega_solve_geq': 1, 'omega_unprotect_variable': 311, 'omega_alloc_problem': 68, 'omega_print_eqn': 18, 'omega_initialize_variables': 4, 'omega_print_vars': 7, 'omega_print_term': 20, 'omega_print_problem': 15, 'omega_count_red_equations': 33, 'omega_print_red_equations': 31, 'omega_copy_eqn': 14, 'omega_init_eqn_zero': 7, 'adding_equality_constraint': 56, 'omega_delete_geq': 20, 'omega_copy_problem': 211, 'omega_negate_geq': 8, 'omega_alloc_eqns': 12, 'setup_packing': 2, 'omega_substitute_red_1': 9, 'omega_substitute_red': 106, 'omega_convert_eq_to_geqs': 47, 'omega_delete_variable': 83, 'omega_substitute': 275, 'omega_do_elimination': 211, 'omega_name_wild_card': 1, 'omega_add_new_wild_card': 148, 'omega_do_mod': 60, 'omega_solve_eq': 411, 'coalesce': 73, 'omega_unprotect_1': 47, 'chain_unprotect': 119, 'omega_free_eliminations': 81, 'normalize_omega_problem': 797, 'omega_delete_geq_extra': 27, 'omega_eliminate_redundant': 108, 'omega_solve_problem': 1922, 'omega_problem_reduced': 79, 'omega_pretty_print_problem': 97, 'omega_simplify_problem': 155, 'verify_omega_pb': 17, 'omega_eliminate_red': 76, 'free_red_eliminations': 76, 'omega_problem_has_red_equations': 135, 'omega_simplify_approximate': 3, 'omega_constrain_variable_sign': 98, 'omega_constrain_variable_value': 44, 'omega_query_variable': 43, 'query_coupled_variable': 53, 'omega_query_variable_bounds': 25, 'omega_query_variable_signs': 12, 'omega_initialize': 80}, "PosixPath('602/objalloc.bc')": {'_objalloc_alloc': 35, 'objalloc_create': 8, 'objalloc_free_block': 15}, "PosixPath('602/targhooks.bc')": {'default_stack_protect_guard': 4, 'default_external_stack_protect_fail': 8, 'default_hidden_stack_protect_fail': 8, 'default_unspec_may_trap_p': 3, 'default_return_in_memory': 2, 'default_cxx_get_cookie_size': 4, 'default_scalar_mode_supported_p': 1, 'default_invalid_within_doloop': 2, 'default_static_chain': 2}, "PosixPath('602/ira-build.bc')": {'ira_create_allocno': 257, 'ira_flattening': 1575, 'ira_build': 1039, 'create_loop_tree_nodes': 34, 'remove_low_level_allocnos': 73, 'VEC_ira_allocno_t_base_space': 2, 'VEC_ira_allocno_t_heap_reserve': 2, 'VEC_ira_allocno_t_base_quick_push': 2, 'VEC_ira_allocno_t_heap_safe_push': 5, 'ira_set_allocno_cover_class': 7, 'ira_conflict_vector_profitable_p': 2, 'ira_allocate_allocno_conflict_vec': 9, 'allocate_allocno_conflict_bit_vec': 6, 'ira_allocate_allocno_conflicts': 14, 'add_to_allocno_conflicts': 41, 'ira_print_expanded_allocno': 6, 'ira_create_allocno_live_range': 7, 'ira_copy_allocno_live_range_list': 7, 'ira_merge_allocno_live_ranges': 23, 'ira_allocno_live_ranges_intersect_p': 7, 'ira_finish_allocno_live_range_list': 1, 'ira_free_allocno_updated_costs': 10, 'VEC_ira_copy_t_base_space': 2, 'VEC_ira_copy_t_heap_reserve': 2, 'VEC_ira_copy_t_base_quick_push': 2, 'VEC_ira_copy_t_heap_safe_push': 4, 'ira_create_copy': 32, 'ira_add_allocno_copy_to_list': 8, 'ira_remove_allocno_copy_from_list': 19, 'ira_swap_allocno_copy_ends_if_necessary': 34, 'find_allocno_copy': 18, 'ira_add_allocno_copy': 48, 'print_copy': 20, 'print_allocno_copies': 22, 'ira_debug_allocno_copies': 22, 'ira_traverse_loop_tree': 9, 'change_allocno_in_range_list': 4, 'copy_info_to_removed_store_destinations': 132, 'clear_allocno_conflicts': 13, 'sparseset_bit_p': 7, 'sparseset_insert_bit': 2, 'sparseset_set_bit': 8, 'sparseset_iter_init': 4, 'sparseset_iter_p': 4, 'sparseset_iter_elm': 2, 'sparseset_iter_next': 2, 'compress_allocno_conflict_vec': 10, 'compress_conflict_vecs': 29, 'finish_allocno': 75, 'VEC_loop_p_base_iterate': 2, 'rebuild_regno_allocno_maps': 14, 'initiate_cost_vectors': 4, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'VEC_edge_base_iterate': 2, 'loop_outer': 2, 'add_loop_to_tree': 46, 'setup_loop_tree_level': 2, 'form_loop_tree': 33, 'propagate_modified_regnos': 2, 'create_insn_allocnos': 57, 'df_lr_get_bb_info': 2, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'create_bb_allocnos': 50, 'create_loop_allocnos': 34, 'create_loop_tree_node_allocnos': 59, 'mark_all_loops_for_removal': 14, 'low_pressure_loop_node_p': 2, 'loop_compare_func': 13, 'mark_loops_for_removal': 65, 'VEC_ira_loop_tree_node_t_base_space': 2, 'VEC_ira_loop_tree_node_t_heap_reserve': 2, 'VEC_ira_loop_tree_node_t_base_quick_push': 2, 'VEC_ira_loop_tree_node_t_heap_safe_push': 5, 'VEC_ira_loop_tree_node_t_base_pop': 2, 'remove_uneccesary_loop_nodes_from_loop_tree': 46, 'ira_allocate_and_accumulate_costs': 4, 'propagate_some_info_from_allocno': 256, 'regno_allocno_order_compare_func': 4, 'ira_rebuild_regno_allocno_list': 13, 'remove_unnecessary_allocnos': 54, 'finish_loop_tree_node': 2, 'remove_unnecessary_regions': 194, 'bitmap_initialize_stat': 2, 'update_bad_spill_attribute': 73, 'propagate_allocno_info': 232, 'ira_allocate_and_copy_costs': 1, 'create_cap_allocno': 276, 'create_caps': 17, 'setup_min_max_allocno_live_range_point': 42, 'allocno_range_compare_func': 14, 'sort_conflict_id_allocno_map': 5, 'setup_min_max_conflict_allocno_ids': 32, 'finish_loop_tree_nodes': 5, 'finish_copies': 1, 'finish_cost_vectors': 1, 'ira_destroy': 7}, "PosixPath('602/gimple-pretty-print.bc')": {'gsi_start': 8, 'maybe_init_pretty_print': 2, 'gimple_vdef': 2, 'gimple_vuse': 2, 'gimple_references_memory_p': 2, 'dump_gimple_mem_ops': 5, 'gsi_stmt': 1, 'gsi_one_before_end_p': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_asm_output_op': 5, 'gimple_asm_input_op': 3, 'gimple_asm_clobber_op': 8, 'gimple_asm_label_op': 8, 'gimple_assign_rhs2': 3, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_lhs': 1, 'dump_unary_rhs': 13, 'dump_binary_rhs': 21, 'gimple_call_lhs': 1, 'gimple_call_fn': 1, 'gimple_call_arg': 1, 'dump_gimple_call_args': 5, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'gimple_cond_true_label': 1, 'gimple_cond_false_label': 1, 'gimple_label_label': 1, 'gimple_goto_dest': 1, 'gimple_return_retval': 1, 'gimple_switch_index': 1, 'gimple_switch_label': 3, 'gimple_omp_for_index': 2, 'gimple_omp_for_initial': 2, 'gimple_omp_for_final': 2, 'gimple_omp_for_cond': 2, 'gimple_omp_for_incr': 2, 'gimple_omp_subcode': 1, 'gimple_debug_bind_get_var': 1, 'gimple_debug_bind_get_value': 1, 'dump_gimple_stmt': 23, 'dump_gimple_debug': 5, 'dump_gimple_eh_filter': 3, 'dump_gimple_catch': 3, 'dump_gimple_omp_critical': 2, 'dump_gimple_omp_sections': 2, 'dump_gimple_omp_continue': 2, 'dump_gimple_omp_for': 8, 'dump_gimple_omp_atomic_load': 2, 'dump_gimple_omp_task': 8, 'dump_gimple_omp_parallel': 3, 'dump_gimple_phi': 33, 'dump_gimple_try': 4, 'dump_gimple_switch': 7, 'dump_gimple_return': 1, 'dump_gimple_goto': 1, 'dump_gimple_label': 3, 'dump_gimple_cond': 14, 'dump_gimple_call': 6, 'dump_gimple_bind': 1, 'dump_gimple_assign': 43, 'dump_gimple_asm': 82, 'dump_gimple_fmt': 51, 'dump_gimple_seq': 2, 'print_gimple_stmt': 2, 'print_gimple_expr': 2, 'print_gimple_seq': 2, 'bb_seq': 2, 'gsi_start_bb': 6, 'get_lineno': 1, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'dump_bb_header': 34, 'pp_cfg_jump': 1, 'dump_implicit_edges': 22, 'dump_bb_end': 9, 'gimple_dump_bb_buff': 69, 'gimple_dump_bb': 78}, "PosixPath('602/optabs.bc')": {'gen_cond_trap': 22, 'convert_optab_libfunc': 8, 'optab_libfunc': 10, 'optab_for_tree_code': 67, 'expand_widen_pattern_expr': 26, 'expand_ternary_op': 8, 'avoid_expensive_constant': 2, 'add_equal_note': 8, 'can_compare_p': 8, 'prepare_operand': 2, 'no_conflict_move_test': 6, 'emit_libcall_block': 47, 'prepare_float_lib_cmp': 10, 'prepare_cmp_insn': 113, 'emit_conditional_move': 42, 'expand_binop': 186, 'expand_subword_shift': 2, 'expand_binop_directly': 12, 'expand_vec_shift_expr': 15, 'sign_expand_binop': 3, 'expand_twoval_unop': 6, 'expand_twoval_binop': 6, 'emit_cmp_and_jump_insn_1': 8, 'emit_cmp_and_jump_insns': 24, 'expand_absneg_bit': 11, 'expand_unop': 131, 'expand_ffs': 1, 'expand_unop_direct': 3, 'expand_abs_nojump': 12, 'expand_abs': 4, 'expand_one_cmpl_abs_nojump': 1, 'maybe_emit_unop_insn': 3, 'expand_copysign_absneg': 4, 'expand_copysign_bit': 2, 'expand_copysign': 35, 'emit_conditional_add': 42, 'gen_add2_insn': 7, 'gen_add3_insn': 7, 'have_add2_insn': 6, 'gen_sub2_insn': 7, 'gen_sub3_insn': 7, 'have_sub2_insn': 6, 'gen_extend_insn': 2, 'expand_float': 28, 'can_fix_p': 4, 'expand_fix': 63, 'expand_sfix_optab': 1, 'build_libfunc_function': 4, 'set_optab_libfunc': 14, 'set_conv_libfunc': 14, 'gen_interclass_conv_libfunc': 97, 'gen_fractuns_conv_libfunc': 1, 'gen_intraclass_conv_libfunc': 100, 'gen_fract_conv_libfunc': 1, 'gen_trunc_conv_libfunc': 12, 'gen_extend_conv_libfunc': 12, 'gen_libfunc': 28, 'gen_fp_libfunc': 2, 'gen_int_libfunc': 2, 'gen_intv_fp_libfunc': 4, 'eq_libfunc': 8, 'hash_libfunc': 4, 'init_optabs': 1171, 'debug_optab_libfuncs': 13, 'vector_compare_rtx': 9, 'expand_vec_cond_expr': 23, 'expand_val_compare_and_swap_1': 3, 'expand_bool_compare_and_swap': 6, 'expand_compare_and_swap_loop': 6, 'expand_sync_operation': 11, 'expand_sync_fetch_operation': 28, 'expand_sync_lock_test_and_set': 7, 'gt_ggc_m_P13libfunc_entry4htab': 5, 'gt_pch_p_P13libfunc_entry4htab': 5, 'gt_pch_n_P13libfunc_entry4htab': 5}, "PosixPath('602/auto-inc-dec.bc')": {}, "PosixPath('602/attribs.bc')": {'register_attribute': 9, 'decl_attributes': 163, 'substring_hash': 1, 'extract_attribute_substring': 6, 'lookup_attribute_spec': 38, 'eq_attr': 2, 'hash_attr': 1, 'init_attributes': 3}, "PosixPath('602/dominance.bc')": {'init_dom_info': 22, 'ei_end_p': 1, 'ei_next': 4, 'calc_dfs_tree_nonrec': 44, 'calc_dfs_tree': 62, 'compress': 7, 'eval': 8, 'link_roots': 33, 'calc_idoms': 298, 'assign_dfs_numbers': 4, 'compute_dom_fast_query': 15, 'calculate_dominance_info': 60, 'free_dominance_info': 5, 'set_immediate_dominator': 2, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_heap_reserve': 2, 'VEC_basic_block_base_quick_push': 2, 'VEC_basic_block_heap_safe_push': 4, 'get_dominated_by': 7, 'next_dom_son': 2, 'get_dominated_by_region': 9, 'get_all_dominated_blocks': 8, 'redirect_immediate_dominators': 1, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'nearest_common_dominator_for_set': 15, 'dominated_by_p': 7, 'verify_dominators': 22, 'ei_cond': 3, 'recompute_dominator': 6, 'VEC_basic_block_base_iterate': 2, 'single_pred_edge': 1, 'VEC_basic_block_base_unordered_remove': 4, 'prune_bbs_to_update_dominators': 17, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 2, 'VEC_int_base_quick_push': 2, 'VEC_int_heap_safe_push': 5, 'VEC_int_base_iterate': 2, 'determine_dominators_for_sons': 36, 'iterate_fix_dominators': 58, 'add_to_dominance_info': 1, 'delete_from_dominance_info': 3, 'debug_dominance_info': 3, 'debug_dominance_tree_1': 1}, "PosixPath('602/tree-vect-slp.bc')": {'vect_analyze_slp_instance': 263, 'vect_schedule_slp_instance': 31, 'vect_build_slp_tree': 730, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'find_bb_location': 7, 'vect_free_slp_tree': 7, 'vect_free_slp_instance': 3, 'VEC_gimple_base_iterate': 2, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 5, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'gimple_assign_lhs': 1, 'vect_get_and_check_slp_defs': 173, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 2, 'VEC_int_base_quick_push': 2, 'VEC_int_heap_safe_push': 5, 'VEC_slp_tree_base_space': 2, 'VEC_slp_tree_heap_reserve': 2, 'VEC_slp_tree_base_quick_push': 2, 'VEC_slp_tree_heap_safe_push': 5, 'VEC_int_base_iterate': 2, 'VEC_slp_tree_base_iterate': 2, 'vect_get_mask_element': 6, 'VEC_tree_base_quick_push': 2, 'gimple_set_op': 4, 'gimple_call_set_lhs': 3, 'vect_create_mask_and_perm': 19, 'vect_transform_slp_perm_load': 88, 'vect_supported_slp_permutation_p': 18, 'vect_supported_load_permutation_p': 27, 'get_earlier_stmt': 1, 'vect_find_first_load_in_slp_instance': 13, 'VEC_slp_instance_base_space': 2, 'VEC_slp_instance_heap_reserve': 2, 'VEC_slp_instance_base_quick_push': 2, 'VEC_slp_instance_heap_safe_push': 5, 'vect_print_slp_tree': 4, 'vect_analyze_slp': 147, 'VEC_slp_instance_base_iterate': 2, 'vect_mark_slp_stmts': 11, 'vect_make_slp_decision': 4, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'move_use_after_head': 5, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_init_use': 55, 'gimple_vuse_op': 2, 'link_use_stmts_after': 61, 'first_imm_use_stmt': 13, 'next_imm_use_stmt': 10, 'vect_detect_hybrid_slp_stmts': 72, 'vect_detect_hybrid_slp': 2, 'VEC_vec_void_p_base_space': 2, 'VEC_vec_void_p_heap_reserve': 2, 'VEC_vec_void_p_base_quick_push': 2, 'VEC_vec_void_p_heap_safe_push': 4, 'set_vinfo_for_stmt': 4, 'new_bb_vec_info': 8, 'destroy_bb_vec_info': 16, 'vect_mark_slp_stmts_relevant': 7, 'vect_slp_analyze_node_operations': 5, 'VEC_slp_instance_base_ordered_remove': 3, 'vect_slp_analyze_operations': 4, 'vect_slp_analyze_bb': 17, 'vect_update_slp_costs_according_to_vf': 5, 'vect_get_slp_vect_defs': 4, 'VEC_tree_base_iterate': 2, 'vect_get_constant_vectors': 26, 'vect_get_slp_defs': 23, 'vect_schedule_slp': 3, 'gimple_vop': 2, 'vect_slp_transform_bb': 9}, "PosixPath('602/mcf.bc')": {'create_fixup_graph': 126, 'adjust_cfg_counts': 153, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'sum_edge_counts': 6, 'print_basic_block': 2, 'dump_fixup_edge': 8, 'VEC_fixup_edge_p_base_space': 2, 'VEC_fixup_edge_p_heap_reserve': 2, 'VEC_fixup_edge_p_base_quick_push': 2, 'VEC_fixup_edge_p_heap_safe_push': 5, 'add_edge': 14, 'add_fixup_edge': 4, 'VEC_fixup_edge_p_base_iterate': 2, 'find_fixup_edge': 2, 'dump_fixup_graph': 8, 'add_rfixup_edge': 4, 'compute_residual_flow': 25, 'init_augmenting_path': 2, 'init_queue': 2, 'enqueue': 7, 'is_empty': 2, 'dequeue': 4, 'find_augmenting_path': 17, 'find_max_flow': 62, 'cancel_negative_cycle': 82, 'find_minimum_cost_flow': 132, 'delete_fixup_graph': 6, 'mcf_smooth_cfg': 557}, "PosixPath('602/sparseset.bc')": {'sparseset_clear': 2, 'sparseset_alloc': 11, 'sparseset_bit_p': 7, 'sparseset_insert_bit': 2, 'sparseset_swap': 4, 'sparseset_clear_bit': 24, 'sparseset_copy': 11, 'sparseset_iter_init': 4, 'sparseset_iter_p': 4, 'sparseset_iter_elm': 2, 'sparseset_iter_next': 2, 'sparseset_set_bit': 8, 'sparseset_and': 110, 'sparseset_and_compl': 137, 'sparseset_ior': 92, 'sparseset_equal_p': 45}, "PosixPath('602/cpp_init.bc')": {'cpp_set_lang': 140, 'cpp_create_reader': 636, 'cpp_destroy': 42, 'cpp_named_operator2name': 2, 'cpp_init_special_builtins': 30, 'cpp_init_builtins': 16, 'post_options': 50, 'mark_named_operators': 11, 'cpp_post_options': 132, 'read_original_directory': 19, 'cpp_read_main_file': 5, 'cpp_finish': 12}, "PosixPath('602/tree-sra.bc')": {'sra_modify_assign': 125, 'make_fancy_name_1': 15, 'make_fancy_decl_name': 14, 'load_assign_lhs_subreplacements': 70, 'gsi_start': 8, 'first_imm_use_on_stmt': 2, 'next_imm_use_on_stmt': 2, 'build_ref_for_offset_1': 13, 'build_ref_for_offset': 5, 'ipa_sra_preliminary_function_checks': 23, 'has_zero_uses': 1, 'is_unused_scalar_param': 1, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'move_use_after_head': 5, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_init_use': 55, 'gimple_vuse_op': 2, 'link_use_stmts_after': 62, 'first_imm_use_stmt': 13, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_lhs': 1, 'gimple_has_lhs': 1, 'gimple_assign_rhs1': 1, 'gimple_call_arg': 1, 'end_imm_use_stmt_traverse': 3, 'next_imm_use_stmt': 10, 'ptr_parm_has_direct_uses': 121, 'type_internals_preclude_sra_p': 9, 'find_param_candidates': 127, 'callsite_has_enough_arguments_p': 1, 'all_callers_have_enough_arguments_p': 3, 'gsi_stmt': 1, 'bb_seq': 2, 'gsi_start_bb': 6, 'gimple_op_ptr': 1, 'gimple_return_retval_ptr': 1, 'gimple_call_arg_ptr': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_call_lhs_ptr': 1, 'get_ssa_base_param': 2, 'disqualify_base_of_expr': 6, 'gimple_asm_input_op': 3, 'gimple_asm_output_op': 5, 'scan_function': 287, 'VEC_access_p_base_quick_push': 2, 'unmodified_by_ref_scalar_representative': 16, 'access_precludes_ipa_sra_p': 2, 'compare_access_positions': 24, 'splice_param_accesses': 62, 'splice_all_param_accesses': 80, 'dump_dereferences_table': 17, 'VEC_basic_block_base_quick_push': 2, 'VEC_basic_block_base_pop': 2, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'propagate_dereference_distances': 79, 'analyze_caller_dereference_legality': 126, 'analyze_modified_params': 29, 'decide_one_param_reduction': 18, 'turn_representatives_into_adjustments': 69, 'analyze_all_param_acesses': 597, 'create_abstract_origin': 5, 'gimple_set_op': 4, 'gimple_debug_bind_reset_value': 3, 'sra_ipa_reset_debug_stmts': 45, 'convert_callers': 50, 'gimple_assign_lhs': 1, 'get_adjustment_for_base': 2, 'get_var_ann': 2, 'get_replaced_param_substitute': 7, 'gimple_assign_set_lhs': 3, 'gimple_call_set_lhs': 3, 'replace_removed_params_ssa_names': 28, 'gimple_assign_rhs1_ptr': 1, 'gimple_assign_lhs_ptr': 1, 'sra_ipa_modify_expr': 57, 'sra_ipa_modify_assign': 3, 'modify_function': 96, 'contains_view_convert_expr_p': 2, 'mark_parm_dereference': 7, 'VEC_access_p_base_space': 2, 'VEC_access_p_heap_reserve': 2, 'VEC_access_p_heap_safe_push': 5, 'create_access_1': 18, 'create_access': 27, 'build_access_from_expr_1': 53, 'add_link_to_rhs': 4, 'build_accesses_from_assign': 19, 'ipa_early_sra': 993, 'first_htab_element': 7, 'first_referenced_var': 5, 'end_htab_p': 2, 'end_referenced_vars_p': 1, 'next_htab_element': 4, 'next_referenced_var': 1, 'find_var_candidates': 7, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'type_consists_of_records_p': 5, 'completely_scalarize_record': 17, 'relink_to_new_repr': 12, 'add_access_to_work_queue': 6, 'sort_and_splice_var_accesses': 87, 'build_access_subtree': 6, 'build_access_trees': 2, 'pop_access_from_work_queue': 5, 'child_would_conflict_in_lacc': 7, 'create_artificial_child_access': 53, 'propagate_subaccesses_across_link': 110, 'propagate_all_subaccesses': 17, 'expr_with_var_bounded_array_refs_p': 2, 'analyze_access_subtree': 30, 'dump_access_tree_1': 4, 'analyze_all_variable_accesses': 226, 'create_access_replacement': 31, 'get_access_replacement': 35, 'generate_subtree_copies': 35, 'single_succ_edge': 1, 'initialize_parameter_reductions': 31, 'find_access_in_subtree': 13, 'get_var_base_offset_size_access': 15, 'get_access_for_expr': 24, 'init_subtree_with_zero': 2, 'sra_modify_constructor_assign': 9, 'sra_modify_expr': 31, 'ref_expr_for_all_replacements_p': 7, 'handle_unscalarized_data_in_subtree': 7, 'perform_intra_sra': 270}, "PosixPath('602/tree-ssa-sink.bc')": {'gimple_vdef': 2, 'is_global_var': 2, 'is_hidden_global_store': 4, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'bb_seq': 2, 'gsi_last_bb': 6, 'gsi_stmt': 1, 'gimple_def_ops': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_next_tree': 6, 'op_iter_init_tree': 22, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'next_readonly_imm_use': 2, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_lhs': 1, 'op_iter_next_def': 4, 'op_iter_init_def': 20, 'op_iter_next_use': 7, 'op_iter_init_use': 29, 'all_immediate_uses_same_place': 18, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'nearest_common_dominator_of_uses': 39, 'gsi_start_bb': 6, 'gsi_after_labels': 41, 'find_bb_for_arg': 14, 'statement_sink_location': 524, 'sink_code_in_bb': 416}, "PosixPath('602/insn-peep.bc')": {}, "PosixPath('602/c-convert.bc')": {'convert': 28}, "PosixPath('602/mode-switching.bc')": {'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'new_seginfo': 11, 'remove_from_hard_reg_set': 1, 'reg_dies': 2, 'make_preds_opaque': 15, 'add_to_hard_reg_set': 1, 'reg_becomes_live': 2, 'optimize_mode_switching': 883, 'rest_of_handle_mode_switching': 768}, "PosixPath('602/lrealpath.bc')": {}, "PosixPath('602/dojump.bc')": {'clear_pending_stack_adjust': 2, 'split_comparison': 9, 'do_jump_by_parts_equality_rtx': 1, 'do_jump_by_parts_zero_rtx': 1, 'do_compare_rtx_and_jump': 86, 'do_jump_by_parts_equality': 2, 'do_compare_and_jump': 14, 'do_jump_by_parts_greater': 4, 'prefer_and_bit_test': 4, 'do_jump': 66, 'do_jump_1': 26}, "PosixPath('602/lambda-mat.bc')": {'lambda_matrix_copy': 2, 'lambda_matrix_id_p': 3, 'lambda_matrix_mult': 2, 'lambda_matrix_delete_rows': 1, 'lambda_matrix_row_exchange': 1, 'lambda_matrix_row_add': 2, 'lambda_matrix_row_negate': 1, 'lambda_matrix_row_mc': 1, 'lambda_matrix_col_exchange': 2, 'lambda_matrix_col_add': 2, 'lambda_matrix_col_negate': 1, 'lambda_matrix_col_mc': 1, 'lambda_vector_min_nz': 1, 'lambda_matrix_inverse_hard': 22, 'lambda_matrix_inverse': 36, 'lambda_matrix_hermite': 13, 'lambda_matrix_right_hermite': 15, 'lambda_matrix_left_hermite': 19, 'lambda_matrix_project_to_null': 3, 'lambda_matrix_vector_mult': 2}, "PosixPath('602/insn-opinit.bc')": {}, "PosixPath('602/fold-const.bc')": {'div_and_round_double': 260, 'make_range': 213, 'fold_binary_loc': 4356, 'fold_truthop': 457, 'fold_convert_const_int_from_fixed': 149, 'fit_double_type': 2, 'force_fit_type_double': 29, 'neg_double': 2, 'encode': 7, 'decode': 3, 'mul_double_with_sign': 145, 'rshift_double': 2, 'lshift_double': 2, 'lrotate_double': 25, 'rrotate_double': 25, 'div_if_zero_remainder': 63, 'fold_undefer_overflow_warnings': 2, 'may_negate_without_overflow_p': 9, 'int_const_binop': 87, 'int_binop_types_match_p': 6, 'fold_abs_const': 10, 'fold_convert_const_int_from_int': 11, 'fold_convert_const_int_from_real': 44, 'fold_convert_const_real_from_real': 167, 'fold_convert_const_real_from_fixed': 6, 'fold_convert_const_fixed_from_fixed': 7, 'fold_convert_const_fixed_from_int': 13, 'fold_convert_const_fixed_from_real': 7, 'fold_convert_const': 135, 'init_const_call_expr_arg_iterator': 3, 'next_const_call_expr_arg': 4, 'first_const_call_expr_arg': 6, 'operand_equal_p': 187, 'fold_ignored_result': 8, 'fold_negate_const': 11, 'negate_expr_p': 513, 'fold_truth_not_expr': 185, 'tree_swap_operands_p': 9, 'sign_bit_p': 21, 'native_encode_int': 6, 'native_encode_real': 11, 'native_encode_string': 8, 'native_encode_expr': 39, 'native_interpret_int': 2, 'native_interpret_real': 15, 'native_interpret_expr': 25, 'tree_simple_nonnegative_warnv_p': 2, 'tree_expr_nonnegative_warnv_p': 19, 'tree_invalid_nonnegative_warnv_p': 27, 'tree_call_nonnegative_warnv_p': 102, 'tree_single_nonnegative_warnv_p': 10, 'tree_unary_nonnegative_warnv_p': 5, 'tree_binary_nonnegative_warnv_p': 24, 'tree_expr_nonnegative_p': 1, 'fold_not_const': 6, 'fold_real_zero_addition_p': 365, 'get_pointer_modulus_and_residue': 50, 'tree_operand_length': 3, 'simple_operand_p': 2, 'pointer_may_wrap_p': 8, 'twoval_comparison_p': 10, 'tree_expr_nonzero_warnv_p': 16, 'tree_single_nonzero_warnv_p': 11, 'tree_binary_nonzero_warnv_p': 5, 'tree_expr_nonzero_p': 1, 'build_fold_addr_expr_with_type_loc': 2, 'fold_convert_loc': 31, 'fold_unary_loc': 459, 'fold_ternary_loc': 187, 'fold_cond_expr_with_comparison': 728, 'negate_expr': 4, 'fold_negate_expr': 535, 'extract_muldiv_1': 126, 'fold_indirect_ref_1': 46, 'fold_read_from_constant_string': 39, 'size_binop_loc': 1, 'optimize_bit_field_compare': 161, 'fold_single_bit_test_into_sign_test': 5, 'fold_comparison': 962, 'maybe_canonicalize_comparison_1': 15, 'fold_div_compare': 75, 'eval_subst': 17, 'optimize_minmax_comparison': 4, 'fold_sign_changed_comparison': 15, 'fold_widened_comparison': 7, 'fold_mathfn_compare': 142, 'fold_inf_compare': 47, 'make_bit_field_ref': 7, 'unextend': 5, 'decode_field_reference': 16, 'combine_comparisons': 66, 'fold_range_test': 89, 'build_range_check': 11, 'merge_ranges': 13, 'range_predecessor': 2, 'range_successor': 2, 'range_binop': 2, 'fold_to_nonsharp_ineq_using_bound': 23, 'fold_minmax': 11, 'multiple_of_p': 16, 'omit_two_operands_loc': 4, 'distribute_bit_expr': 8, 'fold_strip_sign_ops': 96, 'fold_mult_zconjz': 7, 'ptr_difference_const': 20, 'split_address_to_core_and_offset': 24, 'associate_trees': 1, 'split_tree': 18, 'distribute_real_division': 30, 'fold_plusminus_mult_expr': 29, 'omit_one_operand_loc': 5, 'try_move_mult_to_index': 12, 'fold_binary_op_with_conditional_arg': 8, 'fold_relational_const': 27, 'const_binop': 297, 'operand_equal_for_comparison_p': 17, 'fold_convertible_p': 10, 'fold_single_bit_test': 11, 'fold': 45, 'fold_build_cleanup_point_expr': 4, 'fold_indirect_ref_loc': 2, 'round_up_loc': 10, 'round_down_loc': 4}, "PosixPath('602/tree-vrp.bc')": {'vrp_finalize': 234, 'first_imm_use_on_stmt': 2, 'next_imm_use_on_stmt': 2, 'nonnull_arg_p': 7, 'set_value_range': 8, 'set_value_range_to_varying': 5, 'get_value_range': 18, 'vrp_val_min': 2, 'vrp_val_is_min': 2, 'is_negative_overflow_infinity': 5, 'vrp_val_max': 2, 'vrp_val_is_max': 2, 'is_positive_overflow_infinity': 5, 'operand_less_p': 59, 'compare_values_warnv': 36, 'ssa_name_nonnegative_p': 2, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'dump_value_range': 33, 'dump_all_value_ranges': 7, 'gsi_stmt': 1, 'dump_asserts_for': 2, 'dump_all_asserts': 11, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_cond_lhs': 1, 'fp_predicate': 5, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_next_tree': 6, 'op_iter_init_tree': 71, 'zero_ssa_operands': 4, 'ei_end_p': 1, 'ei_cond': 3, 'gimple_cond_rhs': 1, 'extract_code_and_val_from_cond_with_ops': 4, 'has_single_use': 4, 'register_new_assert_for': 84, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'gimple_assign_cast_p': 2, 'gimple_call_fn': 1, 'gimple_call_return_type': 2, 'gimple_expr_type': 4, 'register_edge_assert_for_2': 202, 'register_edge_assert_for_1': 85, 'register_edge_assert_for': 59, 'ei_next': 4, 'find_conditional_asserts': 29, 'gimple_switch_index': 1, 'gimple_switch_label': 3, 'compare_case_labels': 4, 'find_switch_asserts': 30, 'bb_seq': 2, 'gsi_start_bb': 6, 'infer_value_range': 28, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'find_assert_locations_1': 430, 'find_assert_locations': 361, 'build_assert_expr_for': 4, 'process_assert_insertions_for': 13, 'process_assert_insertions': 31, 'insert_range_assertions': 430, 'gimple_call_fndecl': 4, 'stmt_interesting_for_vrp': 15, 'vrp_initialize': 49, 'gimple_call_arg': 1, 'check_array_ref': 16, 'search_for_addr_array': 20, 'check_array_bounds': 8, 'check_all_array_refs': 54, 'VEC_edge_base_iterate': 2, 'gsi_last_bb': 6, 'is_overflow_infinity': 8, 'usable_range_p': 30, 'overflow_infinity_range_p': 19, 'compare_ranges': 6, 'compare_range_with_value': 4, 'get_vr_for_comparison': 15, 'compare_names': 241, 'compare_name_with_value': 147, 'vrp_evaluate_conditional_warnv_with_ops': 242, 'vrp_evaluate_conditional': 18, 'simplify_stmt_for_jump_threading': 2, 'identify_jump_threads': 75, 'gimple_set_op': 4, 'gimple_cond_set_lhs': 3, 'gimple_cond_set_rhs': 3, 'gimple_cond_make_false': 5, 'gimple_cond_make_true': 5, 'fold_predicate_in': 22, 'gimple_assign_lhs': 1, 'simplify_truth_ops_using_ranges': 39, 'gimple_assign_set_rhs1': 3, 'gimple_assign_set_rhs2': 3, 'simplify_div_or_mod_using_ranges': 17, 'simplify_abs_using_ranges': 14, 'test_for_singularity': 17, 'simplify_cond_using_ranges': 10, 'find_case_label_index': 4, 'find_case_label_range': 39, 'gimple_switch_default_label': 3, 'VEC_edge_base_space': 2, 'VEC_edge_heap_reserve': 2, 'VEC_edge_base_quick_push': 2, 'VEC_edge_heap_safe_push': 4, 'VEC_switch_update_base_space': 2, 'VEC_switch_update_heap_reserve': 2, 'VEC_switch_update_base_quick_push': 3, 'VEC_switch_update_heap_safe_push': 6, 'simplify_switch_using_ranges': 135, 'simplify_stmt_using_ranges': 232, 'vrp_fold_stmt': 285, 'end_imm_use_stmt_p': 2, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'move_use_after_head': 5, 'op_iter_init_use': 55, 'gimple_vuse_op': 2, 'link_use_stmts_after': 61, 'first_imm_use_stmt': 13, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'next_imm_use_stmt': 10, 'remove_range_assertions': 180, 'gimple_switch_set_label': 5, 'copy_value_range': 7, 'range_includes_zero_p': 2, 'vrp_meet': 34, 'avoid_overflow_infinity': 11, 'valid_value_p': 4, 'get_chrec_loop': 2, 'adjust_range_with_scev': 11, 'loop_outer': 2, 'vrp_var_may_overflow': 3, 'supports_overflow_infinity': 4, 'negative_overflow_infinity': 2, 'positive_overflow_infinity': 2, 'vrp_operand_equal_p': 13, 'update_value_range': 15, 'vrp_visit_phi_node': 814, 'gimple_assign_nonnegative_warnv_p': 13, 'gimple_call_nonnegative_warnv_p': 10, 'gimple_stmt_nonnegative_warnv_p': 20, 'stmt_overflow_infinity': 22, 'set_value_range_to_nonnegative': 8, 'gimple_assign_nonzero_warnv_p': 13, 'gimple_stmt_nonzero_warnv_p': 12, 'range_is_nonnull': 2, 'vrp_stmt_computes_nonzero': 30, 'extract_range_basic': 113, 'add_equivalence': 2, 'set_and_canonicalize_value_range': 17, 'extract_range_from_assert': 47, 'extract_range_from_ssa_name': 14, 'op_with_constant_singleton_value_range': 4, 'set_value_range_to_undefined': 5, 'range_is_null': 2, 'set_value_range_to_truthvalue': 4, 'vrp_int_const_binop': 56, 'abs_extent_range': 11, 'extract_range_from_binary_expr': 1274, 'extract_range_from_unary_expr': 468, 'extract_range_from_cond_expr': 92, 'extract_range_from_comparison': 25, 'extract_range_from_assignment': 2102, 'vrp_visit_assignment_or_call': 58, 'vrp_visit_cond_stmt': 43, 'vrp_visit_switch_stmt': 109, 'vrp_visit_stmt': 199, 'execute_vrp': 859}, "PosixPath('602/loop-doloop.bc')": {}, "PosixPath('602/tree-ssa-propagate.bc')": {'valid_gimple_rhs_p': 7, 'valid_gimple_call_p': 2, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_next_tree': 6, 'op_iter_init_tree': 22, 'move_ssa_defining_stmt_for_defs': 23, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_lhs': 1, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve_exact': 2, 'VEC_tree_heap_safe_grow': 3, 'gimple_set_op': 4, 'gimple_call_set_lhs': 3, 'gimple_assign_set_lhs': 3, 'update_call_from_tree': 29, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_heap_reserve_exact': 2, 'VEC_basic_block_heap_safe_grow': 2, 'bb_seq': 2, 'gsi_start_bb': 6, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'cfg_blocks_add': 55, 'add_control_edge': 78, 'ssa_prop_init': 49, 'cfg_blocks_get': 8, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'VEC_gimple_base_space': 2, 'VEC_gimple_gc_reserve': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_gc_safe_push': 5, 'next_readonly_imm_use': 2, 'add_ssa_edge': 11, 'simulate_stmt': 17, 'simulate_block': 36, 'VEC_gimple_base_pop': 2, 'process_ssa_edge_worklist': 12, 'ssa_propagate': 157, 'stmt_makes_single_store': 2, 'replace_phi_args_in': 28, 'gsi_last_bb': 6, 'gimple_assign_rhs1': 1, 'has_zero_uses': 1, 'op_iter_next_use': 7, 'op_iter_init_use': 45, 'replace_uses_in': 19, 'gimple_assign_rhs_code': 2, 'substitute_and_fold': 248}, "PosixPath('602/cfghooks.bc')": {'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'verify_flow_info': 167, 'dump_bb': 12, 'redirect_edge_and_branch': 4, 'can_remove_branch_p': 4, 'remove_branch': 4, 'single_pred_edge': 1, 'single_succ_edge': 1, 'redirect_edge_and_branch_force': 7, 'split_block': 18, 'move_block_after': 4, 'delete_basic_block': 12, 'split_edge': 56, 'create_basic_block': 4, 'can_merge_blocks_p': 4, 'predict_edge': 4, 'predicted_by_p': 3, 'merge_blocks': 16, 'ei_safe_edge': 3, 'VEC_basic_block_base_quick_push': 2, 'loop_outer': 2, 'make_forwarder_block': 47, 'tidy_fallthru_edges': 27, 'can_duplicate_block_p': 8, 'duplicate_block': 50, 'block_ends_with_call_p': 4, 'block_ends_with_condjump_p': 4, 'flow_call_edges_add': 4, 'cfg_hook_duplicate_loop_to_header_edge': 2, 'extract_cond_bb_edges': 2, 'lv_add_condition_to_bb': 2}, "PosixPath('602/decimal64.bc')": {'__dpd64FromNumber': 244, 'decDigitsToDPD': 58, 'decDigitsFromDPD': 4, '__dpd64ToNumber': 37, '__dpd64ToString': 42, 'decimal64FromNumber': 1, 'decimal64ToNumber': 1}, "PosixPath('602/pretty-print.bc')": {'pp_base_formatted_text': 6, 'pp_base_clear_output_area': 10, 'pp_base_remaining_character_count_for_line': 2, 'pp_base_newline': 6, 'pp_base_character': 9, 'pp_set_verbatim_wrapping_': 2, 'pp_append_r': 17, 'pp_base_emit_prefix': 27, 'pp_base_append_text': 14, 'pp_wrap_text': 8, 'pp_maybe_wrap_text': 8, 'pp_base_string': 9, 'pp_clear_state': 2, 'pp_base_format': 625, 'pp_base_output_formatted_text': 21, 'pp_base_format_verbatim': 2, 'pp_base_flush': 4, 'pp_set_real_maximum_length': 4, 'pp_base_set_prefix': 2, 'pp_construct': 19, 'pp_base_last_position_in_text': 2, 'pp_printf': 9, 'pp_verbatim': 23, 'decode_utf8_char': 1, 'identifier_to_locale': 8, 'pp_base_tree_identifier': 2}, "PosixPath('602/insn-modes.bc')": {}, "PosixPath('602/cppdefault.bc')": {}, "PosixPath('602/tree-ssa-dse.bc')": {'gsi_last': 8, 'VEC_void_p_base_last': 2, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'dse_leave_block': 14, 'bb_seq': 2, 'gsi_stmt': 1, 'gimple_vdef': 2, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'record_voperand_set': 1, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'move_use_after_head': 5, 'gimple_def_ops': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_init_use': 55, 'gimple_vuse_op': 2, 'link_use_stmts_after': 62, 'first_imm_use_stmt': 13, 'end_imm_use_stmt_traverse': 3, 'gimple_assign_lhs': 1, 'next_imm_use_stmt': 10, 'dse_possible_dead_store_p': 72, 'get_stmt_uid': 5, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'dse_optimize_stmt': 56, 'dse_record_phi': 5, 'dse_enter_block': 180, 'dse_initialize_block_local_data': 2, 'tree_ssa_dse': 22}, "PosixPath('602/lto-section-out.bc')": {'lto_write_stream': 2, 'append_block': 14, 'lto_output_1_stream': 7, 'lto_output_data_stream': 9, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 5, 'lto_output_decl_index': 7, 'lto_output_field_decl_index': 2, 'lto_output_fn_decl_index': 2, 'lto_output_namespace_decl_index': 2, 'lto_output_var_decl_index': 2, 'lto_output_type_decl_index': 2, 'lto_output_type_ref_index': 2, 'VEC_lto_out_decl_state_ptr_base_last': 2, 'lto_get_out_decl_state': 2, 'lto_create_simple_output_block': 5, 'lto_destroy_simple_output_block': 26, 'lto_init_tree_ref_encoder': 4, 'lto_new_out_decl_state': 4, 'lto_destroy_tree_ref_encoder': 2, 'lto_delete_out_decl_state': 2, 'VEC_lto_out_decl_state_ptr_base_space': 2, 'VEC_lto_out_decl_state_ptr_heap_reserve': 2, 'VEC_lto_out_decl_state_ptr_base_quick_push': 2, 'VEC_lto_out_decl_state_ptr_heap_safe_push': 5, 'lto_push_out_decl_state': 4, 'VEC_lto_out_decl_state_ptr_base_pop': 2, 'lto_pop_out_decl_state': 2, 'lto_record_function_out_decl_state': 6}, "PosixPath('602/graphite-ppl.bc')": {}, "PosixPath('602/fopen_unlocked.bc')": {}, "PosixPath('602/tree-tailcall.bc')": {'single_succ_edge': 1, 'first_htab_element': 7, 'first_referenced_var': 5, 'end_htab_p': 2, 'end_referenced_vars_p': 1, 'is_global_var': 2, 'may_be_aliased': 7, 'is_call_clobbered': 8, 'is_call_used': 17, 'next_htab_element': 4, 'next_referenced_var': 2, 'suitable_for_tail_opt_p': 19, 'suitable_for_tail_call_opt_p': 3, 'ei_end_p': 1, 'ei_cond': 3, 'bb_seq': 2, 'gsi_last_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_lhs': 1, 'gimple_vuse': 2, 'gimple_references_memory_p': 2, 'ei_next': 4, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_call_arg': 1, 'propagate_through_phis': 9, 'gsi_start_bb': 6, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_cast_p': 2, 'gimple_assign_rhs2': 3, 'independent_of_stmt_p': 69, 'process_assignment': 62, 'gimple_return_retval': 1, 'find_tail_calls': 583, 'phi_nodes': 2, 'var_ann': 2, 'arg_needs_copy_p': 6, 'single_pred_edge': 1, 'decrease_profile': 9, 'gimple_set_op': 4, 'gimple_assign_set_lhs': 3, 'adjust_return_value_with_ops': 4, 'update_accumulator_with_ops': 5, 'add_successor_phi_arg': 5, 'eliminate_tail_call': 105, 'optimize_tail_call': 105, 'gimple_return_set_retval': 3, 'adjust_return_value': 44, 'add_virtual_phis': 2, 'tree_optimize_tail_calls_1': 493}, "PosixPath('602/tree-vect-loop.bc')": {'vect_analyze_loop_form': 20, 'new_loop_vec_info': 84, 'first_imm_use_on_stmt': 2, 'next_imm_use_on_stmt': 2, 'gsi_stmt': 1, 'bb_seq': 2, 'gsi_start_bb': 6, 'VEC_slp_instance_base_iterate': 2, 'destroy_loop_vec_info': 60, 'phi_nodes': 2, 'VEC_vec_void_p_base_space': 2, 'VEC_vec_void_p_heap_reserve': 2, 'VEC_vec_void_p_base_quick_push': 2, 'VEC_vec_void_p_heap_safe_push': 4, 'set_vinfo_for_stmt': 4, 'loop_outer': 2, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 5, 'VEC_gimple_base_pop': 2, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'is_pattern_stmt_p': 1, 'next_readonly_imm_use': 2, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'is_loop_header_bb_p': 2, 'gimple_op_ptr': 1, 'gimple_assign_rhs1_ptr': 1, 'gimple_assign_rhs2_ptr': 1, 'vect_is_simple_reduction': 129, 'vect_analyze_scalar_cycles_1': 32, 'gimple_call_fn': 1, 'gimple_call_return_type': 2, 'gimple_expr_type': 4, 'vect_determine_vectorization_factor': 41, 'vect_model_induction_cost': 6, 'gsi_after_labels': 41, 'gimple_set_op': 4, 'gimple_assign_set_lhs': 3, 'get_initial_def_for_induction': 127, 'vectorizable_induction': 160, 'vect_estimate_min_profitable_iters': 120, 'vect_analyze_loop_operations': 113, 'vect_analyze_loop': 38, 'get_initial_def_for_reduction': 58, 'tree_operand_length': 3, 'vect_model_reduction_cost': 76, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'VEC_gimple_base_iterate': 2, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'move_use_after_head': 5, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_init_use': 55, 'gimple_vuse_op': 2, 'link_use_stmts_after': 62, 'first_imm_use_stmt': 13, 'next_imm_use_stmt': 10, 'vect_create_epilog_for_reduction': 514, 'vectorizable_reduction': 614, 'vectorizable_live_operation': 75, 'op_iter_init_phidef': 2, 'op_iter_next_def': 4, 'op_iter_init_def': 42, 'gimple_debug_bind_reset_value': 3, 'vect_loop_kill_debug_uses': 69, 'vect_transform_loop': 159}, "PosixPath('602/tree-vect-patterns.bc')": {'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'VEC_vec_void_p_base_space': 2, 'VEC_vec_void_p_heap_reserve': 2, 'VEC_vec_void_p_base_quick_push': 2, 'VEC_vec_void_p_heap_safe_push': 4, 'set_vinfo_for_stmt': 4, 'vect_pattern_recog_1': 58, 'gimple_call_lhs': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_call_arg': 1, 'gimple_set_op': 4, 'gimple_call_set_lhs': 3, 'vect_recog_pow_pattern': 9, 'gimple_call_return_type': 2, 'gimple_expr_type': 4, 'gimple_assign_rhs2': 3, 'widened_name_p': 37, 'vect_recog_dot_prod_pattern': 149, 'vect_recog_widen_sum_pattern': 33, 'vect_recog_widen_mult_pattern': 74, 'vect_pattern_recog': 115}, "PosixPath('602/reload1.bc')": {'init_elim_table': 37, 'finish_spills': 246, 'eliminate_regs_in_insn': 436, 'copy_reloads': 14, 'find_reload_regs': 961, 'find_reg': 473, 'bitmap_initialize_stat': 2, 'new_insn_chain': 24, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'add_to_hard_reg_set': 1, 'compute_use_by_pseudos': 23, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'has_nonexceptional_receiver': 31, 'scan_paradoxical_subregs': 9, 'function_invariant_p': 6, 'alter_reg': 38, 'maybe_fix_stack_asms': 18, 'spill_hard_reg': 3, 'set_initial_elim_offsets': 12, 'set_offsets_for_label': 22, 'set_label_offsets': 63, 'set_initial_label_offsets': 2, 'eliminate_regs_1': 130, 'recog_memoized': 3, 'delete_dead_insn': 2, 'elimination_effects': 141, 'check_eliminable_occurrences': 10, 'update_eliminable_offsets': 12, 'calculate_needs_all_insns': 287, 'verify_initial_elim_offsets': 4, 'update_eliminables': 51, 'count_pseudo': 9, 'order_regs_for_reload': 32, 'reloads_unique_chain_p': 18, 'VEC_rtx_p_base_space': 2, 'VEC_rtx_p_heap_reserve': 2, 'VEC_rtx_p_base_quick_push': 2, 'VEC_rtx_p_heap_safe_push': 4, 'substitute': 6, 'VEC_rtx_p_base_pop': 2, 'gen_reload_chain_without_interm_reg_p': 42, 'reloads_conflict': 4, 'count_spilled_pseudo': 5, 'reload_reg_class_lower': 20, 'select_reload_regs': 873, 'delete_caller_save_insns': 11, 'mark_reload_reg_in_use': 84, 'choose_reload_regs_init': 51, 'reload_reg_free_for_value_p': 79, 'free_for_value_p': 93, 'reload_reg_free_p': 31, 'set_reload_reg': 27, 'allocate_reload_reg': 87, 'failed_reload': 6, 'clear_reload_reg_in_use': 18, 'choose_reload_regs': 1813, 'merge_assigned_reloads': 126, 'delete_address_reloads_1': 20, 'delete_address_reloads': 21, 'delete_output_reload': 106, 'inc_for_reload': 9, 'conflicts_with_override': 1, 'reload_adjust_reg_for_temp': 5, 'emit_insn_if_valid_for_reload': 2, 'gen_reload': 32, 'emit_input_reload_insns': 489, 'do_input_reload': 688, 'forget_old_reloads_1': 24, 'emit_output_reload_insns': 129, 'do_output_reload': 193, 'reload_reg_reaches_end_p': 113, 'inherit_piecemeal_p': 3, 'emit_reload_insns': 2058, 'forget_marked_reloads': 28, 'reload_as_needed': 4501, 'replace_pseudos_in': 16, 'fixup_abnormal_edges': 59, 'mark_not_eliminable': 25, 'reload': 2176, 'elimination_target_reg_p': 2, 'deallocate_reload_reg': 11}, "PosixPath('602/graphite-dependences.bc')": {}, "PosixPath('602/graphite-clast-to-gimple.bc')": {}, "PosixPath('602/intl.bc')": {}, "PosixPath('602/tree-if-conv.bc')": {'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 19, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'pred_blocks_visited_p': 3, 'get_loop_body_in_if_conv_order': 12, 'if_convertible_bb_p': 10, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_lhs': 1, 'bb_with_exit_edge_p': 3, 'if_convertible_gimple_assign_stmt_p': 3, 'if_convertible_stmt_p': 2, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'next_readonly_imm_use': 2, 'if_convertible_phi_p': 15, 'if_convertible_loop_p': 98, 'gimple_set_op': 4, 'gimple_debug_bind_reset_value': 3, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'gimple_assign_set_lhs': 3, 'ifc_temp_var': 5, 'add_to_predicate_list': 3, 'add_to_dst_predicate_list': 1, 'tree_if_convert_cond_stmt': 12, 'tree_if_convert_stmt': 35, 'single_succ_edge': 1, 'gsi_after_labels': 41, 'find_phi_replacement_condition': 5, 'replace_phi_with_cond_gimple_assign_stmt': 35, 'set_phi_nodes': 2, 'process_phi_nodes': 104, 'ei_safe_edge': 3, 'gsi_last_bb': 6, 'set_bb_seq': 2, 'combine_blocks': 242, 'clean_predicate_lists': 4, 'tree_if_conversion': 541, 'main_tree_if_conversion': 534}, "PosixPath('602/value-prof.bc')": {'gimple_mod_subtract_transform': 81, 'gimple_divmod_fixed_value_transform': 69, 'gimple_stringops_transform': 64, 'gimple_ic_transform': 56, 'gimple_histogram_value': 1, 'set_histogram_value': 7, 'gimple_remove_histogram_value': 3, 'gimple_histogram_value_of_type': 3, 'dump_histogram_value': 24, 'dump_histograms_for_stmt': 1, 'gimple_remove_stmt_histograms': 1, 'gimple_alloc_histogram_value': 4, 'gimple_duplicate_stmt_histograms': 11, 'gimple_move_stmt_histograms': 4, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'verify_histograms': 51, 'stringop_block_profile': 5, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'VEC_histogram_value_base_space': 2, 'VEC_histogram_value_heap_reserve': 2, 'VEC_histogram_value_base_quick_push': 2, 'gimple_divmod_values_to_profile': 42, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_call_arg': 1, 'VEC_histogram_value_heap_safe_push': 5, 'gimple_stringops_values_to_profile': 45, 'gimple_indirect_call_to_profile': 13, 'gimple_values_to_profile': 125, 'VEC_histogram_value_base_iterate': 2, 'gimple_find_values_to_profile': 283, 'find_values_to_profile': 268, 'check_counter': 3, 'gimple_mod_subtract': 40, 'gimple_divmod_fixed_value': 42, 'gimple_mod_pow2': 36, 'gimple_mod_pow2_value_transform': 53, 'gimple_set_op': 4, 'gimple_call_set_arg': 3, 'gimple_stringop_fixed_value': 47, 'init_pid_map': 3, 'find_func_by_pid': 5, 'gimple_call_set_fndecl': 3, 'gimple_ic': 22, 'gimple_value_profile_transformations': 1005}, "PosixPath('602/stmt.bc')": {'label_rtx': 6, 'expand_nl_goto_receiver': 1, 'expand_label': 19, 'parse_output_constraint': 15, 'parse_input_constraint': 11, 'decl_overlaps_hard_reg_set_p': 10, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_asm_output_op': 5, 'gimple_asm_input_op': 3, 'gimple_asm_clobber_op': 8, 'gimple_asm_label_op': 8, 'expand_asm_loc': 2, 'check_operand_nalternatives': 8, 'check_unique_operand_names': 6, 'resolve_operand_name_1': 7, 'resolve_asm_operand_names': 12, 'tree_conflicts_with_clobbers_p': 1, 'expand_asm_operands': 1110, 'expand_asm_stmt': 62, 'expand_expr_stmt': 7, 'tree_operand_length': 3, 'warn_if_unused_value': 17, 'expand_value_return': 9, 'expand_return': 64, 'expand_decl': 40, 'gimple_switch_index': 1, 'gimple_switch_label': 3, 'add_case_node': 23, 'case_bit_test_cmp': 4, 'emit_case_bit_tests': 29, 'estimate_case_costs': 10, 'balance_case_nodes': 37, 'node_has_low_bound': 2, 'node_has_high_bound': 2, 'emit_case_nodes': 30, 'expand_case': 171}, "PosixPath('602/domwalk.bc')": {'VEC_void_p_base_pop': 2, 'VEC_void_p_base_space': 2, 'VEC_void_p_heap_reserve': 2, 'VEC_void_p_base_quick_push': 2, 'VEC_void_p_heap_safe_push': 5, 'walk_dominator_tree': 86, 'init_walk_dominator_tree': 2, 'fini_walk_dominator_tree': 13}, "PosixPath('602/alias.bc')": {'alias_set_subset_of': 2, 'alias_sets_conflict_p': 4, 'walk_mems_2': 2, 'get_deref_alias_set_1': 4, 'VEC_alias_set_entry_base_space': 2, 'VEC_alias_set_entry_gc_reserve': 2, 'VEC_alias_set_entry_base_quick_push': 2, 'VEC_alias_set_entry_gc_safe_push': 4, 'new_alias_set': 6, 'VEC_tree_base_iterate': 2, 'insert_subset_children': 2, 'record_alias_subset': 9, 'get_alias_set': 55, 'record_component_aliases': 11, 'component_uses_parent_alias_set': 6, 'get_deref_alias_set': 2, 'canon_rtx': 14, 'find_base_term': 20, 'get_addr': 7, 'nonoverlapping_component_refs_p': 4, 'nonoverlapping_memrefs_p': 76, 'base_alias_check': 20, 'addr_side_effect_eval': 3, 'rtx_equal_for_memref_p': 18, 'memrefs_conflict_p': 63, 'mems_in_disjoint_alias_sets_p': 4, 'fixed_scalar_and_varying_struct_p': 5, 'ao_ref_from_mem': 34, 'rtx_refs_may_alias_p': 1, 'true_dependence': 19, 'canon_true_dependence': 16, 'write_dependence_p': 24, 'init_alias_target': 1, 'memory_modified_in_insn_p': 2, 'VEC_rtx_base_space': 2, 'VEC_rtx_gc_reserve_exact': 2, 'VEC_rtx_gc_safe_grow': 2, 'VEC_rtx_gc_safe_grow_cleared': 2, 'find_base_value': 27, 'record_set': 57, 'init_alias_analysis': 88, 'gt_pch_na_reg_known_value': 1, 'gt_ggc_ma_reg_known_value': 1}, "PosixPath('602/tree-data-ref.bc')": {'split_constant_offset_1': 220, 'initialize_data_dependence_relation': 52, 'compute_self_dependence': 15, 'build_rdg': 134, 'subscript_dependence_tester_1': 512, 'VEC_data_reference_p_base_iterate': 2, 'dump_data_references': 2, 'VEC_ddr_p_base_iterate': 2, 'VEC_tree_base_iterate': 2, 'dump_conflict_function': 1, 'VEC_loop_p_base_iterate': 2, 'dump_data_dependence_relation': 18, 'dump_data_dependence_relations': 2, 'VEC_lambda_vector_base_iterate': 2, 'print_dir_vectors': 2, 'print_dist_vectors': 2, 'dump_dist_dir_vectors': 15, 'dump_ddrs': 2, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'split_constant_offset': 27, 'canonicalize_base_object_address': 4, 'dr_analyze_innermost': 104, 'free_data_ref': 1, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 5, 'dr_analyze_indices': 32, 'dr_analyze_alias': 4, 'create_data_ref': 58, 'VEC_tree_base_pop': 2, 'disjoint_objects_p': 24, 'dr_may_alias_p': 64, 'estimated_loop_iterations_int': 5, 'VEC_subscript_p_base_iterate': 2, 'free_conflict_function': 2, 'affine_fn_cst': 2, 'conflict_fn': 12, 'VEC_lambda_vector_base_space': 2, 'VEC_lambda_vector_heap_reserve': 2, 'VEC_lambda_vector_base_quick_push': 2, 'VEC_lambda_vector_heap_safe_push': 5, 'save_dist_v': 11, 'save_dir_v': 11, 'object_address_invariant_in_loop_p': 5, 'VEC_subscript_p_base_space': 2, 'VEC_subscript_p_heap_reserve': 2, 'VEC_subscript_p_base_quick_push': 2, 'VEC_subscript_p_heap_safe_push': 5, 'VEC_ddr_p_base_space': 2, 'VEC_ddr_p_heap_reserve': 2, 'VEC_ddr_p_base_quick_push': 2, 'VEC_ddr_p_heap_safe_push': 5, 'access_functions_are_affine_or_constant_p': 1, 'analyze_ziv_subscript': 12, 'siv_subscript_p': 4, 'evolution_function_is_affine_in_loop': 2, 'get_chrec_loop': 2, 'analyze_siv_subscript_cst_affine': 48, 'initialize_matrix_A': 8, 'affine_fn_univar': 5, 'compute_overlap_steps_for_affine_univar': 4, 'affine_fn_op': 10, 'compute_overlap_steps_for_affine_1_2': 396, 'analyze_subscript_affine_affine': 64, 'build_polynomial_chrec': 6, 'can_use_analyze_subscript_affine_affine': 4, 'analyze_siv_subscript': 28, 'estimated_loop_iterations_tree': 5, 'analyze_miv_subscript': 30, 'analyze_overlapping_iterations': 6, 'free_subscripts': 3, 'finalize_ddr_dependent': 2, 'common_affine_function': 5, 'affine_function_constant_p': 2, 'compute_subscript_distance': 9, 'same_access_functions': 4, 'constant_access_functions': 7, 'add_distance_for_zero_overlaps': 5, 'add_multivariate_self_dist': 12, 'add_other_self_distances': 29, 'build_classic_dist_vector_1': 13, 'build_classic_dist_vector': 139, 'build_classic_dir_vector': 5, 'subscript_dependence_tester': 243, 'omega_init_eqn_zero': 7, 'omega_add_zero_eq': 12, 'init_omega_eq_with_af': 9, 'omega_setup_subscript': 15, 'omega_add_zero_geq': 14, 'omega_copy_eqn': 14, 'omega_copy_problem': 211, 'omega_free_problem': 3, 'omega_extract_distance_vectors': 87, 'init_omega_for_ddr_1': 186, 'init_omega_for_ddr': 6, 'ddr_consistent_p': 33, 'compute_affine_dependence': 37, 'compute_all_dependences': 406, 'gimple_vuse': 2, 'gimple_op_ptr': 1, 'gimple_assign_lhs_ptr': 1, 'gimple_assign_rhs1_ptr': 1, 'VEC_data_ref_loc_base_space': 2, 'VEC_data_ref_loc_heap_reserve': 2, 'VEC_data_ref_loc_heap_safe_push': 3, 'gimple_call_arg_ptr': 1, 'get_references_in_stmt': 32, 'dr_address_invariant_p': 2, 'VEC_data_reference_p_base_space': 2, 'VEC_data_reference_p_heap_reserve': 2, 'VEC_data_reference_p_base_quick_push': 2, 'VEC_data_reference_p_heap_safe_push': 5, 'find_data_references_in_stmt': 19, 'graphite_find_data_references_in_stmt': 14, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'find_data_references_in_bb': 9, 'find_data_references_in_loop': 1, 'VEC_loop_p_base_space': 2, 'VEC_loop_p_heap_reserve': 2, 'VEC_loop_p_base_quick_push': 2, 'VEC_loop_p_heap_safe_push': 5, 'find_loop_nest_1': 4, 'find_loop_nest': 8, 'compute_data_dependences_for_loop': 17, 'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 19, 'free_dependence_relation': 5, 'free_dependence_relations': 1, 'free_data_refs': 2, 'analyze_all_data_dependences': 20, 'tree_check_data_deps': 56, 'dump_rdg_vertex': 2, 'dump_rdg_component': 4, 'dump_rdg': 2, 'rdg_vertex_for_stmt': 2, 'VEC_gimple_base_iterate': 2, 'create_rdg_vertices': 26, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 5, 'stmts_from_loop': 29, 'ddr_dependence_level': 11, 'create_rdg_edge_for_ddr': 37, 'clear_and_done_ssa_iter': 2, 'op_iter_init_phidef': 2, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'op_iter_init': 10, 'op_iter_next_def': 4, 'op_iter_init_def': 42, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'next_readonly_imm_use': 2, 'create_rdg_edges_for_scalar': 7, 'create_rdg_edges': 114, 'free_rdg': 4, 'stores_from_loop': 15, 'rdg_defs_used_in_other_loops_p': 29, 'ref_base_address': 4, 'have_similar_memory_accesses': 42, 'VEC_gimple_base_ordered_remove': 3, 'ref_base_address_1': 16, 'remove_similar_memory_refs': 4, 'access_matrix_get_index_for_parameter': 2}, "PosixPath('602/emit-rtl.bc')": {'set_mem_attributes_minus_bitpos': 62, 'set_mem_attrs_for_spill': 10, 'init_virtual_regs': 25, 'gen_rtx_CONST_INT': 4, 'lookup_const_double': 1, 'const_double_from_real_value': 6, 'lookup_const_fixed': 1, 'const_fixed_from_fixed_value': 6, 'immed_double_const': 11, 'gen_rtx_REG': 6, 'gen_const_mem': 2, 'get_mem_attrs': 28, 'set_mem_alias_set': 10, 'gen_frame_mem': 3, 'gen_tmp_stack_mem': 3, 'validate_subreg': 29, 'gen_rtvec': 6, 'gen_rtvec_v': 1, 'gen_reg_rtx': 5, 'get_reg_attrs': 4, 'update_reg_offset': 2, 'gen_rtx_REG_offset': 2, 'gen_reg_rtx_offset': 2, 'adjust_reg_mode': 5, 'mark_reg_pointer': 3, 'set_reg_attrs_from_value': 17, 'set_reg_attrs_for_parm': 10, 'subreg_lowpart_p': 4, 'set_reg_attrs_for_decl_rtl': 32, 'mark_user_reg': 2, 'maybe_set_first_label_num': 1, 'gen_lowpart_common': 10, 'gen_highpart': 4, 'change_address_1': 16, 'adjust_address_1': 15, 'operand_subword': 3, 'get_mem_align_offset': 13, 'set_mem_addr_space': 11, 'set_mem_align': 11, 'set_mem_expr': 10, 'set_mem_offset': 10, 'set_mem_size': 13, 'change_address': 15, 'offset_address': 10, 'widen_memory_access': 7, 'get_spill_slot_decl': 6, 'set_new_first_and_last_insn': 4, 'reset_used_flags': 6, 'set_used_flags': 5, 'set_used_decls': 6, 'copy_rtx_if_shared_1': 11, 'copy_rtx_if_shared': 1, 'unshare_all_rtl_in_chain': 28, 'unshare_all_rtl_1': 2, 'unshare_all_rtl_again': 9, 'unshare_all_rtl': 3, 'verify_rtx_sharing': 17, 'verify_rtl_sharing': 11, 'make_safe_from': 4, 'get_last_insn_anywhere': 2, 'next_insn': 4, 'get_first_nonnote_insn': 21, 'previous_insn': 5, 'get_last_nonnote_insn': 5, 'next_nonnote_insn_bb': 2, 'prev_nonnote_insn_bb': 2, 'last_call_insn': 2, 'active_insn_p': 2, 'skip_consecutive_labels': 2, 'mark_label_nuses': 6, 'emit_insn_after_1': 15, 'make_insn_raw': 8, 'add_insn_after': 24, 'emit_insn_after_setloc': 1, 'try_split': 40, 'make_debug_insn_raw': 10, 'make_jump_insn_raw': 8, 'add_insn': 2, 'add_insn_before': 24, 'set_insn_deleted': 3, 'remove_insn': 24, 'add_function_usage_to': 2, 'reorder_insns_nobb': 3, 'reorder_insns': 8, 'make_call_insn_raw': 8, 'emit_note_before': 4, 'emit_note_after': 4, 'emit_insn_after': 3, 'emit_jump_insn_after_setloc': 1, 'emit_jump_insn_after': 3, 'emit_call_insn_after_setloc': 1, 'emit_call_insn_after': 3, 'emit_debug_insn_after_setloc': 1, 'emit_debug_insn_after': 2, 'emit_insn_before_setloc': 3, 'emit_insn_before': 3, 'emit_jump_insn_before_setloc': 1, 'emit_jump_insn_before': 3, 'emit_call_insn_before_setloc': 1, 'emit_call_insn_before': 3, 'emit_debug_insn_before_setloc': 1, 'emit_debug_insn_before': 2, 'emit_insn': 4, 'emit_debug_insn': 4, 'emit_jump_insn': 4, 'emit_call_insn': 2, 'emit_label': 3, 'emit_barrier': 3, 'emit_note_copy': 8, 'emit_note': 9, 'start_sequence': 6, 'end_sequence': 8, 'gen_clobber': 8, 'gen_use': 8, 'classify_insn': 11, 'emit': 11, 'push_topmost_sequence': 5, 'pop_topmost_sequence': 13, 'copy_insn_1': 82, 'init_emit': 54, 'gen_rtx_CONST_VECTOR': 10, 'init_emit_regs': 11, 'gen_const_vector': 4, 'reg_attrs_htab_eq': 4, 'reg_attrs_htab_hash': 2, 'mem_attrs_htab_eq': 32, 'mem_attrs_htab_hash': 16, 'const_double_htab_eq': 8, 'const_double_htab_hash': 4, 'init_emit_once': 746, 'emit_copy_of_insn_after': 18}, "PosixPath('602/haifa-sched.bc')": {'remove_notes': 12, 'restore_other_notes': 16, 'schedule_block': 645, 'schedule_insn': 313, 'haifa_sched_init': 32, 'sd_iterator_cond': 7, 'init_h_i_d': 9, 'create_check_block_twin': 213, 'may_trap_exp': 5, 'haifa_classify_rtx': 8, 'recog_memoized': 3, 'insn_cost': 8, 'dep_cost_1': 11, 'increase_insn_priority': 3, 'ready_lastpos': 7, 'ready_element': 4, 'dying_use_p': 5, 'setup_insn_reg_pressure_info': 103, 'sd_iterator_start': 7, 'dep_list_size': 29, 'rank_for_schedule': 62, 'swap_sort': 7, 'ready_sort': 107, 'setup_ref_regs': 5, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'mark_regno_birth_or_death': 7, 'initiate_reg_pressure_info': 17, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'bb_has_eh_pred': 4, 'initiate_bb_reg_pressure_info': 25, 'save_reg_pressure': 10, 'update_register_pressure': 6, 'restore_reg_pressure': 10, 'setup_insn_max_reg_pressure': 109, 'sched_setup_bb_reg_pressure_info': 23, 'concat_note_lists': 1, 'get_ebb_head_tail': 12, 'no_real_insns_p': 2, 'bb_note': 2, 'reemit_notes': 3, 'max_issue': 96, 'dump_new_block_header': 3, 'ready_remove_first': 4, 'ready_remove': 3, 'queue_insn': 3, 'restore_bb_notes': 26, 'ready_add': 6, 'queue_to_ready': 40, 'debug_ready_list': 8, 'fix_jump_move': 27, 'move_succs': 4, 'move_block_after_check': 27, 'move_insn': 137, 'update_reg_and_insn_max_reg_pressure': 14, 'haifa_speculate_insn': 13, 'haifa_change_pattern': 3, 'queue_remove': 7, 'change_queue_index': 13, 'fix_tick_ready': 55, 'try_ready': 260, 'bitmap_initialize_stat': 2, 'add_jump_dependencies': 2, 'fix_recovery_deps': 159, 'print_curr_reg_pressure': 10, 'ok_for_early_queue_removal': 7, 'early_queue_to_ready': 42, 'choose_ready': 38, 'find_fallthru_edge': 21, 'VEC_basic_block_base_iterate': 2, 'init_insns_in_bb': 6, 'VEC_rtx_base_iterate': 2, 'sched_scan': 6, 'luids_init_insn': 2, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve_exact': 2, 'VEC_int_heap_safe_grow': 2, 'VEC_int_heap_safe_grow_cleared': 2, 'luids_extend_insn': 2, 'sched_init_luids': 2, 'VEC_haifa_insn_data_def_base_space': 2, 'VEC_haifa_insn_data_def_heap_reserve_exact': 2, 'VEC_haifa_insn_data_def_heap_safe_grow': 2, 'VEC_haifa_insn_data_def_heap_safe_grow_cleared': 2, 'extend_h_i_d': 5, 'haifa_init_h_i_d': 2, 'haifa_init_insn': 15, 'sched_extend_bb': 3, 'init_before_recovery': 16, 'sched_create_recovery_block': 23, 'sched_create_recovery_edges': 5, 'process_insn_forw_deps_be_in_spec': 36, 'contributes_to_priority_p': 4, 'VEC_rtx_base_space': 2, 'VEC_rtx_heap_reserve': 2, 'VEC_rtx_base_quick_push': 2, 'VEC_rtx_heap_safe_push': 5, 'clear_priorities': 44, 'priority': 63, 'calc_priorities': 2, 'begin_speculative_block': 4, 'add_to_speculative_block': 347, 'generate_recovery_code': 240, 'fix_inter_tick': 108, 'set_priorities': 11, 'sched_init': 20, 'VEC_basic_block_base_quick_push': 2, 'sched_split_block_1': 2, 'haifa_finish_h_i_d': 4, 'haifa_sched_finish': 5, 'sched_finish_ready_list': 3, 'unlink_bb_notes': 23}, "PosixPath('602/graph.bc')": {'node_data': 8, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'print_rtl_graph_with_bb': 76, 'clean_graph_dump_file': 3, 'finish_graph_dump_file': 3}, "PosixPath('602/tree-nrv.bc')": {'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_lhs': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'is_global_var': 2, 'may_be_aliased': 7, 'is_call_clobbered': 9, 'is_call_used': 17, 'dest_safe_for_nrv_p': 20, 'execute_return_slot_opt': 93, 'gimple_return_retval': 1, 'gimple_has_lhs': 1, 'gimple_assign_lhs': 1, 'var_ann': 2, 'finalize_nrv_r': 2, 'tree_nrv': 321}, "PosixPath('602/sha1.bc')": {'sha1_init_ctx': 29, 'sha1_read_ctx': 10, 'sha1_process_block': 518, 'sha1_finish_ctx': 29, 'sha1_process_bytes': 9, 'sha1_stream': 42, 'sha1_buffer': 30}, "PosixPath('602/final.bc')": {'rest_of_handle_final': 26, 'asm_insn_count': 2, 'get_attr_length_1': 9, 'label_to_alignment': 3, 'label_to_max_skip': 3, 'align_fuzz': 20, 'insn_current_reference_address': 31, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'compute_alignments': 161, 'final_addr_vec_align': 2, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve_exact': 2, 'VEC_int_heap_safe_grow': 2, 'shorten_branches': 398, 'add_debug_prefix_map': 9, 'remap_debug_filename': 15, 'final_start_function': 5, 'final_end_function': 11, 'asm_fprintf': 193, 'profile_function': 9, 'profile_after_prologue': 8, 'output_alternate_entry_point': 2, 'get_mem_expr_from_op': 24, 'output_asm_operand_names': 14, 'output_asm_name': 7, 'output_asm_label': 6, 'alter_subreg': 8, 'walk_alter_subreg': 1, 'output_address': 2, 'output_addr_const': 16, 'mark_symbol_ref_as_used': 2, 'output_operand': 11, 'output_asm_insn': 127, 'recog_memoized': 3, 'cleanup_subreg_operands': 17, 'get_insn_template': 5, 'call_from_call_insn': 2, 'final_scan_insn': 355, 'final': 7, 'split_double': 13, 'leaf_function_p': 12, 'final_forward_branch_p': 3, 'debug_flush_symbol_queue': 17, 'debug_queue_symbol': 3, 'rest_of_clean_state': 17}, "PosixPath('602/getruntime.bc')": {'get_run_time': 6}, "PosixPath('602/tree-ssa-alias.bc')": {'ptr_deref_may_alias_global_p': 2, 'first_htab_element': 7, 'first_referenced_var': 5, 'end_htab_p': 2, 'end_referenced_vars_p': 2, 'may_be_aliased': 7, 'next_htab_element': 4, 'next_referenced_var': 1, 'dump_points_to_solution': 2, 'dump_points_to_info_for': 1, 'dump_alias_info': 17, 'get_ptr_info': 2, 'ao_ref_init': 4, 'ao_ref_base': 2, 'ao_ref_alias_set': 2, 'ao_ref_init_from_ptr_and_size': 25, 'decl_refs_may_alias_p': 4, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'ptr_deref_may_alias_decl_p': 25, 'same_type_for_tbaa': 4, 'aliasing_component_refs_p': 158, 'indirect_ref_may_alias_decl_p': 6, 'ptr_derefs_may_alias_p': 18, 'indirect_refs_may_alias_p': 6, 'refs_may_alias_p_1': 117, 'refs_may_alias_p': 16, 'refs_anti_dependent_p': 16, 'refs_output_dependent_p': 16, 'gimple_call_chain': 1, 'is_global_var': 2, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_call_arg': 1, 'is_call_clobbered': 9, 'is_call_used': 17, 'ref_maybe_used_by_call_p_1': 128, 'ref_maybe_used_by_call_p': 240, 'ref_maybe_used_by_stmt_p': 228, 'gimple_call_lhs': 1, 'ptr_deref_may_alias_ref_p_1': 5, 'call_may_clobber_ref_p_1': 104, 'gimple_assign_lhs': 1, 'stmt_may_clobber_ref_p_1': 117, 'stmt_may_clobber_ref_p': 3, 'gimple_vuse': 2, 'get_continuation_for_phi': 16, 'maybe_skip_until': 4, 'walk_non_aliased_vuses': 9, 'walk_aliased_vdefs_1': 10, 'walk_aliased_vdefs': 4}, "PosixPath('602/gimple-iterator.bc')": {'gsi_start': 8, 'gsi_insert_seq_nodes_before': 8, 'gsi_insert_seq_before_without_update': 2, 'gsi_stmt': 1, 'update_modified_stmts': 2, 'gsi_insert_seq_nodes_after': 9, 'gsi_insert_seq_after_without_update': 2, 'gsi_split_seq_after': 9, 'gsi_split_seq_before': 6, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_lhs': 1, 'gimple_has_lhs': 1, 'gimple_use_ops': 2, 'op_iter_init': 7, 'op_iter_next_use': 7, 'op_iter_init_use': 32, 'delink_imm_use': 3, 'delink_stmt_imm_use': 16, 'gsi_replace': 10, 'gsi_insert_before_without_update': 3, 'gsi_insert_before': 3, 'gsi_insert_after_without_update': 3, 'gsi_insert_after': 3, 'gsi_remove': 14, 'phi_nodes': 2, 'gsi_start_phis': 10, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_for_stmt': 48, 'gsi_last_bb': 6, 'gsi_move_to_bb_end': 34, 'single_pred_edge': 1, 'gimple_find_edge_insert_loc': 51, 'gsi_insert_on_edge_immediate': 5, 'gsi_insert_seq_on_edge_immediate': 5, 'single_succ_edge': 1, 'gsi_commit_one_edge_insert': 4, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'gsi_commit_edge_inserts': 14}, "PosixPath('602/tree-call-cdce.bc')": {'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_lhs': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_call_arg': 1, 'check_target_format': 2, 'check_builtin_call': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'check_pow': 28, 'is_call_dce_candidate': 10, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 5, 'gimple_set_op': 4, 'gimple_assign_set_lhs': 3, 'gen_one_condition': 15, 'gen_conditions_for_domain': 2, 'gen_conditions_for_pow_cst_base': 7, 'gen_conditions_for_pow_int_base': 10, 'gen_conditions_for_pow': 28, 'gen_shrink_wrap_conditions': 47, 'shrink_wrap_one_built_in_call': 156, 'shrink_wrap_conditional_dead_built_in_calls': 164, 'gimple_vop': 2, 'tree_call_cdce': 430}, "PosixPath('602/ira-conflicts.bc')": {'ira_build_conflicts': 364, 'ira_allocno_set_iter_init': 16, 'ira_allocno_conflict_iter_init': 49, 'ira_allocno_conflict_iter_cond': 67, 'ira_allocno_conflict_iter_next': 8, 'print_conflicts': 150, 'sparseset_bit_p': 7, 'sparseset_insert_bit': 2, 'sparseset_set_bit': 8, 'sparseset_iter_init': 4, 'sparseset_iter_p': 4, 'sparseset_iter_elm': 2, 'sparseset_iter_next': 2, 'build_conflict_bit_table': 170, 'ira_allocno_set_iter_cond': 41, 'ira_allocno_set_iter_next': 3, 'build_allocno_conflicts': 81, 'build_conflicts': 9, 'propagate_copies': 77, 'go_through_subreg': 9, 'ira_get_register_move_cost': 1, 'process_regs_for_copy': 126, 'get_dup_num': 6, 'process_reg_shuffles': 5, 'add_insn_allocno_copies': 123, 'add_copies': 185}, "PosixPath('602/tree-stdarg.bc')": {'execute_optimize_stdarg': 1153, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_call_arg': 1, 'is_global_var': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'ei_end_p': 1, 'ei_cond': 3, 'VEC_edge_base_space': 2, 'VEC_edge_heap_reserve': 2, 'VEC_edge_base_quick_push': 2, 'VEC_edge_heap_safe_push': 5, 'ei_next': 4, 'VEC_edge_base_pop': 2, 'reachable_at_most_once': 32, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_cast_p': 2, 'gimple_assign_rhs2': 3, 'va_list_counter_bump': 90, 'va_list_ptr_read': 29, 'va_list_ptr_write': 4, 'check_va_list_escapes': 34, 'va_list_counter_op': 25, 'va_list_counter_struct_op': 6, 'gimple_use_ops': 2, 'op_iter_init': 7, 'op_iter_next_tree': 6, 'op_iter_init_tree': 30, 'check_all_va_list_escapes': 183, 'find_va_list_reference': 2}, "PosixPath('602/tree-affine.bc')": {'aff_combination_scale': 58, 'aff_combination_add_elt': 35, 'aff_combination_convert': 53, 'aff_combination_remove_elt': 21, 'aff_combination_zero': 4, 'aff_combination_const': 5, 'aff_combination_elt': 23, 'aff_combination_add_cst': 3, 'aff_combination_add': 6, 'aff_combination_to_tree': 16, 'tree_to_aff_combination': 114, 'unshare_aff_combination': 4, 'aff_combination_add_product': 15, 'aff_combination_mult': 15, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'aff_combination_expand': 294, 'double_int_constant_multiple_p': 10, 'aff_combination_constant_multiple_p': 39, 'print_aff': 5, 'get_inner_reference_aff': 12}, "PosixPath('602/ipa-cp.bc')": {'VEC_ipa_node_params_t_base_space': 2, 'VEC_ipa_node_params_t_heap_reserve_exact': 2, 'VEC_ipa_node_params_t_heap_safe_grow': 2, 'VEC_ipa_node_params_t_heap_safe_grow_cleared': 2, 'ipa_check_create_node_params': 2, 'VEC_ipa_edge_args_t_base_space': 2, 'VEC_ipa_edge_args_t_gc_reserve_exact': 2, 'VEC_ipa_edge_args_t_gc_safe_grow': 2, 'VEC_ipa_edge_args_t_gc_safe_grow_cleared': 2, 'ipa_check_create_edge_args': 2, 'ipcp_init_stage': 30, 'ipcp_generate_summary': 34, 'cgraph_only_called_directly_p': 2, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'ipcp_versionable_function_p': 54, 'ipcp_cloning_candidate_p': 12, 'ipcp_initialize_node_lattices': 20, 'ipcp_compute_node_scale': 11, 'ipcp_print_all_lattices': 7, 'ipcp_function_scale_print': 2, 'ipcp_lattice_from_jfunc': 30, 'ipcp_lats_are_equal': 4, 'ipa_lattice_meet': 10, 'ipcp_lattice_changed': 6, 'ipcp_propagate_stage': 99, 'ipcp_change_tops_to_bottom': 10, 'ipcp_print_call_profile_counts': 2, 'ipcp_print_profile_data': 2, 'ipcp_iterate_stage': 102, 'ipcp_const_param_count': 5, 'ipcp_need_redirect_p': 15, 'ipcp_estimate_growth': 20, 'ipcp_estimate_cloning_cost': 13, 'build_const_val': 2, 'ipcp_create_replace_map': 9, 'VEC_ipa_replace_map_p_base_space': 2, 'VEC_ipa_replace_map_p_gc_reserve': 2, 'VEC_ipa_replace_map_p_base_quick_push': 2, 'VEC_ipa_replace_map_p_gc_safe_push': 5, 'VEC_cgraph_edge_p_base_quick_push': 2, 'ipcp_init_cloned_node': 2, 'ipcp_update_callgraph': 20, 'ipcp_update_profiling': 22, 'ipcp_insert_stage': 123, 'ipcp_driver': 261}, "PosixPath('602/lto-opts.bc')": {'output_options': 11, 'VEC_opt_t_base_space': 2, 'VEC_opt_t_heap_reserve': 2, 'VEC_opt_t_base_quick_push': 3, 'VEC_opt_t_heap_safe_push': 6, 'lto_register_user_option': 13, 'clear_options': 2, 'reverse_iterate_options': 6, 'concatenate_options': 1, 'output_string_stream': 4, 'lto_write_options': 40, 'input_string_block': 4, 'input_options': 46, 'lto_read_file_options': 90, 'lto_reissue_options': 19}, "PosixPath('602/loop-invariant.bc')": {'calculate_loop_reg_pressure': 366, 'free_inv_motion_data': 12, 'set_move_mark': 14, 'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 52, 'bitmap_initialize_stat': 2, 'df_lr_get_bb_info': 2, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'get_regno_cover_class': 1, 'change_pressure': 13, 'mark_ref_regs': 7, 'mark_regno_death': 3, 'mark_reg_death': 2, 'mark_regno_live': 3, 'mark_reg_store': 7, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'find_exits': 28, 'compute_always_reached': 3, 'check_invariant_table_size': 1, 'find_defs': 1, 'may_assign_reg_p': 2, 'check_maybe_invariant': 1, 'check_dependency': 8, 'check_dependencies': 4, 'VEC_invariant_p_base_space': 2, 'VEC_invariant_p_heap_reserve': 2, 'VEC_invariant_p_base_quick_push': 2, 'VEC_invariant_p_heap_safe_push': 4, 'create_new_invariant': 71, 'find_invariant_insn': 74, 'invariant_for_use': 11, 'record_use': 12, 'record_uses': 2, 'find_invariants_insn': 84, 'find_invariants_bb': 107, 'find_invariants_body': 109, 'VEC_invariant_p_base_iterate': 2, 'hash_invariant_expr_1': 5, 'find_or_insert_inv': 11, 'find_identical_invariants': 33, 'invariant_expr_equal_p': 6, 'eq_invariant_expr': 8, 'merge_identical_invariants': 2, 'find_invariants': 146, 'get_cover_class_and_nregs': 6, 'get_inv_cost': 224, 'gain_for_invariant': 17, 'best_gain_for_invariant': 90, 'find_invariants_to_move': 246, 'move_invariant_reg': 31, 'move_invariants': 4, 'move_single_loop_invariants': 399, 'move_loop_invariants': 827}, "PosixPath('602/xmalloc.bc')": {}, "PosixPath('602/xstrndup.bc')": {'xstrndup': 1}, "PosixPath('602/lambda-code.bc')": {'first_imm_use_on_stmt': 2, 'next_imm_use_on_stmt': 2, 'build_access_matrix': 11, 'replace_uses_equiv_to_x_with_y': 112, 'lambda_body_vector_new': 42, 'lambda_vector_matrix_mult': 2, 'lambda_body_vector_compute_new': 10, 'print_lambda_body_vector': 2, 'lambda_linear_expression_new': 43, 'print_linear_expression': 1, 'print_lambda_loop': 2, 'lambda_loopnest_new': 60, 'print_lambda_loopnest': 5, 'lambda_lattice_new': 42, 'lambda_lattice_compute_base': 66, 'lle_equal': 14, 'compute_nest_using_fourier_motzkin': 22, 'lambda_compute_auxillary_space': 57, 'lambda_vector_min_nz': 1, 'lambda_compute_step_signs': 4, 'lambda_compute_target_space': 134, 'lambda_loopnest_transform': 148, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'find_induction_var_from_exit_cond': 2, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_next_tree': 6, 'op_iter_init_tree': 71, 'single_ssa_tree_operand': 19, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'phi_loop_edge_uses_def': 9, 'stmt_uses_phi_result': 6, 'next_readonly_imm_use': 2, 'stmt_is_bumper_for_loop': 25, 'perfect_nest_p': 13, 'gimple_assign_lhs': 1, 'op_iter_next_use': 7, 'op_iter_init_use': 55, 'clear_and_done_ssa_iter': 2, 'op_iter_init_phiuse': 19, 'cannot_convert_modify_to_perfect_nest': 22, 'exit_phi_for_loop_p': 4, 'can_put_in_inner_loop': 3, 'can_put_after_inner_loop': 3, 'cannot_convert_bb_to_perfect_nest': 57, 'can_convert_to_perfect_nest': 59, 'VEC_tree_base_iterate': 2, 'gcc_tree_to_linear_expression': 16, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'loop_outer': 2, 'invariant_in_loop_and_outer_loops': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 5, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 2, 'VEC_int_base_quick_push': 2, 'VEC_int_heap_safe_push': 5, 'gcc_loop_to_lambda_loop': 34, 'VEC_lambda_loop_base_space': 2, 'VEC_lambda_loop_heap_reserve': 2, 'VEC_lambda_loop_base_quick_push': 2, 'VEC_lambda_loop_heap_safe_push': 5, 'VEC_source_location_base_space': 2, 'VEC_source_location_heap_reserve': 2, 'VEC_source_location_base_quick_push': 2, 'single_succ_edge': 1, 'VEC_tree_base_pop': 2, 'VEC_source_location_base_pop': 2, 'single_pred_edge': 1, 'gimple_set_op': 4, 'gimple_assign_set_lhs': 3, 'gimple_cond_set_lhs': 3, 'gimple_cond_set_rhs': 3, 'gimple_cond_set_condition': 5, 'gsi_last_bb': 6, 'gsi_after_labels': 41, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'gimple_vop': 2, 'perfect_nestify': 471, 'VEC_lambda_loop_base_iterate': 2, 'gcc_loopnest_to_lambda_loopnest': 542, 'end_imm_use_stmt_p': 2, 'move_use_after_head': 5, 'gimple_vuse_op': 2, 'link_use_stmts_after': 61, 'first_imm_use_stmt': 13, 'next_imm_use_stmt': 10, 'remove_iv': 71, 'build_linear_expr': 1, 'lle_to_gcc_expression': 13, 'lbv_to_gcc_expression': 2, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 5, 'lambda_loopnest_to_gcc_loopnest': 274, 'VEC_ddr_p_base_iterate': 2, 'lambda_transform_legal_p': 30, 'VEC_data_reference_p_base_iterate': 2, 'tree_operand_length': 3, 'lambda_collect_parameters_from_af': 7, 'lambda_collect_parameters': 5, 'VEC_loop_p_base_iterate': 2, 'av_for_af_base': 11, 'av_for_af': 5, 'VEC_lambda_vector_base_quick_push': 2, 'lambda_compute_access_matrices': 13}, "PosixPath('602/ipa.bc')": {'cgraph_only_called_directly_p': 2, 'cgraph_postorder': 38, 'cgraph_can_remove_if_no_direct_calls_p': 4, 'update_inlined_to_pointer': 2, 'cgraph_remove_unreachable_nodes': 163, 'cgraph_node_set_new': 2, 'VEC_cgraph_node_ptr_base_space': 2, 'VEC_cgraph_node_ptr_gc_reserve': 2, 'VEC_cgraph_node_ptr_base_quick_push': 2, 'VEC_cgraph_node_ptr_gc_safe_push': 5, 'cgraph_node_set_add': 9, 'VEC_cgraph_node_ptr_base_pop': 2, 'cgraph_node_set_remove': 8, 'cgraph_node_set_find': 2, 'dump_cgraph_node_set': 2, 'cgraph_externally_visible_p': 24, 'function_and_variable_visibility': 234, 'whole_program_function_and_variable_visibility': 21}, "PosixPath('602/cfganal.bc')": {'set_edge_can_fallthru_flag': 25, 'sbitmap_iter_init': 16, 'flow_active_insn_p': 2, 'forwarder_block_p': 9, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'can_fallthru': 20, 'could_fall_through': 13, 'ei_one_before_end_p': 1, 'mark_dfs_back_edges': 48, 'find_unreachable_blocks': 17, 'create_edge_list': 23, 'print_edge_list': 5, 'find_edge_index': 4, 'verify_edge_list': 89, 'find_edge': 14, 'sbitmap_iter_cond': 39, 'sbitmap_iter_next': 3, 'flow_nodes_print': 2, 'flow_edge_list_print': 2, 'ei_safe_edge': 3, 'remove_fake_predecessors': 4, 'add_noreturn_fake_exit_edges': 11, 'flow_dfs_compute_reverse_init': 3, 'flow_dfs_compute_reverse_add_bb': 3, 'flow_dfs_compute_reverse_execute': 18, 'connect_infinite_loops_to_exit': 85, 'post_order_compute': 51, 'dfs_find_deadend': 8, 'inverted_post_order_compute': 67, 'pre_and_rev_post_order_compute': 36, 'dfs_enumerate_from': 45, 'compute_dominance_frontiers_1': 19, 'compute_dominance_frontiers': 23, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'VEC_int_base_quick_push': 2, 'VEC_int_base_pop': 2, 'bmp_iter_and_compl_init': 24, 'bmp_iter_and_compl': 34, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 2, 'VEC_int_heap_safe_push': 5, 'compute_idf': 81}, "PosixPath('602/physmem.bc')": {}, "PosixPath('602/insn-emit.bc')": {'gen_movti': 2, 'gen_split_1883': 6, 'gen_split_1884': 6, 'gen_split_1885': 6, 'gen_split_1891': 3, 'gen_split_1895': 3, 'gen_split_1908': 15, 'gen_split_1992': 6, 'gen_split_1993': 6, 'gen_split_1996': 6, 'gen_split_1997': 6, 'gen_split_2036': 10, 'gen_split_2037': 8, 'gen_split_2038': 11, 'gen_split_2039': 10, 'gen_split_2076': 18, 'gen_split_2087': 9, 'gen_split_2095': 7, 'gen_split_2104': 7, 'gen_split_2105': 7, 'gen_split_2121': 13, 'gen_split_2182': 4, 'gen_split_2183': 4, 'gen_peephole2_2202': 12, 'gen_peephole2_2203': 12, 'gen_split_2220': 8, 'gen_split_2225': 5, 'gen_split_2236': 7, 'gen_split_2237': 7, 'gen_split_2238': 7, 'gen_split_2239': 7, 'gen_split_2405': 13, 'gen_split_2418': 17, 'gen_split_2420': 4, 'gen_split_2421': 4, 'gen_split_2422': 9, 'gen_peephole2_2429': 4, 'gen_peephole2_2430': 4, 'gen_peephole2_2443': 9, 'gen_split_2598': 4, 'gen_split_2599': 4, 'gen_smaxv16qi3': 45, 'gen_smaxv4si3': 45, 'gen_umaxv4si3': 45, 'gen_sminv16qi3': 45, 'gen_sminv4si3': 45, 'gen_uminv8hi3': 45, 'gen_uminv4si3': 45, 'gen_split_2926': 4, 'gen_split_2927': 4, 'gen_split_2928': 4, 'gen_split_2929': 4, 'gen_split_1848': 4, 'gen_split_1849': 4, 'gen_split_1850': 4, 'gen_split_1851': 4, 'gen_split_1852': 4, 'gen_split_1853': 7, 'gen_split_1854': 7, 'gen_movsi': 1, 'gen_movhi': 1, 'gen_movqi': 1, 'gen_movdi': 1, 'gen_movoi': 1, 'gen_movsf': 1, 'gen_split_1868': 2, 'gen_movdf': 1, 'gen_movxf': 1, 'gen_split_1876': 2, 'gen_movtf': 1, 'gen_split_1881': 7, 'gen_split_1882': 7, 'gen_split_1890': 2, 'gen_split_1894': 2, 'gen_split_1899': 4, 'gen_split_1901': 4, 'gen_split_1902': 5, 'gen_split_1903': 4, 'gen_split_1905': 2, 'gen_split_1906': 2, 'gen_split_1912': 21, 'gen_split_1914': 4, 'gen_split_1917': 4, 'gen_split_1918': 4, 'gen_split_1919': 2, 'gen_split_1920': 2, 'gen_peephole2_1936': 2, 'gen_peephole2_1937': 2, 'gen_peephole2_1938': 2, 'gen_peephole2_1939': 2, 'gen_peephole2_1940': 4, 'gen_peephole2_1941': 4, 'gen_peephole2_1942': 4, 'gen_peephole2_1943': 4, 'gen_split_1944': 5, 'gen_split_1945': 5, 'gen_split_1946': 5, 'gen_split_1947': 7, 'gen_split_1948': 7, 'gen_split_1949': 7, 'gen_split_1950': 4, 'gen_split_1951': 4, 'gen_split_1952': 4, 'gen_split_1953': 16, 'gen_split_1954': 16, 'gen_split_1955': 16, 'gen_split_1956': 16, 'gen_split_1957': 11, 'gen_split_1958': 11, 'gen_split_1959': 11, 'gen_split_1960': 7, 'gen_split_1961': 7, 'gen_split_1965': 4, 'gen_split_1966': 4, 'gen_split_1967': 4, 'gen_split_1968': 4, 'gen_split_1969': 4, 'gen_split_1970': 4, 'gen_split_1971': 2, 'gen_split_1972': 2, 'gen_split_1973': 2, 'gen_split_1980': 4, 'gen_split_1981': 12, 'gen_split_1982': 4, 'gen_split_1983': 12, 'gen_split_1984': 4, 'gen_split_1985': 12, 'gen_split_1986': 2, 'gen_split_1987': 2, 'gen_split_1988': 4, 'gen_split_1989': 4, 'gen_split_1990': 17, 'gen_split_1991': 17, 'gen_split_1994': 14, 'gen_split_1995': 14, 'gen_split_1998': 2, 'gen_split_1999': 2, 'gen_split_2000': 4, 'gen_split_2001': 4, 'gen_split_2002': 2, 'gen_split_2003': 2, 'gen_split_2004': 4, 'gen_split_2005': 4, 'gen_split_2006': 4, 'gen_split_2007': 4, 'gen_split_2008': 4, 'gen_split_2009': 4, 'gen_split_2010': 2, 'gen_split_2011': 2, 'gen_split_2012': 2, 'gen_split_2013': 2, 'gen_split_2014': 2, 'gen_split_2015': 2, 'gen_split_2016': 7, 'gen_split_2017': 7, 'gen_split_2018': 7, 'gen_split_2019': 2, 'gen_split_2020': 2, 'gen_split_2021': 2, 'gen_split_2022': 4, 'gen_split_2023': 4, 'gen_split_2024': 4, 'gen_split_2025': 5, 'gen_split_2026': 5, 'gen_split_2027': 5, 'gen_addqi3': 3, 'gen_addhi3': 3, 'gen_addsi3': 3, 'gen_adddi3': 3, 'gen_split_2035': 16, 'gen_subqi3': 3, 'gen_subhi3': 3, 'gen_subsi3': 3, 'gen_subdi3': 3, 'gen_split_2044': 16, 'gen_split_2077': 34, 'gen_split_2080': 7, 'gen_split_2081': 7, 'gen_split_2085': 20, 'gen_split_2086': 8, 'gen_andqi3': 3, 'gen_andhi3': 3, 'gen_andsi3': 3, 'gen_split_2094': 7, 'gen_iorqi3': 3, 'gen_xorqi3': 3, 'gen_iorhi3': 3, 'gen_xorhi3': 3, 'gen_iorsi3': 3, 'gen_xorsi3': 3, 'gen_split_2102': 7, 'gen_split_2103': 7, 'gen_negqi2': 1, 'gen_neghi2': 1, 'gen_negsi2': 1, 'gen_negdi2': 1, 'gen_split_2111': 7, 'gen_abssf2': 1, 'gen_negsf2': 1, 'gen_absdf2': 1, 'gen_negdf2': 1, 'gen_absxf2': 1, 'gen_negxf2': 1, 'gen_abstf2': 1, 'gen_negtf2': 1, 'gen_split_2120': 2, 'gen_split_2122': 3, 'gen_split_2123': 3, 'gen_split_2124': 3, 'gen_copysignsf3': 3, 'gen_copysigndf3': 3, 'gen_copysigntf3': 3, 'gen_one_cmplqi2': 1, 'gen_one_cmplhi2': 1, 'gen_one_cmplsi2': 1, 'gen_split_2137': 7, 'gen_split_2138': 7, 'gen_split_2139': 7, 'gen_split_2140': 7, 'gen_split_2141': 7, 'gen_ashldi3': 3, 'gen_ashlsi3': 3, 'gen_split_2148': 6, 'gen_split_2149': 3, 'gen_ashlhi3': 3, 'gen_ashlqi3': 3, 'gen_ashrdi3': 3, 'gen_ashrsi3': 3, 'gen_ashrhi3': 3, 'gen_ashrqi3': 3, 'gen_lshrdi3': 3, 'gen_lshrsi3': 3, 'gen_lshrhi3': 3, 'gen_lshrqi3': 3, 'gen_split_2168': 7, 'gen_rotlsi3': 3, 'gen_rotlhi3': 3, 'gen_rotlqi3': 3, 'gen_split_2174': 7, 'gen_rotrsi3': 3, 'gen_rotrhi3': 3, 'gen_rotrqi3': 3, 'gen_split_2184': 2, 'gen_split_2185': 2, 'gen_split_2186': 4, 'gen_split_2187': 4, 'gen_split_2188': 3, 'gen_split_2189': 5, 'gen_split_2190': 8, 'gen_split_2191': 7, 'gen_split_2192': 8, 'gen_split_2193': 7, 'gen_split_2194': 11, 'gen_split_2195': 16, 'gen_split_2196': 13, 'gen_split_2197': 13, 'gen_split_2198': 18, 'gen_split_2199': 18, 'gen_untyped_call': 2, 'gen_split_2227': 7, 'gen_split_2232': 16, 'gen_split_2234': 7, 'gen_split_2235': 2, 'gen_fmodsf3': 2, 'gen_fmoddf3': 2, 'gen_remaindersf3': 2, 'gen_remainderdf3': 2, 'gen_split_2249': 2, 'gen_split_2250': 2, 'gen_split_2251': 2, 'gen_split_2252': 2, 'gen_split_2253': 2, 'gen_split_2254': 2, 'gen_asinxf2': 26, 'gen_acosxf2': 26, 'gen_expNcorexf3': 71, 'gen_expm1xf2': 122, 'gen_split_2316': 5, 'gen_split_2317': 7, 'gen_split_2318': 4, 'gen_split_2319': 4, 'gen_split_2320': 4, 'gen_split_2321': 4, 'gen_split_2322': 4, 'gen_split_2323': 2, 'gen_split_2324': 2, 'gen_split_2332': 7, 'gen_split_2336': 16, 'gen_split_2337': 16, 'gen_split_2338': 16, 'gen_split_2339': 16, 'gen_split_2340': 11, 'gen_split_2341': 11, 'gen_split_2342': 11, 'gen_split_2343': 7, 'gen_split_2344': 7, 'gen_split_2350': 7, 'gen_split_2354': 16, 'gen_split_2355': 16, 'gen_split_2356': 16, 'gen_split_2357': 16, 'gen_split_2358': 11, 'gen_split_2359': 11, 'gen_split_2360': 11, 'gen_split_2361': 7, 'gen_split_2362': 7, 'gen_split_2368': 7, 'gen_split_2372': 7, 'gen_split_2376': 5, 'gen_split_2377': 5, 'gen_strset': 1, 'gen_cmpstrnsi': 2, 'gen_peephole2_2399': 22, 'gen_peephole2_2400': 22, 'gen_movqicc': 6, 'gen_movhicc': 6, 'gen_movsicc': 6, 'gen_movsfcc': 6, 'gen_movdfcc': 6, 'gen_movxfcc': 6, 'gen_split_2409': 29, 'gen_peephole2_2410': 13, 'gen_addqicc': 6, 'gen_addhicc': 6, 'gen_addsicc': 6, 'gen_split_2417': 15, 'gen_split_2419': 9, 'gen_peephole2_2423': 4, 'gen_peephole2_2424': 4, 'gen_peephole2_2425': 4, 'gen_peephole2_2426': 4, 'gen_peephole2_2427': 4, 'gen_peephole2_2428': 2, 'gen_peephole2_2431': 4, 'gen_peephole2_2432': 4, 'gen_peephole2_2433': 4, 'gen_peephole2_2434': 7, 'gen_peephole2_2435': 2, 'gen_peephole2_2436': 2, 'gen_peephole2_2437': 2, 'gen_peephole2_2438': 7, 'gen_peephole2_2439': 7, 'gen_peephole2_2440': 7, 'gen_peephole2_2441': 7, 'gen_peephole2_2442': 7, 'gen_peephole2_2444': 7, 'gen_peephole2_2445': 7, 'gen_peephole2_2446': 7, 'gen_peephole2_2450': 2, 'gen_peephole2_2451': 2, 'gen_peephole2_2452': 2, 'gen_peephole2_2453': 2, 'gen_peephole2_2454': 2, 'gen_peephole2_2455': 2, 'gen_peephole2_2461': 2, 'gen_peephole2_2464': 2, 'gen_peephole2_2466': 7, 'gen_peephole2_2472': 2, 'gen_peephole2_2475': 2, 'gen_peephole2_2477': 4, 'gen_peephole2_2478': 4, 'gen_peephole2_2479': 7, 'gen_peephole2_2480': 7, 'gen_peephole2_2481': 7, 'gen_peephole2_2482': 5, 'gen_peephole2_2483': 5, 'gen_peephole2_2484': 5, 'gen_peephole2_2485': 14, 'gen_prefetch': 4, 'gen_movv8qi': 1, 'gen_movv4hi': 1, 'gen_movv2si': 1, 'gen_movv1di': 1, 'gen_movv2sf': 1, 'gen_movmisalignv8qi': 1, 'gen_movmisalignv4hi': 1, 'gen_movmisalignv2si': 1, 'gen_movmisalignv1di': 1, 'gen_movmisalignv2sf': 1, 'gen_mmx_addv2sf3': 6, 'gen_mmx_mulv2sf3': 6, 'gen_mmx_smaxv2sf3': 10, 'gen_mmx_sminv2sf3': 10, 'gen_mmx_eqv2sf3': 6, 'gen_split_2524': 3, 'gen_split_2525': 2, 'gen_mmx_addv8qi3': 6, 'gen_mmx_subv8qi3': 6, 'gen_mmx_addv4hi3': 6, 'gen_mmx_subv4hi3': 6, 'gen_mmx_addv2si3': 6, 'gen_mmx_subv2si3': 6, 'gen_mmx_addv1di3': 6, 'gen_mmx_subv1di3': 6, 'gen_mmx_ssaddv8qi3': 6, 'gen_mmx_usaddv8qi3': 6, 'gen_mmx_sssubv8qi3': 6, 'gen_mmx_ussubv8qi3': 6, 'gen_mmx_ssaddv4hi3': 6, 'gen_mmx_usaddv4hi3': 6, 'gen_mmx_sssubv4hi3': 6, 'gen_mmx_ussubv4hi3': 6, 'gen_mmx_mulv4hi3': 6, 'gen_mmx_smulv4hi3_highpart': 6, 'gen_mmx_umulv4hi3_highpart': 6, 'gen_mmx_pmaddwd': 12, 'gen_mmx_pmulhrwv4hi3': 6, 'gen_sse2_umulv1siv1di3': 9, 'gen_mmx_smaxv4hi3': 6, 'gen_mmx_sminv4hi3': 6, 'gen_mmx_umaxv8qi3': 6, 'gen_mmx_uminv8qi3': 6, 'gen_mmx_eqv8qi3': 6, 'gen_mmx_eqv4hi3': 6, 'gen_mmx_eqv2si3': 6, 'gen_mmx_andv8qi3': 6, 'gen_mmx_iorv8qi3': 6, 'gen_mmx_xorv8qi3': 6, 'gen_mmx_andv4hi3': 6, 'gen_mmx_iorv4hi3': 6, 'gen_mmx_xorv4hi3': 6, 'gen_mmx_andv2si3': 6, 'gen_mmx_iorv2si3': 6, 'gen_mmx_xorv2si3': 6, 'gen_split_2569': 3, 'gen_split_2570': 2, 'gen_mmx_uavgv8qi3': 6, 'gen_mmx_uavgv4hi3': 6, 'gen_movv32qi': 1, 'gen_movv16hi': 1, 'gen_movv8si': 1, 'gen_movv4di': 1, 'gen_movv8sf': 1, 'gen_movv4df': 1, 'gen_movv16qi': 1, 'gen_movv8hi': 1, 'gen_movv4si': 1, 'gen_movv2di': 1, 'gen_movv1ti': 1, 'gen_movv4sf': 1, 'gen_movv2df': 1, 'gen_split_2597': 4, 'gen_movmisalignv32qi': 1, 'gen_movmisalignv16hi': 1, 'gen_movmisalignv8si': 1, 'gen_movmisalignv4di': 1, 'gen_movmisalignv8sf': 1, 'gen_movmisalignv4df': 1, 'gen_movmisalignv16qi': 1, 'gen_movmisalignv8hi': 1, 'gen_movmisalignv4si': 1, 'gen_movmisalignv2di': 1, 'gen_movmisalignv1ti': 1, 'gen_movmisalignv4sf': 1, 'gen_movmisalignv2df': 1, 'gen_absv4sf2': 1, 'gen_negv4sf2': 1, 'gen_absv2df2': 1, 'gen_negv2df2': 1, 'gen_addv8sf3': 6, 'gen_subv8sf3': 6, 'gen_addv4df3': 6, 'gen_subv4df3': 6, 'gen_addv4sf3': 6, 'gen_subv4sf3': 6, 'gen_addv2df3': 6, 'gen_subv2df3': 6, 'gen_mulv8sf3': 6, 'gen_mulv4df3': 6, 'gen_mulv4sf3': 6, 'gen_mulv2df3': 6, 'gen_divv8sf3': 6, 'gen_divv4df3': 6, 'gen_smaxv8sf3': 10, 'gen_sminv8sf3': 10, 'gen_smaxv4df3': 10, 'gen_sminv4df3': 10, 'gen_smaxv4sf3': 10, 'gen_sminv4sf3': 10, 'gen_smaxv2df3': 10, 'gen_sminv2df3': 10, 'gen_vcondv4sf': 15, 'gen_vcondv2df': 15, 'gen_andv8sf3': 6, 'gen_iorv8sf3': 6, 'gen_xorv8sf3': 6, 'gen_andv4df3': 6, 'gen_iorv4df3': 6, 'gen_xorv4df3': 6, 'gen_andv4sf3': 6, 'gen_iorv4sf3': 6, 'gen_xorv4sf3': 6, 'gen_andv2df3': 6, 'gen_iorv2df3': 6, 'gen_xorv2df3': 6, 'gen_sse2_cvtudq2ps': 40, 'gen_vec_unpacks_hi_v8hi': 3, 'gen_vec_unpacks_lo_v8hi': 3, 'gen_vec_unpacku_hi_v8hi': 3, 'gen_vec_unpacku_lo_v8hi': 3, 'gen_vec_unpacku_float_hi_v4si': 74, 'gen_vec_unpacku_float_lo_v4si': 58, 'gen_sse_movhlps_exp': 6, 'gen_sse_movlhps_exp': 6, 'gen_sse_loadhps_exp': 12, 'gen_sse_loadlps_exp': 12, 'gen_split_2721': 3, 'gen_split_2728': 4, 'gen_vec_interleave_highv2df': 7, 'gen_vec_interleave_lowv2df': 7, 'gen_split_2740': 3, 'gen_split_2759': 2, 'gen_split_2760': 3, 'gen_sse2_loadhpd_exp': 9, 'gen_split_2762': 2, 'gen_sse2_loadlpd_exp': 9, 'gen_split_2764': 2, 'gen_addv16qi3': 6, 'gen_subv16qi3': 6, 'gen_addv8hi3': 6, 'gen_subv8hi3': 6, 'gen_addv4si3': 6, 'gen_subv4si3': 6, 'gen_addv2di3': 6, 'gen_subv2di3': 6, 'gen_sse2_ssaddv16qi3': 6, 'gen_sse2_usaddv16qi3': 6, 'gen_sse2_sssubv16qi3': 6, 'gen_sse2_ussubv16qi3': 6, 'gen_sse2_ssaddv8hi3': 6, 'gen_sse2_usaddv8hi3': 6, 'gen_sse2_sssubv8hi3': 6, 'gen_sse2_ussubv8hi3': 6, 'gen_mulv8hi3': 6, 'gen_split_2785': 34, 'gen_smulv8hi3_highpart': 6, 'gen_umulv8hi3_highpart': 6, 'gen_sse2_umulv2siv2di3': 12, 'gen_sse4_1_mulv2siv2di3': 12, 'gen_sse2_pmaddwd': 18, 'gen_mulv4si3': 12, 'gen_split_2793': 4, 'gen_split_2794': 8, 'gen_umaxv16qi3': 6, 'gen_uminv16qi3': 6, 'gen_smaxv8hi3': 6, 'gen_sminv8hi3': 6, 'gen_umaxv8hi3': 11, 'gen_smaxv2di3': 15, 'gen_umaxv2di3': 15, 'gen_sminv2di3': 15, 'gen_uminv2di3': 15, 'gen_sse2_eqv16qi3': 6, 'gen_sse2_eqv8hi3': 6, 'gen_sse2_eqv4si3': 6, 'gen_sse4_1_eqv2di3': 6, 'gen_vcondv16qi': 15, 'gen_vcondv8hi': 15, 'gen_vcondv4si': 15, 'gen_vcondv2di': 15, 'gen_vconduv16qi': 15, 'gen_vconduv8hi': 15, 'gen_vconduv4si': 15, 'gen_vconduv2di': 15, 'gen_andv16qi3': 6, 'gen_iorv16qi3': 6, 'gen_xorv16qi3': 6, 'gen_andv8hi3': 6, 'gen_iorv8hi3': 6, 'gen_xorv8hi3': 6, 'gen_andv4si3': 6, 'gen_iorv4si3': 6, 'gen_xorv4si3': 6, 'gen_andv2di3': 6, 'gen_iorv2di3': 6, 'gen_xorv2di3': 6, 'gen_andtf3': 6, 'gen_iortf3': 6, 'gen_xortf3': 6, 'gen_split_2867': 2, 'gen_split_2868': 4, 'gen_split_2870': 2, 'gen_vec_unpacku_hi_v16qi': 3, 'gen_vec_unpacks_hi_v16qi': 3, 'gen_vec_unpacku_lo_v16qi': 3, 'gen_vec_unpacks_lo_v16qi': 3, 'gen_vec_unpacku_hi_v4si': 3, 'gen_vec_unpacks_hi_v4si': 3, 'gen_vec_unpacku_lo_v4si': 3, 'gen_vec_unpacks_lo_v4si': 3, 'gen_sse2_uavgv16qi3': 6, 'gen_sse2_uavgv8hi3': 6, 'gen_ssse3_pmulhrswv8hi3': 6, 'gen_ssse3_pmulhrswv4hi3': 6, 'gen_split_2891': 41, 'gen_split_2892': 16, 'gen_split_2893': 7, 'gen_split_2894': 7, 'gen_rotlv2di3': 2, 'gen_rotrv2di3': 2, 'gen_ashrv16qi3': 2, 'gen_ashrv2di3': 4, 'gen_avx_vpermilv8sf': 36, 'gen_avx_vperm2f128v8sf3': 2, 'gen_split_2930': 5, 'gen_avx_vpermilv4df': 10, 'gen_avx_vperm2f128v4df3': 5, 'gen_split_2931': 5, 'gen_avx_vpermilv2df': 3, 'gen_avx_vpermilv4sf': 10, 'gen_avx_vperm2f128v8si3': 2, 'gen_rdtscp': 2}, "PosixPath('602/lower-subreg.bc')": {'sbitmap_iter_init': 16, 'VEC_bitmap_base_space': 2, 'VEC_bitmap_heap_reserve_exact': 2, 'VEC_bitmap_heap_safe_grow': 2, 'find_decomposable_shift_zext': 33, 'recog_memoized': 3, 'simple_move_operand': 2, 'simple_move': 10, 'find_pseudo_copy': 11, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'propagate_pseudo_copies': 19, 'decompose_register': 3, 'resolve_subreg_p': 2, 'simplify_subreg_concatn': 4, 'simplify_gen_subreg_concatn': 18, 'resolve_subreg_use': 5, 'resolve_reg_notes': 8, 'resolve_clobber': 5, 'resolve_use': 2, 'adjust_decomposed_uses': 6, 'can_decompose_p': 4, 'resolve_simple_move': 58, 'resolve_shift_zext': 10, 'sbitmap_iter_cond': 39, 'sbitmap_iter_next': 3, 'VEC_bitmap_base_iterate': 2, 'find_decomposable_subregs': 18, 'decompose_multiword_subregs': 297}, "PosixPath('602/cfg.bc')": {'init_flow': 6, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'clear_edges': 27, 'link_block': 2, 'unlink_block': 3, 'compact_blocks': 34, 'expunge_block': 9, 'VEC_edge_base_space': 2, 'VEC_edge_gc_reserve': 2, 'VEC_edge_base_quick_push': 2, 'VEC_edge_gc_safe_push': 5, 'connect_src': 4, 'connect_dest': 4, 'unchecked_make_edge': 11, 'cached_make_edge': 6, 'make_single_succ_edge': 2, 'ei_safe_edge': 3, 'VEC_edge_base_unordered_remove': 4, 'disconnect_src': 6, 'disconnect_dest': 7, 'remove_edge_raw': 15, 'redirect_edge_succ': 12, 'redirect_edge_succ_nodup': 11, 'redirect_edge_pred': 10, 'clear_bb_flags': 4, 'check_bb_profile': 35, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'dump_regset': 8, 'dump_edge_info': 15, 'dump_bb_info': 14, 'dump_reg_info': 6, 'dump_flow_info': 2, 'alloc_aux_for_block': 2, 'clear_aux_for_blocks': 3, 'free_aux_for_blocks': 3, 'alloc_aux_for_edge': 3, 'alloc_aux_for_edges': 13, 'clear_aux_for_edges': 14, 'debug_bb_n': 2, 'dump_cfg_bb_info': 9, 'brief_dump_cfg': 9, 'update_bb_profile_for_threading': 45, 'scale_bbs_frequencies_int': 12, 'scale_bbs_frequencies_gcov_type': 24, 'copy_original_table_set': 3, 'get_bb_original': 5, 'get_bb_copy': 5, 'copy_original_table_clear': 1, 'set_loop_copy': 4, 'get_loop_copy': 3}, "PosixPath('602/c-typeck.bc')": {'parser_build_unary_op': 17, 'parser_build_binary_op': 109, 'push_string': 8, 'push_member_name': 11, 'push_array_bounds': 8, 'push_range_stack': 39, 'c_incomplete_type_error': 3, 'require_complete_type': 1, 'c_type_promotes_to': 6, 'c_vla_type_p': 2, 'c_build_qualified_type': 19, 'qualify_type': 4, 'same_translation_unit_p': 8, 'alloc_tagged_tu_seen_cache': 8, 'comptypes_internal': 57, 'tagged_types_tu_compatible_p': 91, 'function_types_compatible_p': 10, 'type_lists_compatible_p': 42, 'composite_type': 93, 'c_common_type': 139, 'common_type': 4, 'decl_constant_value': 2, 'lvalue_p': 4, 'remove_c_maybe_const_expr': 2, 'perform_integral_promotions': 17, 'default_conversion': 13, 'note_integer_operands': 3, 'c_objc_common_truthvalue_conversion': 9, 'c_size_in_bytes': 7, 'readonly_error': 6, 'c_mark_addressable': 10, 'comp_target_types': 18, 'common_pointer_type': 6, 'null_pointer_constant_p': 6, 'array_to_pointer_conversion': 15, 'build_unary_op': 105, 'build_binary_op': 289, 'pointer_diff': 37, 'function_to_pointer_conversion': 11, 'default_function_array_conversion': 31, 'lookup_field': 12, 'build_component_ref': 11, 'build_indirect_ref': 17, 'build_array_ref': 27, 'record_maybe_used_decl': 7, 'build_external_ref': 73, 'pop_maybe_used': 5, 'c_expr_sizeof_expr': 72, 'c_expr_sizeof_type': 57, 'VEC_tree_base_quick_push': 2, 'VEC_tree_base_iterate': 2, 'convert_for_assignment': 59, 'convert_arguments': 67, 'build_function_call': 2, 'build_function_call_vec': 111, 'build_conditional_expr': 119, 'build_compound_expr': 36, 'spelling_length': 4, 'print_spelling': 10, 'maybe_warn_string_init': 8, 'digest_init': 107, 'handle_warn_cast_qual': 17, 'build_c_cast': 96, 'c_cast_expr': 15, 'build_modify_expr': 22, 'store_init_value': 31, 'start_init': 174, 'finish_init': 100, 'really_start_incremental_init': 487, 'add_pending_init': 110, 'set_nonincremental_init': 18, 'VEC_constructor_elt_base_space': 2, 'VEC_constructor_elt_gc_reserve': 2, 'VEC_constructor_elt_gc_safe_push': 2, 'output_init_element': 119, 'output_pending_init_elements': 35, 'find_init_member': 7, 'set_nonincremental_init_from_string': 51, 'push_init_level': 723, 'pop_init_level': 397, 'process_init_element': 582, 'set_designator': 12, 'set_init_index': 10, 'set_init_label': 11, 'build_asm_expr': 28, 'c_finish_return': 33, 'c_start_case': 15, 'do_case': 8, 'c_finish_case': 10, 'c_finish_if_stmt': 4, 'c_finish_loop': 3, 'c_finish_bc_stmt': 2, 'emit_side_effect_warnings': 2, 'c_process_expr_stmt': 5, 'c_end_compound_stmt': 2, 'c_finish_stmt_expr': 39, 'c_expr_to_decl': 2, 'c_finish_omp_parallel': 7, 'c_finish_omp_task': 7, 'bitmap_initialize_stat': 2, 'c_finish_omp_clauses': 108}, "PosixPath('602/tree-cfgcleanup.bc')": {'VEC_gimple_base_pop': 2, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'remove_fallthru_edge': 4, 'split_bbs_on_noreturn_calls': 18, 'single_pred_edge': 1, 'cleanup_omp_return': 5, 'bb_seq': 2, 'gsi_last_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'gimple_switch_index': 1, 'ei_safe_edge': 3, 'single_succ_edge': 1, 'cleanup_control_expr_graph': 53, 'gimple_goto_dest': 1, 'cleanup_control_flow_bb': 128, 'phi_nodes': 2, 'gimple_label_label': 1, 'tree_forwarder_block_p': 82, 'has_abnormal_incoming_edge_p': 4, 'phi_alternatives_equal': 7, 'gimple_phi_arg_location_from_edge': 2, 'gsi_start_bb': 6, 'gsi_after_labels': 41, 'remove_forwarder_block': 286, 'cleanup_tree_cfg_bb': 451, 'cleanup_tree_cfg_1': 11, 'cleanup_tree_cfg_noloop': 7, 'cleanup_tree_cfg': 11, 'has_zero_uses': 1, 'single_imm_use': 4, 'remove_forwarder_block_with_phi': 17, 'merge_phi_nodes': 110}, "PosixPath('602/concat.bc')": {'concat_copy2': 7, 'vconcat_length': 9, 'concat_length': 8, 'vconcat_copy': 4, 'concat_copy': 21, 'concat': 30, 'reconcat': 33}, "PosixPath('602/cfgexpand.bc')": {'expand_used_vars': 175, 'expand_gimple_basic_block': 719, 'construct_exit_block': 42, 'gsi_last': 8, 'gsi_start': 8, 'first_imm_use_on_stmt': 2, 'next_imm_use_on_stmt': 2, 'expand_gimple_cond': 151, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_lhs': 1, 'gimple_assign_rhs2': 3, 'gimple_assign_rhs_to_tree': 39, 'clear_tree_used': 6, 'init_vars_expansion': 3, 'var_to_partition': 4, 'set_rtl': 8, 'expand_one_register_var': 4, 'add_stack_var': 21, 'expand_one_stack_var_at': 6, 'expand_one_stack_var': 3, 'expand_one_var': 50, 'account_used_vars_for_block': 4, 'account_stack_vars': 25, 'fini_vars_expansion': 6, 'estimated_stack_frame_size': 19, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'discover_nonconstant_array_refs_r': 9, 'discover_nonconstant_array_refs': 27, 'partition_to_var': 3, 'add_stack_var_conflict': 2, 'expand_used_vars_for_block': 8, 'aggregate_contains_union_type': 7, 'add_alias_set_conflicts': 2, 'stack_protect_classify_type': 15, 'add_stack_protection_conflicts': 2, 'stack_var_conflict_p': 1, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'union_stack_vars': 38, 'add_partitioned_vars_to_ptset': 12, 'update_alias_info_with_stack_vars': 19, 'stack_var_size_cmp': 10, 'partition_stack_vars': 93, 'dump_stack_var_partition': 10, 'expand_stack_vars': 55, 'construct_init_block': 23, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'single_succ_edge': 1, 'gimple_return_retval': 1, 'gimple_goto_dest': 1, 'gimple_label_label': 1, 'gimple_call_lhs': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_call_return_type': 2, 'gimple_call_chain': 1, 'gimple_call_arg': 1, 'expand_call_stmt': 80, 'expand_gimple_stmt_1': 139, 'expand_gimple_stmt': 163, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_next_tree': 6, 'op_iter_init_tree': 48, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'next_readonly_imm_use': 2, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'move_use_after_head': 5, 'op_iter_init_use': 54, 'gimple_vuse_op': 2, 'link_use_stmts_after': 63, 'first_imm_use_stmt': 13, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'next_imm_use_stmt': 10, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'gimple_cond_single_var_p': 9, 'label_rtx_for_bb': 9, 'gimple_debug_bind_get_var': 1, 'gimple_debug_bind_has_value_p': 1, 'gimple_debug_bind_get_value': 1, 'delink_stmt_imm_use': 16, 'ei_safe_edge': 3, 'expand_gimple_tailcall': 44, 'op_iter_next_def': 4, 'op_iter_init_def': 43, 'single_ssa_def_operand': 8, 'expand_debug_expr': 303, 'expand_debug_locations': 5, 'expand_stack_alignment': 3, 'set_block_levels': 3, 'gimple_expand_cfg': 1013}, "PosixPath('602/graphite-blocking.bc')": {}, "PosixPath('602/tree-predcom.bc')": {'replace_phis_by_defined_names': 6, 'combine_chains': 520, 'combinable_refs_p': 29, 'reassociate_to_the_same_stmt': 165, 'initialize_root_vars_lm': 13, 'dump_dref': 4, 'VEC_tree_base_iterate': 2, 'VEC_dref_base_iterate': 2, 'dump_chain': 16, 'VEC_chain_p_base_iterate': 2, 'dump_chains': 2, 'dump_component': 2, 'gimple_vuse': 2, 'gimple_vop': 2, 'mark_virtual_ops_for_renaming': 6, 'VEC_loop_p_base_iterate': 2, 'VEC_int_base_quick_push': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 14, 'VEC_edge_base_iterate': 2, 'last_always_executed_block': 2, 'VEC_data_reference_p_base_iterate': 2, 'suitable_reference_p': 2, 'component_of': 1, 'merge_comps': 4, 'VEC_ddr_p_base_iterate': 2, 'aff_combination_dr_offset': 4, 'determine_offset': 25, 'VEC_dref_base_quick_push': 2, 'split_data_refs_to_components': 67, 'suitable_component_p': 8, 'release_component': 1, 'filter_suitable_components': 48, 'VEC_dref_base_space': 2, 'VEC_dref_heap_reserve': 2, 'VEC_dref_heap_safe_push': 5, 'make_invariant_chain': 13, 'VEC_chain_p_base_space': 2, 'VEC_chain_p_heap_reserve': 2, 'VEC_chain_p_base_quick_push': 2, 'VEC_chain_p_heap_safe_push': 5, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'gsi_stmt': 1, 'valid_initializer_p': 40, 'find_looparound_phi': 106, 'VEC_dref_base_quick_insert': 3, 'VEC_dref_heap_safe_insert': 6, 'insert_looparound_copy': 18, 'add_looparound_copies': 194, 'release_chain': 9, 'make_rooted_chain': 8, 'add_ref_to_chain': 24, 'order_drefs': 4, 'determine_roots_comp': 75, 'determine_roots': 75, 'VEC_tree_base_quick_push': 2, 'ref_at_iteration': 31, 'prepare_initializers_chain': 28, 'VEC_chain_p_base_unordered_remove': 4, 'prepare_initializers': 30, 'chain_can_be_combined_p': 2, 'VEC_chain_p_base_pop': 2, 'name_for_ref': 8, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'next_readonly_imm_use': 2, 'single_nonlooparound_use': 6, 'gimple_assign_rhs_code': 2, 'find_use_stmt': 10, 'may_reassociate_p': 3, 'find_associative_operation_root': 44, 'gimple_assign_rhs2': 3, 'remove_name_from_operation': 9, 'stmt_combining_refs': 191, 'try_combine_chains': 581, 'determine_unroll_factor': 4, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'move_use_after_head': 5, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'op_iter_init': 23, 'op_iter_init_use': 55, 'gimple_vuse_op': 2, 'link_use_stmts_after': 62, 'first_imm_use_stmt': 13, 'end_imm_use_stmt_traverse': 3, 'next_imm_use_stmt': 10, 'base_names_in_chain_on': 53, 'eliminate_temp_copies': 59, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_after_labels': 41, 'replace_ref_with': 31, 'execute_load_motion': 30, 'remove_stmt': 17, 'get_init_expr': 4, 'initialize_root_vars': 28, 'initialize_root': 36, 'execute_pred_commoning_chain': 60, 'execute_pred_commoning': 100, 'release_chains': 2, 'replace_names_by_phis': 12, 'execute_pred_commoning_cbck': 11, 'tree_predictive_commoning_loop': 1058, 'tree_predictive_commoning': 899}, "PosixPath('602/fibheap.bc')": {'fibnode_new': 2, 'fibnode_insert_after': 7, 'fibheap_ins_root': 7, 'fibheap_insert': 29, 'fibheap_union': 9, 'fibnode_remove': 7, 'fibheap_rem_root': 2, 'fibheap_link': 11, 'fibheap_consolidate': 98, 'fibheap_extr_min_node': 127, 'fibheap_cut': 23, 'fibheap_replace_key_data': 6, 'fibheap_replace_key': 2, 'fibheap_delete_node': 1}, "PosixPath('602/cpp_identifiers.bc')": {'alloc_node': 39, '_cpp_init_hashtable': 10, '_cpp_destroy_hashtable': 8}, "PosixPath('602/c-pretty-print.bc')": {'pp_c_space_for_pointer_operator': 2, 'pp_c_identifier': 2, 'pp_c_type_qualifier_list': 8, 'pp_c_tree_decl_identifier': 2, 'pp_c_type_specifier': 10, 'pp_c_specifier_qualifier_list': 10, 'pp_c_parameter_type_list': 7, 'pp_c_direct_abstract_declarator': 2, 'pp_c_storage_class_specifier': 2, 'pp_c_function_specifier': 2, 'pp_c_declaration_specifiers': 2, 'pp_c_direct_declarator': 7, 'pp_c_constructor_elts': 2, 'pp_c_integer_constant': 4, 'pp_c_type_cast': 2, 'pp_c_enumeration_constant': 2, 'pp_c_cast_expression': 5, 'pp_c_unary_expression': 6, 'pp_c_additive_expression': 4, 'pp_c_shift_expression': 2, 'pp_c_relational_expression': 2, 'pp_c_equality_expression': 2, 'pp_c_and_expression': 2, 'pp_c_exclusive_or_expression': 2, 'pp_c_inclusive_or_expression': 2, 'pp_c_logical_and_expression': 2, 'pp_c_logical_or_expression': 2, 'pp_c_expression': 5, 'pp_c_expression_list': 1, 'pp_c_primary_expression': 4, 'pp_c_brace_enclosed_initializer_list': 12, 'pp_c_compound_literal': 2, 'pp_c_constant': 10, 'pp_c_init_declarator': 4, 'pp_c_attributes': 3, 'pp_c_function_definition': 2, 'pp_c_id_expression': 2, 'init_call_expr_arg_iterator': 3, 'next_call_expr_arg': 4, 'first_call_expr_arg': 6, 'more_call_expr_args_p': 2, 'pp_c_complex_expr': 20, 'pp_c_postfix_expression': 44, 'pp_c_statement': 2, 'pp_c_conditional_expression': 2, 'pp_c_assignment_expression': 2, 'pp_c_multiplicative_expression': 2, 'pp_c_pointer': 7, 'pp_c_abstract_declarator': 5, 'pp_c_pretty_printer_init': 301, 'print_c_tree': 2}, "PosixPath('602/dyn-string.bc')": {'dyn_string_init': 4, 'dyn_string_new': 4, 'dyn_string_release': 1, 'dyn_string_resize': 2, 'dyn_string_insert': 6, 'dyn_string_insert_cstr': 4, 'dyn_string_insert_char': 4, 'dyn_string_append': 2, 'dyn_string_append_cstr': 2, 'dyn_string_append_char': 3, 'dyn_string_eq': 4}, "PosixPath('602/tree-inline.bc')": {'gsi_start': 8, 'unsave_expr_now': 50, 'copy_gimple_seq_and_replace_locals': 72, 'initialize_cfun': 78, 'remap_blocks': 9, 'build_duplicate_type': 22, 'expand_call_inline': 382, 'copy_phis_for_bb': 35, 'bb_seq': 2, 'gsi_last_bb': 6, 'copy_statement_list': 30, 'VEC_constructor_elt_gc_copy': 2, 'copy_tree_r': 6, 'VEC_tree_gc_copy': 2, 'var_ann': 2, 'can_be_nonlocal': 6, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 5, 'get_var_ann': 2, 'remap_decl': 9, 'remap_type_1': 77, 'remap_ssa_name': 97, 'remap_decls': 42, 'remap_block': 8, 'copy_bind_expr': 8, 'copy_tree_body_r': 59, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_return_retval': 1, 'gimple_omp_for_index': 2, 'gimple_omp_for_set_index': 2, 'gimple_omp_for_initial': 2, 'gimple_omp_for_set_initial': 2, 'gimple_omp_for_final': 2, 'gimple_omp_for_set_final': 2, 'gimple_omp_for_incr': 2, 'gimple_omp_for_set_incr': 2, 'gimple_omp_for_cond': 2, 'gimple_omp_for_set_cond': 2, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'gimple_debug_bind_get_var': 1, 'gimple_debug_bind_get_value': 1, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 5, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_call_arg': 1, 'gimple_set_op': 4, 'gimple_call_set_arg': 3, 'gimple_op_ptr': 1, 'remap_gimple_op_r': 38, 'remap_gimple_seq': 5, 'remap_gimple_stmt': 138, 'has_label_address_in_static_1': 2, 'copy_forbidden': 13, 'gimple_goto_dest': 1, 'inline_forbidden_p_stmt': 5, 'inline_forbidden_p': 21, 'tree_inlinable_function_p': 41, 'gimple_assign_rhs_code': 1, 'gimple_assign_rhs2': 3, 'estimate_num_insns': 48, 'gsi_start_bb': 6, 'estimate_num_insns_fn': 21, 'prepend_lexical_block': 2, 'gimple_call_chain': 1, 'copy_decl_for_dup_finish': 13, 'copy_decl_to_var': 7, 'self_inlining_addr_expr': 2, 'insert_debug_decl_map': 4, 'insert_init_debug_bind': 31, 'gimple_assign_rhs_class': 3, 'gimple_call_return_type': 2, 'gimple_expr_type': 4, 'gimple_assign_set_rhs1': 3, 'insert_init_stmt': 51, 'setup_one_parameter': 24, 'declare_inline_vars': 7, 'initialize_inlined_parameters': 34, 'gimple_call_lhs': 1, 'is_global_var': 2, 'copy_result_decl_to_var': 11, 'declare_return_variable': 72, 'VEC_tree_heap_reserve_exact': 2, 'VEC_tree_heap_safe_grow': 3, 'gimple_call_arg_ptr': 1, 'gimple_call_set_lhs': 3, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'op_iter_init': 10, 'op_iter_next_tree': 6, 'op_iter_init_tree': 41, 'copy_bb': 501, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'update_ssa_across_abnormal_edges': 40, 'copy_edges_for_bb': 118, 'phi_nodes': 2, 'gimple_phi_arg_location_from_edge': 2, 'copy_cfg_body': 608, 'VEC_gimple_base_iterate': 2, 'gimple_debug_bind_set_var': 3, 'gimple_debug_bind_has_value_p': 1, 'gimple_debug_bind_get_value_ptr': 1, 'gimple_debug_bind_reset_value': 3, 'copy_debug_stmt': 88, 'copy_debug_stmts': 88, 'copy_body': 738, 'gimple_expand_calls_inline': 436, 'fold_marked_statements': 61, 'delete_unreachable_blocks_update_callgraph': 42, 'copy_decl_no_change': 2, 'optimize_inline_calls': 813, 'unsave_expr_1': 5, 'unsave_r': 7, 'mark_local_for_remap_r': 2, 'replace_locals_op': 5, 'replace_locals_stmt': 12, 'gimple_label_label': 1, 'mark_local_labels_stmt': 1, 'VEC_ipa_opt_pass_heap_copy': 2, 'VEC_ipa_opt_pass_base_space': 2, 'VEC_ipa_opt_pass_heap_reserve': 2, 'VEC_ipa_opt_pass_base_quick_push': 2, 'VEC_ipa_opt_pass_heap_safe_push': 5, 'copy_static_chain': 5, 'copy_arguments_for_versioning': 14, 'single_succ_edge': 1, 'VEC_gimple_base_pop': 2, 'update_clone_info': 11, 'tree_function_versioning': 615, 'init_call_expr_arg_iterator': 3, 'next_call_expr_arg': 4, 'first_call_expr_arg': 6, 'copy_tree_body': 2, 'maybe_inline_call_in_expr': 151, 'tree_can_inline_p': 7}, "PosixPath('602/tree-ssa-phiprop.bc')": {'single_succ_edge': 1, 'VEC_basic_block_base_iterate': 2, 'gsi_stmt': 1, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'end_imm_use_stmt_p': 2, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'move_use_after_head': 5, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_init_use': 55, 'gimple_vuse_op': 2, 'link_use_stmts_after': 63, 'first_imm_use_stmt': 13, 'end_imm_use_stmt_traverse': 3, 'next_imm_use_stmt': 10, 'phivn_valid_p': 47, 'single_imm_use': 4, 'gimple_assign_lhs': 1, 'gimple_assign_rhs_code': 2, 'ei_end_p': 1, 'ei_cond': 3, 'gimple_phi_arg_location_from_edge': 2, 'gimple_set_op': 4, 'gimple_assign_set_lhs': 3, 'ei_next': 4, 'phiprop_insert_phi': 55, 'gimple_assign_set_rhs1': 3, 'propagate_with_phi': 292, 'tree_ssa_phiprop': 350}, "PosixPath('602/cpp_files.bc')": {'_cpp_report_missing_guards': 8, '_cpp_read_file_entries': 6, 'read_file': 27, 'search_cache': 2, 'make_cpp_file': 4, 'append_file_to_dir': 1, 'read_name_map': 7, 'allocate_file_hash_entries': 2, 'new_file_hash_entry': 5, 'make_cpp_dir': 17, 'remap_filename': 6, 'open_file': 8, 'validate_pch': 9, 'pch_open_file': 15, 'open_file_failed': 18, 'find_file_in_dir': 68, 'search_path_exhausted': 3, '_cpp_find_file': 225, 'read_file_guts': 4, 'pchf_compare': 13, 'check_file_against_entries': 14, 'destroy_cpp_file': 2, 'should_stack_file': 93, '_cpp_stack_file': 176, 'dir_name_of_file': 3, 'search_path_head': 13, '_cpp_stack_include': 2, 'cpp_included': 4, 'cpp_included_before': 7, 'file_hash_eq': 3, 'file_hash_hash': 3, '_cpp_init_files': 7, '_cpp_cleanup_files': 18, 'cpp_clear_file_cache': 2, 'cpp_make_system_header': 13, 'report_missing_guard': 17, '_cpp_compare_file_date': 4, '_cpp_pop_file_buffer': 5, 'cpp_set_include_chains': 11, '_cpp_save_file_entries': 40}, "PosixPath('602/insn-extract.bc')": {'insn_extract': 1208}, "PosixPath('602/lto-streamer-in.bc')": {'fixup_eh_region_pointers': 32, 'lto_input_eh_catch_list': 4, 'lto_data_in_create': 7, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_gc_reserve_exact': 2, 'VEC_basic_block_gc_safe_grow': 3, 'VEC_basic_block_gc_safe_grow_cleared': 3, 'set_bb_seq': 2, 'make_new_block': 2, 'input_cfg': 11, 'clear_line_info': 1, 'VEC_bitpack_word_t_base_space': 2, 'VEC_bitpack_word_t_heap_reserve': 2, 'VEC_bitpack_word_t_base_quick_push': 2, 'VEC_bitpack_word_t_heap_safe_push': 5, 'lto_input_bitpack': 4, 'lto_file_decl_data_get_type': 2, 'lto_file_decl_data_get_field_decl': 2, 'lto_file_decl_data_get_fn_decl': 2, 'lto_file_decl_data_get_type_decl': 2, 'lto_file_decl_data_get_namespace_decl': 2, 'lto_file_decl_data_get_var_decl': 2, 'lto_input_tree_ref': 12, 'input_string_internal': 14, 'input_string': 4, 'input_string_cst': 2, 'input_identifier': 2, 'unpack_ts_base_value_fields': 1, 'unpack_ts_real_cst_value_fields': 3, 'unpack_ts_fixed_cst_value_fields': 2, 'unpack_ts_decl_common_value_fields': 6, 'unpack_ts_decl_with_vis_value_fields': 2, 'unpack_ts_type_value_fields': 2, 'unpack_value_fields': 94, 'lto_materialize_tree': 98, 'canon_file_name': 2, 'lto_input_location': 11, 'tree_operand_length': 3, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 5, 'VEC_constructor_elt_base_space': 2, 'VEC_constructor_elt_gc_reserve': 2, 'VEC_constructor_elt_gc_safe_push': 2, 'lto_stream_as_builtin_p': 4, 'get_resolution': 2, 'lto_register_var_decl_in_symtab': 14, 'lto_register_function_decl_in_symtab': 21, 'lto_input_tree': 483, 'input_ssa_names': 2, 'VEC_eh_region_base_space': 2, 'VEC_eh_region_gc_reserve_exact': 2, 'VEC_eh_region_gc_safe_grow': 3, 'input_eh_region': 10, 'VEC_eh_landing_pad_base_space': 2, 'VEC_eh_landing_pad_gc_reserve_exact': 2, 'VEC_eh_landing_pad_gc_safe_grow': 3, 'VEC_tree_gc_reserve_exact': 2, 'VEC_tree_gc_safe_grow': 3, 'VEC_uchar_base_space': 2, 'VEC_uchar_gc_reserve_exact': 2, 'VEC_uchar_gc_safe_grow': 3, 'VEC_eh_region_base_iterate': 2, 'VEC_eh_landing_pad_base_iterate': 2, 'input_eh_regions': 52, 'bb_seq': 2, 'gsi_start_bb': 5, 'gimple_ops': 1, 'gimple_set_op': 4, 'maybe_fixup_handled_component': 22, 'gimple_op': 1, 'gimple_label_label': 1, 'emit_label_in_global_context_p': 2, 'gimple_asm_output_op': 5, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_set_rhs1': 3, 'gimple_assign_set_lhs': 3, 'gimple_call_lhs': 1, 'gimple_call_fn': 1, 'gimple_call_return_type': 2, 'gimple_call_set_lhs': 3, 'maybe_fixup_decls': 22, 'input_gimple_stmt': 137, 'lto_tag_check_set': 8, 'input_bb': 191, 'gsi_stmt': 1, 'fixup_call_stmt_edges_1': 4, 'fixup_call_stmt_edges': 17, 'input_function': 259, 'VEC_alias_pair_base_space': 2, 'VEC_alias_pair_gc_reserve': 2, 'VEC_alias_pair_gc_safe_push': 2, 'input_alias_pairs': 5, 'lto_data_in_delete': 2, 'lto_read_body': 345}, "PosixPath('602/timevar.bc')": {'get_time': 26, 'timevar_accumulate': 27, 'timevar_push_1': 86, 'timevar_pop_1': 78, 'timevar_start': 1, 'timevar_stop': 89, 'timevar_print': 83}, "PosixPath('602/profile.bc')": {'branch_prob': 1562, 'compute_branch_probabilities': 676, 'ei_end_p': 1, 'ei_cond': 3, 'bb_seq': 2, 'gsi_last_bb': 6, 'gsi_stmt': 1, 'single_succ_edge': 1, 'ei_next': 4, 'find_group': 2, 'union_groups': 2, 'find_spanning_tree': 138, 'gsi_start_bb': 6, 'gimple_filename': 1, 'gimple_lineno': 1, 'get_exec_counts': 8, 'read_profile_edge_counts': 40, 'is_edge_inconsistent': 23, 'is_inconsistent': 11, 'correct_negative_edge_counts': 7, 'set_bb_counts': 2, 'compute_value_histograms': 91, 'instrument_edges': 32, 'instrument_values': 6, 'end_branch_prob': 2}, "PosixPath('602/sched-deps.bc')": {'sd_iterator_cond': 23, 'init_deps_global': 44, 'setup_insn_reg_uses': 32, 'init_dep_1': 7, 'init_dep': 7, 'sched_get_condition_with_rev': 8, 'conditions_mutex_p': 8, 'sched_insns_conditions_mutex_p': 28, 'sched_insn_is_legitimate_for_speculation_p': 7, 'sd_lists_size': 16, 'sd_lists_empty_p': 16, 'create_deps_list': 4, 'sd_init_insn': 35, 'free_deps_list': 1, 'sd_finish_insn': 2, 'sd_iterator_start': 7, 'sd_find_dep_between_no_cache': 339, 'sd_find_dep_between': 13, 'create_dep_node': 14, 'get_back_and_forw_lists': 9, 'attach_dep_link': 3, 'depl_on_debug_p': 2, 'add_to_deps_list': 8, 'set_dependency_caches': 44, 'sd_add_dep': 56, 'ask_dependency_caches': 23, 'detach_dep_link': 2, 'remove_from_deps_list': 6, 'change_spec_dep_to_hard': 22, 'estimate_dep_weak': 5, 'update_dependency_caches': 18, 'update_dep': 52, 'add_or_update_dep_1': 102, 'sd_resolve_dep': 31, 'sd_copy_back_deps': 149, 'delete_dep_node': 6, 'sd_delete_dep': 59, 'dump_lists': 104, 'sd_debug_lists': 76, 'maybe_extend_reg_info_p': 2, 'add_dependence': 1, 'add_dependence_list_and_free': 2, 'flush_pending_lists': 4, 'extend_deps_reg_info': 5, 'deps_may_trap_p': 2, 'add_insn_mem_dependence': 6, 'sched_analyze_2': 34, 'sched_analyze_1': 55, 'sched_analyze_reg': 30, 'bitmap_initialize_stat': 2, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'create_insn_reg_use': 6, 'mark_hard_regno_death': 3, 'mark_pseudo_death': 4, 'mark_reg_death': 16, 'insn_use_p': 2, 'create_insn_reg_set': 6, 'mark_insn_hard_regno_birth': 26, 'mark_insn_pseudo_birth': 25, 'mark_insn_reg_birth': 51, 'setup_insn_reg_pressure_info': 78, 'sched_analyze_insn': 866, 'call_may_noreturn_p': 11, 'delete_all_dependences': 72, 'fixup_sched_groups': 179, 'deps_analyze_insn': 289, 'deps_start_bb': 1, 'delete_dep_nodes_in_back_deps': 144, 'sched_free_deps': 211, 'init_deps': 79, 'init_deps_reg_last': 4, 'free_deps': 20, 'remove_from_both_dependence_lists': 2, 'remove_from_dependence_list': 2, 'remove_from_deps': 34, 'VEC_haifa_deps_insn_data_def_base_space': 2, 'VEC_haifa_deps_insn_data_def_heap_reserve_exact': 2, 'VEC_haifa_deps_insn_data_def_heap_safe_grow': 2, 'VEC_haifa_deps_insn_data_def_heap_safe_grow_cleared': 2, 'init_deps_data_vector': 4, 'extend_dependency_caches': 50, 'sched_deps_init': 10, 'sched_deps_finish': 8, 'maybe_add_or_update_dep_1': 9, 'haifa_note_dep': 2, 'haifa_note_mem_dep': 11}, "PosixPath('602/mkstemps.bc')": {'mkstemps': 117}, "PosixPath('602/tree-cfg.bc')": {'first_imm_use_on_stmt': 2, 'next_imm_use_on_stmt': 2, 'clear_special_calls': 1, 'gimple_duplicate_sese_region': 58, 'replace_block_vars_by_duplicates': 28, 'gimple_verify_flow_info': 316, 'gsi_start': 8, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_gc_reserve_exact': 2, 'VEC_basic_block_gc_safe_grow': 3, 'VEC_basic_block_gc_safe_grow_cleared': 3, 'init_empty_tree_cfg_for_function': 14, 'bb_seq': 2, 'gsi_last_bb': 6, 'gsi_stmt': 1, 'last_stmt': 7, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'gimple_set_op': 4, 'gimple_cond_set_lhs': 3, 'gimple_cond_set_rhs': 3, 'gimple_cond_make_false': 5, 'gimple_cond_make_true': 5, 'fold_cond_expr_cond': 20, 'edge_to_cases_cleanup': 1, 'gsi_start_bb': 6, 'label_to_block_fn': 21, 'gimple_label_label': 1, 'make_abnormal_goto_edges': 37, 'gimple_cond_true_label': 1, 'gimple_cond_false_label': 1, 'main_block_label': 3, 'gimple_cond_set_true_label': 3, 'gimple_cond_set_false_label': 3, 'gimple_switch_label': 3, 'gimple_asm_label_op': 8, 'gimple_goto_dest': 1, 'gimple_goto_set_dest': 3, 'VEC_eh_landing_pad_base_iterate': 2, 'ehr_next': 6, 'cleanup_dead_labels_eh': 32, 'cleanup_dead_labels': 285, 'gimple_switch_default_label': 3, 'gimple_switch_set_label': 5, 'group_case_labels': 94, 'single_imm_use_1': 2, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'move_use_after_head': 5, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_init_use': 55, 'gimple_vuse_op': 2, 'link_use_stmts_after': 59, 'first_imm_use_stmt': 13, 'next_imm_use_stmt': 10, 'has_zero_uses': 1, 'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 19, 'replace_uses_by': 120, 'single_noncomplex_succ': 6, 'notice_special_calls': 1, 'extract_true_false_edges_from_block': 2, 'find_taken_edge_cond_expr': 2, 'find_case_label_for_value': 6, 'find_taken_edge_switch_expr': 10, 'find_taken_edge': 14, 'gimple_debug_bb_n': 2, 'dump_cfg_stats': 4, 'dump_function_to_file': 28, 'gimple_dump_cfg': 4, 'is_ctrl_altering_stmt': 2, 'first_stmt': 7, 'gsi_prev_nondebug': 4, 'gsi_last_nondebug_bb': 30, 'last_and_only_stmt': 6, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs_class': 3, 'gimple_assign_lhs': 1, 'verify_types_in_gimple_min_lval': 2, 'verify_types_in_gimple_reference': 31, 'verify_gimple_assign_single': 4, 'verify_gimple_assign_unary': 19, 'gimple_assign_rhs2': 3, 'verify_gimple_comparison': 4, 'verify_gimple_assign_binary': 22, 'verify_gimple_assign': 44, 'gimple_call_fn': 1, 'gimple_call_lhs': 1, 'gimple_call_chain': 1, 'gimple_call_arg': 1, 'verify_gimple_call': 24, 'verify_gimple_goto': 2, 'gimple_switch_index': 1, 'verify_gimple_switch': 2, 'gimple_return_retval': 1, 'verify_gimple_return': 7, 'verify_gimple_phi': 12, 'verify_types_in_gimple_stmt': 94, 'verify_types_in_gimple_seq_2': 288, 'tree_node_can_be_shared': 4, 'gsi_one_before_end_p': 1, 'gimple_call_fndecl': 4, 'verify_expr': 34, 'verify_stmt': 20, 'verify_stmts': 119, 'gimple_block_label': 42, 'ei_end_p': 1, 'ei_cond': 3, 'phi_nodes': 2, 'ei_next': 4, 'gimple_phi_arg_location_from_edge': 2, 'add_phi_args_after_copy_edge': 25, 'add_phi_args_after_copy_bb': 3, 'add_phi_args_after_copy': 3, 'VEC_basic_block_heap_reserve': 2, 'VEC_basic_block_base_quick_push': 2, 'VEC_basic_block_heap_safe_push': 5, 'single_succ_edge': 1, 'gimple_duplicate_sese_tail': 206, 'gather_blocks_in_sese_region': 4, 'mark_virtual_ops_in_bb': 9, 'ei_safe_edge': 3, 'VEC_basic_block_base_iterate': 2, 'find_outermost_region_in_block': 5, 'replace_by_duplicate_decl': 7, 'replace_ssa_name': 13, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'is_global_var': 2, 'move_stmt_op': 25, 'gimple_call_set_arg': 3, 'move_stmt_r': 22, 'move_block_to_fn': 205, 'new_label_mapper': 7, 'move_sese_region_to_fn': 546, 'print_pred_bbs': 3, 'print_succ_bbs': 3, 'print_loops_bb': 9, 'print_loop': 28, 'debug_loop_num': 2, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'remove_edge_and_dominated_blocks': 56, 'gimple_purge_dead_eh_edges': 4, 'gimple_purge_dead_abnormal_call_edges': 4, 'gimple_purge_all_dead_eh_edges': 13, 'do_warn_unused_result': 19, 'execute_warn_function_noreturn': 2, 'execute_warn_function_return': 37, 'split_critical_edges': 62, 'gimple_lv_adjust_loop_header_phi': 11, 'gimple_lv_add_condition_to_bb': 13, 'gimple_execute_on_shrinking_pred': 2, 'gimple_execute_on_growing_pred': 2, 'need_fake_edge_p': 4, 'gimple_flow_call_edges_add': 32, 'gimple_block_ends_with_call_p': 6, 'gimple_make_forwarder_block': 11, 'reinstall_phi_args': 8, 'gimple_split_edge': 26, 'op_iter_next_def': 4, 'op_iter_init_def': 19, 'gimple_duplicate_bb': 49, 'set_bb_seq': 2, 'gimple_merge_blocks': 295, 'gimple_can_merge_blocks_p': 48, 'gimple_split_block': 45, 'remove_phi_nodes_and_edges_for_unreachable_block': 2, 'remove_bb': 143, 'gimple_try_redirect_by_replacing_jump': 19, 'get_cases_for_edge': 10, 'gimple_redirect_edge_and_branch': 130, 'create_bb': 22, 'stmt_starts_bb_p': 16, 'gimple_has_lhs': 1, 'make_blocks': 63, 'factor_computed_gotos': 89, 'first_non_label_stmt': 7, 'same_line_p': 7, 'next_discriminator_for_locus': 7, 'assign_discriminator': 14, 'make_goto_expr_edges': 27, 'make_cond_expr_edges': 18, 'make_gimple_switch_edges': 10, 'make_gimple_asm_edges': 20, 'make_edges': 180, 'get_lineno': 1, 'gimple_cfg2vcg': 35, 'build_gimple_cfg': 416, 'execute_build_cfg': 425}, "PosixPath('602/explow.bc')": {'trunc_int_for_mode': 1, 'plus_constant': 37, 'eliminate_constant_term': 21, 'expr_size': 5, 'int_expr_size': 2, 'force_reg': 21, 'break_out_memory_refs': 5, 'memory_address_addr_space': 10, 'use_anchored_address': 19, 'validize_mem': 4, 'promote_decl_mode': 22, 'adjust_stack': 2, 'anti_adjust_stack': 2, 'update_nonlocal_goto_save_area': 7, 'round_push': 2, 'anti_adjust_stack_and_probe': 1, 'allocate_dynamic_stack_space': 6, 'probe_stack_range': 5, 'hard_function_value': 1}, "PosixPath('602/print-rtl.bc')": {'print_rtx': 278, 'debug_rtx_list': 2, 'debug_rtx_range': 1, 'debug_rtx_find': 6, 'print_rtl': 2}, "PosixPath('602/tree-ssa-ter.bc')": {'var_to_partition': 4, 'new_temp_expr_table': 18, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_next_tree': 6, 'op_iter_init_tree': 74, 'single_ssa_tree_operand': 8, 'single_imm_use': 4, 'gimple_references_memory_p': 2, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_fn': 1, 'gimple_call_return_type': 2, 'gimple_assign_rhs_code': 2, 'gimple_expr_type': 4, 'is_replaceable_p': 117, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'remove_from_partition_kill_list': 2, 'finished_with_expr': 16, 'mark_replaceable': 3, 'add_to_partition_kill_list': 2, 'make_dependent_on_partition': 2, 'add_dependence': 27, 'process_replaceable': 102, 'kill_virtual_exprs': 2, 'find_replaceable_in_bb': 452, 'free_temp_expr_table': 3, 'find_replaceable_exprs': 381}, "PosixPath('602/spaces.bc')": {'spaces': 6}, "PosixPath('602/tree-complex.bc')": {'gsi_stmt': 1, 'bb_seq': 2, 'gsi_start_bb': 6, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_lhs': 1, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'init_dont_simulate_again': 89, 'VEC_complex_lattice_t_base_space': 2, 'VEC_complex_lattice_t_heap_reserve_exact': 2, 'VEC_complex_lattice_t_heap_safe_grow': 2, 'VEC_complex_lattice_t_heap_safe_grow_cleared': 2, 'var_ann': 2, 'init_parameter_lattice_values': 8, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve_exact': 2, 'VEC_tree_heap_safe_grow': 2, 'VEC_tree_heap_safe_grow_cleared': 2, 'single_succ_edge': 1, 'some_nonzerop': 2, 'find_lattice_value': 5, 'cvc_lookup': 1, 'create_one_component_var': 9, 'cvc_insert': 3, 'get_component_var': 7, 'get_component_ssa_name': 10, 'set_component_ssa_name': 19, 'update_parameter_components': 6, 'extract_component': 3, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'update_phi_components': 35, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'update_complex_assignment': 7, 'gimple_set_op': 4, 'gimple_assign_set_lhs': 3, 'gimple_assign_set_rhs1': 3, 'gimple_return_set_retval': 3, 'expand_complex_move': 39, 'gimple_call_set_lhs': 3, 'expand_complex_libcall': 6, 'expand_complex_multiplication': 2, 'gsi_last_bb': 6, 'expand_complex_div_wide': 19, 'expand_complex_division': 18, 'gimple_return_retval': 1, 'gimple_cond_set_lhs': 3, 'gimple_cond_set_rhs': 3, 'expand_complex_comparison': 10, 'expand_complex_operations_1': 55, 'complex_visit_phi': 11, 'complex_visit_stmt': 16, 'tree_lower_complex': 414}, "PosixPath('602/i386-c.bc')": {'ix86_pragma_target_parse': 11}, "PosixPath('602/cpp_mkdeps.bc')": {'deps_free': 15, 'apply_vpath': 15, 'munge': 8, 'deps_add_target': 5, 'deps_add_default_target': 2, 'deps_add_dep': 13, 'deps_add_vpath': 22, 'deps_write': 5, 'deps_phony_targets': 2, 'deps_save': 11, 'deps_restore': 6}, "PosixPath('602/convert.bc')": {'convert_to_pointer': 7, 'strip_float_extensions': 54, 'convert_to_real': 207, 'convert_to_integer': 140, 'convert_to_complex': 6, 'convert_to_vector': 2, 'convert_to_fixed': 12}, "PosixPath('602/insn-automata.bc')": {'dfa_insn_code_enlarge': 2, 'dfa_insn_code': 2, 'internal_min_issue_delay': 1353, 'internal_state_transition': 1590, 'state_transition': 2, 'min_issue_delay': 2, 'min_insn_conflict_delay': 20, 'insn_latency': 11, 'maximal_insn_latency': 2, 'print_reservation': 2, 'dfa_clean_insn_cache': 2, 'dfa_clear_single_insn_cache': 2}, "PosixPath('602/c-pch.bc')": {'pch_init': 18, 'c_common_valid_pch': 32, 'c_common_read_pch': 18, 'c_common_write_pch': 6, 'c_common_no_more_pch': 3, 'c_common_pch_pragma': 1}, "PosixPath('602/reginfo.bc')": {'init_move_cost': 128, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'reg_set_to_hard_reg_set': 9, 'init_reg_sets': 9, 'choose_hard_reg_mode': 16, 'init_reg_modes_target': 7, 'init_reg_sets_1': 282, 'init_regs': 290, 'init_fake_stack_mems': 1, 'fix_register': 1, 'globalize_reg': 23, 'resize_reg_info': 1, 'setup_reg_classes': 6, 'reg_scan_mark_refs': 43, 'reg_scan': 6, 'record_subregs_of_mode': 10, 'find_subregs_of_mode': 16, 'init_subregs_of_mode': 18, 'invalid_mode_change_p': 1}, "PosixPath('602/gtype-desc.bc')": {'gt_ggc_mx_VEC_ipa_edge_args_t_gc': 10, 'gt_ggc_mx_ssa_operand_memory_d': 2, 'gt_ggc_mx_section': 3, 'gt_ggc_mx_gimple_statement_d': 259, 'gt_ggc_mx_basic_block_def': 34, 'gt_ggc_mx_rtl_bb_info': 7, 'gt_ggc_mx_gimple_bb_info': 2, 'gt_ggc_mx_loop': 42, 'gt_ggc_mx_loop_exit': 7, 'gt_ggc_mx_nb_iter_bound': 5, 'gt_ggc_mx_edge_def': 4, 'gt_ggc_mx_rtx_def': 426, 'gt_ggc_mx_mem_attrs': 4, 'gt_ggc_mx_object_block': 4, 'gt_ggc_mx_gimple_seq_d': 8, 'gt_ggc_mx_gimple_seq_node_d': 10, 'gt_ggc_mx_eh_catch_d': 11, 'gt_ggc_mx_eh_landing_pad_d': 7, 'gt_ggc_mx_eh_region_d': 59, 'gt_ggc_mx_constant_descriptor_tree': 2, 'gt_ggc_mx_cgraph_asm_node': 2, 'gt_ggc_mx_varpool_node': 10, 'gt_ggc_mx_ipa_replace_map': 2, 'gt_ggc_mx_bitmap_element_def': 2, 'gt_ggc_mx_bitmap_head_def': 4, 'gt_ggc_mx_bitmap_obstack': 2, 'gt_ggc_mx_cgraph_node': 138, 'gt_ggc_m_P11cgraph_edge4htab': 5, 'gt_ggc_mx_cgraph_edge': 26, 'gt_ggc_m_P27cgraph_node_set_element_def4htab': 5, 'gt_ggc_mx_elt_loc_list': 4, 'gt_ggc_mx_cselib_val_struct': 7, 'gt_ggc_mx_elt_list': 2, 'gt_ggc_mx_types_used_by_vars_entry': 2, 'gt_ggc_m_P9loop_exit4htab': 5, 'gt_ggc_mx_loops': 2, 'gt_ggc_mx_control_flow_graph': 7, 'gt_ggc_m_P15throw_stmt_node4htab': 5, 'gt_ggc_mx_eh_status': 9, 'gt_ggc_m_P9tree_node4htab': 5, 'gt_ggc_mx_gimple_df': 23, 'gt_ggc_mx_sequence_stack': 4, 'gt_ggc_mx_tree_map': 2, 'gt_ggc_mx_tree_statement_list_node': 7, 'gt_ggc_mx_varray_head_tag': 16, 'gt_ggc_mx_VEC_constructor_elt_gc': 2, 'gt_ggc_mx_VEC_alias_pair_gc': 2, 'gt_ggc_mx_machine_function': 2, 'gt_ggc_mx_function': 67, 'gt_ggc_mx_answer': 2, 'gt_ggc_mx_cpp_macro': 18, 'gt_ggc_mx_line_maps': 3, 'gt_ggc_m_SP9tree_node17splay_tree_node_s': 2, 'gt_ggc_m_P9tree_nodeP9tree_node17splay_tree_node_s': 4, 'gt_ggc_m_IP9tree_node17splay_tree_node_s': 2, 'gt_ggc_m_P12tree_int_map4htab': 5, 'gt_ggc_m_P12varpool_node4htab': 5, 'gt_ggc_m_P24constant_descriptor_tree4htab': 5, 'gt_ggc_m_P12object_block4htab': 5, 'gt_ggc_m_P7section4htab': 5, 'gt_ggc_m_P17tree_priority_map4htab': 5, 'gt_ggc_m_P8tree_map4htab': 5, 'gt_ggc_m_P9reg_attrs4htab': 5, 'gt_ggc_m_P9mem_attrs4htab': 5, 'gt_ggc_m_P7rtx_def4htab': 5, 'gt_ggc_m_P11cgraph_node4htab': 5, 'gt_ggc_m_P24types_used_by_vars_entry4htab': 5, 'gt_pch_p_22VEC_ipa_edge_args_t_gc': 5, 'gt_pch_nx_VEC_ipa_edge_args_t_gc': 10, 'gt_pch_nx_ssa_operand_memory_d': 2, 'gt_pch_nx_section': 3, 'gt_pch_p_7rtx_def': 4, 'gt_pch_p_18gimple_statement_d': 15, 'gt_pch_nx_gimple_statement_d': 258, 'gt_pch_nx_basic_block_def': 36, 'gt_pch_nx_rtl_bb_info': 7, 'gt_pch_nx_gimple_bb_info': 2, 'gt_pch_nx_loop': 42, 'gt_pch_nx_loop_exit': 7, 'gt_pch_nx_nb_iter_bound': 5, 'gt_pch_nx_edge_def': 4, 'gt_pch_nx_rtx_def': 423, 'gt_pch_nx_mem_attrs': 4, 'gt_pch_nx_object_block': 4, 'gt_pch_nx_gimple_seq_d': 8, 'gt_pch_nx_gimple_seq_node_d': 12, 'gt_pch_nx_eh_catch_d': 11, 'gt_pch_nx_eh_landing_pad_d': 7, 'gt_pch_nx_eh_region_d': 59, 'gt_pch_nx_constant_descriptor_tree': 2, 'gt_pch_nx_cgraph_asm_node': 2, 'gt_pch_nx_varpool_node': 10, 'gt_pch_p_P11cgraph_edge4htab': 5, 'gt_pch_nx_ipa_replace_map': 2, 'gt_pch_nx_bitmap_element_def': 2, 'gt_pch_nx_bitmap_head_def': 4, 'gt_pch_nx_bitmap_obstack': 2, 'gt_pch_nx_cgraph_node': 140, 'gt_pch_n_P11cgraph_edge4htab': 5, 'gt_pch_nx_cgraph_edge': 26, 'gt_pch_p_P27cgraph_node_set_element_def4htab': 5, 'gt_pch_n_P27cgraph_node_set_element_def4htab': 5, 'gt_pch_nx_elt_loc_list': 4, 'gt_pch_nx_cselib_val_struct': 7, 'gt_pch_nx_elt_list': 2, 'gt_pch_nx_types_used_by_vars_entry': 2, 'gt_pch_p_P9loop_exit4htab': 5, 'gt_pch_n_P9loop_exit4htab': 5, 'gt_pch_nx_loops': 2, 'gt_pch_nx_control_flow_graph': 7, 'gt_pch_p_P15throw_stmt_node4htab': 5, 'gt_pch_n_P15throw_stmt_node4htab': 5, 'gt_pch_nx_eh_status': 9, 'gt_pch_p_P9tree_node4htab': 5, 'gt_pch_n_P9tree_node4htab': 5, 'gt_pch_nx_gimple_df': 23, 'gt_pch_nx_sequence_stack': 4, 'gt_pch_nx_tree_map': 2, 'gt_pch_nx_tree_statement_list_node': 8, 'gt_pch_p_15varray_head_tag': 2, 'gt_pch_nx_varray_head_tag': 16, 'gt_pch_nx_VEC_constructor_elt_gc': 2, 'gt_pch_nx_VEC_alias_pair_gc': 2, 'gt_pch_nx_machine_function': 2, 'gt_pch_nx_function': 67, 'gt_pch_p_9cpp_token': 3, 'gt_pch_p_6answer': 4, 'gt_pch_nx_answer': 2, 'gt_pch_p_9cpp_macro': 29, 'gt_pch_nx_cpp_macro': 14, 'gt_pch_p_9line_maps': 4, 'gt_pch_nx_line_maps': 3, 'gt_pch_n_SP9tree_node17splay_tree_node_s': 2, 'gt_pch_n_P9tree_nodeP9tree_node17splay_tree_node_s': 4, 'gt_pch_n_IP9tree_node17splay_tree_node_s': 2, 'gt_pch_p_P12tree_int_map4htab': 5, 'gt_pch_n_P12tree_int_map4htab': 5, 'gt_pch_p_P12varpool_node4htab': 5, 'gt_pch_n_P12varpool_node4htab': 5, 'gt_pch_p_P24constant_descriptor_tree4htab': 5, 'gt_pch_n_P24constant_descriptor_tree4htab': 5, 'gt_pch_p_P12object_block4htab': 5, 'gt_pch_n_P12object_block4htab': 5, 'gt_pch_p_P7section4htab': 5, 'gt_pch_n_P7section4htab': 5, 'gt_pch_p_P17tree_priority_map4htab': 5, 'gt_pch_n_P17tree_priority_map4htab': 5, 'gt_pch_p_P8tree_map4htab': 5, 'gt_pch_n_P8tree_map4htab': 5, 'gt_pch_p_P9reg_attrs4htab': 5, 'gt_pch_n_P9reg_attrs4htab': 5, 'gt_pch_p_P9mem_attrs4htab': 5, 'gt_pch_n_P9mem_attrs4htab': 5, 'gt_pch_p_P7rtx_def4htab': 5, 'gt_pch_n_P7rtx_def4htab': 5, 'gt_pch_p_P11cgraph_node4htab': 5, 'gt_pch_n_P11cgraph_node4htab': 5, 'gt_pch_p_P24types_used_by_vars_entry4htab': 5, 'gt_pch_n_P24types_used_by_vars_entry4htab': 5}, "PosixPath('602/bid2dpd_dpd2bid.bc')": {'_bid_to_dpd32': 1, '_dpd_to_bid32': 3, '_bid_to_dpd64': 15, '_dpd_to_bid64': 15, '_bid_to_dpd128': 4, '_dpd_to_bid128': 67}, "PosixPath('602/plugin.bc')": {'get_named_event_id': 9, 'register_callback': 15, 'add_new_plugin': 4, 'parse_plugin_arg_opt': 14, 'register_plugin_info': 4, 'unregister_callback': 3, 'invoke_plugin_callbacks': 3, 'print_version_one_plugin': 4, 'print_plugins_versions': 3, 'print_help_one_plugin': 2, 'print_plugins_help': 3, 'dump_active_plugins': 2, 'plugin_default_version_check': 22}, "PosixPath('602/decimal128.bc')": {'__dpd128FromNumber': 235, '__dpd128ToNumber': 84, '__dpd128ToString': 61, 'decimal128FromNumber': 3, 'decimal128ToNumber': 5}, "PosixPath('602/lto-wpa-fixup.bc')": {'lto_fixup_nothrow_decls': 9, 'lto_mark_nothrow_fndecl': 2, 'lto_file_decl_data_get_fn_decl': 2, 'lto_input_wpa_fixup_1': 2, 'lto_input_wpa_fixup': 3, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 4, 'lto_output_wpa_fixup': 14}, "PosixPath('602/cfgrtl.bc')": {'force_nonfallthru_and_redirect': 132, 'can_delete_label_p': 3, 'delete_insn': 25, 'ei_end_p': 1, 'ei_safe_edge': 3, 'ei_next': 4, 'single_succ_edge': 1, 'ei_cond': 3, 'purge_dead_edges': 94, 'delete_insn_and_edges': 2, 'delete_insn_chain': 6, 'update_bb_for_insn_chain': 2, 'update_bb_for_insn': 4, 'create_basic_block_structure': 9, 'compute_bb_for_insn': 7, 'free_bb_for_insn': 4, 'entry_of_function': 2, 'insert_insn_on_edge': 7, 'commit_one_edge_insertion': 38, 'commit_edge_insertions': 36, 'emit_insn_at_entry': 2, 'block_label': 2, 'try_redirect_by_replacing_jump': 78, 'VEC_edge_base_unordered_remove': 4, 'VEC_edge_base_space': 2, 'VEC_edge_gc_reserve': 2, 'VEC_edge_base_quick_push': 2, 'VEC_edge_gc_safe_push': 5, 'print_rtl_with_bb': 28, 'update_br_prob_note': 7, 'get_last_bb_insn': 3, 'purge_all_dead_edges': 3, 'insert_insn_end_bb_new': 23, 'rtl_extract_cond_bb_edges': 2, 'rtl_lv_add_condition_to_bb': 4, 'need_fake_edge_p': 6, 'rtl_flow_call_edges_add': 26, 'rtl_block_ends_with_call_p': 5, 'cfg_layout_split_edge': 5, 'cfg_layout_merge_blocks': 62, 'cfg_layout_can_merge_blocks_p': 41, 'first_insn_after_basic_block_note': 4, 'rtl_split_block': 18, 'cfg_layout_delete_block': 50, 'rtl_can_remove_branch_p': 12, 'patch_jump_insn': 55, 'redirect_branch_edge': 31, 'cfg_layout_redirect_edge_and_branch': 24, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_gc_reserve_exact': 2, 'VEC_basic_block_gc_safe_grow': 3, 'VEC_basic_block_gc_safe_grow_cleared': 3, 'rtl_create_basic_block': 8, 'rtl_dump_bb': 6, 'rtl_verify_flow_info_1': 170, 'rtl_tidy_fallthru_edge': 10, 'rtl_split_edge': 24, 'rtl_merge_blocks': 24, 'rtl_can_merge_blocks': 36, 'rtl_redirect_edge_and_branch_force': 2, 'rtl_redirect_edge_and_branch': 4, 'rtl_verify_flow_info': 101}, "PosixPath('602/dbgcnt.bc')": {'dbg_cnt_is_enabled': 1, 'dbg_cnt': 8, 'dbg_cnt_set_limit_by_index': 2, 'dbg_cnt_set_limit_by_name': 5, 'dbg_cnt_process_single_pair': 9, 'dbg_cnt_process_opt': 16, 'dbg_cnt_list_all_counters': 6}, "PosixPath('602/c-objc-common.bc')": {'c_warn_unused_global_decl': 5, 'c_tree_printer': 18}, "PosixPath('602/varpool.bc')": {'varpool_node': 13, 'cgraph_variable_initializer_availability': 2, 'dump_varpool_node': 3, 'varpool_enqueue_needed_node': 7, 'varpool_mark_needed_node': 10, 'decide_is_variable_needed': 43, 'varpool_analyze_pending_decls': 14, 'varpool_assemble_decl': 11, 'varpool_assemble_pending_decls': 4, 'varpool_finalize_decl': 12, 'varpool_remove_unreferenced_decls': 11, 'varpool_empty_needed_queue': 2, 'add_new_static_var': 11, 'varpool_extra_name_alias': 13}, "PosixPath('602/insn-output.bc')": {'output_1755': 4, 'output_1471': 7, 'output_1470': 7, 'output_1469': 7, 'output_1462': 2, 'output_1461': 2, 'output_1460': 2, 'output_1459': 2, 'output_1458': 2, 'output_1246': 2, 'output_1245': 2, 'output_1244': 2, 'output_1243': 2, 'output_1238': 7, 'output_1186': 7, 'output_1185': 7, 'output_1184': 7, 'output_1183': 7, 'output_1182': 7, 'output_819': 7, 'output_817': 2, 'output_693': 2, 'output_498': 2, 'output_496': 1, 'output_393': 1, 'output_392': 1, 'output_391': 5, 'output_390': 5, 'output_389': 1, 'output_388': 1, 'output_387': 1, 'output_386': 1, 'output_385': 1, 'output_384': 1, 'output_383': 5, 'output_293': 2, 'output_290': 3, 'output_289': 6, 'output_281': 2, 'output_219': 2, 'output_218': 4, 'output_217': 2, 'output_216': 5, 'output_215': 5, 'output_214': 4, 'output_213': 2, 'output_212': 2, 'output_211': 4, 'output_210': 2, 'output_209': 5, 'output_208': 5, 'output_207': 4, 'output_206': 2, 'output_205': 5, 'output_204': 5, 'output_203': 2, 'output_202': 2, 'output_201': 2, 'output_200': 2, 'output_199': 2, 'output_198': 5, 'output_197': 5, 'output_83': 2, 'output_76': 2, 'output_74': 2, 'output_71': 2, 'output_53': 2}, "PosixPath('602/tree-ssa-ccp.bc')": {'gsi_start': 8, 'get_symbol_constant_value': 6, 'may_propagate_address_into_dereference': 7, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_lhs': 1, 'gimple_assign_rhs1': 1, 'get_default_value': 6, 'canonicalize_float_value': 50, 'get_value': 10, 'fold_const_aggregate_ref': 50, 'maybe_fold_offset_to_array_ref': 54, 'maybe_fold_offset_to_component_ref': 11, 'maybe_fold_offset_to_reference': 14, 'maybe_fold_offset_to_address': 9, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'maybe_fold_stmt_addition': 29, 'gsi_stmt': 1, 'maybe_fold_stmt_indirect': 20, 'maybe_fold_reference': 75, 'gimple_call_fn': 1, 'gimple_call_return_type': 2, 'gimple_expr_type': 4, 'gimple_assign_lhs': 1, 'fold_gimple_assign': 73, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'fold_gimple_cond': 4, 'gimple_call_arg': 1, 'gimple_set_op': 4, 'gimple_call_set_arg': 3, 'gimple_call_fndecl': 4, 'get_maxval_strlen': 29, 'ccp_fold_builtin': 25, 'gimple_vuse': 2, 'gimple_vdef': 2, 'gimplify_and_update_call_from_tree': 15, 'gimple_call_set_fn': 3, 'fold_gimple_call': 20, 'gimple_asm_output_op': 5, 'gimple_asm_input_op': 3, 'gimple_has_lhs': 1, 'fold_stmt_1': 130, 'bb_seq': 2, 'gsi_start_bb': 6, 'single_succ_edge': 1, 'has_single_use': 4, 'optimize_stack_restore': 61, 'optimize_stdarg_builtin': 21, 'execute_fold_all_builtins': 395, 'surely_varying_stmt_p': 9, 'gimple_def_ops': 2, 'gimple_use_ops': 2, 'op_iter_init': 22, 'op_iter_next_tree': 6, 'op_iter_init_tree': 70, 'set_value_varying': 2, 'ccp_initialize': 98, 'do_dbg_cnt': 2, 'gimple_references_memory_p': 2, 'likely_value': 28, 'gimple_switch_index': 1, 'ccp_fold': 127, 'evaluate_stmt': 30, 'gimple_cond_set_lhs': 3, 'gimple_cond_set_rhs': 3, 'gimple_cond_make_false': 5, 'gimple_cond_make_true': 5, 'ccp_fold_stmt': 44, 'ccp_finalize': 6, 'ccp_lattice_meet': 6, 'set_lattice_value': 20, 'ccp_visit_phi_node': 33, 'visit_assignment': 4, 'ccp_visit_stmt': 15, 'do_ssa_ccp': 54}, "PosixPath('602/graphite-interchange.bc')": {}, "PosixPath('602/cpp_charset.bc')": {'init_iconv_desc': 48, 'cpp_interpret_string': 414, '_cpp_convert_input': 48, 'conversion_loop': 29, 'one_cppchar_to_utf8': 31, 'one_utf16_to_utf8': 48, 'convert_utf16_utf8': 96, 'one_utf32_to_utf8': 47, 'convert_utf32_utf8': 88, 'one_utf8_to_cppchar': 13, 'one_utf8_to_utf16': 17, 'convert_utf8_utf16': 37, 'one_utf8_to_utf32': 10, 'convert_utf8_utf32': 33, 'convert_no_conversion': 7, 'cpp_init_iconv': 72, 'cpp_host_to_exec_charset': 16, 'ucn_valid_in_identifier': 55, '_cpp_valid_ucn': 89, 'convert_ucn': 82, 'emit_numeric_escape': 22, 'convert_hex': 4, 'convert_oct': 3, 'convert_escape': 163, 'cpp_interpret_string_notranslate': 14, 'wide_str_to_charconst': 7, 'narrow_str_to_charconst': 8, 'cpp_interpret_charconst': 59, '_cpp_interpret_identifier': 59}, "PosixPath('602/tree-ssa-coalesce.bc')": {'coalesce_pair_map_eq': 4, 'coalesce_pair_map_hash': 2, 'create_coalesce_list': 7, 'gsi_stmt': 1, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'coalesce_cost_edge': 18, 'has_single_use': 4, 'add_cost_one_coalesce': 4, 'find_coalesce_pair': 14, 'add_coalesce': 12, 'abnormal_corrupt': 16, 'bb_seq': 2, 'gsi_start_bb': 5, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_next_tree': 6, 'op_iter_init_tree': 73, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'gimple_asm_output_op': 5, 'gimple_asm_input_op': 3, 'has_zero_uses': 1, 'create_outofssa_var_map': 522, 'delete_coalesce_list': 3, 'ssa_conflicts_new': 2, 'live_on_exit': 4, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'basevar_index': 2, 'live_track_add_partition': 4, 'live_track_init': 17, 'gsi_last_bb': 6, 'var_to_partition': 4, 'live_track_remove_partition': 5, 'live_track_clear_var': 10, 'ssa_conflicts_add_one': 2, 'live_track_process_def': 23, 'live_track_process_use': 9, 'live_track_live_p': 9, 'delete_live_track': 4, 'build_ssa_conflict_graph': 159, 'ssa_conflicts_dump': 5, 'first_htab_element': 6, 'first_coalesce_pair': 5, 'end_htab_p': 2, 'end_coalesce_pair_p': 2, 'next_htab_element': 4, 'next_coalesce_pair': 1, 'compare_pairs': 8, 'sort_coalesce_list': 6, 'dump_coalesce_list': 10, 'partition_to_var': 3, 'ssa_conflicts_test_p': 1, 'ssa_conflicts_merge': 11, 'attempt_coalesce': 24, 'pop_cost_one_pair': 3, 'pop_best_coalesce': 12, 'coalesce_partitions': 57, 'ssa_conflicts_delete': 6, 'coalesce_ssa_name': 207}, "PosixPath('602/regrename.bc')": {'bitmap_initialize_stat': 2, 'df_scan_get_bb_info': 2, 'df_get_artificial_defs': 2, 'verify_reg_in_set': 2, 'VEC_du_head_p_base_space': 2, 'VEC_du_head_p_heap_reserve': 2, 'VEC_du_head_p_base_quick_push': 2, 'VEC_du_head_p_heap_safe_push': 4, 'create_new_chain': 91, 'hide_operands': 14, 'scan_rtx_reg': 239, 'scan_rtx_address': 18, 'scan_rtx': 10, 'record_out_operands': 27, 'remove_from_hard_reg_set': 1, 'add_to_hard_reg_set': 1, 'note_sets_clobbers': 19, 'build_def_use': 216, 'dump_def_use_chain': 7, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'merge_overlapping_regs': 18, 'do_replace': 27, 'VEC_du_head_p_base_iterate': 2, 'free_chain_data': 2, 'regrename_optimize': 657}, "PosixPath('602/hex.bc')": {}, "PosixPath('602/version.bc')": {}, "PosixPath('602/ipa-utils.bc')": {'searchc': 45, 'ipa_utils_reduced_inorder': 85, 'get_base_var': 4}, "PosixPath('602/ggc-page.bc')": {'debug_print_page_list': 3, 'set_page_group_in_use': 2, 'set_page_table_entry': 5, 'alloc_page': 61, 'ggc_alloc_stat': 107, 'ggc_allocated_p': 2, 'lookup_page_table_entry': 2, 'gt_ggc_m_S': 14, 'ggc_set_mark': 11, 'ggc_marked_p': 7, 'ggc_get_size': 4, 'ggc_free': 39, 'compute_inverse': 1, 'init_ggc': 47, 'release_pages': 8, 'ggc_print_statistics': 29, 'ggc_pch_total_size': 1, 'ggc_pch_this_base': 5, 'ggc_pch_alloc_object': 3, 'ggc_pch_write_object': 7, 'clear_marks': 32, 'ggc_pch_read': 88}, "PosixPath('602/strerror.bc')": {'init_error_tables': 57}, "PosixPath('602/lists.bc')": {'find_list_elem': 2, 'remove_list_elem': 2, 'alloc_INSN_LIST': 8, 'alloc_EXPR_LIST': 8, 'free_list': 5, 'free_EXPR_LIST_list': 3, 'free_INSN_LIST_list': 7, 'remove_free_INSN_LIST_elem': 6, 'remove_free_INSN_LIST_node': 5, 'remove_free_EXPR_LIST_node': 4}, "PosixPath('602/xmemdup.bc')": {}, "PosixPath('602/combine.bc')": {'setup_incoming_promotions': 29, 'try_combine': 3846, 'record_value_for_reg': 142, 'distribute_links': 55, 'combine_simplify_rtx': 472, 'simplify_set': 310, 'reg_truncated_to_mode': 5, 'df_lr_get_bb_info': 2, 'get_last_value_validate': 134, 'get_last_value': 112, 'reg_num_sign_bit_copies_for_combine': 45, 'reg_nonzero_bits_for_combine': 63, 'gen_lowpart_for_combine': 9, 'VEC_reg_stat_type_base_space': 2, 'VEC_reg_stat_type_heap_reserve_exact': 2, 'VEC_reg_stat_type_heap_safe_grow': 2, 'VEC_reg_stat_type_heap_safe_grow_cleared': 2, 'count_rtxs': 25, 'update_table_tick': 50, 'create_log_links': 118, 'single_pred_edge': 1, 'record_dead_and_set_regs_1': 9, 'record_dead_and_set_regs': 69, 'init_reg_last': 4, 'record_promoted_value': 52, 'check_promoted_subreg': 58, 'cant_combine_insn_p': 14, 'likely_spilled_retval_1': 6, 'likely_spilled_retval_p': 30, 'do_SUBST': 17, 'reg_subword_p': 2, 'expand_field_assignment': 26, 'use_crosses_set_p': 15, 'can_combine_p': 61, 'undo_all': 21, 'combinable_i3pat': 12, 'find_single_use_1': 17, 'find_single_use': 9, 'can_change_dest_mode': 3, 'do_SUBST_MODE': 6, 'if_then_else_cond': 162, 'try_widen_shift_mode': 3, 'force_to_mode': 253, 'simplify_and_const_int': 8, 'expand_compound_operation': 92, 'simplify_shift_const_1': 483, 'apply_distributive_law': 30, 'make_extraction': 60, 'extract_left_shift': 12, 'make_compound_operation': 86, 'simplify_comparison': 346, 'distribute_and_simplify_rtx': 10, 'known_cond': 20, 'do_SUBST_INT': 12, 'reg_dead_at_p_1': 6, 'reg_dead_at_p': 23, 'recog_for_combine': 108, 'rtx_equal_for_field_assignment_p': 7, 'canon_reg_for_combine': 21, 'make_field_assignment': 73, 'simplify_logical': 14, 'subst': 91, 'simplify_if_then_else': 195, 'add_to_hard_reg_set': 1, 'mark_used_regs_combine': 15, 'combine_split_insns': 2, 'find_split_point': 126, 'contains_muldiv': 6, 'combine_validate_cost': 12, 'propagate_for_debug': 4, 'reg_bitfield_target_p': 9, 'distribute_notes': 194, 'move_deaths': 70, 'single_succ_edge': 1, 'update_cfg_for_uncondjump': 4, 'set_nonzero_bits_and_sign_copies': 29, 'clear_log_links': 5, 'delete_noop_moves': 22, 'record_truncated_value': 17, 'combine_instructions': 573, 'rest_of_handle_combine': 612}, "PosixPath('602/ira-costs.bc')": {'ira_init_costs': 6, 'ira_init_costs_once': 1, 'free_ira_costs': 12, 'ok_for_base_p_nonstrict': 1, 'ok_for_index_p_nonstrict': 1, 'ira_get_may_move_cost': 2, 'record_address_regs': 160, 'copy_cost': 15, 'ira_get_register_move_cost': 1, 'record_reg_classes': 1288, 'record_operand_costs': 135, 'scan_one_insn': 214, 'process_bb_for_costs': 236, 'print_allocno_costs': 19, 'print_pseudo_costs': 15, 'find_costs_and_classes': 607, 'process_bb_node_for_hard_reg_moves': 56, 'setup_allocno_cover_class_and_costs': 109, 'ira_costs': 115, 'ira_tune_allocno_costs_and_cover_classes': 62}, "PosixPath('602/df-problems.bc')": {'df_rd_free': 8, 'df_lr_finalize': 5, 'df_lr_free': 25, 'df_live_free': 28, 'df_chain_alloc': 1, 'df_chain_free': 1, 'df_chain_fully_remove_problem': 1, 'df_byte_lr_alloc': 76, 'df_byte_lr_free': 11, 'df_note_bb_compute': 167, 'df_md_free': 26, 'df_live_get_bb_info': 2, 'df_lr_get_bb_info': 2, 'df_get_live_out': 8, 'df_get_live_in': 8, 'df_grow_bb_info': 3, 'df_chain_dump': 8, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'df_print_bb_index': 11, 'df_scan_get_bb_info': 2, 'df_get_artificial_defs': 2, 'df_rd_simulate_artificial_defs_at_top': 13, 'df_rd_simulate_one_insn': 14, 'df_rd_get_bb_info': 2, 'df_rd_bottom_dump': 3, 'df_rd_top_dump': 3, 'df_rd_start_dump': 7, 'bmp_iter_set_init': 11, 'bmp_iter_set': 12, 'df_rd_transfer_function': 30, 'df_rd_confluence_n': 29, 'df_rd_init_solution': 17, 'df_rd_bb_local_compute_process_def': 36, 'df_rd_bb_local_compute': 31, 'df_rd_local_compute': 93, 'df_rd_free_bb_info': 10, 'df_rd_set_bb_info': 5, 'df_rd_alloc': 31, 'df_lr_verify_solution_end': 21, 'df_lr_verify_solution_start': 12, 'df_lr_bottom_dump': 3, 'df_lr_top_dump': 3, 'df_lr_set_bb_info': 5, 'df_lr_alloc': 34, 'df_get_artificial_uses': 2, 'df_lr_bb_local_compute': 69, 'df_lr_local_compute': 27, 'df_lr_transfer_function': 9, 'df_lr_confluence_n': 18, 'df_lr_confluence_0': 9, 'df_lr_init': 17, 'df_lr_free_bb_info': 10, 'df_lr_reset': 15, 'df_lr_verify_transfer_functions': 12, 'df_live_verify_solution_end': 19, 'df_live_verify_solution_start': 12, 'df_live_bottom_dump': 3, 'df_live_top_dump': 3, 'df_live_finalize': 25, 'df_live_transfer_function': 27, 'df_live_confluence_n': 10, 'df_live_init': 21, 'df_live_bb_local_compute': 36, 'df_live_local_compute': 19, 'df_live_free_bb_info': 10, 'df_live_reset': 15, 'df_live_set_bb_info': 5, 'df_live_alloc': 43, 'df_live_set_all_dirty': 2, 'df_live_verify_transfer_functions': 12, 'df_chain_create': 3, 'df_chain_unlink_1': 9, 'df_chain_unlink': 9, 'df_chain_copy': 5, 'df_chain_bottom_dump': 33, 'df_chain_top_dump': 30, 'df_chain_remove_problem': 65, 'df_chain_create_bb_process_use': 50, 'df_chain_create_bb': 21, 'df_chain_finalize': 37, 'df_byte_lr_get_bb_info': 2, 'df_byte_lr_bottom_dump': 3, 'df_byte_lr_top_dump': 3, 'df_byte_lr_transfer_function': 9, 'df_byte_lr_confluence_n': 9, 'df_byte_lr_confluence_0': 9, 'df_byte_lr_init': 17, 'df_byte_lr_expand_bitmap': 11, 'df_byte_lr_bb_local_compute': 163, 'df_byte_lr_local_compute': 236, 'df_byte_lr_free_bb_info': 10, 'df_byte_lr_reset': 14, 'df_byte_lr_check_regs': 4, 'df_byte_lr_set_bb_info': 4, 'df_byte_lr_simulate_defs': 21, 'df_byte_lr_simulate_uses': 19, 'df_byte_lr_simulate_artificial_refs_at_top': 8, 'df_byte_lr_simulate_artificial_refs_at_end': 22, 'df_kill_notes': 15, 'df_whole_mw_reg_unused_p': 7, 'df_set_note': 6, 'df_set_unused_notes_for_mw': 19, 'df_create_unused_note': 8, 'df_whole_mw_reg_dead_p': 7, 'df_set_dead_notes_for_mw': 17, 'df_note_compute': 224, 'df_simulate_find_defs': 3, 'df_simulate_defs': 3, 'df_simulate_uses': 3, 'df_simulate_initialize_backwards': 18, 'bb_has_eh_pred': 4, 'df_simulate_fixup_sets': 5, 'df_simulate_one_insn_backwards': 5, 'df_simulate_finalize_backwards': 5, 'df_simulate_initialize_forwards': 5, 'df_simulate_one_insn_forwards': 16, 'df_md_simulate_artificial_defs_at_top': 5, 'df_md_simulate_one_insn': 12, 'df_md_get_bb_info': 2, 'df_md_bottom_dump': 3, 'df_md_top_dump': 3, 'df_md_transfer_function': 21, 'df_md_confluence_n': 19, 'df_md_confluence_0': 5, 'df_md_init': 17, 'df_md_bb_local_compute_process_def': 15, 'df_md_bb_local_compute': 27, 'df_md_local_compute': 123, 'df_md_free_bb_info': 12, 'df_md_reset': 15, 'df_md_set_bb_info': 5, 'df_md_alloc': 33}, "PosixPath('602/tree-ssa-copy.bc')": {'may_propagate_copy': 4, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_switch_index': 1, 'gimple_assign_lhs': 1, 'gimple_call_lhs': 1, 'may_propagate_copy_into_stmt': 4, 'may_propagate_copy_into_asm': 4, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'replace_exp_1': 19, 'gsi_stmt': 1, 'gimple_set_op': 4, 'gimple_cond_set_lhs': 3, 'gimple_cond_set_rhs': 3, 'gimple_op_ptr': 1, 'gimple_switch_index_ptr': 1, 'propagate_tree_value_into_stmt': 10, 'bb_seq': 2, 'gsi_start_bb': 6, 'gimple_vuse': 2, 'gimple_assign_rhs_code': 2, 'stmt_may_generate_copy': 5, 'gimple_def_ops': 2, 'op_iter_init': 6, 'op_iter_next_tree': 6, 'op_iter_init_tree': 22, 'set_copy_of_val': 5, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'init_copy_prop': 92, 'fini_copy_prop': 21, 'get_copy_of_val': 2, 'dump_copy_of': 20, 'copy_prop_visit_phi_node': 53, 'copy_prop_visit_assignment': 27, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'copy_prop_visit_cond_stmt': 39, 'copy_prop_visit_stmt': 189, 'execute_copy_prop': 51}, "PosixPath('602/tree-ssa-dom.bc')": {'tree_ssa_dominator_optimize': 125, 'first_imm_use_on_stmt': 2, 'next_imm_use_on_stmt': 2, 'loop_depth_of_name': 2, 'degenerate_phi_result': 12, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_lhs': 1, 'get_lhs_or_phi_result': 3, 'has_zero_uses': 1, 'gimple_assign_rhs1': 1, 'get_rhs_or_phi_arg': 1, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'move_use_after_head': 5, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_init_use': 55, 'gimple_vuse_op': 2, 'link_use_stmts_after': 62, 'first_imm_use_stmt': 13, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'gimple_switch_index': 1, 'gimple_goto_dest': 1, 'ei_end_p': 1, 'ei_safe_edge': 3, 'ei_next': 4, 'bb_seq': 2, 'gsi_last_bb': 6, 'next_imm_use_stmt': 10, 'propagate_rhs_into_lhs': 347, 'eliminate_const_or_copy': 226, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'eliminate_degenerate_phis': 29, 'gsi_start_bb': 6, 'ei_cond': 3, 'free_all_edge_infos': 14, 'single_succ_edge': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'gimple_call_lhs': 1, 'gimple_call_fn': 1, 'gimple_call_arg': 1, 'iterative_hash_hashable_expr': 9, 'avail_expr_hash': 14, 'initialize_hash_element': 77, 'print_expr_hash_elt': 13, 'VEC_expr_hash_elt_t_base_space': 2, 'VEC_expr_hash_elt_t_heap_reserve': 2, 'VEC_expr_hash_elt_t_base_quick_push': 2, 'VEC_expr_hash_elt_t_heap_safe_push': 4, 'lookup_avail_expr': 251, 'dom_thread_across_edge': 1, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 4, 'record_const_or_copy_1': 6, 'record_const_or_copy': 10, 'initialize_hash_element_from_expr': 5, 'record_cond': 12, 'VEC_expr_hash_elt_t_base_pop': 2, 'remove_local_expressions_from_table': 6, 'VEC_tree_base_pop': 2, 'restore_vars_to_original_value': 12, 'dom_opt_leave_block': 61, 'single_incoming_edge_ignoring_loop_edges': 5, 'record_equality': 90, 'record_equivalences_from_incoming_edge': 104, 'record_equivalences_from_phis': 12, 'gimple_set_op': 4, 'gimple_cond_set_lhs': 3, 'gimple_cond_set_rhs': 3, 'canonicalize_comparison': 7, 'simple_iv_increment_p': 31, 'cprop_operand': 55, 'cprop_into_stmt': 45, 'gimple_call_fndecl': 4, 'eliminate_redundant_computations': 49, 'gimple_references_memory_p': 2, 'record_equivalences_from_stmt': 15, 'optimize_stmt': 229, 'gimple_switch_label': 3, 'build_and_record_new_cond': 17, 'initialize_expr_from_cond': 9, 'record_conditions': 15, 'record_edge_info': 90, 'cprop_into_successor_phis': 25, 'dom_opt_enter_block': 850, 'free_expr_hash_elt': 2, 'hashable_expr_equal_p': 47, 'avail_expr_eq': 108}, "PosixPath('602/sreal.bc')": {'normalize': 9, 'dump_sreal': 2, 'sreal_init': 2, 'sreal_to_int': 2, 'sreal_compare': 4, 'copy': 4, 'shift_right': 4, 'sreal_add': 20, 'sreal_sub': 15, 'sreal_mul': 7, 'sreal_div': 6}, "PosixPath('602/tree-vectorizer.bc')": {'vect_print_dump_info': 17, 'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 19, 'gimple_vop': 2, 'vectorize_loops': 31, 'increase_alignment': 5, 'execute_vect_slp': 6}, "PosixPath('602/recog.bc')": {'extract_insn': 19, 'validate_change_1': 29, 'extract_asm_operands': 5, 'asm_noperands': 13, 'decode_asm_operands': 26, 'recog_memoized': 3, 'skip_alternative': 2, 'reg_fits_class_p': 1, 'general_operand': 47, 'find_constant_term_loc': 7, 'offsettable_address_addr_space_p': 10, 'offsettable_memref_p': 4, 'offsettable_nonstrict_memref_p': 4, 'constrain_operands': 513, 'memory_operand': 2, 'register_operand': 8, 'asm_operand_ok': 41, 'check_asm_operands': 1, 'insn_invalid_p': 10, 'confirm_change_group': 11, 'cancel_changes': 7, 'verify_changes': 39, 'canonicalize_change_group': 4, 'simplify_while_replacing': 28, 'validate_replace_rtx_1': 66, 'validate_replace_rtx_group': 2, 'validate_replace_src_1': 4, 'validate_replace_src_group': 3, 'validate_simplify_insn': 9, 'scratch_operand': 2, 'immediate_operand': 6, 'const_int_operand': 2, 'nonmemory_operand': 13, 'push_operand': 16, 'pop_operand': 4, 'indirect_operand': 14, 'ordered_comparison_operator': 1, 'comparison_operator': 1, 'extract_constrain_insn_cached': 2, 'preprocess_constraints': 162, 'split_insn': 5, 'split_all_insns': 23, 'split_all_insns_noflow': 4, 'peep2_regno_dead_p': 1, 'peep2_reg_dead_p': 8, 'add_to_hard_reg_set': 1, 'peep2_find_free_register': 43, 'store_data_bypass_p': 36, 'if_test_bypass_p': 15, 'df_lr_get_bb_info': 2, 'peep2_reinit_state': 2, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'peephole2_optimize': 100, 'rest_of_handle_peephole2': 94}, "PosixPath('602/decimal32.bc')": {'__dpd32FromNumber': 86, '__dpd32ToNumber': 24, '__dpd32ToString': 33, 'decimal32FromNumber': 1, 'decimal32ToNumber': 1}, "PosixPath('602/lto-section-in.bc')": {'lto_input_1_unsigned': 7, 'lto_free_section_data': 2, 'lto_create_simple_input_block': 4, 'lto_record_renamed_decl': 5, 'lto_get_decl_name_mapping': 1, 'lto_get_function_in_decl_state': 3}, "PosixPath('602/tree-pretty-print.bc')": {'maybe_init_pretty_print': 3, 'dump_location': 3, 'dump_decl_name': 13, 'tree_operand_length': 3, 'op_prio': 2, 'dump_function_name': 2, 'init_call_expr_arg_iterator': 3, 'next_call_expr_arg': 4, 'first_call_expr_arg': 6, 'more_call_expr_args_p': 2, 'VEC_tree_base_iterate': 2, 'dump_generic_node': 203, 'dump_block_node': 32, 'print_call_name': 5, 'print_struct_decl': 8, 'print_declaration': 23, 'dump_array_domain': 2, 'do_niy': 5, 'dump_function_declaration': 6, 'print_generic_expr': 3, 'print_generic_stmt': 3, 'print_generic_decl': 3, 'print_generic_stmt_indented': 3}, "PosixPath('602/init-regs.bc')": {'df_lr_get_bb_info': 2, 'df_live_get_bb_info': 2, 'initialize_uninitialized_regs': 75, 'rest_of_handle_initialize_regs': 74}, "PosixPath('602/expr.bc')": {'init_block_move_fn': 8, 'init_block_clear_fn': 8, 'expand_expr_real_1': 2052, 'init_expr_target': 39, 'compress_float_constant': 8, 'get_subtarget': 2, 'get_rtx_for_ssa_name': 3, 'const_vector_from_tree': 9, 'count_type_elements': 9, 'categorize_ctor_elements_1': 60, 'all_zeros_p': 12, 'move_by_pieces_ninsns': 10, 'store_by_pieces_2': 72, 'store_by_pieces_1': 88, 'clear_by_pieces': 7, 'tree_operand_length': 3, 'safe_from_p': 55, 'mostly_zeros_p': 14, 'highest_pow2_factor': 13, 'can_store_by_pieces': 8, 'store_by_pieces': 38, 'block_move_libcall_safe_for_call_parm': 4, 'emit_storent_insn': 6, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'get_def_for_expr': 4, 'component_ref_field_offset': 12, 'array_ref_low_bound': 4, 'array_ref_element_size': 14, 'get_inner_reference': 29, 'target_align': 11, 'is_aligning_offset': 6, 'gimple_assign_rhs2': 3, 'emit_move_change_mode': 2, 'emit_move_via_integer': 1, 'undefined_operand_subword_p': 7, 'expand_assignment': 215, 'store_expr': 56, 'emit_group_load': 11, 'emit_group_load_1': 30, 'convert_modes': 88, 'convert_move': 113, 'emit_move_insn': 22, 'emit_move_insn_1': 12, 'emit_move_complex_push': 2, 'read_complex_part': 14, 'expand_expr_real': 9, 'expand_expr_real_2': 555, 'reduce_to_bit_field_precision': 4, 'expand_expr_addr_expr': 8, 'expand_expr_addr_expr_1': 143, 'expand_constructor': 27, 'store_constructor': 79, 'clear_storage_hints': 41, 'set_storage_via_libcall': 4, 'set_storage_via_setmem': 34, 'write_complex_part': 4, 'store_constructor_field': 1, 'store_field': 21, 'emit_block_move_hints': 82, 'force_operand': 29, 'emit_block_move_via_libcall': 2, 'move_by_pieces': 32, 'emit_single_push_insn': 9, 'emit_move_multi_word': 9, 'emit_move_resolve_push': 7, 'move_block_to_reg': 1, 'gen_group_rtx': 19, 'emit_group_load_into_temps': 5, 'emit_group_move': 8, 'emit_group_move_into_temps': 4, 'emit_group_store': 40, 'copy_blkmode_from_reg': 8, 'use_reg': 2, 'use_group_regs': 5, 'push_block': 1, 'emit_push_insn': 14, 'contains_packed_reference': 9, 'string_constant': 23, 'do_tablejump': 2, 'try_tablejump': 9, 'vector_mode_valid_p': 3, 'build_personality_function': 6, 'get_personality_function': 2}, "PosixPath('602/lambda-trans.bc')": {'lambda_trans_matrix_new': 7, 'lambda_trans_matrix_id_p': 4, 'lambda_trans_matrix_inverse': 10, 'print_lambda_trans_matrix': 4}, "PosixPath('602/tree-optimize.bc')": {'execute_fixup_cfg': 121, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'gate_all_early_local_passes': 4, 'tree_rest_of_compilation': 9, 'gate_all_early_optimizations': 2, 'gate_all_optimizations': 4}, "PosixPath('602/tree-nested.bc')": {'convert_nonlocal_reference_op': 22, 'convert_local_reference_op': 21, 'get_chain_decl': 17, 'gsi_last': 8, 'get_trampoline_type': 8, 'finalize_nesting_tree_1': 273, 'remap_vla_decls': 95, 'build_addr': 6, 'insert_field_into_struct': 7, 'check_for_nested_with_variably_modified': 1, 'create_nesting_tree': 8, 'walk_body': 4, 'walk_function': 5, 'iter_nestinfo_next': 2, 'walk_all_functions': 9, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_chain': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'create_tmp_var_for': 13, 'get_chain_field': 16, 'init_tmp_var': 4, 'get_static_chain': 2, 'gimple_set_op': 4, 'gimple_call_set_chain': 3, 'convert_gimple_call': 71, 'lookup_tramp_for_decl': 14, 'gimple_call_return_type': 2, 'gimple_call_set_lhs': 3, 'init_tmp_var_with_call': 8, 'convert_tramp_reference_op': 11, 'gimple_op_ptr': 1, 'gimple_call_arg_ptr': 1, 'convert_tramp_reference_stmt': 4, 'convert_all_function_calls': 71, 'use_pointer_in_frame': 3, 'lookup_field_for_decl': 29, 'gimple_assign_set_rhs1': 3, 'nesting_copy_decl': 2, 'finalize_nesting_tree': 313, 'unnest_nesting_tree': 2, 'free_nesting_tree': 6, 'gimple_label_label': 1, 'convert_nl_goto_receiver': 1, 'gimple_goto_dest': 1, 'get_nl_goto_field': 9, 'convert_nl_goto_reference': 15, 'get_local_debug_decl': 19, 'save_tmp_var': 4, 'gimple_omp_for_index_ptr': 2, 'gimple_omp_for_initial_ptr': 2, 'gimple_omp_for_final_ptr': 2, 'gimple_omp_for_incr': 2, 'walk_gimple_omp_for': 115, 'convert_local_omp_clauses': 132, 'convert_local_reference_stmt': 76, 'get_nonlocal_debug_decl': 35, 'note_nonlocal_vla_type': 16, 'note_nonlocal_block_vlas': 4, 'convert_nonlocal_omp_clauses': 101, 'convert_nonlocal_reference_stmt': 85, 'lower_nested_functions': 385, 'get_frame_type': 2}, "PosixPath('602/cplus-dem.bc')": {'demangle_template': 159, 'string_need': 9, 'string_prependn': 4, 'consume_count': 3, 'consume_count_with_underscores': 1, 'register_Btype': 15, 'get_count': 4, 'string_appends': 2, 'ada_demangle': 74, 'do_hpacc_template_const_value': 4, 'arm_pt': 3, 'snarf_numeric_literal': 5, 'arm_special': 24, 'forget_types': 5, 'delete_non_B_K_work_stuff': 14, 'forget_B_and_K_types': 14, 'squangle_mop_up': 21, 'work_stuff_copy_to_from': 61, 'remember_type': 8, 'string_prepends': 2, 'remember_Ktype': 5, 'mop_up': 2, 'iterate_demangle_function': 34, 'demangle_function_name': 184, 'demangle_arm_hp_template': 202, 'do_type': 328, 'demangle_nested_args': 8, 'demangle_template_value_parm': 21, 'demangle_expression': 15, 'demangle_qualified': 200, 'cplus_demangle': 2, 'internal_cplus_demangle': 110, 'demangle_signature': 366, 'demangle_class_name': 1, 'demangle_args': 162, 'do_arg': 7, 'gnu_special': 55, 'demangle_template_template_parm': 37, 'cplus_demangle_opname': 180, 'cplus_mangle_opname': 5, 'cplus_demangle_name_to_style': 4}, "PosixPath('602/stack-ptr-mod.bc')": {'notice_stack_pointer_modification_1': 4, 'notice_stack_pointer_modification': 43, 'rest_of_handle_stack_ptr_mod': 33}, "PosixPath('602/cpp_macro.bc')": {'enter_macro_context': 195, '_cpp_create_definition': 126, '_cpp_warn_if_unused_macro': 4, 'cpp_quote_string': 8, '_cpp_builtin_macro_text': 51, '_cpp_arguments_ok': 2, 'next_context': 2, '_cpp_push_token_context': 13, '_cpp_push_text_context': 13, '_cpp_pop_context': 4, '_cpp_backup_tokens_direct': 10, '_cpp_backup_tokens': 6, 'paste_tokens': 9, 'paste_all_tokens': 22, 'padding_token': 4, 'macro_real_token_count': 5, 'new_string_token': 7, 'stringify_arg': 25, 'push_ptoken_context': 13, 'builtin_macro': 2, 'cpp_get_token': 298, 'cpp_scan_nooutput': 5, '_cpp_save_parameter': 14, 'parse_params': 10, 'alloc_expansion_token': 5, 'check_trad_stringification': 13, 'lex_expansion_token': 22, 'create_iso_definition': 79, 'warn_of_redefinition': 25, 'cpp_macro_definition': 80}, "PosixPath('602/obstack.bc')": {}, "PosixPath('602/cp-demint.bc')": {'cplus_demangle_fill_component': 4, 'cplus_demangle_fill_builtin_type': 3, 'cplus_demangle_fill_operator': 5, 'cplus_demangle_v3_components': 18}, "PosixPath('602/bt-load.bc')": {'compute_defs_uses_and_gen': 729, 'sbitmap_iter_init': 16, 'find_btr_reference': 2, 'insn_sets_btr_p': 13, 'find_btr_def_group': 17, 'add_btr_def': 99, 'note_other_use_this_block': 4, 'find_btr_use': 1, 'new_btr_user': 62, 'note_btr_set': 36, 'compute_kill': 23, 'compute_out': 8, 'sbitmap_iter_cond': 39, 'sbitmap_iter_next': 3, 'link_btr_uses': 154, 'build_btr_def_use_webs': 895, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'augment_live_range': 12, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'btr_def_live_range': 51, 'block_at_edge_of_live_range_p': 15, 'clear_btr_from_live_range': 120, 'combine_btr_defs': 106, 'add_btr_to_live_range': 33, 'move_btr_def': 189, 'migrate_btr_def': 384, 'migrate_btr_defs': 1289, 'branch_target_load_optimize': 1465}, "PosixPath('602/sched-ebb.bc')": {'schedule_ebb': 180, 'begin_schedule_ready': 35, 'sd_iterator_cond': 7, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'ebb_compute_jump_reg_dependencies': 6, 'sd_iterator_start': 7, 'earliest_block_with_similiar_load': 115, 'add_deps_for_risky_insns': 139, 'advance_target_bb': 10, 'ebb_print_insn': 3, 'rank': 4, 'init_ready_list': 12, 'ebb_add_block': 2, 'ebb_fix_recovery_cfg': 4, 'schedule_ebbs': 366}, "PosixPath('602/df-scan.bc')": {'df_scan_alloc': 19, 'df_scan_free_internal': 93, 'df_grow_reg_info': 42, 'df_grow_insn_info': 5, 'df_scan_blocks': 11, 'df_ref_create_structure': 93, 'df_maybe_reorganize_use_refs': 7, 'df_maybe_reorganize_def_refs': 7, 'df_scan_free': 5, 'df_scan_get_bb_info': 2, 'df_scan_start_block': 3, 'df_scan_start_dump': 37, 'df_reg_chain_unlink': 66, 'df_ref_chain_delete': 1, 'df_insn_delete': 24, 'df_scan_free_bb_info': 17, 'df_get_regular_block_artificial_uses': 3, 'df_get_entry_block_def_set': 12, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'VEC_df_mw_hardreg_ptr_base_space': 2, 'VEC_df_mw_hardreg_ptr_stack_reserve': 2, 'VEC_df_mw_hardreg_ptr_base_quick_push': 2, 'VEC_df_mw_hardreg_ptr_stack_safe_push': 5, 'VEC_df_ref_base_space': 2, 'VEC_df_ref_stack_reserve': 2, 'VEC_df_ref_base_quick_push': 2, 'VEC_df_ref_stack_safe_push': 5, 'df_ref_record': 37, 'df_ref_compare': 58, 'df_swap_refs': 2, 'df_ref_equal_p': 84, 'df_sort_and_compress_refs': 39, 'df_mw_compare': 22, 'df_mw_equal_p': 14, 'df_sort_and_compress_mws': 36, 'df_canonize_collection_rec': 31, 'df_entry_block_defs_collect': 14, 'VEC_df_ref_base_iterate': 2, 'df_grow_ref_info': 3, 'df_check_and_grow_ref_info': 5, 'df_install_ref': 17, 'df_install_refs': 3, 'df_refs_add_to_chains': 40, 'df_record_entry_block_defs': 1, 'df_mark_reg': 2, 'df_get_exit_block_use_set': 24, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'bb_has_eh_pred': 4, 'df_exit_block_uses_collect': 28, 'df_record_exit_block_uses': 2, 'df_insn_create_insn_record': 2, 'df_read_modify_subreg_p': 2, 'df_def_record_1': 13, 'df_defs_record': 4, 'df_uses_record': 38, 'df_get_call_refs': 21, 'df_get_conditional_uses': 38, 'df_insn_refs_collect': 67, 'df_bb_refs_collect': 55, 'df_bb_refs_record': 53, 'df_ref_create': 31, 'df_ref_compress_rec': 6, 'df_ref_remove': 20, 'df_refs_verify': 3, 'VEC_df_mw_hardreg_ptr_base_iterate': 2, 'df_mws_verify': 3, 'df_insn_refs_verify': 13, 'df_free_collection_rec': 29, 'df_insn_rescan': 89, 'df_insn_rescan_debug_internal': 46, 'df_insn_rescan_all': 33, 'df_mw_hardreg_chain_delete_eq_uses': 9, 'df_notes_rescan': 98, 'df_update_entry_block_defs': 5, 'df_update_exit_block_uses': 5, 'df_update_entry_exit_and_calls': 17, 'df_process_deferred_rescans': 55, 'df_count_refs': 13, 'df_get_artificial_defs': 2, 'df_get_artificial_uses': 2, 'df_reorganize_refs_by_reg_by_insn': 192, 'df_reorganize_refs_by_reg_by_reg': 45, 'df_reorganize_refs_by_reg': 210, 'df_add_refs_to_table': 4, 'df_reorganize_refs_by_insn_bb': 16, 'df_reorganize_refs_by_insn': 13, 'df_insn_change_bb': 12, 'df_ref_change_reg_with_loc_1': 47, 'df_ref_change_reg_with_loc': 3, 'df_recompute_luids': 11, 'df_hard_reg_init': 1, 'df_set_regs_ever_live': 2, 'df_compute_regs_ever_live': 14, 'df_reg_chain_mark': 14, 'df_bb_verify': 36, 'df_reg_chain_verify_unmarked': 2, 'df_scan_verify': 8}, "PosixPath('602/tree-ssa-loop-prefetch.bc')": {'determine_loop_nest_reuse': 207, 'gather_memory_references_ref': 146, 'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 40, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_vuse': 2, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'idx_analyze_ref': 11, 'analyze_ref': 43, 'find_or_create_group': 13, 'record_ref': 45, 'gather_memory_references': 67, 'prune_ref_by_self_reuse': 2, 'prune_ref_by_group_reuse': 23, 'prune_ref_by_reuse': 80, 'prune_group_by_reuse': 116, 'prune_by_reuse': 121, 'should_issue_prefetch_p': 2, 'estimate_prefetch_count': 6, 'volume_of_references': 7, 'VEC_data_reference_p_base_space': 2, 'VEC_data_reference_p_heap_reserve': 2, 'VEC_data_reference_p_base_quick_push': 2, 'VEC_data_reference_p_heap_safe_push': 5, 'VEC_data_reference_p_base_iterate': 2, 'VEC_tree_base_iterate': 2, 'get_chrec_loop': 2, 'add_subscript_strides': 13, 'self_reuse_distance': 55, 'VEC_ddr_p_base_iterate': 2, 'volume_of_dist_vector': 1, 'determine_unroll_factor': 8, 'is_loop_prefetching_profitable': 4, 'VEC_edge_base_iterate': 2, 'may_use_storent_in_loop_p': 4, 'nontemporal_store_p': 8, 'mark_nontemporal_store': 25, 'gsi_after_labels': 41, 'emit_mfence_after_loop': 14, 'mark_nontemporal_stores': 85, 'schedule_prefetches': 15, 'issue_prefetch_ref': 26, 'issue_prefetches': 35, 'release_mem_refs': 2, 'loop_prefetch_arrays': 571, 'tree_ssa_prefetch_arrays': 798}, "PosixPath('602/prefix.bc')": {'translate_name': 2, 'update_path': 13}, "PosixPath('602/tree-ssa-sccvn.bc')": {'get_constant_value_id': 10, 'get_or_alloc_constant_value_id': 22, 'valueize_refs': 125, 'vn_nary_op_insert_pieces': 81, 'vn_nary_op_insert': 76, 'vn_nary_op_insert_stmt': 88, 'DFS': 332, 'copy_nary': 56, 'visit_reference_op_call': 75, 'VEC_vn_ssa_aux_t_base_space': 2, 'VEC_vn_ssa_aux_t_heap_reserve_exact': 2, 'VEC_vn_ssa_aux_t_heap_safe_grow': 2, 'VN_INFO_GET': 5, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_call_fn': 1, 'gimple_call_return_type': 2, 'gimple_expr_type': 4, 'gimple_assign_rhs2': 3, 'vn_get_expr_for': 8, 'vn_hash_constant_with_type': 2, 'vn_reference_op_compute_hash': 4, 'vn_reference_compute_hash': 7, 'vn_reference_op_eq': 4, 'vn_reference_eq': 11, 'VEC_vn_reference_op_s_base_space': 2, 'VEC_vn_reference_op_s_heap_reserve': 2, 'VEC_vn_reference_op_s_base_quick_push': 3, 'VEC_vn_reference_op_s_heap_safe_push': 6, 'copy_reference_ops_from_ref': 164, 'ao_ref_init_from_vn_reference': 99, 'gimple_call_chain': 1, 'gimple_call_arg': 1, 'copy_reference_ops_from_call': 31, 'VEC_vn_reference_op_s_base_ordered_remove': 2, 'VEC_vn_reference_op_s_base_quick_insert': 5, 'VEC_vn_reference_op_s_heap_safe_insert': 8, 'vn_reference_fold_indirect': 100, 'VEC_vn_reference_op_s_heap_reserve_exact': 2, 'VEC_vn_reference_op_s_heap_safe_grow': 3, 'vn_reference_lookup_1': 1, 'gimple_call_fndecl': 4, 'VEC_vn_reference_op_s_heap_copy': 2, 'vn_reference_insert_pieces': 13, 'gimple_assign_lhs': 1, 'vn_reference_lookup_3': 189, 'vn_reference_lookup_2': 21, 'vn_reference_lookup_pieces': 83, 'vn_reference_lookup': 46, 'create_reference_ops_from_ref': 1, 'vn_reference_insert': 23, 'vn_nary_op_compute_hash': 13, 'vn_nary_op_eq': 8, 'vn_nary_op_lookup_pieces': 24, 'vn_nary_op_lookup': 32, 'vn_nary_op_lookup_stmt': 43, 'free_vn_table': 12, 'free_scc_vn': 25, 'VEC_vn_ssa_aux_t_heap_safe_grow_cleared': 2, 'VEC_tree_base_iterate': 2, 'vn_phi_eq': 16, 'vn_constant_eq': 4, 'init_scc_vn': 19, 'has_zero_uses': 1, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 5, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_init_use': 29, 'VEC_tree_base_pop': 2, 'compare_ops': 23, 'print_scc': 2, 'set_ssa_val_to': 5, 'visit_copy': 11, 'vn_phi_compute_hash': 17, 'vn_phi_lookup': 86, 'vn_phi_insert': 55, 'visit_phi': 147, 'gimple_call_lhs': 1, 'gimple_has_lhs': 1, 'op_iter_next_def': 4, 'op_iter_init_def': 20, 'defs_to_varying': 11, 'valueize_expr': 31, 'gimple_assign_cast_p': 2, 'simplify_unary_expression': 41, 'simplify_binary_expression': 58, 'try_to_simplify': 138, 'expr_has_constants': 3, 'stmt_has_constants': 8, 'visit_reference_op_store': 16, 'visit_reference_op_load': 44, 'create_reference_ops_from_call': 2, 'visit_use': 176, 'copy_references': 5, 'copy_phis': 5, 'process_scc': 24, 'extract_and_process_scc_for_name': 27, 'VEC_ssa_op_iter_base_space': 2, 'VEC_ssa_op_iter_heap_reserve': 2, 'VEC_ssa_op_iter_base_quick_push': 3, 'VEC_ssa_op_iter_heap_safe_push': 6, 'first_htab_element': 7, 'end_htab_p': 2, 'next_htab_element': 4, 'set_hashtable_value_ids': 36, 'run_scc_vn': 848, 'vn_nary_may_trap': 34, 'allocate_vn_table': 5}, "PosixPath('602/regstat.bc')": {'regstat_init_n_sets_and_refs': 13, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'df_scan_get_bb_info': 2, 'df_get_artificial_defs': 2, 'df_get_artificial_uses': 2, 'regstat_bb_compute_ri': 258, 'regstat_compute_ri': 233, 'regstat_free_ri': 1, 'regstat_bb_compute_calls_crossed': 118, 'regstat_compute_calls_crossed': 104}, "PosixPath('602/graphite.bc')": {}, "PosixPath('602/mini-gmp.bc')": {'gmp_default_realloc': 1, 'gmp_default_alloc': 1, 'mpn_copyi': 1, 'mpn_copyd': 1, 'mpn_addmul_1': 2, 'mpn_submul_1': 2, 'mpn_mul': 5, 'mpn_lshift': 1, 'mpn_get_str_bits': 2, 'mpn_get_base_info': 2, 'mpn_div_qr_1_invert': 4, 'mpn_div_qr_1_preinv': 19, 'mpn_limb_get_str': 4, 'mpn_get_str_other': 19, 'mpn_get_str': 3, 'mpn_set_str_bits': 3, 'mpn_set_str_other': 3, 'mpn_set_str': 4, 'mpz_init': 3, 'mpz_init2': 3, 'mpz_set_ui': 3, 'mpz_set_si': 2, 'mpz_realloc': 8, 'mpz_set': 17, 'mpz_init_set_si': 5, 'mpz_init_set_ui': 4, 'mpz_init_set': 3, 'mpz_fits_slong_p': 3, 'mpz_get_si': 3, 'mpz_get_ui': 2, 'mpz_getlimbn': 2, 'mpz_realloc2': 7, 'mpz_limbs_modify': 8, 'mpz_roinit_n': 4, 'mpz_set_d': 10, 'mpz_init_set_d': 3, 'mpz_get_d': 2, 'mpz_cmpabs_d': 2, 'mpz_cmp_ui': 2, 'mpz_cmp_si': 3, 'mpz_cmp': 6, 'mpz_cmpabs_ui': 2, 'mpz_cmpabs': 4, 'mpz_swap': 16, 'mpz_abs_add_ui': 11, 'mpz_abs_sub_ui': 16, 'mpz_add_ui': 2, 'mpz_sub_ui': 2, 'mpz_ui_sub': 2, 'mpz_abs_add': 9, 'mpz_abs_sub': 27, 'mpz_mul_ui': 11, 'mpz_mul': 15, 'mpz_mul_2exp': 20, 'mpz_addmul_ui': 7, 'mpz_submul_ui': 7, 'mpz_addmul': 7, 'mpz_submul': 7, 'mpn_div_qr_2_invert': 7, 'mpn_div_qr_invert': 18, 'mpn_div_qr_2_preinv': 27, 'mpn_div_qr_pi1': 4, 'mpn_div_qr_preinv': 28, 'mpn_div_qr': 6, 'mpz_div_qr': 233, 'mpz_div_q_2exp': 22, 'mpz_div_r_2exp': 22, 'mpz_congruent_p': 9, 'mpn_div_qr_1': 4, 'mpz_div_qr_ui': 13, 'mpz_gcd_ui': 2, 'mpz_gcd': 124, 'mpz_tstbit': 2, 'mpz_abs_add_bit': 20, 'mpz_abs_sub_bit': 4, 'mpz_gcdext': 680, 'mpz_lcm': 10, 'mpz_invert': 92, 'mpz_pow_ui': 44, 'mpz_ui_pow_ui': 13, 'mpz_powm': 191, 'mpz_powm_ui': 13, 'mpz_sizeinbase': 14, 'mpz_rootrem': 178, 'mpz_root': 7, 'mpn_perfect_square_p': 5, 'mpn_sqrtrem': 62, 'mpz_bin_uiui': 17, 'mpz_scan1': 2, 'gmp_millerrabin': 28, 'mpz_probab_prime_p': 192, 'mpz_and': 22, 'mpz_ior': 22, 'mpz_xor': 22, 'mpz_popcount': 2, 'mpz_hamdist': 4, 'mpz_scan0': 2, 'mpz_get_str': 19, 'mpz_set_str': 65, 'mpz_init_set_str': 3, 'mpz_import': 13, 'mpz_export': 6}, "PosixPath('602/df-core.bc')": {'df_add_problem': 11, 'df_set_blocks': 70, 'df_finish_pass': 16, 'rest_of_handle_df_initialize': 12, 'df_analyze': 45, 'bmp_iter_set_init': 11, 'bmp_iter_set': 12, 'df_get_bb_info': 2, 'df_set_bb_info': 1, 'df_mark_solutions_dirty': 1, 'df_remove_problem': 15, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'df_worklist_propagate_forward': 15, 'df_worklist_propagate_backward': 15, 'df_worklist_dataflow_doublequeue': 21, 'df_worklist_dataflow': 34, 'df_analyze_problem': 5, 'df_prune_to_subcfg': 1, 'df_get_n_blocks': 2, 'df_get_postorder': 4, 'df_set_bb_dirty': 4, 'df_set_bb_dirty_nonlr': 8, 'df_compact_blocks': 49, 'df_clear_bb_dirty': 4, 'df_bb_replace': 15, 'df_bb_delete': 13, 'df_bb_regno_first_def_find': 10, 'df_bb_regno_last_def_find': 10, 'df_find_def': 6, 'df_find_use': 14, 'df_print_regset': 9, 'df_print_byte_regset': 16, 'df_dump_start': 14, 'df_dump_top': 8, 'df_dump_bottom': 8, 'df_dump_region': 16, 'df_refs_chain_dump': 4, 'df_regs_chain_dump': 4, 'df_mws_dump': 4, 'df_insn_uid_debug': 16, 'df_insn_debug': 5, 'df_insn_debug_regno': 2, 'df_ref_debug': 11, 'debug_df_reg': 1, 'debug_df_defno': 1, 'debug_df_useno': 1, 'rest_of_handle_df_finish': 6}, "PosixPath('602/tree-ssa-pre.bc')": {'remove_dead_inserted_code': 106, 'compute_antic': 547, 'eliminate': 428, 'sorted_array_from_bitmap_set': 32, 'phi_translate_1': 2, 'gsi_start': 8, 'VEC_bitmap_set_t_base_space': 2, 'VEC_bitmap_set_t_heap_reserve_exact': 2, 'VEC_bitmap_set_t_heap_safe_grow': 2, 'VEC_bitmap_set_t_heap_safe_grow_cleared': 2, 'lookup_expression_id': 6, 'VEC_pre_expr_base_space': 2, 'VEC_pre_expr_heap_reserve': 2, 'VEC_pre_expr_base_quick_push': 2, 'VEC_pre_expr_heap_safe_push': 5, 'VEC_unsigned_base_space': 2, 'VEC_unsigned_heap_reserve': 2, 'VEC_unsigned_heap_reserve_exact': 2, 'VEC_unsigned_heap_safe_grow': 2, 'VEC_unsigned_heap_safe_grow_cleared': 2, 'alloc_expression_id': 58, 'get_or_alloc_expression_id': 6, 'bitmap_insert_into_set_1': 6, 'add_to_value': 2, 'get_expr_value_id': 5, 'print_pre_expr': 15, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'print_bitmap_set': 11, 'print_value_expressions': 1, 'VEC_gimple_base_iterate': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_base_pop': 2, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 2, 'mark_operand_necessary': 2, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_next_tree': 6, 'op_iter_init_tree': 71, 'VEC_gimple_heap_safe_push': 5, 'ei_one_before_end_p': 1, 'ei_next': 4, 'my_rev_post_order_compute': 35, 'pre_expr_eq': 10, 'vn_hash_constant_with_type': 2, 'pre_expr_hash': 7, 'expr_pred_trans_eq': 4, 'init_pre': 36, 'has_zero_uses': 1, 'get_or_alloc_expr_for_name': 13, 'gsi_stmt': 1, 'make_values_for_phi': 8, 'bb_seq': 2, 'gsi_start_bb': 6, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_fn': 1, 'gimple_call_return_type': 2, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_expr_type': 4, 'gimple_assign_rhs2': 3, 'compute_avail': 203, 'ei_end_p': 1, 'ei_cond': 3, 'single_succ_edge': 1, 'phi_nodes': 2, 'VEC_pre_expr_base_iterate': 2, 'phi_trans_lookup': 7, 'bitmap_set_contains_value': 2, 'bmp_iter_and_init': 19, 'bmp_iter_and': 44, 'bitmap_find_leader': 39, 'get_expr_type': 5, 'get_var_ann': 2, 'get_representative_for': 26, 'get_or_alloc_expr_for_constant': 7, 'get_or_alloc_expr_for': 9, 'get_constant_for_value_id': 12, 'fully_constant_expression': 53, 'VEC_vn_reference_op_s_heap_copy': 2, 'translate_vuse_through_block': 22, 'phi_trans_add': 5, 'phi_translate': 338, 'bitmap_set_replace_value': 8, 'bitmap_value_replace_in_set': 8, 'phi_translate_set': 3, 'defer_or_phi_translate_block': 5, 'VEC_basic_block_base_quick_push': 2, 'VEC_basic_block_base_iterate': 2, 'bitmap_set_and': 13, 'bitmap_set_free': 2, 'bitmap_set_subtract': 11, 'vro_valid_in_sets': 118, 'value_dies_in_block_x': 56, 'valid_in_sets': 198, 'clean': 1, 'compute_antic_aux': 184, 'bitmap_set_subtract_values': 11, 'dependent_clean': 1, 'compute_partial_antic_aux': 132, 'inhibit_phi_insertion': 17, 'gimple_set_op': 4, 'gimple_assign_set_lhs': 3, 'create_component_ref_by_pieces_1': 40, 'create_expression_by_pieces': 44, 'find_or_generate_expression': 16, 'insert_into_preds_of_block': 100, 'do_regular_insertion': 50, 'do_partial_partial_insertion': 15, 'insert_aux': 90, 'insert': 4, 'gimple_call_lhs': 1, 'gimple_has_lhs': 1, 'do_SCCVN_insertion': 7, 'gimple_assign_lhs': 1, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'gimple_cond_set_lhs': 3, 'gimple_cond_set_rhs': 3, 'gimple_cond_make_false': 5, 'gimple_cond_make_true': 5, 'gimple_call_set_fn': 3, 'gsi_after_labels': 41, 'single_imm_use': 4, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'fini_pre': 4, 'execute_pre': 1286, 'bitmap_set_new': 2}, "PosixPath('602/tree-ssa-loop-ivcanon.bc')": {'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'tree_num_loop_insns': 8, 'VEC_loop_p_base_iterate': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 60, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_lhs': 1, 'constant_after_peeling': 18, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs_class': 3, 'gimple_assign_rhs2': 3, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'tree_estimate_loop_size': 109, 'estimated_unrolled_size': 7, 'RESET_BIT': 4, 'VEC_edge_base_iterate': 2, 'gimple_set_op': 4, 'gimple_cond_set_lhs': 3, 'gimple_cond_set_rhs': 3, 'gimple_cond_make_true': 5, 'gimple_cond_make_false': 5, 'try_unroll_loop_completely': 239, 'gsi_last_bb': 6, 'create_canonical_iv': 49, 'canonicalize_loop_induction_variables': 327, 'canonicalize_induction_variables': 16, 'tree_unroll_loops_completely': 26}, "PosixPath('602/cfglayout.bc')": {'fixup_reorder_chain': 217, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 2, 'VEC_int_base_quick_push': 2, 'VEC_int_heap_safe_push': 5, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 4, 'VEC_location_t_base_space': 2, 'VEC_location_t_heap_reserve': 2, 'VEC_location_t_base_quick_push': 2, 'VEC_location_t_heap_safe_push': 4, 'curr_insn_locator': 50, 'change_scope': 6, 'reemit_insn_block_notes': 9, 'relink_block_chain': 20, 'verify_insn_chain': 4, 'cfg_layout_can_duplicate_bb_p': 3, 'duplicate_insn_chain': 7, 'cfg_layout_duplicate_bb': 3, 'skip_insns_after_block': 19, 'record_effective_endpoints': 56, 'cfg_layout_initialize': 56, 'break_superblocks': 18, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'ei_safe_edge': 3, 'force_one_exit_fallthru': 15, 'label_for_bb': 3, 'single_pred_edge': 1, 'cfg_layout_finalize': 216, 'can_copy_bbs_p': 10, 'copy_bbs': 19, 'outof_cfg_layout_mode': 7}, "PosixPath('602/cpp_directives-only.bc')": {'_cpp_preprocess_dir_only': 105}, "PosixPath('602/et-forest.bc')": {'et_new_occ': 8, 'et_new_tree': 3, 'set_depth_add': 3, 'set_depth': 2, 'et_recomp_min': 16, 'et_splay': 302, 'et_split': 33, 'et_free_tree': 6, 'et_free_tree_force': 2, 'et_set_father': 47, 'et_nca': 25, 'et_below': 7}, "PosixPath('602/main.bc')": {}, "PosixPath('602/ipa-struct-reorg.bc')": {'exclude_alloc_and_field_accs_1': 6, 'build_basic_struct': 18, 'program_redefines_malloc_p': 8, 'get_type_of_var': 3, 'strip_type': 3, 'VEC_tree_base_iterate': 2, 'get_type_name': 3, 'is_equal_types': 40, 'compare_fields': 5, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 5, 'add_unsuitable_type': 7, 'is_candidate': 14, 'find_structure': 3, 'get_fields': 7, 'VEC_structure_base_space': 2, 'VEC_structure_heap_reserve': 2, 'VEC_structure_base_quick_push': 3, 'VEC_structure_heap_safe_push': 6, 'add_structure': 38, 'build_data_structure': 12, 'check_struct_form': 13, 'analyze_struct_form': 19, 'exclude_types_passed_to_local_func': 8, 'exclude_returned_types': 6, 'exclude_escaping_types_1': 2, 'exclude_escaping_types': 32, 'check_bitfields': 4, 'exclude_types_with_bit_fields': 8, 'VEC_alloc_site_t_base_ordered_remove': 2, 'remove_str_allocs_in_func': 8, 'free_accs': 1, 'free_struct_cluster': 2, 'free_data_struct': 10, 'VEC_structure_base_ordered_remove': 2, 'remove_structure': 2, 'remove_unsuitable_types': 5, 'collect_structures': 194, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_call_lhs': 1, 'single_imm_use': 4, 'get_final_alloc_stmt': 11, 'gimple_assign_lhs': 1, 'is_alloc_of_struct': 7, 'VEC_alloc_site_t_base_space': 2, 'VEC_alloc_site_t_heap_reserve': 2, 'VEC_alloc_site_t_base_quick_push': 3, 'VEC_alloc_site_t_heap_safe_push': 6, 'add_alloc_site': 8, 'collect_alloc_sites': 83, 'collect_allocation_sites': 52, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'add_access_to_acc_sites': 10, 'find_field_in_struct_1': 2, 'find_field_in_struct': 6, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 12, 'op_iter_next_tree': 6, 'op_iter_init_tree': 46, 'single_ssa_tree_operand': 8, 'is_result_of_mult': 8, 'decompose_indirect_ref_acc': 18, 'decompose_access': 21, 'get_stmt_accesses': 42, 'collect_accesses_in_bb': 13, 'collect_accesses_in_func': 16, 'is_part_of_malloc': 2, 'find_in_field_accs': 4, 'is_part_of_field_access': 15, 'exclude_from_accs': 21, 'exclude_alloc_and_field_accs': 11, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'is_safe_cond_expr': 20, 'safe_cond_expr_check': 23, 'check_cond_exprs': 8, 'dump_field_acc': 6, 'dump_acc': 3, 'dump_accs': 5, 'dump_accesses': 3, 'collect_data_accesses': 89, 'sum_counts': 14, 'exclude_cold_structs': 19, 'get_max_field_count': 2, 'peel_field': 3, 'gen_cluster': 2, 'peel_hot_fields': 16, 'peel_structs': 17, 'gen_cluster_name': 10, 'create_fields': 1, 'create_new_type': 34, 'create_new_types': 36, 'dump_struct_type': 10, 'dump_new_types': 4, 'gen_var_name': 1, 'VEC_type_wrapper_t_base_space': 2, 'VEC_type_wrapper_t_heap_reserve': 2, 'VEC_type_wrapper_t_base_quick_push': 3, 'VEC_type_wrapper_t_heap_safe_push': 6, 'gen_struct_type': 24, 'is_global_var': 2, 'copy_decl_attributes': 10, 'create_new_var_1': 59, 'create_new_var': 70, 'update_varpool_with_new_var': 2, 'new_var_eq': 2, 'create_new_global_vars': 4, 'dump_new_var': 12, 'first_htab_element': 7, 'first_referenced_var': 5, 'end_htab_p': 2, 'end_referenced_vars_p': 1, 'next_htab_element': 4, 'next_referenced_var': 1, 'finalize_new_vars_creation': 2, 'create_new_local_vars': 8, 'gimple_call_arg': 1, 'gen_num_of_structs_in_malloc': 14, 'gimple_set_op': 4, 'gimple_call_set_lhs': 3, 'find_var_in_new_vars_vec': 15, 'find_new_var_of_type': 18, 'gen_cast_stmt': 1, 'create_new_malloc': 24, 'update_cgraph_with_malloc_call': 4, 'create_new_alloc_sites': 100, 'create_new_alloc_sites_for_func': 107, 'gimple_phi_arg_location_from_edge': 2, 'make_edge_and_fix_phis_of_dest': 10, 'create_new_stmts_for_cond_expr_1': 37, 'create_new_stmts_for_cond_expr': 79, 'gimple_debug_bind_reset_value': 3, 'gimple_assign_set_rhs1': 3, 'gimple_assign_set_lhs': 3, 'find_pos_in_stmt_1': 2, 'find_pos_in_stmt': 12, 'insert_new_var_in_stmt': 24, 'create_general_new_stmt': 43, 'create_new_stmts_for_general_acc': 43, 'create_new_general_access': 121, 'create_new_acc': 140, 'create_base_plus_offset': 47, 'finalize_global_creation': 2, 'build_comp_ref': 2, 'replace_field_acc': 85, 'replace_field_access_stmt': 86, 'create_new_field_access': 241, 'create_new_field_acc': 258, 'create_new_accs_for_struct': 28, 'create_new_accesses_in_bb': 22, 'create_new_accesses_for_func': 44, 'free_new_var': 1, 'do_reorg_for_func': 172, 'do_reorg_1': 200, 'do_reorg': 258, 'free_falloc_sites': 1, 'reorg_structs': 714, 'reorg_structs_drive': 740}, "PosixPath('602/xatexit.bc')": {'xatexit_cleanup': 2, 'xatexit': 12}, "PosixPath('602/lto-streamer.bc')": {'bp_unpack_value': 9, 'print_lto_report': 8, 'bitpack_delete': 1, 'bp_get_next_word': 4, 'VEC_bitpack_word_t_base_space': 2, 'VEC_bitpack_word_t_heap_reserve': 2, 'VEC_bitpack_word_t_base_quick_push': 2, 'VEC_bitpack_word_t_heap_safe_push': 5, 'bp_pack_value': 13, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve_exact': 2, 'VEC_tree_gc_safe_grow': 3, 'VEC_tree_gc_safe_grow_cleared': 3, 'VEC_unsigned_base_space': 2, 'VEC_unsigned_heap_reserve_exact': 2, 'VEC_unsigned_heap_safe_grow': 3, 'VEC_unsigned_heap_safe_grow_cleared': 3, 'lto_streamer_cache_add_to_node_array': 4, 'lto_stream_as_builtin_p': 4, 'lto_streamer_cache_insert_1': 8, 'lto_streamer_cache_lookup': 1, 'lto_streamer_cache_get': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 5, 'lto_record_common_node': 6, 'lto_get_common_nodes': 15, 'VEC_tree_base_iterate': 2, 'preload_common_node': 2, 'lto_streamer_cache_create': 16, 'lto_streamer_cache_delete': 3, 'check_handled_ts_structures': 35, 'lto_streamer_init': 2, 'gate_lto_out': 2}, "PosixPath('602/vec.bc')": {'calculate_allocation': 2, 'vec_gc_o_reserve_1': 4, 'vec_heap_o_reserve_1': 4, 'VEC_void_p_base_space': 2, 'VEC_void_p_heap_reserve': 2, 'VEC_void_p_base_quick_push': 2, 'VEC_void_p_heap_safe_push': 4, 'vec_stack_p_reserve_exact_1': 6, 'VEC_void_p_base_unordered_remove': 4, 'vec_stack_o_reserve_1': 5, 'vec_stack_free': 3}, "PosixPath('602/cc1-checksum.bc')": {}, "PosixPath('602/dfp.bc')": {'decimal_from_decnumber': 1, 'decimal_to_decnumber': 1, 'decode_decimal32': 2, 'encode_decimal64': 8, 'decode_decimal64': 13, 'encode_decimal128': 29, 'decode_decimal128': 49, 'decimal_do_compare': 19, 'decimal_round_for_format': 6, 'decimal_real_convert': 4, 'decimal_do_fix_trunc': 1, 'decimal_real_to_integer': 1, 'decimal_real_to_integer2': 1, 'decimal_real_arithmetic': 48}, "PosixPath('602/web.bc')": {'unionfind_root': 1, 'unionfind_union': 2, 'union_defs': 90, 'entry_register': 13, 'replace_ref': 11, 'web_main': 108}, "PosixPath('602/lbasename.bc')": {'lbasename': 2}, "PosixPath('602/ipa-pure-const.bc')": {'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'check_call': 74, 'gimple_label_label': 1, 'gimple_asm_clobber_op': 8, 'check_decl': 12, 'check_op': 3, 'check_store': 7, 'check_load': 10, 'check_stmt': 100, 'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 19, 'analyze_function': 156, 'local_pure_const': 27, 'gate_pure_const': 2, 'VEC_funct_state_base_space': 2, 'VEC_funct_state_heap_reserve_exact': 2, 'VEC_funct_state_heap_safe_grow': 2, 'VEC_funct_state_heap_safe_grow_cleared': 2, 'set_function_state': 6, 'add_new_function': 9, 'get_function_state': 2, 'duplicate_node_data': 11, 'remove_node_data': 7, 'pure_const_read_summary': 12, 'pure_const_write_summary': 23, 'generate_summary': 14, 'self_recursive_p': 2, 'propagate': 146}, "PosixPath('602/tree-parloops.bc')": {'create_loop_fn': 24, 'take_address_of': 33, 'parallelized_function_p': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 19, 'gsi_stmt': 1, 'loop_has_vector_phi_nodes': 5, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'build_new_reduction': 6, 'gather_scalar_reductions': 25, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'next_readonly_imm_use': 2, 'try_create_reduction_list': 47, 'loop_parallel_p': 10, 'single_succ_edge': 1, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'gimple_set_op': 4, 'gimple_cond_set_lhs': 3, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_after_labels': 41, 'transform_to_exit_first_loop': 57, 'VEC_basic_block_base_iterate': 2, 'gimple_op_ptr': 1, 'gimple_debug_bind_get_value_ptr': 1, 'gimple_assign_set_lhs': 3, 'eliminate_local_variables_1': 14, 'eliminate_local_variables_stmt': 12, 'eliminate_local_variables': 45, 'single_pred_edge': 1, 'clear_and_done_ssa_iter': 2, 'op_iter_init_phidef': 2, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_next_def': 4, 'op_iter_init_def': 43, 'separate_decls_in_region_name': 16, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'op_iter_init_use': 43, 'expr_invariant_in_region_p': 2, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'separate_decls_in_region_stmt': 49, 'gimple_debug_bind_get_var': 1, 'gimple_debug_bind_set_var': 3, 'gimple_debug_bind_reset_value': 3, 'separate_decls_in_region_debug_bind': 67, 'gimple_assign_lhs': 1, 'create_loads_for_reductions': 47, 'create_final_loads_for_reduction': 18, 'gsi_last_bb': 6, 'create_stores_for_reduction': 26, 'create_loads_and_stores_for_name': 37, 'add_field_for_reduction': 5, 'add_field_for_name': 4, 'separate_decls_in_region': 369, 'gimple_phi_arg_location_from_edge': 2, 'gimple_omp_for_set_index': 2, 'gimple_omp_for_set_initial': 2, 'gimple_omp_for_set_final': 2, 'gimple_omp_for_set_cond': 2, 'gimple_omp_for_set_incr': 2, 'create_parallel_loop': 99, 'create_call_for_reduction_1': 49, 'create_phi_for_local_result': 20, 'create_call_for_reduction': 2, 'initialize_reductions': 21, 'gen_parallel_loop': 405, 'parallelize_loops': 594}, "PosixPath('602/cpp_expr.bc')": {'append_digit': 46, 'reduce': 1177, '_cpp_expand_op_stack': 2, 'num_binary_op': 140, 'num_mul': 139, 'num_div_op': 288, 'num_lshift': 41, 'num_rshift': 22, 'interpret_float_suffix': 6, 'interpret_int_suffix': 2, 'cpp_classify_number': 62, 'num_trim': 6, 'cpp_interpret_integer': 168, 'parse_defined': 120, 'eval_token': 259, 'check_promotion': 28, 'num_negate': 22, 'num_unary_op': 45, 'num_greater_eq': 33, 'num_inequality_op': 55, 'num_equality_op': 24, 'num_bitwise_op': 69, 'num_part_mul': 9, '_cpp_parse_expr': 1618, 'cpp_num_sign_extend': 8}, "PosixPath('602/passes.bc')": {'print_current_pass': 2, 'rest_of_decl_compilation': 142, 'rest_of_type_compilation': 6, 'set_pass_for_id': 3, 'register_one_dump_file': 10, 'make_pass_instance': 10, 'position_pass': 44, 'register_pass': 11, 'register_dump_files_1': 16, 'gate_rest_of_compilation': 2, 'do_per_function_toporder': 8, 'pass_init_dump_file': 2, 'execute_ipa_summary_passes': 9, 'do_per_function': 9, 'execute_function_todo': 15, 'execute_one_ipa_transform_pass': 4, 'execute_all_ipa_transforms': 19, 'VEC_ipa_opt_pass_base_space': 2, 'VEC_ipa_opt_pass_heap_reserve': 2, 'VEC_ipa_opt_pass_base_quick_push': 2, 'VEC_ipa_opt_pass_heap_safe_push': 5, 'update_properties_after_pass': 2, 'execute_one_pass': 23, 'execute_pass_list': 2, 'ipa_write_summaries_2': 30, 'ipa_write_summaries': 4, 'ipa_write_summaries_of_cgraph_node_set': 2, 'ipa_read_summaries_1': 34, 'execute_ipa_pass_list': 3, 'execute_ipa_stmt_fixups': 13, 'function_called_by_processed_nodes_p': 12, 'gt_pch_na_order': 1, 'gt_ggc_ma_order': 1}, "PosixPath('602/argv.bc')": {'dupargv': 10, 'consume_whitespace': 1, 'buildargv': 8, 'expandargv': 7}, "PosixPath('602/alloc-pool.bc')": {'pool_alloc': 90, 'create_alloc_pool': 11, 'free_alloc_pool_if_empty': 2, 'pool_free': 7}, "PosixPath('602/floatformat.bc')": {'mant_bits_set': 7, 'floatformat_to_double': 80, 'put_field': 1, 'floatformat_from_double': 69, 'floatformat_ibm_long_double_is_valid': 40, 'floatformat_i387_ext_is_valid': 11}, "PosixPath('602/ddg.bc')": {'sbitmap_iter_init': 16, 'sd_iterator_cond': 7, 'sd_iterator_start': 7, 'get_node_of_insn': 2, 'rtx_mem_access_p': 1, 'df_rd_get_bb_info': 2, 'create_ddg_edge': 22, 'add_edge_to_ddg': 19, 'create_ddg_dep_from_intra_loop_link': 47, 'add_backarc_to_ddg': 3, 'create_ddg_dep_no_link': 30, 'add_inter_loop_mem_dep': 2, 'build_intra_loop_deps': 187, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'add_cross_iteration_register_deps': 44, 'build_inter_loop_deps': 80, 'create_ddg': 250, 'free_ddg': 9, 'print_ddg_edge': 11, 'print_ddg': 3, 'vcg_print_ddg': 9, 'sbitmap_iter_cond': 39, 'sbitmap_iter_next': 3, 'print_sccs': 5, 'find_successors': 2, 'find_predecessors': 2, 'find_nodes_on_paths': 29, 'add_backarc_to_scc': 3, 'update_dist_to_successors': 16, 'longest_simple_path': 27, 'set_recurrence_length': 10, 'create_scc': 22, 'add_scc_to_ddg': 3, 'order_sccs': 2, 'create_ddg_all_sccs': 43, 'free_scc': 2, 'free_ddg_all_sccs': 6}, "PosixPath('602/except.bc')": {'gen_eh_region': 24, 'dw2_build_landing_pads': 24, 'VEC_eh_region_base_space': 2, 'VEC_eh_region_gc_reserve': 2, 'VEC_eh_region_base_quick_push': 2, 'VEC_eh_region_gc_safe_push': 5, 'VEC_eh_landing_pad_base_space': 2, 'VEC_eh_landing_pad_gc_reserve': 2, 'VEC_eh_landing_pad_base_quick_push': 2, 'VEC_eh_landing_pad_gc_safe_push': 5, 'init_eh_for_function': 8, 'gen_eh_region_catch': 5, 'gen_eh_landing_pad': 11, 'duplicate_eh_regions_1': 32, 'duplicate_eh_regions': 30, 'eh_region_outermost': 12, 'VEC_eh_region_base_iterate': 2, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 5, 'add_ttypes_entry': 7, 'VEC_uchar_base_space': 2, 'VEC_uchar_gc_reserve': 2, 'VEC_uchar_base_quick_push': 2, 'VEC_uchar_gc_safe_push': 5, 'push_uleb128': 4, 'add_ehspec_entry': 20, 'ehspec_filter_hash': 2, 'assign_filter_values': 44, 'remove_eh_landing_pad': 8, 'remove_eh_handler': 18, 'VEC_eh_landing_pad_base_iterate': 2, 'for_each_eh_label': 6, 'insn_could_throw_p': 2, 'get_eh_region_and_lp_from_rtx': 6, 'get_eh_landing_pad_from_rtx': 4, 'get_eh_region_from_rtx': 4, 'can_throw_internal': 4, 'can_throw_external': 22, 'insn_nothrow_p': 19, 'expand_builtin_eh_pointer': 2, 'expand_builtin_eh_filter': 1, 'expand_builtin_eh_copy_values': 10, 'dw2_output_call_site_table': 19, 'VEC_uchar_base_iterate': 2, 'output_ttype': 2, 'VEC_tree_base_iterate': 2, 'output_one_function_exception_table': 105, 'ehr_next': 6, 'function_needs_eh_personality': 9, 'dump_eh_tree': 17, 'verify_eh_tree': 51, 'push_sleb128': 8, 'add_action_record': 5, 'collect_one_action_chain': 11, 'VEC_call_site_record_base_space': 2, 'VEC_call_site_record_gc_reserve': 2, 'VEC_call_site_record_base_quick_push': 2, 'VEC_call_site_record_gc_safe_push': 5, 'add_call_site': 7, 'ei_end_p': 1, 'ei_safe_edge': 3, 'ei_next': 4, 'action_record_eq': 4, 'action_record_hash': 2, 'convert_to_eh_region_ranges': 93, 'set_nothrow_function_flags': 10, 'emit_to_new_bb_before': 6, 'single_succ_edge': 1, 'ei_cond': 3, 'finish_eh_generation': 70, 'rest_of_handle_eh': 73}, "PosixPath('602/tree-ssa-reassoc.bc')": {'sbitmap_iter_init': 16, 'VEC_operand_entry_t_base_iterate': 2, 'dump_ops_vector': 2, 'init_reassoc': 10, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_lhs': 1, 'gimple_assign_rhs2': 3, 'has_single_use': 4, 'is_reassociable_op': 12, 'single_imm_use': 4, 'get_single_immediate_use': 18, 'should_break_up_subtract': 31, 'gimple_set_op': 4, 'gimple_assign_set_rhs1': 3, 'gimple_assign_set_rhs2': 3, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 4, 'negate_value': 48, 'break_up_subtract': 15, 'break_up_subtract_bb': 197, 'gsi_last_bb': 6, 'has_zero_uses': 1, 'gimple_vdef': 2, 'tree_operand_length': 3, 'get_rank': 33, 'VEC_operand_entry_t_base_space': 2, 'VEC_operand_entry_t_heap_reserve': 2, 'VEC_operand_entry_t_base_quick_push': 2, 'VEC_operand_entry_t_heap_safe_push': 5, 'add_to_ops_vec': 4, 'gimple_op_ptr': 1, 'gimple_assign_rhs1_ptr': 1, 'gimple_assign_rhs2_ptr': 1, 'linearize_expr': 108, 'linearize_expr_tree': 52, 'VEC_operand_entry_t_base_last': 2, 'VEC_operand_entry_t_base_pop': 2, 'eliminate_using_constants': 330, 'get_unary_op': 3, 'eliminate_not_pairs': 16, 'VEC_operand_entry_t_base_ordered_remove': 3, 'eliminate_duplicate_pair': 20, 'eliminate_plus_minus_pair': 16, 'optimize_ops_list': 607, 'sbitmap_iter_cond': 39, 'VEC_oecount_base_space': 2, 'VEC_oecount_heap_reserve': 2, 'VEC_oecount_base_quick_push': 3, 'VEC_oecount_heap_safe_push': 6, 'sbitmap_iter_next': 3, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'zero_one_operation': 95, 'gimple_assign_set_lhs': 3, 'single_succ_edge': 1, 'gsi_after_labels': 41, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'build_and_add_sum': 104, 'oecount_eq': 5, 'undistribute_ops_list': 89, 'remove_visited_stmt_chain': 8, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'is_phi_for_stmt': 10, 'rewrite_expr_tree': 107, 'sort_by_operand_rank': 10, 'reassociate_bb': 241, 'VEC_tree_base_iterate': 2, 'repropagate_negates': 32, 'execute_reassoc': 66}, "PosixPath('602/ira-color.bc')": {'ira_reassign_conflict_allocnos': 158, 'ira_sort_regnos_for_alter_reg': 86, 'update_copy_costs': 160, 'ira_color': 233, 'fast_allocation': 64, 'push_allocno_to_stack': 496, 'add_allocno_to_ordered_bucket': 32, 'ei_end_p': 1, 'ei_cond': 3, 'df_lr_get_bb_info': 2, 'ei_next': 4, 'VEC_edge_base_iterate': 2, 'ira_loop_edge_freq': 51, 'ira_allocno_conflict_iter_init': 49, 'ira_allocno_conflict_iter_cond': 67, 'ira_allocno_conflict_iter_next': 8, 'setup_allocno_priorities': 21, 'ira_get_register_move_cost': 1, 'update_curr_costs': 73, 'queue_update_cost': 15, 'get_next_update_cost': 2, 'update_conflict_hard_regno_costs': 160, 'VEC_ira_allocno_t_base_space': 2, 'VEC_ira_allocno_t_heap_reserve': 2, 'VEC_ira_allocno_t_base_quick_push': 2, 'VEC_ira_allocno_t_heap_safe_push': 5, 'allocno_cost_compare_func': 8, 'assign_hard_reg': 1057, 'allocno_priority_compare_func': 1, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'allocnos_have_intersected_live_ranges_p': 4, 'coalesced_allocno_conflict_p': 101, 'copy_freq_compare_func': 4, 'coalesce_allocnos': 407, 'setup_coalesced_allocno_costs_and_nums': 14, 'collect_spilled_coalesced_allocnos': 4, 'slot_coalesced_allocno_live_ranges_intersect_p': 1, 'coalesce_spill_slots': 33, 'coalesced_pseudo_reg_slot_compare': 11, 'coalesced_pseudo_reg_freq_compare': 4, 'ira_mark_allocation_change': 22, 'ira_mark_memory_move_deletion': 1, 'allocno_reload_assign': 76, 'pseudo_reg_compare': 1, 'ira_reassign_pseudos': 197, 'ira_reuse_stack_slot': 78, 'bitmap_initialize_stat': 2, 'ira_mark_new_stack_slot': 6, 'calculate_spill_cost': 92, 'ira_better_spill_reload_regno_p': 85, 'print_loop_title': 79, 'setup_allocno_left_conflicts_size': 221, 'setup_allocno_available_regs_num': 32, 'add_allocno_to_bucket': 8, 'put_allocno_into_bucket': 495, 'calculate_allocno_spill_cost': 22, 'get_coalesced_allocnos_attributes': 2, 'bucket_allocno_compare_func': 7, 'sort_bucket': 7, 'delete_allocno_from_bucket': 10, 'allocno_spill_priority': 7, 'remove_allocno_from_bucket_and_push': 45, 'push_only_colorable': 4, 'push_allocno_to_spill': 36, 'VEC_ira_allocno_t_base_pop': 2, 'splay_tree_free': 3, 'allocno_spill_priority_compare': 22, 'push_allocnos_to_stack': 501, 'pop_allocnos_from_stack': 24, 'color_allocnos': 1737, 'color_pass': 2050, 'move_spill_restore': 231, 'color': 202}, "PosixPath('602/cpp_errors.bc')": {'cpp_error': 17}, "PosixPath('602/tree-vect-loop-manip.bc')": {'slpeel_tree_duplicate_loop_to_edge_cfg': 70, 'first_imm_use_on_stmt': 2, 'next_imm_use_on_stmt': 2, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_next_use': 7, 'op_iter_init_use': 55, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'rename_use_op': 8, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'rename_variables_in_bb': 23, 'find_loop_location': 9, 'slpeel_make_loop_iterate_ntimes': 5, 'loop_outer': 2, 'gimple_phi_arg_location_from_edge': 2, 'gsi_last_bb': 6, 'slpeel_can_duplicate_loop_p': 14, 'vect_can_advance_ivs_p': 3, 'vect_build_loop_niters': 12, 'vect_generate_tmps_on_preheader': 21, 'gimple_vop': 2, 'VEC_adjust_info_base_space': 2, 'VEC_adjust_info_stack_reserve': 2, 'VEC_adjust_info_base_quick_push': 3, 'VEC_adjust_info_stack_safe_push': 6, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_init_phiuse': 19, 'move_use_after_head': 5, 'gimple_vuse_op': 2, 'link_use_stmts_after': 63, 'first_imm_use_stmt': 13, 'gimple_ops': 1, 'gimple_set_op': 4, 'gimple_debug_bind_reset_value': 3, 'next_imm_use_stmt': 10, 'adjust_debug_stmts_now': 105, 'adjust_debug_stmts': 40, 'adjust_phi_and_debug_stmts': 22, 'slpeel_update_phis_for_duplicate_loop': 15, 'single_pred_edge': 1, 'set_prologue_iterations': 117, 'slpeel_add_loop_guard': 60, 'slpeel_update_phi_nodes_for_guard1': 28, 'slpeel_update_phi_nodes_for_guard2': 15, 'adjust_vec_debug_stmts': 2, 'slpeel_tree_peel_loop_to_edge': 156, 'vect_update_ivs_after_vectorizer': 32, 'vect_do_peeling_for_loop_bound': 96, 'vect_gen_niters_for_prolog_loop': 43, 'VEC_data_reference_p_base_iterate': 2, 'vect_update_init_of_dr': 1, 'vect_update_inits_of_drs': 4, 'vect_do_peeling_for_alignment': 38, 'VEC_gimple_base_iterate': 2, 'vect_create_cond_for_align_checks': 15, 'VEC_ddr_p_base_iterate': 2, 'vect_create_cond_for_alias_checks': 19, 'vect_loop_versioning': 137}, "PosixPath('602/getpwd.bc')": {'getpwd': 16}, "PosixPath('602/simplify-rtx.bc')": {'mode_signbit_p': 5, 'simplify_immed_subreg': 438, 'plus_minus_operand_p': 6, 'simplify_plus_minus_op_data_cmp': 4, 'simplify_rtx': 31, 'simplify_relational_operation': 54, 'simplify_const_relational_operation': 461, 'avoid_constant_pool_reference': 20, 'simplify_subreg': 469, 'simplify_unary_operation': 275, 'simplify_binary_operation_1': 1152, 'simplify_associative_operation': 4, 'simplify_plus_minus': 181, 'simplify_const_binary_operation': 192, 'simplify_const_unary_operation': 367, 'simplify_ternary_operation': 101, 'delegitimize_mem_from_attrs': 98, 'simplify_replace_fn_rtx': 15}, "PosixPath('602/opts-common.bc')": {'find_opt': 13, 'prune_options': 15}, "PosixPath('602/tree-into-ssa.bc')": {'sbitmap_iter_init': 16, 'VEC_ssa_name_info_p_base_space': 2, 'VEC_ssa_name_info_p_heap_reserve': 2, 'VEC_ssa_name_info_p_base_quick_push': 2, 'get_ssa_name_ann': 30, 'var_ann': 2, 'get_current_def': 26, 'set_current_def': 27, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'compute_global_livein': 16, 'dump_decl_set': 8, 'dump_defs_stack': 2, 'first_htab_element': 7, 'first_referenced_var': 5, 'end_htab_p': 2, 'end_referenced_vars_p': 1, 'next_htab_element': 4, 'next_referenced_var': 1, 'dump_currdefs': 3, 'names_replaced_by': 1, 'dump_names_replaced_by': 18, 'sbitmap_iter_cond': 39, 'sbitmap_iter_next': 3, 'dump_update_ssa': 17, 'fini_ssa_renamer': 1, 'delete_update_ssa': 28, 'repl_map_free': 1, 'init_update_ssa': 2, 'add_to_repl_tbl': 1, 'is_new_name': 1, 'add_new_name_mapping': 79, 'create_new_def_for': 6, 'mark_set_for_renaming': 8, 'is_old_name': 3, 'name_registered_for_update_p': 7, 'ssa_names_to_replace': 2, 'switch_virtuals_to_full_rewrite_p': 4, 'switch_virtuals_to_full_rewrite': 30, 'gsi_stmt': 1, 'bb_seq': 2, 'gsi_start_bb': 6, 'initialize_flags_in_bb': 13, 'mark_block_for_update': 9, 'get_phi_state': 30, 'get_def_blocks_for': 1, 'set_phi_state': 33, 'set_def_block': 6, 'mark_def_interesting': 31, 'prepare_def_site_for': 3, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'VEC_gimple_vec_base_space': 2, 'VEC_gimple_vec_heap_reserve': 2, 'VEC_gimple_vec_base_quick_push': 2, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 5, 'mark_phi_for_rewrite': 12, 'set_livein_block': 6, 'mark_use_interesting': 8, 'next_readonly_imm_use': 2, 'prepare_use_sites_for': 2, 'prepare_names_to_update': 63, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_next_use': 7, 'op_iter_init_use': 55, 'op_iter_next_def': 4, 'op_iter_init_def': 48, 'prepare_block_for_update': 58, 'find_def_blocks_for': 1, 'VEC_int_base_quick_push': 2, 'VEC_int_base_pop': 2, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 2, 'VEC_int_heap_safe_push': 5, 'prune_unused_phi_nodes': 65, 'gsi_after_labels': 41, 'insert_phi_nodes_for': 104, 'insert_updated_phi_nodes_for': 34, 'VEC_tree_base_pop': 2, 'rewrite_update_leave_block': 7, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 4, 'register_new_update_single': 6, 'register_new_update_set': 22, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'maybe_replace_use_in_debug_stmt': 17, 'gimple_ops': 1, 'gimple_set_op': 4, 'gimple_debug_bind_reset_value': 3, 'get_reaching_def': 4, 'maybe_replace_use': 17, 'gsi_one_before_end_p': 1, 'phi_nodes': 2, 'maybe_register_def': 65, 'rewrite_update_stmt': 198, 'VEC_gimple_base_iterate': 2, 'rewrite_update_phi_arguments': 93, 'rewrite_update_enter_block': 460, 'rewrite_leave_block': 8, 'register_new_def': 8, 'rewrite_stmt': 61, 'rewrite_add_phi_arguments': 6, 'rewrite_enter_block': 172, 'rewrite_blocks': 7, 'def_blocks_free': 4, 'update_ssa': 245, 'init_ssa_renamer': 6, 'op_iter_next_tree': 6, 'op_iter_init_tree': 45, 'mark_def_sites': 40, 'mark_def_sites_block': 38, 'mark_def_site_blocks': 22, 'insert_phi_nodes': 21, 'rewrite_into_ssa': 131}, "PosixPath('602/gcse.bc')": {'can_assign_to_reg_without_clobbers_p': 14, 'compute_can_copy': 1, 'is_too_expensive': 3, 'alloc_gcse_mem': 4, 'alloc_hash_table': 3, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'free_insn_expr_list_list': 2, 'clear_modify_mem_tables': 18, 'record_last_reg_set_info': 8, 'canon_list_insert': 6, 'record_last_mem_set_info': 6, 'gcse_constant_p': 15, 'want_to_gcse_p': 1, 'find_rtx_in_ldst': 2, 'mems_conflict_for_gcse_p': 4, 'load_killed_in_block_p': 49, 'oprs_unchanged_p': 19, 'insert_expr_in_table': 38, 'insert_set_in_table': 20, 'hash_scan_set': 31, 'hash_scan_insn': 7, 'record_last_set_info': 16, 'compute_hash_table_work': 151, 'compute_hash_table': 155, 'dump_hash_table': 7, 'bmp_iter_and_compl_init': 24, 'bmp_iter_and_compl': 34, 'compute_transp': 213, 'compute_local_properties': 36, 'compute_transpout': 49, 'compute_code_hoist_vbeinout': 63, 'compute_code_hoist_data': 119, 'VEC_basic_block_base_iterate': 2, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'hoist_expr_reaches_here_p': 18, 'gcse_emit_move_after': 4, 'process_insert_insn': 2, 'single_succ_edge': 1, 'add_label_notes': 6, 'insert_insn_end_basic_block': 24, 'hoist_code': 132, 'one_code_hoisting_pass': 394, 'execute_rtl_hoist': 386, 'ldst_entry': 35, 'invalidate_any_buried_refs': 3, 'pre_ldst_expr_hash': 3, 'compute_ld_motion_mems': 26, 'trim_ld_motion_mems': 14, 'compute_pre_data': 77, 'pre_delete': 46, 'update_ld_motion_stores': 18, 'pre_edge_insert': 42, 'pre_expr_reaches_here_p_work': 24, 'pre_insert_copy_insn': 17, 'pre_insert_copies': 79, 'pre_gcse': 180, 'free_ldst_mems': 1, 'one_pre_gcse_pass': 313, 'execute_rtl_pre': 325, 'find_used_regs': 13, 'local_cprop_find_used_regs': 2, 'ei_safe_edge': 3, 'cprop_jump': 17, 'try_replace_reg': 6, 'constprop_register': 7, 'do_local_cprop': 5, 'local_cprop_pass': 40, 'implicit_set_cond_p': 19, 'find_implicit_sets': 73, 'oprs_not_set_p': 14, 'lookup_set': 2, 'find_avail_set': 18, 'cprop_insn': 61, 'mark_set': 4, 'mark_clobber': 3, 'mark_oprs_set': 5, 'find_bypass_set': 18, 'reg_killed_on_edge': 2, 'bypass_block': 194, 'bypass_conditional_jumps': 250, 'one_cprop_pass': 733, 'execute_rtl_cprop': 715, 'can_copy_p': 1}, "PosixPath('602/loop-unswitch.bc')": {'compare_and_jump_seq': 2, 'VEC_loop_p_base_iterate': 2, 'VEC_int_base_quick_push': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 14, 'may_unswitch_on': 95, 'reversed_condition': 4, 'single_succ_edge': 1, 'single_pred_edge': 1, 'unswitch_loop': 30, 'unswitch_single_loop': 163, 'unswitch_loops': 12}, "PosixPath('602/c-opts.bc')": {'c_common_init_options': 24, 'c_common_handle_option': 84, 'c_common_post_options': 269, 'check_deps_environment_vars': 19, 'sanitize_cpp_opts': 124, 'c_common_init': 35, 'push_command_line_include': 30, 'defer_opt': 2, 'handle_OPT_d': 2, 'handle_deferred_opts': 4, 'cb_file_change': 2, 'finish_options': 25, 'c_common_parse_file': 8, 'c_common_finish': 9}, "PosixPath('602/ipa-inline.bc')": {'inline_transform': 13, 'cgraph_can_remove_if_no_direct_calls_p': 4, 'update_noncloned_frequencies': 12, 'cgraph_clone_inlined_nodes': 86, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs_class': 3, 'gimple_assign_lhs': 1, 'likely_eliminated_by_inlining_p': 50, 'estimate_function_body_sizes': 189, 'compute_inline_parameters': 220, 'inline_indirect_intraprocedural_analysis': 2, 'VEC_ipa_node_params_t_base_space': 2, 'VEC_ipa_node_params_t_heap_reserve_exact': 2, 'VEC_ipa_node_params_t_heap_safe_grow': 2, 'VEC_ipa_node_params_t_heap_safe_grow_cleared': 2, 'ipa_check_create_node_params': 2, 'VEC_ipa_edge_args_t_base_space': 2, 'VEC_ipa_edge_args_t_gc_reserve_exact': 2, 'VEC_ipa_edge_args_t_gc_safe_grow': 2, 'VEC_ipa_edge_args_t_gc_safe_grow_cleared': 2, 'ipa_check_create_edge_args': 2, 'inline_generate_summary': 6, 'cgraph_estimate_size_after_inlining': 2, 'cgraph_estimate_time_after_inlining': 2, 'cgraph_mark_inline_edge': 88, 'cgraph_mark_inline': 8, 'cgraph_recursive_inlining_p': 4, 'leaf_node_p': 4, 'cgraph_only_called_directly_p': 2, 'cgraph_estimate_growth': 39, 'cgraph_check_inline_limits': 34, 'cgraph_default_inline_p': 13, 'cgraph_decide_inlining_incrementally': 101, 'try_inline': 10, 'cgraph_set_inline_failed': 4, 'cgraph_edge_badness': 40, 'compute_max_insns': 2, 'gimple_filename': 1, 'gimple_lineno': 1, 'lookup_recursive_calls': 16, 'cgraph_decide_recursive_inlining': 46, 'VEC_cgraph_edge_p_base_pop': 2, 'add_new_edges_to_heap': 4, 'update_caller_keys': 33, 'update_callee_keys': 5, 'cgraph_decide_inlining_of_small_functions': 240, 'cgraph_decide_inlining': 440, 'cgraph_early_inlining': 12}, "PosixPath('602/lto-streamer-out.bc')": {'eq_string_slot_node': 4, 'create_output_block': 5, 'destroy_output_block': 2, 'VEC_bitpack_word_t_base_iterate': 2, 'lto_output_bitpack': 2, 'tree_is_indexable': 1, 'output_type_ref': 2, 'lto_stream_as_builtin_p': 4, 'output_string_with_length': 14, 'lto_output_builtin_tree': 7, 'output_identifier': 2, 'lto_output_tree_header': 8, 'pack_ts_base_value_fields': 1, 'pack_ts_real_cst_value_fields': 7, 'pack_ts_fixed_cst_value_fields': 2, 'pack_ts_decl_common_value_fields': 2, 'pack_ts_decl_with_vis_value_fields': 2, 'pack_ts_function_decl_value_fields': 7, 'pack_ts_type_value_fields': 2, 'pack_value_fields': 113, 'lto_output_location': 25, 'tree_operand_length': 3, 'VEC_tree_base_iterate': 2, 'lto_output_chain': 1, 'lto_output_tree_ref': 13, 'lto_output_tree': 509, 'produce_asm': 72, 'output_alias_pair_p': 2, 'output_unreferenced_globals': 13, 'write_global_stream': 5, 'lto_output_decl_state_streams': 4, 'write_global_references': 13, 'lto_output_decl_state_refs': 26, 'write_symbol_vec': 68, 'write_symbols_of_kind': 2, 'produce_asm_for_decls': 99, 'output_ssa_names': 1, 'VEC_eh_region_base_iterate': 2, 'output_eh_region': 5, 'VEC_eh_landing_pad_base_iterate': 2, 'VEC_uchar_base_iterate': 2, 'output_eh_regions': 14, 'bb_seq': 2, 'gsi_start_bb': 6, 'phi_nodes': 2, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'output_gimple_stmt': 8, 'output_phi': 4, 'output_bb': 35, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'output_cfg': 7, 'output_function': 46, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 5, 'copy_function': 11, 'lto_output': 59}, "PosixPath('602/incpath.bc')": {'add_cpp_dir_path': 2, 'add_path': 24, 'add_env_var_paths': 40, 'add_standard_paths': 157, 'add_sysroot_to_chain': 6, 'remove_duplicates': 125, 'register_include_chains': 163}, "PosixPath('602/predict.bc')": {'compute_function_frequency': 10, 'maybe_hot_count_p': 7, 'maybe_hot_frequency_p': 4, 'maybe_hot_bb_p': 17, 'cgraph_maybe_hot_edge_p': 4, 'maybe_hot_edge_p': 22, 'loop_outer': 2, 'optimize_loop_nest_for_speed_p': 11, 'predictable_edge_p': 3, 'rtl_predicted_by_p': 6, 'gimple_predicted_by_p': 2, 'br_prob_note_reliable_p': 2, 'gimple_predict_edge': 20, 'remove_predictions_associated_with_edge': 4, 'invert_br_probabilities': 5, 'bb_estimate_probability_locally': 25, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'set_even_probabilities': 9, 'dump_prediction': 8, 'single_succ_edge': 1, 'combine_predictions_for_insn': 40, 'guess_outgoing_edge_probabilities': 64, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_return_retval': 1, 'return_prediction': 2, 'predict_paths_for_bb': 10, 'apply_return_prediction': 30, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'tree_bb_level_predictions': 98, 'VEC_int_base_quick_push': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 19, 'VEC_edge_base_iterate': 2, 'predict_loops': 31, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'gimple_call_arg': 1, 'expr_expected_value_1': 17, 'expr_expected_value': 9, 'tree_predict_by_opcode': 10, 'tree_estimate_probability_bb': 52, 'combine_predictions_for_bb': 38, 'counts_to_freqs': 7, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'propagate_freq': 81, 'estimate_loops': 8, 'choose_function_section': 9, 'estimate_bb_frequencies': 55, 'tree_estimate_probability': 263, 'expensive_function_p': 25, 'gimple_call_lhs': 1, 'strip_predict_hints': 54}, "PosixPath('602/tree-profile.bc')": {'tree_init_ic_make_global_vars': 10, 'prepare_instrumented_value': 2, 'gsi_stmt': 1, 'add_abnormal_goto_call_edges': 1, 'tree_gen_ior_profiler': 1, 'tree_gen_average_profiler': 1, 'tree_gen_ic_profiler': 1, 'tree_gen_one_value_profiler': 1, 'tree_gen_pow2_profiler': 1, 'tree_gen_interval_profiler': 1, 'tree_init_edge_profiler': 6, 'ei_end_p': 1, 'ei_cond': 3, 'bb_seq': 2, 'gsi_start_bb': 6, 'ei_next': 4, 'tree_gen_ic_func_profiler': 39, 'tree_profiling': 48}, "PosixPath('602/real.bc')": {'do_divide': 11, 'real_to_hexadecimal': 17, 'get_zero': 1, 'get_canonical_qnan': 1, 'sticky_rshift_significand': 2, 'get_inf': 1, 'normalize': 2, 'do_add': 17, 'do_multiply': 23, 'lshift_significand_1': 2, 'div_significands': 47, 'clear_significand_below': 1, 'do_fix_trunc': 2, 'real_arithmetic': 2, 'real_ldexp': 2, 'rtd_divmod': 11, 'round_for_format': 47, 'real_convert': 1, 'times_pten': 3, 'real_from_integer': 50, 'exact_real_inverse': 18, 'real_can_shorten_arithmetic': 126, 'real_to_integer': 2, 'rshift_significand': 2, 'real_to_integer2': 9, 'ten_to_mptwo': 1, 'real_to_decimal_for_mode': 83, 'get_canonical_snan': 1, 'real_from_string': 33, 'real_inf': 1, 'real_nan': 72, 'real_maxval': 6, 'real_2expN': 3, 'exact_real_truncate': 3, 'real_to_target_fmt': 4, 'real_to_target': 6, 'significand_size': 3, 'real_sqrt': 12, 'real_powi': 4, 'real_floor': 2, 'real_ceil': 2, 'get_max_float': 6, 'decode_ieee_half': 10, 'encode_ieee_half': 6, 'decode_vax_g': 5, 'encode_vax_g': 4, 'decode_vax_d': 5, 'encode_vax_d': 4, 'decode_vax_f': 3, 'encode_vax_f': 2, 'decode_ieee_quad': 42, 'encode_ieee_quad': 52, 'decode_ieee_double': 12, 'encode_ieee_double': 8, 'decode_ibm_extended': 17, 'encode_ibm_extended': 29, 'decode_ieee_extended': 14, 'encode_ieee_extended': 12, 'decode_ieee_extended_motorola': 21, 'encode_ieee_extended_motorola': 17, 'decode_ieee_single': 10, 'encode_ieee_single': 6}, "PosixPath('602/dwarf2asm.bc')": {'dw2_assemble_integer': 2, 'dw2_asm_output_data_raw': 3, 'dw2_asm_output_nstring': 7, 'dw2_force_const_mem': 7, 'dw2_output_indirect_constant_1': 8}, "PosixPath('602/hooks.bc')": {}, "PosixPath('602/matrix-reorg.bc')": {'analyze_transpose': 45, 'check_allocation_function': 95, 'first_imm_use_on_stmt': 2, 'next_imm_use_on_stmt': 2, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_cast_p': 2, 'may_flatten_matrices_1': 25, 'may_flatten_matrices': 63, 'analyze_matrix_decl': 19, 'find_matrices_decl': 25, 'mark_min_matrix_escape_level': 2, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_call_arg': 1, 'collect_data_for_malloc_call': 12, 'add_allocation_site': 33, 'analyze_matrix_allocation_site': 33, 'gimple_assign_lhs': 1, 'update_type_size': 21, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 3, 'gimple_call_lhs': 1, 'ssa_accessed_in_tree': 6, 'ssa_accessed_in_call_rhs': 21, 'analyze_accesses_for_call_stmt': 98, 'gimple_assign_rhs2': 3, 'ssa_accessed_in_assign_rhs': 15, 'VEC_access_site_info_p_base_space': 2, 'VEC_access_site_info_p_heap_reserve': 2, 'VEC_access_site_info_p_base_quick_push': 2, 'VEC_access_site_info_p_heap_safe_push': 5, 'record_access_alloc_site_info': 22, 'get_index_from_offset': 34, 'next_readonly_imm_use': 2, 'analyze_matrix_accesses': 723, 'find_sites_in_func': 42, 'record_all_accesses_in_func': 32, 'dump_matrix_reorg_analysis': 3, 'VEC_access_site_info_p_base_iterate': 2, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_next_tree': 6, 'op_iter_init_tree': 45, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'move_use_after_head': 5, 'op_iter_init_use': 55, 'gimple_vuse_op': 2, 'link_use_stmts_after': 62, 'first_imm_use_stmt': 13, 'gimple_set_op': 4, 'gimple_assign_set_lhs': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'next_imm_use_stmt': 10, 'gimple_assign_set_rhs1': 3, 'gimple_assign_set_rhs2': 3, 'transform_access_sites': 316, 'sort_dim_hot_level': 8, 'check_var_notmodified_p': 23, 'transform_allocation_sites': 327, 'gimple_call_return_type': 2, 'gimple_expr_type': 3, 'can_calculate_expr_before_stmt': 16, 'mat_free': 4, 'matrix_reorg': 181}, "PosixPath('602/tree-ssa-dce.bc')": {'first_imm_use_on_stmt': 2, 'next_imm_use_on_stmt': 2, 'gsi_start': 8, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'move_use_after_head': 5, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_init_use': 55, 'gimple_vuse_op': 2, 'link_use_stmts_after': 63, 'first_imm_use_stmt': 13, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'next_imm_use_stmt': 10, 'mark_virtual_phi_result_for_renaming': 93, 'single_succ_edge': 1, 'find_pdom': 2, 'set_control_dependence_map_bit': 4, 'find_control_dependence': 54, 'find_all_control_dependences': 55, 'gsi_stmt': 1, 'bb_seq': 2, 'gsi_start_bb': 6, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 4, 'mark_stmt_necessary': 9, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_lhs': 1, 'gimple_assign_lhs': 1, 'gimple_debug_bind_has_value_p': 1, 'gimple_debug_bind_get_var': 1, 'mark_stmt_if_obviously_necessary': 5, 'ei_end_p': 1, 'ei_cond': 3, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'mark_control_dependent_edges_necessary': 53, 'ei_next': 4, 'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 19, 'find_obviously_necessary_stmts': 126, 'VEC_gimple_base_pop': 2, 'mark_operand_necessary': 24, 'degenerate_phi_p': 10, 'op_iter_next_tree': 6, 'op_iter_init_tree': 48, 'may_be_aliased': 7, 'ref_may_be_aliased': 8, 'mark_all_reaching_defs_necessary_1': 5, 'mark_all_reaching_defs_necessary': 2, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_call_arg': 1, 'gimple_has_lhs': 1, 'mark_aliased_reaching_defs_necessary_1': 35, 'mark_aliased_reaching_defs_necessary': 5, 'gimple_assign_rhs1': 1, 'gimple_return_retval': 1, 'gimple_asm_input_op': 3, 'propagate_necessity': 385, 'VEC_basic_block_base_pop': 2, 'gsi_last_bb': 6, 'phi_nodes': 2, 'forward_edge_to_pdom': 37, 'ei_safe_edge': 3, 'remove_dead_stmt': 71, 'gimple_set_op': 4, 'gimple_call_set_lhs': 3, 'end_imm_use_stmt_traverse': 3, 'remove_dead_phis': 168, 'eliminate_unnecessary_stmts': 701, 'tree_dce_done': 28, 'perform_tree_ssa_dce': 1197}, "PosixPath('602/postreload.bc')": {'reload_cse_simplify_set': 6, 'reload_cse_noop_set_p': 2, 'reload_cse_simplify_operands': 474, 'reload_cse_simplify': 6, 'reload_cse_regs_1': 8, 'reload_combine_note_use': 41, 'reload_combine_note_store': 19, 'reload_combine': 183, 'move2add_note_store': 185, 'reload_cse_move2add': 123, 'reload_cse_regs': 340}, "PosixPath('602/cselib.bc')": {'cselib_record_sets': 208, 'references_value_p': 3, 'preserve_only_constants': 15, 'cselib_reset_table': 46, 'cselib_invalidate_regno': 55, 'promote_debug_loc': 4, 'new_cselib_val': 18, 'new_elt_loc_list': 9, 'new_elt_list': 2, 'add_mem_for_addr': 47, 'cselib_subst_to_values': 18, 'cselib_hash_rtx': 11, 'cselib_lookup_mem': 25, 'cselib_lookup': 130, 'cselib_invalidate_mem': 48, 'unchain_one_value': 4, 'discard_useless_values': 12, 'discard_useless_locs': 23, 'remove_useless_values': 17, 'cselib_reg_set_mode': 2, 'rtx_equal_for_cselib_p': 20, 'cselib_expand_value_rtx_1': 67, 'expand_loc': 22, 'cselib_expand_value_rtx': 2, 'cselib_expand_value_rtx_cb': 7, 'cselib_dummy_expand_value_rtx_cb': 7, 'cselib_invalidate_rtx': 3, 'cselib_record_set': 53, 'cselib_process_insn': 263, 'entry_and_rtx_equal_p': 10}, "PosixPath('602/sel-sched-dump.bc')": {'replace_str_in_buf': 3, 'sel_prepare_string_for_dot_label': 3, 'dump_insn_rtx_1': 20, 'debug_insn_rtx': 2, 'dump_vinsn_1': 12, 'debug_vinsn': 2, 'dump_expr_1': 41, 'debug_expr': 2, 'dump_insn_1': 8, 'debug_insn': 2, '_list_iter_start': 4, '_list_iter_next': 3, 'dump_av_set': 5, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'dump_lv_set': 31, 'dump_blist': 5, 'VEC_rtx_base_iterate': 2, 'dump_insn_vector': 4, 'sel_print_insn': 6, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'has_preds_in_current_region_p': 3, 'sel_dump_cfg_edge': 10, 'sel_dump_cfg_2': 33, 'sel_dump_cfg_1': 33, 'sel_debug_cfg_1': 33, 'debug_av_set': 2, 'debug_lv_set': 2, 'debug_ilist': 3, 'debug_blist': 2, 'debug_insn_vector': 2, 'debug_hard_reg_set': 2, 'debug_mem_addr_value': 2}, "PosixPath('602/c-errors.bc')": {'pedwarn_c99': 1, 'pedwarn_c90': 1}, "PosixPath('602/c-lex.bc')": {'interpret_integer': 87, 'lex_string': 113, 'get_fileinfo': 6, 'cb_undef': 4, 'cb_define': 4, 'cb_def_pragma': 2, 'cb_ident': 1, 'cb_line_change': 2, 'init_c_lex': 30, 'dump_one_header': 2, 'dump_time_statistics': 1, 'fe_file_change': 33, 'narrowest_unsigned_type': 2, 'narrowest_signed_type': 2, 'interpret_fixed': 16, 'interpret_float': 131, 'lex_charconst': 8, 'c_lex_with_flags': 34}, "PosixPath('602/df-byte-scan.bc')": {'df_compute_accessed_bytes_extract': 24, 'df_compute_accessed_bytes_strict_low_part': 16, 'df_compute_accessed_bytes_subreg': 19, 'df_compute_accessed_bytes': 49}, "PosixPath('602/tree-dump.bc')": {'dump_register': 31, 'queue': 9, 'dump_maybe_newline': 2, 'queue_and_dump_index': 2, 'dump_string': 2, 'dump_string_field': 2, 'dump_flag': 2, 'VEC_tree_base_iterate': 2, 'dump_real': 1, 'dump_fixed': 1, 'init_call_expr_arg_iterator': 3, 'next_call_expr_arg': 4, 'first_call_expr_arg': 6, 'dequeue_and_dump': 212, 'dump_node': 186, 'get_dump_file_name': 20, 'dump_enabled_p': 2, 'dump_enable_all': 16, 'dump_switch_p_1': 23}, "PosixPath('602/i386.bc')": {'function_arg_advance_32': 32, 'ix86_compute_frame_layout': 263, 'ix86_expand_prologue': 452, 'ix86_expand_epilogue': 292, 'assign_386_stack_local': 12, 'ix86_expand_int_addcc': 31, 'ix86_split_long_move': 956, 'ix86_vectorize_builtin_vec_perm_ok': 30, 'expand_vec_perm_interleave2': 325, 'ix86_target_string': 31, 'ix86_expand_vec_perm_builtin': 292, 'ix86_can_inline_p': 32, 'ix86_function_specific_print': 6, 'ix86_function_specific_restore': 61, 'ix86_function_specific_save': 108, 'ix86_valid_target_attribute_inner_p': 72, 'ix86_get_builtin_type': 4, 'ix86_get_builtin_func_type': 8, 'ix86_add_new_builtins': 8, 'ix86_frame_pointer_required': 4, 'ix86_secondary_reload': 2, 'ix86_function_regparm': 2, 'ix86_static_chain': 4, 'ix86_trampoline_init': 2, 'find_drap_reg': 2, 'ix86_get_drap_rtx': 2, 'ix86_minimum_incoming_stack_boundary': 2, 'type_natural_mode': 32, 'ix86_function_sseregparm': 1, 'function_value_32': 6, 'ix86_function_value_1': 14, 'ix86_function_value': 2, 'return_in_memory_32': 1, 'ix86_return_in_memory': 1, 'ix86_struct_value_rtx': 21, 'ix86_canonical_va_list_type': 3, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'ix86_pad_returns': 17, 'symbolic_reference_mentioned_p': 1, 'min_insn_size': 4, 'ix86_avoid_jump_mispredicts': 11, 'ix86_reorg': 29, 'ix86_decompose_address': 161, 'ix86_address_cost': 96, 'standard_80387_constant_p': 12, 'ix86_rtx_costs': 113, 'ix86_in_large_data_p': 4, 'ix86_encode_section_info': 9, 'legitimate_pic_address_disp_p': 14, 'legitimate_constant_p': 12, 'ix86_legitimate_address_p': 85, 'ix86_pic_register_p': 7, 'ix86_delegitimize_address': 25, 'ix86_tls_module_base': 1, 'legitimize_pic_address': 23, 'ix86_legitimize_address': 91, 'ix86_mangle_type': 2, 'recog_memoized': 3, 'expand_vselect': 4, 'expand_vec_perm_blend': 77, 'expand_vec_perm_vpermil': 16, 'expand_vec_perm_pshufb': 27, 'expand_vec_perm_1': 179, 'get_mode_wider_vector': 8, 'expand_vec_perm_broadcast_1': 24, 'ix86_expand_vector_init_duplicate': 43, 'ix86_expand_vector_extract': 4, 'ix86_expand_vector_set': 31, 'ix86_expand_vector_init_one_nonzero': 4, 'ix86_expand_vector_init_one_var': 1, 'ix86_expand_vector_init_interleave': 4, 'ix86_expand_vector_init_general': 87, 'ix86_expand_vector_init': 11, 'ix86_expand_vector_init_concat': 21, 'ix86_expand_vec_init_builtin': 5, 'ix86_expand_vec_ext_builtin': 9, 'ix86_expand_vec_set_builtin': 9, 'extract_vec_perm_cst': 1, 'expand_vec_perm_pshuflw_pshufhw': 32, 'expand_vec_perm_palignr': 11, 'expand_vec_perm_broadcast': 7, 'expand_vec_perm_pshufb2': 22, 'expand_vec_perm_even_odd_1': 12, 'expand_vec_perm_even_odd': 2, 'ix86_expand_vec_perm_builtin_1': 547, 'ix86_expand_special_args_builtin': 109, 'ix86_expand_sse_ptest': 18, 'ix86_expand_unop_vec_merge_builtin': 15, 'ix86_expand_binop_builtin': 34, 'ix86_expand_sse_compare': 32, 'ix86_expand_args_builtin': 210, 'ix86_expand_sse_comi': 20, 'ix86_expand_sse_pcmpestr': 56, 'ix86_expand_sse_pcmpistr': 36, 'ix86_expand_multi_arg_builtin': 145, 'ix86_expand_builtin': 477, 'ix86_init_builtin_types': 2, 'def_builtin': 15, 'def_builtin_const': 23, 'ix86_init_mmx_sse_builtins': 1016, 'ix86_init_builtins': 992, 'ix86_comp_type_attributes': 2, 'ix86_handle_struct_attribute': 3, 'ix86_vectorize_builtin_vec_perm': 8, 'ix86_builtin_vectorized_function': 19, 'ix86_agi_dependent': 2, 'ix86_flags_dependent': 13, 'ix86_adjust_cost': 8, 'ix86_veclibabi_svml': 45, 'ix86_init_machine_status': 7, 'override_options': 499, 'ix86_function_ok_for_sibcall': 8, 'ix86_code_end': 22, 'output_set_got': 20, 'x86_output_mi_thunk': 19, 'ix86_valid_target_attribute_tree': 50, 'ix86_valid_target_attribute_p': 2, 'ix86_conditional_register_usage': 90, 'x86_output_aligned_bss': 2, 'init_cumulative_args': 52, 'function_arg_advance': 78, 'function_arg_32': 25, 'function_arg': 29, 'contains_aligned_value_p': 23, 'ix86_function_arg_boundary': 3, 'ix86_sol10_return_in_memory': 1, 'ix86_check_movabs': 7, 'ix86_save_reg': 3, 'ix86_can_use_return_insn_p': 12, 'ix86_initial_elimination_offset': 3, 'gen_push': 5, 'ix86_add_queued_cfa_restore_notes': 3, 'pro_epilogue_adjust_stack': 9, 'ix86_emit_leave': 10, 'ix86_emit_restore_reg_using_pop': 11, 'legitimate_pic_operand_p': 12, 'print_reg': 47, 'get_some_local_dynamic_name_1': 6, 'get_some_local_dynamic_name': 2, 'output_pic_addr_const': 28, 'print_operand': 45, 'print_operand_address': 49, 'output_addr_const_extra': 4, 'split_di': 4, 'split_ti': 4, 'output_387_binary_op': 152, 'ix86_mode_needed': 7, 'output_fix_trunc': 6, 'output_fp_compare': 24, 'ix86_expand_clear': 3, 'ix86_expand_move': 20, 'ix86_expand_vector_move_misalign': 15, 'ix86_expand_vector_move': 31, 'ix86_swap_binary_operands_p': 4, 'ix86_fixup_binary_operands': 9, 'ix86_expand_binary_operator': 2, 'ix86_binary_operator_ok': 4, 'ix86_expand_unary_operator': 2, 'distance_non_agu_define': 34, 'distance_agu_use': 41, 'ix86_lea_for_add_ok': 67, 'ix86_dep_by_shift_count_body': 10, 'ix86_unary_operator_ok': 5, 'ix86_vec_interleave_v2df_operator_ok': 8, 'ix86_split_convert_uns_si_sse': 13, 'ix86_expand_fp_absneg_operator': 6, 'ix86_expand_copysign': 4, 'ix86_split_copysign_const': 4, 'ix86_split_copysign_var': 20, 'ix86_match_ccmode': 6, 'ix86_cc_mode': 5, 'ix86_prepare_fp_compare_args': 6, 'ix86_expand_fp_compare': 2, 'ix86_expand_branch': 85, 'ix86_expand_carry_flag_compare': 10, 'ix86_expand_int_movcc': 78, 'ix86_expand_sse_movcc': 1, 'ix86_expand_fp_movcc': 20, 'ix86_expand_fp_vcond': 12, 'ix86_expand_int_vcond': 15, 'ix86_expand_sse_unpack': 5, 'ix86_expand_sse4_unpack': 4, 'ix86_split_to_parts': 66, 'ix86_expand_ashl_const': 2, 'ix86_split_ashl': 37, 'ix86_split_ashr': 22, 'ix86_split_lshr': 17, 'decide_alg': 10, 'expand_constant_movmem_prologue': 4, 'expand_set_or_movmem_via_loop': 7, 'scale_counter': 2, 'expand_movmem_via_rep_mov': 11, 'expand_movmem_epilogue': 2, 'ix86_expand_movmem': 42, 'promote_duplicated_reg': 9, 'expand_constant_setmem_prologue': 6, 'expand_setmem_via_rep_stos': 7, 'expand_setmem_epilogue': 2, 'ix86_expand_setmem': 35, 'ix86_expand_strlensi_unroll_1': 2, 'ix86_expand_strlen': 3, 'ix86_expand_call': 28, 'satisfies_constraint_K': 2, 'memory_address_length': 88, 'ix86_attr_length_immediate_default': 3, 'ix86_attr_length_address_default': 9, 'ix86_constant_alignment': 38, 'ix86_data_alignment': 102, 'ix86_local_alignment': 106, 'ix86_minimum_alignment': 8, 'avx_vpermilp_parallel': 21, 'avx_vperm2f128_parallel': 20, 'ix86_force_to_memory': 22, 'ix86_preferred_reload_class': 5, 'inline_memory_move_cost': 19, 'ix86_register_move_cost': 2, 'ix86_hard_regno_mode_ok': 4, 'ix86_modes_tieable_p': 4, 'x86_order_regs_for_local_alloc': 11, 'x86_field_alignment': 1, 'x86_extended_QIreg_mentioned_p': 2, 'extended_reg_mentioned_1': 2, 'x86_extended_reg_mentioned_p': 1, 'x86_emit_floatuns': 4, 'output_387_reg_move': 8, 'ix86_emit_i387_log1p': 2, 'ix86_emit_swsqrtsf': 2, 'ix86_expand_lround': 6, 'ix86_expand_rint': 1, 'ix86_expand_floorceildf_32': 4, 'ix86_expand_floorceil': 14, 'ix86_expand_rounddf_32': 1, 'ix86_expand_trunc': 14, 'ix86_expand_truncdf_32': 1, 'ix86_expand_round': 3, 'ix86_expand_vec_extract_even_odd': 27, 'gt_ggc_mx_stack_local_entry': 2, 'gt_pch_nx_stack_local_entry': 2}, "PosixPath('602/integrate.bc')": {'function_attribute_inlinable_p': 4, 'set_decl_origin_self': 15, 'set_block_origin_self': 4, 'set_decl_abstract_flags': 16, 'set_block_abstract_flags': 10, 'get_hard_reg_initial_reg': 3, 'has_hard_reg_initial_val': 6, 'get_hard_reg_initial_val': 11, 'emit_initial_value_sets': 5, 'allocate_initial_values': 19, 'gt_ggc_mx_initial_value_struct': 4, 'gt_pch_p_20initial_value_struct': 4, 'gt_pch_nx_initial_value_struct': 4}, "PosixPath('602/tree-ssa-forwprop.bc')": {'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'has_single_use': 4, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 7, 'op_iter_init_phiuse': 19, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'move_use_after_head': 5, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 23, 'op_iter_init_use': 54, 'gimple_vuse_op': 2, 'link_use_stmts_after': 63, 'first_imm_use_stmt': 13, 'gimple_set_op': 4, 'gimple_assign_set_rhs1': 3, 'gimple_op_ptr': 1, 'gimple_assign_lhs_ptr': 1, 'tidy_after_forward_propagate_addr': 3, 'gimple_assign_rhs1_ptr': 1, 'gimple_assign_rhs2': 3, 'forward_propagate_addr_into_variable_array_index': 29, 'has_zero_uses': 1, 'next_imm_use_stmt': 10, 'forward_propagate_addr_expr': 683, 'simplify_not_neg_expr': 29, 'get_prop_source_stmt': 47, 'can_propagate_from': 26, 'rhs_to_tree': 10, 'remove_prop_source_from_use': 8, 'forward_propagate_into_cond': 42, 'single_imm_use': 4, 'get_prop_dest_stmt': 31, 'forward_propagate_comparison': 216, 'gimple_assign_cast_p': 2, 'gimple_call_fn': 1, 'gimple_call_return_type': 2, 'gimple_expr_type': 4, 'simplify_bitwise_and': 23, 'gimple_switch_index': 1, 'gimple_switch_set_index': 5, 'simplify_gimple_switch': 33, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'forward_propagate_into_gimple_cond': 30, 'tree_ssa_forward_propagate_single_use_vars': 1318}, "PosixPath('602/statistics.bc')": {'hash_statistics_eq': 4, 'curr_statistics_hash': 7, 'statistics_fini_pass_2': 29, 'statistics_fini_pass_1': 14, 'statistics_fini_pass': 4, 'statistics_fini_1': 12, 'statistics_fini': 4, 'lookup_or_add_counter': 6, 'statistics_counter_event': 13, 'statistics_histogram_event': 10}, "PosixPath('602/host-ieee128.bc')": {'__host_to_ieee_128': 2, '__ieee_to_host_128': 2}, "PosixPath('602/host-ieee32.bc')": {}, "PosixPath('602/xexit.bc')": {}, "PosixPath('602/cpp_pch.bc')": {'write_macdef': 20, 'cpp_valid_state': 54, '_cpp_restore_pushed_macros': 33, 'save_idents': 10, 'cpp_string_eq': 4, 'hashmem': 2, 'cpp_string_hash': 4, 'write_defs': 11, 'count_defs': 14, 'cpp_write_pch_deps': 23, '_cpp_save_pushed_macros': 46, 'cpp_write_pch_state': 1, 'collect_ht_nodes': 7, 'save_macros': 6, 'cpp_prepare_state': 4, 'cpp_read_state': 97}, "PosixPath('602/c-ppoutput.bc')": {'print_line': 8, 'maybe_print_line': 13, 'account_for_newlines': 4, 'scan_translation_unit_trad': 21, 'scan_translation_unit_directives_only': 1, 'dump_queued_macros': 6, 'do_line_change': 5, 'scan_translation_unit': 85, 'dump_macro': 1, 'preprocess_file': 126, 'cb_used_undef': 3, 'cb_used_define': 3, 'cb_define': 1, 'cb_include': 6, 'init_pp_output': 55, 'pp_file_change': 15}, "PosixPath('602/builtins.bc')": {'expand_builtin_setjmp_setup': 2, 'gimplify_va_arg_expr': 31, 'fold_builtin_object_size': 18, 'is_builtin_fn': 2, 'get_object_alignment': 20, 'get_pointer_alignment': 12, 'c_strlen': 31, 'expand_builtin_setjmp_receiver': 2, 'c_readstr': 18, 'builtin_memset_read_str': 2, 'std_canonical_va_list_type': 10, 'build_va_arg_indirect_ref': 2, 'std_gimplify_va_arg_expr': 11, 'avoid_folding_inline_builtin': 3, 'fold_builtin_inf': 54, 'type_to_class': 2, 'fold_builtin_classify_type': 2, 'fold_builtin_0': 2, 'fold_builtin_constant_p': 17, 'c_getstr': 1, 'fold_builtin_nan': 4, 'init_const_call_expr_arg_iterator': 3, 'more_const_call_expr_args_p': 2, 'next_const_call_expr_arg': 4, 'builtin_mathfn_code': 12, 'integer_valued_real_p': 13, 'fold_builtin_bswap': 14, 'fold_builtin_bitop': 13, 'fold_builtin_signbit': 73, 'fold_builtin_significand': 19, 'fold_builtin_logb': 12, 'interclass_mathfn_icode': 3, 'build_string_literal': 3, 'fold_builtin_load_exponent': 34, 'fold_builtin_frexp': 10, 'fold_builtin_modf': 23, 'var_decl_component_p': 3, 'fold_builtin_memset': 10, 'fold_builtin_bzero': 2, 'fold_builtin_strchr': 7, 'fold_builtin_powi': 12, 'fold_builtin_unordered_cmp': 151, 'readonly_data_expr': 2, 'fold_builtin_strncmp': 1, 'fold_builtin_memchr': 7, 'rewrite_call_expr': 20, 'fold_builtin_sprintf_chk': 11, 'fold_builtin_snprintf_chk': 16, 'validate_arglist': 18, 'fold_builtin_fpclassify': 51, 'fold_builtin_varargs': 55, 'fold_builtin_strncat_chk': 2, 'fold_builtin_memory_op': 85, 'fold_builtin_fprintf': 1, 'fold_builtin_copysign': 22, 'fold_builtin_expect': 22, 'fold_builtin_strpbrk': 2, 'fold_builtin_stpcpy': 2, 'fold_builtin_strrchr': 7, 'fold_builtin_strstr': 2, 'fold_builtin_printf': 18, 'fold_builtin_interclass_mathfn': 46, 'fold_builtin_classify': 239, 'fold_builtin_int_roundingfn': 58, 'fold_builtin_round': 12, 'fold_builtin_trunc': 18, 'fold_builtin_ceil': 12, 'fold_builtin_floor': 12, 'fold_builtin_carg': 4, 'fold_builtin_n': 98, 'fold_builtin_call_array': 6, 'build_call_expr_loc': 13, 'fold_fixed_mathfn': 7, 'build_builtin_expect_predicate': 4, 'init_call_expr_arg_iterator': 3, 'next_call_expr_arg': 4, 'first_call_expr_arg': 6, 'expand_builtin': 31, 'fold_call_expr': 6, 'build_function_call_expr': 4, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_call_arg': 1, 'validate_gimple_arglist': 30, 'fold_builtin_next_arg': 4, 'gimple_rewrite_call_expr': 23, 'gimple_fold_builtin_snprintf_chk': 7, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_fold_builtin_sprintf_chk': 6, 'gimple_fold_builtin_varargs': 7, 'fold_call_stmt': 24, 'set_builtin_user_assembler_name': 3}, "PosixPath('602/insn-preds.bc')": {'any_fp_register_operand': 2, 'fp_register_operand': 2, 'register_and_not_any_fp_reg_operand': 2, 'register_and_not_fp_reg_operand': 2, 'mmx_reg_operand': 2, 'q_regs_operand_1': 2, 'q_regs_operand': 2, 'ext_register_operand_1': 2, 'ext_register_operand': 2, 'ax_reg_operand': 2, 'flags_reg_operand': 2, 'reg_not_xmm0_operand': 2, 'nonimm_not_xmm0_operand': 2, 'x86_64_zext_immediate_operand_1': 17, 'x86_64_zext_immediate_operand': 17, 'symbolic_operand_1': 11, 'symbolic_operand': 12, 'pic_symbolic_operand_1': 6, 'pic_symbolic_operand': 8, 'local_symbolic_operand_1': 15, 'local_symbolic_operand': 14, 'tls_symbolic_operand': 2, 'tp_or_register_operand': 2, 'register_no_elim_operand_1': 2, 'register_no_elim_operand': 2, 'call_register_no_elim_operand_1': 2, 'call_register_no_elim_operand': 2, 'index_register_operand_1': 6, 'index_register_operand': 6, 'const8_operand': 2, 'const128_operand': 2, 'const248_operand': 2, 'const_0_to_3_operand': 2, 'const_0_to_7_operand': 2, 'const_0_to_15_operand': 2, 'const_0_to_31_operand': 2, 'const_0_to_63_operand': 2, 'const_0_to_255_operand': 2, 'const_0_to_255_mul_8_operand': 2, 'const_1_to_31_operand': 2, 'const_1_to_63_operand': 2, 'const_2_to_3_operand': 2, 'const_4_to_5_operand': 2, 'const_4_to_7_operand': 2, 'const_6_to_7_operand': 2, 'const_8_to_11_operand': 2, 'const_12_to_15_operand': 2, 'const_pow2_1_to_2_operand': 2, 'const_pow2_1_to_8_operand': 2, 'const_pow2_1_to_128_operand': 2, 'const_pow2_1_to_32768_operand': 2, 'zero_extended_scalar_load_operand_1': 5, 'zero_extended_scalar_load_operand': 5, 'vector_all_ones_operand_1': 3, 'vector_all_ones_operand': 3, 'aligned_operand_1': 22, 'aligned_operand': 22, 'memory_displacement_operand_1': 2, 'memory_displacement_operand': 1, 'memory_displacement_only_operand_1': 5, 'memory_displacement_only_operand': 4, 'cmpxchg8b_pic_memory_operand_1': 7, 'cmpxchg8b_pic_memory_operand': 6, 'fcmov_comparison_operator_1': 2, 'fcmov_comparison_operator': 2, 'ix86_comparison_operator_1': 2, 'ix86_comparison_operator': 2, 'ix86_carry_flag_operator_1': 2, 'ix86_carry_flag_operator': 3, 'misaligned_operand': 2, 'emms_operation_1': 10, 'emms_operation': 12, 'vzeroall_operation_1': 6, 'vzeroall_operation': 8, 'vzeroupper_operation_1': 4, 'vzeroupper_operation': 5, 'avx_vbroadcast_operand_1': 2, 'avx_vbroadcast_operand': 4, 'satisfies_constraint_I': 2, 'satisfies_constraint_J': 2, 'satisfies_constraint_K': 2, 'satisfies_constraint_L': 2, 'satisfies_constraint_M': 2, 'satisfies_constraint_N': 2, 'satisfies_constraint_O': 2, 'constraint_satisfied_p': 8}, "PosixPath('602/c-dump.bc')": {'dump_stmt': 4, 'c_dump_tree': 2}, "PosixPath('602/rtl.bc')": {'rtx_equal_p_cb': 48, 'shallow_copy_rtvec': 4, 'rtx_size': 2, 'rtx_alloc_stat': 1, 'shared_const_p': 6, 'shallow_copy_rtx_stat': 2, 'copy_rtx': 10, 'rtx_equal_p': 20}, "PosixPath('602/loop-iv.bc')": {'iv_neg': 22, 'iv_analyze_biv': 172, 'iv_subreg': 50, 'iv_number_of_iterations': 877, 'dump_iv_info': 20, 'check_iv_ref_table_size': 1, 'clear_iv_info': 4, 'iv_analysis_loop_init': 1, 'get_iv_value': 19, 'simple_reg_p': 1, 'iv_get_reaching_def': 32, 'iv_constant': 26, 'df_rd_get_bb_info': 2, 'latch_dominating_def': 17, 'get_biv_step_1': 27, 'get_biv_step': 2, 'record_biv': 3, 'iv_extend': 21, 'iv_add': 122, 'iv_mult': 8, 'iv_shift': 8, 'iv_analyze_expr': 942, 'iv_analyze_op': 89, 'iv_analyze_def': 14, 'iv_analyze': 2, 'biv_p': 7, 'canon_condition': 12, 'implies_p': 66, 'altered_reg_used': 2, 'simplify_using_condition': 9, 'ei_end_p': 1, 'ei_cond': 3, 'shorten_into_mode': 15, 'canonicalize_iv_subregs': 157, 'simple_rhs_p': 18, 'suitable_set_for_replacement': 20, 'replace_single_def_regs': 11, 'single_pred_edge': 1, 'mark_altered': 2, 'simplify_using_initial_values': 148, 'determine_max_iter': 46, 'check_simple_exit': 857, 'ei_next': 4, 'find_simple_exit': 1070, 'get_simple_loop_desc': 24}, "PosixPath('602/xcoffout.bc')": {}, "PosixPath('602/graphite-scop-detection.bc')": {}, "PosixPath('602/tree-ssa-phiopt.bc')": {'gsi_start': 8, 'single_pred_edge': 1, 'blocks_in_phiopt_order': 50, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gsi_after_labels': 41, 'gsi_next_nondebug': 4, 'empty_block_p': 5, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_lhs': 1, 'add_or_mark_expr': 21, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'nt_init_block': 41, 'name_to_bb_eq': 4, 'get_non_trapping': 28, 'get_var_ann': 2, 'gimple_set_op': 4, 'gimple_assign_set_lhs': 3, 'gsi_last_bb': 6, 'cond_store_replacement': 69, 'phi_nodes': 2, 'gimple_seq_singleton_p': 2, 'gimple_cond_lhs': 1, 'gimple_cond_rhs': 1, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'replace_phi_edge_with_variable': 106, 'conditional_replacement': 29, 'single_succ_edge': 1, 'value_replacement': 82, 'abs_replacement': 189, 'gsi_prev_nondebug': 4, 'gsi_last_nondebug_bb': 30, 'minmax_replacement': 266, 'tree_ssa_phiopt_worker': 65}, "PosixPath('602/omp-low.bc')": {'expand_omp_sections': 183, 'extract_omp_for_data': 214, 'gsi_start': 8, 'scan_omp_task': 92, 'new_omp_context': 57, 'create_omp_child_function': 53, 'create_task_copyfn': 245, 'lower_rec_input_clauses': 158, 'lower_omp_single_copy': 61, 'find_omp_clause': 2, 'copy_var_decl': 12, 'dump_omp_region': 5, 'new_omp_region': 11, 'omp_reduction_init': 208, 'bb_seq': 2, 'gsi_last_bb': 6, 'gsi_stmt': 1, 'build_omp_regions_1': 13, 'ei_end_p': 1, 'ei_cond': 3, 'gimple_omp_subcode': 1, 'ei_next': 4, 'remove_exit_barrier': 29, 'remove_exit_barriers': 34, 'single_succ_edge': 1, 'gimple_omp_for_index': 2, 'gimple_omp_for_initial': 2, 'gimple_omp_for_cond': 2, 'gimple_omp_for_final': 2, 'gimple_omp_for_incr': 2, 'workshare_safe_to_combine_p': 9, 'get_ws_args_for': 8, 'determine_parallel_type': 21, 'gsi_start_bb': 6, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_lhs': 1, 'gimple_set_op': 4, 'gimple_assign_set_rhs1': 3, 'list2chain': 4, 'gimple_call_fn': 1, 'gimple_call_fndecl': 4, 'gimple_call_set_fndecl': 3, 'optimize_omp_library_calls': 103, 'gimple_build_cond_empty': 3, 'expand_parallel_call': 135, 'expand_task_call': 54, 'expand_omp_taskreg': 458, 'expand_omp_for_static_nochunk': 83, 'single_pred_edge': 1, 'gimple_phi_arg_location_from_edge': 2, 'expand_omp_for_static_chunk': 121, 'phi_nodes': 2, 'delink_imm_use': 3, 'link_imm_use_to_list': 3, 'link_imm_use': 5, 'set_ssa_use_from_ptr': 9, 'expand_omp_for_generic': 295, 'expand_omp_for': 323, 'gimple_call_set_lhs': 3, 'VEC_tree_base_quick_push': 2, 'expand_omp_single': 45, 'expand_omp_synch': 26, 'gsi_after_labels': 41, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'expand_omp_atomic_fetch_op': 82, 'expand_omp_atomic_pipeline': 92, 'expand_omp_atomic_mutex': 21, 'expand_omp_atomic': 343, 'expand_omp': 1072, 'gimple_cond_true_label': 1, 'gimple_cond_false_label': 1, 'gimple_goto_dest': 1, 'gimple_switch_label': 3, 'diagnose_sb_2': 30, 'gimple_label_label': 1, 'diagnose_sb_1': 3, 'diagnose_omp_structured_block_errors': 4, 'scan_omp_1_op': 1, 'check_omp_nesting_restrictions': 17, 'is_global_var': 2, 'omp_copy_decl': 5, 'create_omp_child_function_name': 17, 'omp_copy_decl_2': 3, 'omp_copy_decl_1': 5, 'install_var_local': 4, 'use_pointer_for_field': 16, 'install_var_field': 25, 'scan_omp_op': 4, 'fixup_remapped_decl': 16, 'fixup_child_record_type': 5, 'gimple_omp_for_index_ptr': 2, 'gimple_omp_for_initial_ptr': 2, 'gimple_omp_for_final_ptr': 2, 'gimple_omp_for_incr_ptr': 2, 'scan_omp': 7, 'scan_sharing_clauses': 198, 'scan_omp_parallel': 54, 'scan_omp_for': 147, 'scan_omp_sections': 14, 'scan_omp_single': 30, 'scan_omp_1_stmt': 576, 'gimple_op_ptr': 1, 'gimple_cond_lhs_ptr': 1, 'gimple_cond_rhs_ptr': 1, 'task_copyfn_remap_type': 2, 'build_outer_var_ref': 6, 'lookup_decl_in_outer_ctx': 4, 'lookup_sfield': 2, 'build_sender_ref': 2, 'lower_send_clauses': 14, 'lower_send_shared_vars': 6, 'maybe_catch_exception': 8, 'check_combined_parallel': 1, 'lower_copyprivate_clauses': 6, 'lower_omp_single_simple': 3, 'lower_omp_regimplify_p': 6, 'lower_lastprivate_clauses': 30, 'lower_reduction_clauses': 26, 'lower_omp_critical': 46, 'lower_omp': 723, 'finalize_task_copyfn': 14, 'delete_omp_context': 54, 'execute_lower_omp': 16}, "PosixPath('602/c-gimplify.bc')": {'c_genericize': 4, 'VEC_gimple_base_iterate': 2, 'add_block_to_enclosing': 1, 'c_build_bind_expr': 5, 'c_gimplify_expr': 9}, "PosixPath('602/tree.bc')": {'decl_value_expr_insert': 5, 'build_int_cst_wide': 29, 'build_int_cst_wide_type': 2, 'build_fn_decl': 22, 'build_type_attribute_qual_variant': 45, 'free_lang_data': 315, 'decl_debug_expr_insert': 5, 'build_index_type': 29, 'build_function_type': 20, 'tree_code_size': 3, 'make_node_stat': 79, 'initialize_tree_contains_struct': 795, 'cl_option_hash_hash': 2, 'int_cst_hash_eq': 8, 'int_cst_hash_hash': 6, 'is_attribute_with_length_p': 10, 'lookup_attribute': 1, 'init_const_call_expr_arg_iterator': 3, 'next_const_call_expr_arg': 4, 'first_const_call_expr_arg': 6, 'simple_cst_equal': 47, 'attribute_list_contained': 13, 'type_list_equal': 8, 'tree_int_cst_equal': 8, 'type_hash_eq': 47, 'init_ttree': 704, 'decl_assembler_name': 4, 'decl_assembler_name_equal': 8, 'decl_assembler_name_hash': 1, 'tree_size': 6, 'decl_value_expr_lookup': 2, 'decl_init_priority_lookup': 2, 'decl_priority_info': 5, 'copy_node_stat': 70, 'make_tree_vec_stat': 3, 'build_int_cst_type': 1, 'build_low_bits_mask': 3, 'cst_and_fits_in_hwi': 4, 'build_vector': 8, 'tree_cons_stat': 9, 'nreverse': 1, 'build_vector_from_ctor': 14, 'build_constructor': 2, 'build_constructor_single': 10, 'build_constructor_from_list': 12, 'build_fixed': 2, 'build_real': 7, 'real_value_from_int_cst': 11, 'build_real_from_int_cst': 15, 'build_string': 5, 'type_hash_lookup': 3, 'type_hash_add': 3, 'type_hash_canon': 3, 'build_decl_stat': 4, 'check_qualified_type': 15, 'get_qualified_type': 4, 'build_distinct_type_copy': 7, 'build_variant_type_copy': 11, 'set_type_quals': 3, 'build_qualified_type': 24, 'build_complex_type': 49, 'build_complex': 10, 'build_one_cst': 47, 'VEC_tree_base_embedded_init': 2, 'make_tree_binfo_stat': 5, 'tree_nop_conversion': 11, 'tree_strip_nop_conversions': 20, 'integer_zerop': 5, 'integer_onep': 5, 'integer_all_onesp': 16, 'integer_pow2p': 8, 'integer_nonzerop': 5, 'fixed_zerop': 4, 'tree_log2': 4, 'tree_floor_log2': 8, 'real_zerop': 7, 'real_onep': 7, 'real_twop': 7, 'real_minus_onep': 7, 'really_constant_p': 2, 'value_member': 2, 'purpose_member': 2, 'fields_length': 2, 'first_field': 2, 'build_tree_list_stat': 2, 'VEC_tree_base_iterate': 2, 'build_tree_list_vec_stat': 12, 'ctor_to_list': 15, 'VEC_tree_base_quick_push': 2, 'ctor_to_vec': 4, 'int_size_in_bytes': 4, 'host_integerp': 9, 'max_int_size_in_bytes': 6, 'tree_expr_size': 6, 'bit_position': 2, 'int_bit_position': 2, 'byte_position': 2, 'int_byte_position': 2, 'expr_align': 7, 'array_type_nelts': 3, 'staticp': 16, 'get_containing_scope': 2, 'decl_function_context': 7, 'decl_address_invariant_p': 19, 'decl_address_ip_invariant_p': 10, 'skip_simple_arithmetic': 5, 'tree_invariant_p_1': 8, 'contains_placeholder_p': 25, 'recompute_tree_invariant_for_addr_expr': 110, 'build1_stat': 17, 'save_expr': 5, 'type_contains_placeholder_p': 49, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_heap_safe_push': 5, 'push_without_duplicates': 6, 'tree_operand_length': 3, 'find_placeholder_in_expr': 18, 'build4_stat': 13, 'process_call_operands': 9, 'substitute_in_expr': 83, 'substitute_placeholder_in_expr': 103, 'build_nt': 11, 'stabilize_reference_1': 6, 'stabilize_reference': 12, 'build2_stat': 15, 'build3_stat': 13, 'build5_stat': 14, 'build6_stat': 16, 'build_vl_exp_stat': 1, 'build_nt_call_list': 4, 'build_nt_call_vec': 6, 'build_block': 7, 'expand_location': 31, 'type_hash_list': 4, 'build_type_attribute_variant': 2, 'need_assembler_name_p': 7, 'assign_assembler_name_if_neeeded': 18, 'remove_attribute': 8, 'merge_attributes': 5, 'decl_fini_priority_lookup': 2, 'decl_debug_expr_lookup': 2, 'type_num_arguments': 2, 'tree_int_cst_sgn': 7, 'tree_int_cst_lt': 38, 'tree_int_cst_msb': 16, 'tree_int_cst_min_precision': 9, 'compare_tree_int': 14, 'iterative_hash_expr': 48, 'build_pointer_type_for_mode': 20, 'build_reference_type_for_mode': 20, 'build_type_no_quals': 8, 'build_nonstandard_integer_type': 2, 'build_range_type': 20, 'subrange_type_for_debug_p': 98, 'build_array_type': 7, 'maybe_canonicalize_argtypes': 21, 'build_function_type_skip_args': 33, 'build_function_type_list_1': 19, 'build_method_type_directly': 51, 'build_method_type': 4, 'build_offset_type': 6, 'excess_precision_type': 24, 'int_fits_type_p': 88, 'get_unwidened': 16, 'get_narrower': 25, 'get_type_static_bounds': 9, 'auto_var_in_fn_p': 2, 'walk_tree_1': 23, 'walk_type_fields': 7, 'variably_modified_type_p': 186, 'decl_type_context': 3, 'get_callee_fndecl': 5, 'crc32_string': 2, 'clean_symbol_name': 2, 'get_file_function_name': 66, 'build_common_tree_nodes': 6, 'build_common_tree_nodes_2': 29, 'local_define_builtin': 14, 'build_common_builtin_nodes': 364, 'reconstruct_complex_type': 16, 'make_vector_type': 18, 'build_vector_type_for_mode': 5, 'build_opaque_vector_type': 6, 'initializer_zerop': 8, 'build_omp_clause': 6, 'build_call_list': 4, 'build_call_valist': 10, 'build_call_array_loc': 5, 'build_call_vec': 7, 'range_in_array_bounds_p': 2, 'is_global_var': 2, 'needs_to_live_in_memory': 4, 'find_compatible_field': 4, 'int_cst_value': 4, 'widest_int_cst_value': 4, 'signed_or_unsigned_type_for': 4, 'upper_bound_in_type': 4, 'lower_bound_in_type': 4, 'num_ending_zeros': 4, 'call_expr_arglist': 11, 'create_artificial_label': 18, 'function_args_iter_init': 2, 'function_args_iter_next': 1, 'stdarg_p': 2, 'block_nonartificial_location': 11, 'tree_nonartificial_location': 3, 'block_ultimate_origin': 5, 'list_equal_p': 4, 'tree_sign_nop_conversion': 14, 'tree_strip_sign_nop_conversions': 29, 'gt_ggc_m_P9type_hash4htab': 5, 'gt_pch_p_P9type_hash4htab': 5, 'gt_pch_n_P9type_hash4htab': 5, 'VEC_tree_base_pop': 2, 'add_tree_to_fld_list': 8, 'fld_worklist_push': 4, 'find_decls_types_r': 336, 'find_decls_types': 7, 'get_eh_types_for_runtime': 4, 'find_decls_types_in_eh_region': 3, 'ehr_next': 6, 'gsi_stmt': 1, 'bb_seq': 2, 'gsi_start_bb': 6, 'gimple_ops': 1, 'gimple_op': 1, 'find_decls_types_in_node': 52, 'free_lang_data_in_block': 3, 'free_lang_data_in_decl': 48, 'free_lang_data_in_binfo': 7, 'free_lang_data_in_type': 40, 'free_lang_data_in_cgraph': 288}, "PosixPath('602/c-aux-info.bc')": {'deserves_ellipsis': 3, 'affix_data_type': 10, 'gen_decl': 6, 'gen_type': 54, 'gen_formal_list_for_func_def': 6, 'gen_aux_info_record': 4}, "PosixPath('602/ggc-common.bc')": {'VEC_const_ggc_root_tab_t_base_space': 2, 'VEC_const_ggc_root_tab_t_heap_reserve': 2, 'VEC_const_ggc_root_tab_t_base_quick_push': 2, 'VEC_const_ggc_root_tab_t_heap_safe_push': 4, 'ggc_register_root_tab': 4, 'VEC_const_ggc_cache_tab_t_base_space': 2, 'VEC_const_ggc_cache_tab_t_heap_reserve': 2, 'VEC_const_ggc_cache_tab_t_base_quick_push': 2, 'VEC_const_ggc_cache_tab_t_heap_safe_push': 4, 'ggc_register_cache_tab': 4, 'VEC_const_ggc_root_tab_t_base_iterate': 2, 'VEC_const_ggc_cache_tab_t_base_iterate': 2, 'ggc_mark_roots': 97, 'gt_pch_note_object': 4, 'write_pch_globals': 44, 'call_alloc': 9, 'call_count': 7, 'gt_pch_save': 221, 'gt_pch_restore': 97}, "PosixPath('602/ebitmap.bc')": {'ebitmap_bit_p': 9, 'sbitmap_iter_init': 16, 'ebitmap_iter_init': 84, 'sbitmap_iter_next': 3, 'sbitmap_iter_cond': 39, 'ebitmap_iter_cond': 83, 'ebitmap_iter_next': 3, 'ebitmap_last_set_bit': 10, 'ebitmap_array_clear': 2, 'ebitmap_clear': 10, 'ebitmap_array_init': 5, 'ebitmap_alloc': 10, 'ebitmap_clear_bit': 37, 'ebitmap_array_grow': 3, 'ebitmap_array_grow_get': 4, 'ebitmap_array_get': 2, 'ebitmap_array_maybe_grow': 2, 'ebitmap_set_bit': 37, 'ebitmap_copy': 15, 'ebitmap_and_into': 21, 'ebitmap_and': 40, 'ebitmap_ior_into': 45, 'ebitmap_ior': 39, 'ebitmap_and_compl_into': 26, 'ebitmap_and_compl': 33, 'ebitmap_equal_p': 15}, "PosixPath('602/c-format.bc')": {'init_dynamic_diag_info': 109, 'check_format_info_main': 2792, 'get_constant': 4, 'check_format_string': 6, 'handle_format_arg_attribute': 14, 'cmp_attribs': 2, 'convert_format_name_to_system_name': 3, 'decode_format_type': 8, 'decode_format_attr': 8, 'init_dollar_format_checking': 9, 'finish_dollar_format_checking': 13, 'maybe_read_dollar_number': 63, 'avoid_dollar_number': 3, 'get_flag_spec': 3, 'format_type_warning': 7, 'check_format_types': 108, 'check_format_arg': 34, 'check_format_info': 80, 'check_function_format': 253, 'init_dynamic_asm_fprintf_info': 6, 'init_dynamic_gfc_info': 9, 'handle_format_attribute': 143}, "PosixPath('602/graphds.bc')": {'dump_graph': 8, 'add_edge': 11, 'identify_vertices': 17, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 2, 'VEC_int_base_quick_push': 2, 'VEC_int_heap_safe_push': 5, 'graphds_dfs': 39, 'graphds_scc': 17, 'for_each_edge': 4, 'free_graph': 6, 'tree_nca': 1, 'graphds_domtree': 32}, "PosixPath('602/sched-rgn.bc')": {'sd_iterator_cond': 7, 'schedule_region': 164, 'haifa_find_rgns': 720, 'compute_trg_info': 293, 'sbitmap_iter_init': 16, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'dump_region_dot': 26, 'too_large': 3, 'extend_rgns': 271, 'debug_candidate': 4, 'contributes_to_priority': 1, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'deps_join': 130, 'recog_memoized': 3, 'sd_iterator_start': 7, 'debug_dependencies': 97, 'debug_rgn_dependencies': 23, 'sched_is_disabled_for_current_region_p': 4, 'free_rgn_deps': 37, 'compute_priorities': 56, 'single_pred_edge': 1, 'is_cfg_nonregular': 45, 'find_single_block_region': 124, 'single_succ_edge': 1, 'find_rgns': 694, 'sched_rgn_init': 1020, 'sets_likely_spilled_1': 2, 'add_branch_dependences': 32, 'propagate_deps': 68, 'compute_block_dependences': 218, 'sched_rgn_compute_dependencies': 236, 'compute_dom_prob_ps': 112, 'sched_rgn_local_init': 242, 'rgn_estimate_number_of_insns': 13, 'rgn_make_new_region_out_of_new_block': 7, 'rgn_add_block': 29, 'rgn_fix_recovery_cfg': 9, 'advance_target_bb': 4, 'check_live_1': 18, 'check_live': 3, 'update_live_1': 12, 'update_live': 3, 'set_spec_fed': 27, 'begin_schedule_ready': 82, 'rgn_add_remove_insn': 5, 'rgn_insn_finishes_block_p': 8, 'rgn_print_insn': 6, 'rgn_rank': 16, 'is_pfree': 137, 'find_conditional_protection': 106, 'is_conditionally_protected': 165, 'is_exception_free': 122, 'new_ready': 36, 'can_schedule_ready_p': 5, 'sbitmap_iter_cond': 39, 'sbitmap_iter_next': 3, 'extract_edgelst': 18, 'split_edges': 17, 'init_ready_list': 376, 'free_block_dependencies': 19, 'schedule_insns': 193}, "PosixPath('602/loop-unroll.bc')": {'decide_unrolling_and_peeling': 244, 'unroll_loop_constant_iterations': 74, 'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 40, 'decide_peel_once_rolling': 17, 'decide_peel_completely': 21, 'analyze_iv_to_split_insn': 24, 'referenced_in_one_insn_in_loop_p': 4, 'reset_debug_uses_in_loop': 4, 'analyze_insn_to_expand_var': 26, 'analyze_insns_in_loop': 101, 'get_ivts_expr': 6, 'allocate_basic_variable': 14, 'insert_base_initialization': 11, 'split_iv': 16, 'get_expansion': 6, 'VEC_rtx_base_space': 2, 'VEC_rtx_heap_reserve': 2, 'VEC_rtx_base_quick_push': 2, 'VEC_rtx_heap_safe_push': 5, 'expand_var_during_unrolling': 17, 'VEC_rtx_base_iterate': 2, 'insert_var_expansion_initialization': 22, 'combine_var_copies_in_loop_exit': 13, 'apply_opt_in_copies': 253, 'free_opt_info': 10, 'VEC_edge_base_iterate': 2, 'peel_loop_completely': 28, 'peel_loops_completely': 150, 'loop_exit_at_end_p': 4, 'decide_unroll_constant_iterations': 29, 'decide_unroll_runtime_iterations': 22, 'decide_unroll_stupid': 19, 'decide_peel_simple': 17, 'peel_loop_simple': 8, 'SET_BIT': 4, 'VEC_basic_block_base_iterate': 2, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_heap_reserve': 2, 'VEC_basic_block_base_quick_push': 2, 'VEC_basic_block_heap_safe_push': 5, 'single_pred_edge': 1, 'single_succ_edge': 1, 'unroll_loop_runtime_iterations': 55, 'unroll_loop_stupid': 1, 'unroll_and_peel_loops': 574}, "PosixPath('602/cfgloopmanip.bc')": {'duplicate_loop_to_header_edge': 116, 'set_zero_probability': 21, 'single_pred_edge': 1, 'loop_outer': 2, 'single_succ_edge': 1, 'VEC_edge_base_iterate': 2, 'fix_loop_placement': 15, 'ei_end_p': 1, 'ei_cond': 3, 'ei_next': 4, 'fix_bb_placement': 16, 'fix_bb_placements': 61, 'unloop': 23, 'find_path': 1, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_heap_reserve': 2, 'VEC_basic_block_base_quick_push': 2, 'VEC_basic_block_heap_safe_push': 5, 'fix_loop_placements': 4, 'remove_path': 195, 'VEC_loop_p_base_space': 2, 'VEC_loop_p_gc_reserve': 2, 'VEC_loop_p_base_quick_push': 2, 'VEC_loop_p_gc_safe_push': 5, 'place_new_loop': 9, 'add_loop': 9, 'bb_seq': 2, 'gsi_last_bb': 6, 'create_empty_if_region_on_edge': 14, 'update_dominators_in_loop': 13, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_cond_lhs': 1, 'gimple_set_op': 4, 'gimple_cond_set_lhs': 3, 'create_empty_loop_on_edge': 26, 'loopify': 28, 'VEC_edge_base_space': 2, 'VEC_edge_heap_reserve': 2, 'VEC_edge_base_quick_push': 2, 'VEC_edge_heap_safe_push': 5, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'VEC_basic_block_base_iterate': 2, 'has_preds_from_loop': 4, 'create_preheader': 35, 'VEC_int_base_quick_push': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 52, 'create_preheaders': 25, 'force_single_succ_latches': 45, 'lv_adjust_loop_entry_edge': 6, 'loop_version': 15, 'fix_loop_structure': 224}, "PosixPath('602/store-motion.bc')": {'remove_reachable_equiv_notes': 87, 'st_expr_entry': 21, 'extract_mentioned_regs': 1, 'store_ops_ok': 2, 'find_loads': 5, 'store_killed_in_pat': 4, 'store_killed_in_insn': 13, 'store_killed_before': 2, 'store_killed_after': 2, 'find_moveable_store': 30, 'enumerate_store_motion_mems': 3, 'pre_st_expr_hash': 2, 'compute_store_table': 335, 'ei_end_p': 1, 'ei_next': 4, 'replace_store_insn': 91, 'build_store_vectors': 196, 'delete_store': 6, 'ei_cond': 3, 'insert_insn_start_basic_block': 9, 'insert_store': 48, 'free_store_motion_mems': 1, 'free_store_memory': 5, 'one_store_motion_pass': 928, 'execute_rtl_store_motion': 926}, "PosixPath('602/xstrerror.bc')": {}, "PosixPath('602/strsignal.bc')": {'init_signal_tables': 25}, "PosixPath('602/dwarf2out.bc')": {'compute_barrier_args_size': 57, 'loc_list_from_tree': 828, 'loc_descriptor': 425, 'mem_loc_descriptor': 1745, 'address_of_int_loc_descriptor': 48, 'add_const_value_attribute': 276, 'expand_builtin_init_dwarf_reg_sizes': 14, 'get_cfa_from_loc_descr': 25, 'lookup_cfa_1': 35, 'lookup_cfa': 24, 'cfa_equal_p': 14, 'new_cfi': 4, 'new_loc_descr': 11, 'new_reg_loc_descr': 22, 'build_cfa_loc': 98, 'size_of_loc_descr': 10, 'output_loc_operands_raw': 12, 'output_loc_sequence_raw': 13, 'output_cfa_loc_raw': 17, 'output_cfi_directive': 39, 'add_fde_cfi': 31, 'def_cfa_1': 184, 'dwarf2out_def_cfa': 7, 'dwarf2out_window_save': 7, 'int_loc_descriptor': 11, 'loc_descr_plus_const': 28, 'build_cfa_aligned_loc': 57, 'reg_save': 96, 'dwarf2out_reg_save_reg': 11, 'flush_queued_reg_saves': 39, 'clobbers_queued_reg_save': 8, 'dwarf2out_args_size': 10, 'VEC_rtx_base_quick_push': 2, 'VEC_rtx_base_pop': 2, 'stack_adjust_offset': 19, 'VEC_rtx_base_space': 2, 'VEC_rtx_heap_reserve': 2, 'VEC_rtx_heap_safe_push': 5, 'compute_barrier_args_size_1': 25, 'dwarf2out_notice_stack_adjust': 23, 'dwarf2out_frame_debug_def_cfa': 6, 'dwarf2out_frame_debug_adjust_cfa': 14, 'dwarf2out_frame_debug_cfa_offset': 20, 'dwarf2out_frame_debug_cfa_register': 4, 'dwarf2out_frame_debug_cfa_restore': 8, 'reg_saved_in': 12, 'queue_reg_save': 11, 'dwarf2out_frame_debug_expr': 452, 'dwarf2out_frame_debug': 151, 'dwarf2out_begin_epilogue': 11, 'dwarf2out_frame_debug_restore_state': 4, 'lookup_filename': 2, 'maybe_emit_file': 4, 'dwarf2out_do_cfi_startproc': 2, 'dwarf2out_begin_prologue': 83, 'initial_return_save': 28, 'dwarf2out_frame_init': 47, 'output_loc_operands': 39, 'output_loc_sequence': 43, 'output_cfa_loc': 3, 'output_cfi': 18, 'VEC_dw_cfi_ref_base_space': 2, 'VEC_dw_cfi_ref_heap_reserve_exact': 2, 'VEC_dw_cfi_ref_heap_safe_grow': 3, 'VEC_dw_cfi_ref_heap_safe_grow_cleared': 3, 'output_cfis': 53, 'output_fde': 31, 'output_call_frame_info': 89, 'dwarf2out_switch_text_section': 30, 'AT_loc_list': 2, 'AT_int': 2, 'AT_unsigned': 2, 'AT_flag': 2, 'AT_ref': 2, 'AT_lbl': 2, 'AT_string': 2, 'AT_file': 2, 'print_die': 44, 'get_AT': 14, 'get_AT_unsigned': 2, 'is_fortran': 2, 'is_cxx': 2, 'decl_ultimate_origin': 10, 'class_or_namespace_scope_p': 1, 'local_scope_p': 2, 'add_child_die': 4, 'new_die': 5, 'decl_class_context': 4, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 5, 'push_decl_scope': 4, 'member_declared_type': 2, 'find_AT_string': 1, 'VEC_dw_attr_node_base_space': 2, 'VEC_dw_attr_node_gc_reserve': 2, 'VEC_dw_attr_node_base_quick_push': 3, 'VEC_dw_attr_node_gc_safe_push': 6, 'add_dwarf_attr': 6, 'add_AT_string': 9, 'add_name_attribute': 9, 'add_AT_file': 9, 'add_AT_unsigned': 9, 'add_src_coords_attributes': 21, 'add_name_and_src_coords_attributes': 13, 'add_AT_die_ref': 13, 'field_type': 4, 'simple_type_size_in_bits': 2, 'add_byte_size_attribute': 14, 'add_bit_size_attribute': 13, 'simple_type_align_in_bits': 2, 'simple_decl_align_in_bits': 2, 'field_byte_offset': 15, 'add_bit_offset_attribute': 13, 'add_AT_int': 9, 'add_AT_loc': 9, 'add_data_member_location_attribute': 196, 'add_AT_flag': 19, 'equate_decl_number_to_die': 1, 'fortran_common': 40, 'add_loc_descr_to_each': 2, 'add_loc_list': 4, 'based_loc_descr': 62, 'const_ok_for_output_1': 11, 'const_ok_for_output': 2, 'VEC_rtx_gc_reserve': 2, 'VEC_rtx_gc_safe_push': 4, 'is_based_loc': 6, 'resolve_one_addr': 10, 'is_pseudo_reg': 3, 'reference_to_unused': 7, 'rtl_for_decl_init': 29, 'rtl_for_decl_location': 80, 'secname_for_decl': 7, 'one_reg_loc_descriptor': 58, 'add_loc_descr_op_piece': 8, 'multiple_reg_loc_descriptor': 60, 'reg_loc_descriptor': 61, 'insert_float': 14, 'new_loc_list': 7, 'gen_internal_sym': 1, 'gen_llsym': 3, 'dw_loc_list': 83, 'dw_loc_list_1': 38, 'cst_pool_loc_descr': 5, 'tls_mem_loc_descriptor': 15, 'loc_descriptor_from_tree': 2, 'loc_list_for_address_of_addr_expr_of_indirect_ref': 95, 'single_element_loc_list_p': 4, 'add_AT_loc_list': 9, 'add_AT_location_description': 18, 'VEC_dw_attr_node_base_ordered_remove': 2, 'remove_AT': 8, 'VEC_pubname_entry_base_space': 2, 'VEC_pubname_entry_gc_reserve': 2, 'VEC_pubname_entry_base_quick_push': 3, 'VEC_pubname_entry_gc_safe_push': 6, 'add_pubname_string': 6, 'get_AT_flag': 2, 'add_AT_specification': 13, 'get_AT_file': 2, 'decl_by_reference_p': 2, 'VEC_deferred_locations_base_space': 2, 'VEC_deferred_locations_gc_reserve': 2, 'VEC_deferred_locations_base_quick_push': 3, 'VEC_deferred_locations_gc_safe_push': 6, 'defer_location': 6, 'add_AT_vec': 18, 'add_AT_double': 13, 'native_encode_initializer': 30, 'tree_add_const_value_attribute': 21, 'tree_add_const_value_attribute_for_decl': 2, 'add_location_or_const_value_attribute': 7, 'common_block_die_table_eq': 4, 'common_block_die_table_hash': 3, 'VEC_tree_base_pop': 2, 'remove_child_with_prev': 6, 'remove_child_TAG': 1, 'add_prototyped_attribute': 22, 'add_pure_or_virtual_attribute': 48, 'add_AT_lbl_id': 9, 'add_arange': 6, 'convert_cfa_to_fb_loc_list': 374, 'compute_frame_pointer_to_fb_displacement': 4, 'VEC_die_arg_entry_base_space': 2, 'VEC_die_arg_entry_gc_reserve': 2, 'VEC_die_arg_entry_base_quick_push': 3, 'VEC_die_arg_entry_gc_safe_push': 6, 'append_entry_to_tmpl_value_parm_die_table': 6, 'gen_unspecified_parameters_die': 5, 'is_redundant_typedef': 25, 'get_AT_string': 2, 'add_pubtype': 26, 'base_type_die': 37, 'dwarf2out_ignore_block': 36, 'add_ranges_num': 1, 'add_AT_range_list': 9, 'add_high_low_attributes': 44, 'add_call_src_coords_attributes': 21, 'add_calling_convention_attribute': 11, 'scope_die_for': 16, 'type_tag': 5, 'descr_info_loc': 124, 'add_descr_info_field': 18, 'lower_bound_default': 4, 'is_ada': 2, 'gen_enumeration_type_die': 50, 'VEC_tree_base_iterate': 2, 'get_AT_ref': 2, 'splice_child_die': 6, 'get_context_die': 2, 'force_type_die': 8, 'modified_type_die': 64, 'gen_type_die_with_usage': 90, 'gen_struct_or_union_type_die': 130, 'gen_array_type_die': 127, 'gen_subroutine_type_die': 38, 'gen_ptr_to_mbr_type_die': 21, 'gen_decl_die': 180, 'declare_in_namespace': 4, 'setup_namespace_context': 2, 'force_decl_die': 10, 'gen_subprogram_die': 949, 'decls_for_scope': 9, 'gen_block_die': 65, 'process_scope_var': 30, 'dwarf2out_imported_module_or_decl_1': 88, 'gen_typedef_die': 33, 'gen_formal_types_die': 34, 'gen_formal_parameter_die': 64, 'dwarf2out_abstract_function': 2, 'dwarf2out_decl': 17, 'gen_type_die_for_member': 16, 'gen_variable_die': 384, 'add_abstract_origin_attribute': 18, 'gen_field_die': 93, 'gen_generic_params_dies': 13, 'generic_parameter_die': 45, 'subrange_type_die': 14, 'add_bound_info': 120, 'add_type_attribute': 20, 'gt_ggc_mx_die_struct': 25, 'gt_ggc_mx_VEC_dw_attr_node_gc': 9, 'gt_ggc_mx_dw_loc_list_struct': 2, 'gt_ggc_mx_dw_loc_descr_struct': 107, 'gt_ggc_mx_comdat_type_struct': 4, 'gt_ggc_mx_VEC_dcall_entry_gc': 2, 'gt_ggc_mx_var_loc_node': 4, 'gt_ggc_mx_VEC_die_arg_entry_gc': 2, 'gt_ggc_mx_limbo_die_struct': 4, 'gt_ggc_mx_VEC_pubname_entry_gc': 2, 'gt_ggc_mx_VEC_deferred_locations_gc': 2, 'gt_ggc_mx_queued_reg_save': 4, 'gt_ggc_mx_dw_cfi_struct': 7, 'gt_ggc_mx_dw_fde_struct': 3, 'gt_ggc_m_P10vcall_insn4htab': 5, 'gt_ggc_m_P16var_loc_list_def4htab': 5, 'gt_ggc_m_P10die_struct4htab': 5, 'gt_ggc_m_P15dwarf_file_data4htab': 5, 'gt_ggc_m_P20indirect_string_node4htab': 5, 'gt_pch_p_19dw_loc_descr_struct': 7, 'gt_pch_p_19VEC_dw_attr_node_gc': 2, 'gt_pch_nx_die_struct': 24, 'gt_pch_nx_VEC_dw_attr_node_gc': 9, 'gt_pch_nx_dw_loc_list_struct': 2, 'gt_pch_nx_dw_loc_descr_struct': 107, 'gt_pch_nx_comdat_type_struct': 4, 'gt_pch_nx_VEC_dcall_entry_gc': 2, 'gt_pch_nx_var_loc_node': 4, 'gt_pch_nx_VEC_die_arg_entry_gc': 2, 'gt_pch_nx_limbo_die_struct': 4, 'gt_pch_nx_VEC_pubname_entry_gc': 2, 'gt_pch_nx_VEC_deferred_locations_gc': 2, 'gt_pch_nx_queued_reg_save': 4, 'gt_pch_nx_dw_cfi_struct': 7, 'gt_pch_nx_dw_fde_struct': 3, 'gt_pch_p_P10vcall_insn4htab': 5, 'gt_pch_n_P10vcall_insn4htab': 5, 'gt_pch_p_P16var_loc_list_def4htab': 5, 'gt_pch_n_P16var_loc_list_def4htab': 5, 'gt_pch_p_P10die_struct4htab': 5, 'gt_pch_n_P10die_struct4htab': 5, 'gt_pch_p_P15dwarf_file_data4htab': 5, 'gt_pch_n_P15dwarf_file_data4htab': 5, 'gt_pch_p_P20indirect_string_node4htab': 5, 'gt_pch_n_P20indirect_string_node4htab': 5, 'gt_pch_na_fde_table': 2, 'gt_ggc_ma_fde_table': 2, 'gt_pch_na_abbrev_die_table': 1, 'gt_ggc_ma_abbrev_die_table': 1, 'gt_pch_na_arange_table': 1, 'gt_ggc_ma_arange_table': 1, 'lookup_vcall_insn': 3, 'VEC_vcall_entry_base_space': 2, 'VEC_vcall_entry_gc_reserve': 2, 'VEC_vcall_entry_base_quick_push': 2, 'VEC_vcall_entry_gc_safe_push': 4, 'dwarf2out_virtual_call': 10, 'store_vcall_insn': 6, 'dwarf2out_copy_call_info': 6, 'dwarf2out_virtual_call_token': 6, 'VEC_dcall_entry_base_space': 2, 'VEC_dcall_entry_gc_reserve': 2, 'VEC_dcall_entry_base_quick_push': 3, 'VEC_dcall_entry_gc_safe_push': 6, 'dwarf2out_direct_call': 9, 'add_var_loc_to_decl': 3, 'dwarf2out_var_location': 48, 'dwarf2out_imported_module_or_decl': 6, 'dwarf2out_global_decl': 2, 'dwarf2out_end_source_file': 9, 'dwarf2out_start_source_file': 14, 'gen_remaining_tmpl_value_param_die_attribute': 4, 'add_comp_dir_attribute': 9, 'resolve_addr_in_expr': 5, 'AT_loc': 2, 'resolve_addr': 19, 'VEC_dw_attr_node_base_quick_insert': 5, 'move_linkage_attr': 14, 'verify_marks_clear': 2, 'premark_types_used_by_global_vars_helper': 10, 'prune_unused_types_walk': 10, 'prune_unused_types_walk_local_classes': 6, 'prune_unused_types_mark': 23, 'prune_unused_types_walk_attribs': 21, 'prune_unused_types_update_strings': 16, 'prune_unused_types_prune': 20, 'prune_unmark_dies': 2, 'prune_indirect_string': 4, 'prune_unused_types': 30, 'is_comdat_die': 2, 'gen_compile_unit_die': 24, 'push_new_compile_unit': 2, 'is_symbol_die': 2, 'assign_symbol_names': 16, 'AT_addr': 2, 'loc_checksum': 2, 'die_checksum': 32, 'unmark_all_dies': 13, 'compute_section_prefix': 6, 'same_dw_val_p': 38, 'same_die_p': 22, 'same_die_p_wrap': 3, 'check_duplicate_cu': 35, 'break_out_includes': 71, 'should_move_die_to_comdat': 2, 'checksum_uleb128': 1, 'checksum_die_context': 11, 'add_AT_data8': 9, 'collect_checksum_attributes': 1082, 'loc_checksum_ordered': 9, 'die_checksum_ordered': 1264, 'attr_checksum_ordered': 201, 'generate_type_signature': 29, 'clone_die': 10, 'clone_as_declaration': 57, 'copy_ancestor_tree': 5, 'copy_declaration_context': 29, 'replace_child': 6, 'generate_skeleton_ancestor_tree': 4, 'generate_skeleton_bottom_up': 26, 'generate_skeleton': 8, 'remove_child_or_replace_with_skeleton': 9, 'break_out_comdat_types': 141, 'mark_dies': 2, 'copy_decls_walk': 16, 'unmark_dies': 3, 'add_sibling_attributes': 22, 'add_AT_addr': 9, 'add_ranges_by_labels': 1, 'output_loc_list': 9, 'output_location_lists': 20, 'add_AT_lineptr': 9, 'add_AT_macptr': 9, 'AT_ref_external': 2, 'gen_label_for_indirect_string': 4, 'AT_string_form': 22, 'value_format': 12, 'build_abbrev_table': 67, 'size_of_die': 19, 'calc_die_sizes': 33, 'output_die_symbol': 1, 'output_die': 124, 'output_comp_unit': 1, 'output_comdat_type_unit': 3, 'output_abbrev_section': 2, 'size_of_pubnames': 2, 'output_pubnames': 13, 'size_of_dcall_table': 5, 'output_dcall_table': 17, 'size_of_vcall_table': 2, 'output_vcall_table': 5, 'get_AT_low_pc': 2, 'get_AT_hi_pc': 2, 'output_aranges': 15, 'output_ranges': 9, 'output_indirect_string': 4, 'dwarf2out_finish': 427}, "PosixPath('602/c-pragma.bc')": {'maybe_apply_pending_pragma_weaks': 11, 'push_alignment': 8, 'apply_pragma_weak': 13, 'maybe_apply_pragma_weak': 5, 'maybe_apply_renaming_pragma': 45, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 2, 'VEC_int_base_quick_push': 2, 'VEC_int_heap_safe_push': 4, 'push_visibility': 4, 'VEC_int_base_last': 2, 'VEC_int_base_pop': 2, 'pop_visibility': 2, 'c_pp_lookup_pragma': 5, 'VEC_pragma_ns_name_base_space': 2, 'VEC_pragma_ns_name_heap_reserve': 2, 'VEC_pragma_ns_name_base_quick_push': 3, 'VEC_pragma_ns_name_heap_safe_push': 6, 'VEC_pragma_handler_base_space': 2, 'VEC_pragma_handler_heap_reserve': 2, 'VEC_pragma_handler_base_quick_push': 2, 'VEC_pragma_handler_heap_safe_push': 3, 'c_register_pragma_1': 10, 'handle_pragma_message': 1, 'handle_pragma_extern_prefix': 1, 'handle_pragma_redefine_extname': 9, 'handle_stdc_pragma': 2, 'handle_pragma_float_const_decimal64': 14, 'handle_pragma_reset_options': 3, 'handle_pragma_pop_options': 8, 'handle_pragma_optimize': 6, 'handle_pragma_target': 2, 'handle_pragma_diagnostic': 13, 'handle_pragma_visibility': 2, 'handle_pragma_weak': 6, 'pop_alignment': 4, 'handle_pragma_pack': 7, 'init_pragma': 1, 'gt_ggc_mx_opt_stack': 11, 'gt_ggc_mx_align_stack': 2, 'gt_pch_nx_opt_stack': 11, 'gt_pch_nx_align_stack': 2, 'handle_pragma_push_options': 11}, "PosixPath('602/cfgloop.bc')": {'flow_loop_nodes_find': 29, 'init_loops_structure': 33, 'rescan_loop_exit': 44, 'record_loop_exits': 24, 'merge_latch_edges': 9, 'flow_loop_nested_p': 2, 'superloop_at_depth': 1, 'ei_end_p': 1, 'ei_cond': 3, 'VEC_edge_base_space': 2, 'VEC_edge_heap_reserve': 2, 'VEC_edge_base_quick_push': 2, 'VEC_edge_heap_safe_push': 5, 'ei_next': 4, 'get_loop_latch_edges': 8, 'VEC_edge_base_iterate': 2, 'loop_outer': 2, 'get_loop_body': 21, 'flow_loop_dump': 8, 'VEC_int_base_quick_push': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 19, 'flow_loops_cfg_dump': 6, 'flow_loops_dump': 32, 'flow_loop_free': 5, 'VEC_loop_p_base_iterate': 2, 'flow_loops_free': 5, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_heap_reserve': 2, 'VEC_basic_block_base_quick_push': 2, 'VEC_basic_block_heap_safe_push': 5, 'VEC_basic_block_base_pop': 2, 'VEC_loop_p_base_space': 2, 'VEC_loop_p_gc_reserve': 2, 'VEC_loop_p_base_quick_push': 2, 'establish_preds': 17, 'flow_loop_tree_node_remove': 5, 'alloc_loop': 6, 'flow_bb_inside_loop_p': 4, 'flow_loops_find': 77, 'find_subloop_latch_edge_by_profile': 3, 'gsi_stmt': 1, 'find_subloop_latch_edge_by_ivs': 35, 'find_subloop_latch_edge': 46, 'form_subloop': 20, 'disambiguate_multiple_latches': 82, 'disambiguate_loops_with_multiple_latches': 142, 'get_loop_body_in_dom_order': 10, 'get_loop_body_in_bfs_order': 11, 'find_common_loop': 6, 'loop_exit_free': 4, 'dump_recorded_exit': 2, 'release_recorded_exits': 6, 'get_loop_exit_edges': 27, 'num_loop_branches': 1, 'add_bb_to_loop': 21, 'remove_bb_from_loops': 15, 'cancel_loop': 4, 'cancel_loop_tree': 4, 'single_succ_edge': 1, 'loop_latch_edge': 2, 'get_exit_descriptions': 2, 'verify_loop_structure': 499, 'loop_preheader_edge': 7, 'loop_exit_edge_p': 2, 'single_exit': 4, 'is_loop_exit': 4}, "PosixPath('602/xstrdup.bc')": {}, "PosixPath('602/bitmap.bc')": {'bitmap_obstack_free': 2, 'bitmap_elt_clear_from': 11, 'bitmap_obstack_initialize': 1, 'bitmap_obstack_release': 17, 'bitmap_initialize_stat': 2, 'bitmap_obstack_alloc_stat': 49, 'bitmap_gc_alloc_stat': 3, 'bitmap_element_allocate': 55, 'bitmap_copy': 80, 'bitmap_find_bit': 11, 'bitmap_element_zerop': 2, 'bitmap_elem_to_freelist': 4, 'bitmap_element_free': 13, 'bitmap_clear_bit': 37, 'bitmap_element_link': 14, 'bitmap_set_bit': 98, 'bitmap_bit_p': 11, 'bitmap_count_bits': 2, 'bitmap_first_set_bit': 4, 'bitmap_last_set_bit': 9, 'bitmap_elt_insert_after': 72, 'bitmap_and': 12, 'bitmap_and_into': 43, 'bitmap_elt_copy': 4, 'bitmap_and_compl': 36, 'bitmap_and_compl_into': 26, 'bitmap_set_range': 116, 'bitmap_clear_range': 61, 'bitmap_compl_and_into': 49, 'bitmap_elt_ior': 7, 'bitmap_ior': 13, 'bitmap_ior_into': 20, 'bitmap_xor': 17, 'bitmap_xor_into': 31, 'bitmap_equal_p': 6, 'bitmap_intersect_p': 6, 'bitmap_intersect_compl_p': 6, 'bitmap_ior_and_compl': 61, 'bitmap_ior_and_compl_into': 9, 'bitmap_ior_and_into': 79, 'debug_bitmap_file': 11, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'bitmap_print': 7, 'bitmap_hash': 7}, "PosixPath('602/caller-save.bc')": {'reg_save_code': 36, 'recog_memoized': 3, 'init_caller_save': 16, 'init_save_areas': 1, 'mark_set_regs': 6, 'new_saved_hard_reg': 23, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'saved_hard_reg_compare_func': 6, 'setup_save_areas': 641, 'mark_referenced_regs': 42, 'add_stored_regs': 7, 'add_used_regs_1': 3, 'insert_one_insn': 18, 'insert_restore': 9, 'insert_save': 10, 'replace_reg_with_saved_mem': 11, 'add_to_hard_reg_set': 1, 'mark_reg_as_referenced': 1, 'save_call_clobbered_regs': 193}, "PosixPath('602/tree-vect-generic.bc')": {'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_lhs': 1, 'gimple_call_fn': 1, 'gimple_call_return_type': 2, 'gimple_expr_type': 4, 'gimple_assign_rhs2': 3, 'type_for_widest_vector_mode': 8, 'expand_vector_piecewise': 4, 'expand_vector_parallel': 14, 'expand_vector_addition': 2, 'do_negate': 2, 'do_plus_minus': 2, 'expand_vector_operation': 21, 'expand_vector_operations_1': 135, 'expand_vector_operations': 317}, "PosixPath('602/sel-sched-ir.bc')": {'insert_in_history_vect': 30, 'sel_redirect_edge_and_branch': 5, 'exchange_lv_sets': 3, 'exchange_av_sets': 5, '_xlist_add': 2, 'ilist_copy': 14, 'ilist_invert': 4, 'blist_add': 12, '_list_iter_start': 4, 'return_regset_to_pool': 6, 'vinsn_delete': 2, 'vinsn_detach': 3, 'free_history_vect': 2, '_list_iter_remove': 4, 'av_set_iter_remove': 4, '_list_iter_next': 3, 'av_set_clear': 16, 'blist_remove': 1, 'flist_tail_init': 2, 'flist_lookup': 2, 'fence_clear': 20, 'flist_remove': 29, 'flist_clear': 30, 'def_list_add': 4, '_succ_iter_start': 113, 'VEC_edge_base_iterate': 2, 'in_current_region_p': 4, 'sel_bb_head': 2, 'sel_bb_empty_or_nop_p': 2, '_eligible_successor_edge_p': 70, 'ei_end_p': 1, 'ei_cond': 3, 'single_succ_edge': 1, 'inner_loop_header_p': 1, 'loop_outer': 2, 'VEC_edge_base_space': 2, 'VEC_edge_heap_reserve': 2, 'VEC_edge_base_quick_push': 2, 'VEC_edge_heap_safe_push': 5, 'get_loop_exit_edges_unique_dests': 21, 'VEC_edge_base_ordered_remove': 3, 'get_all_loop_exits': 158, 'ei_next': 4, '_succ_iter_cond': 159, 'init_fence_for_scheduling': 3, 'flist_add': 120, '_succ_iter_next': 25, 'init_fences': 178, 'VEC_rtx_base_block_remove': 2, 'merge_fences': 409, 'move_fence_to_fences': 77, 'add_to_fences': 4, 'add_clean_fence_to_fences': 3, 'VEC_rtx_gc_copy': 2, 'add_dirty_fence_to_fences': 41, 'get_regset_from_pool': 7, 'free_regset_pool': 11, 'vinsn_attach': 2, 'init_expr': 94, 'copy_expr_onside': 37, 'change_vinsn_in_expr': 2, 'VEC_sel_global_bb_info_def_base_space': 2, 'VEC_sel_global_bb_info_def_heap_reserve_exact': 2, 'VEC_sel_global_bb_info_def_heap_safe_grow': 2, 'VEC_sel_global_bb_info_def_heap_safe_grow_cleared': 2, 'sel_extend_global_bb_info': 4, 'VEC_sel_region_bb_info_def_base_space': 2, 'VEC_sel_region_bb_info_def_heap_reserve_exact': 2, 'VEC_sel_region_bb_info_def_heap_safe_grow': 2, 'VEC_sel_region_bb_info_def_heap_safe_grow_cleared': 2, 'extend_region_bb_info': 4, 'extend_bb_info': 4, 'invalidate_av_set': 4, 'VEC_sel_insn_data_def_base_space': 2, 'VEC_sel_insn_data_def_heap_reserve_exact': 2, 'VEC_sel_insn_data_def_heap_safe_grow': 2, 'VEC_sel_insn_data_def_heap_safe_grow_cleared': 2, 'extend_insn_data': 5, 'VEC_expr_history_def_heap_copy': 2, 'copy_expr': 82, 'prepare_insn_expr': 16, 'setup_id_lhs_rhs': 6, 'maybe_downgrade_id_to_use': 16, 'setup_id_reg_sets': 10, 'init_id_from_df': 49, 'deps_init_id_note_reg_use': 2, 'deps_init_id_note_reg_clobber': 2, 'deps_init_id_note_reg_set': 2, 'deps_init_id_start_lhs': 3, 'deps_init_id_finish_insn': 10, 'deps_init_id': 1, 'vinsn_init': 86, 'vinsn_create': 79, 'eq_transformed_insns': 4, 'init_first_time_insn_data': 1, 'init_insn_data': 6, 'single_pred_edge': 1, 'cfg_preds_1': 21, 'cfg_preds': 3, 'get_seqno_of_a_pred': 431, 'init_simplejump_data': 515, 'sel_init_new_insn': 532, 'get_nop_from_pool': 2, 'free_lv_set': 3, 'bb_next_bb': 9, 'ei_safe_edge': 2, 'move_bb_info': 6, 'remove_bb_from_region': 12, 'delete_and_free_basic_block': 7, 'sel_remove_bb': 21, 'remove_empty_bb': 31, 'sel_remove_empty_bb': 20, 'considered_for_pipelining_p': 8, 'change_loops_latches': 5, 'sel_recompute_toporder': 1, 'maybe_tidy_empty_bb': 41, 'jump_leads_only_to_bb_p': 4, 'sel_remove_insn': 104, 'tidy_control_flow': 41, 'return_nop_to_pool': 6, 'recog_memoized': 3, 'create_insn_rtx_from_pattern': 2, 'create_copy_of_insn_rtx': 3, 'create_vinsn_from_insn_rtx': 4, 'vinsn_copy': 4, 'vinsn_cond_branch_p': 2, 'sel_insn_rtx_cost': 2, 'sel_vinsn_cost': 3, 'sel_gen_insn_from_expr_after': 3, 'sel_move_insn': 8, 'skip_unspecs_callback': 2, 'vinsn_equal_p': 14, 'find_in_history_vect_1': 3, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'find_in_history_vect': 15, 'VEC_expr_history_def_base_space': 2, 'VEC_expr_history_def_heap_reserve': 2, 'VEC_expr_history_def_base_quick_insert': 5, 'VEC_expr_history_def_heap_safe_insert': 8, 'update_target_availability': 4, 'expr_dest_regno': 2, 'speculate_expr': 7, 'update_speculative_bits': 8, 'merge_expr_data': 130, 'merge_expr': 2, 'av_set_lookup': 3, 'set_unavailable_target_for_expr': 28, 'mark_unavailable_targets': 3, 'av_set_add': 2, 'av_set_lookup_other_equiv_expr': 6, 'merge_with_other_exprs': 7, 'av_set_copy': 5, 'av_set_union_and_clear': 41, '_list_iter_remove_nofree': 4, 'av_set_add_nocopy': 2, 'av_set_union_and_live': 128, 'av_set_leave_one_nonspec': 30, 'av_set_substract_cond_branches': 35, 'av_set_split_usefulness': 6, 'av_set_intersect': 33, 'free_data_for_scheduled_insn': 5, 'init_global_and_expr_for_insn': 18, 'sel_init_global_and_expr': 2, 'VEC_basic_block_base_quick_push': 2, 'finish_insns': 10, 'finish_global_and_expr_insn': 5, 'sel_finish_global_and_expr': 22, 'sel_mark_hard_insn': 1, 'has_dependence_note_reg_use': 10, 'has_dependence_note_reg_clobber': 5, 'has_dependence_note_reg_set': 7, 'has_dependence_p': 9, 'tick_check_dep_with_dw': 19, 'tick_check_p': 5, 'get_dest_and_mode': 3, 'sel_num_cfg_preds_gt_1': 8, 'bookkeeping_can_be_created_if_moved_through_p': 153, 'sel_is_loop_preheader_p': 19, 'purge_empty_blocks': 8, 'get_seqno_by_preds': 56, 'df_lr_get_bb_info': 2, 'init_lv_set': 2, 'init_lv_sets': 3, 'free_lv_sets': 18, 'exchange_data_sets': 4, 'copy_data_sets': 14, 'get_av_level': 2, 'fallthru_bb_of_jump': 4, 'sel_init_bbs': 2, 'sel_restore_notes': 46, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_heap_reserve': 2, 'VEC_basic_block_heap_safe_push': 5, 'sel_create_new_region': 11, 'VEC_basic_block_base_iterate': 2, 'sel_add_block_to_region': 9, 'make_region_from_loop_preheader': 9, 'sel_remove_loop_preheader': 130, 'sel_finish_bbs': 155, 'sel_insn_has_single_succ_p': 141, 'VEC_int_base_block_remove': 2, 'free_succs_info': 21, 'alloc_succs_info': 2, 'VEC_rtx_base_space': 2, 'VEC_rtx_heap_reserve': 2, 'VEC_rtx_base_quick_push': 2, 'VEC_rtx_heap_safe_push': 5, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 2, 'VEC_int_base_quick_push': 2, 'VEC_int_heap_safe_push': 5, 'compute_succs_info': 549, 'bb_ends_ebb_p': 46, 'in_same_ebb_p': 7, 'clear_outdated_rtx_info': 12, 'free_sched_pools': 13, 'recompute_rev_top_order': 13, 'find_place_to_insert_bb': 41, 'add_block_to_current_region': 62, 'sel_add_bb': 10, 'sel_split_edge': 6, 'copy_lv_set_from': 3, 'sel_create_recovery_block': 15, 'sel_create_empty_bb': 3, 'VEC_rtx_base_pop': 2, 'get_bb_note_from_pool': 2, 'sel_create_basic_block': 7, 'sel_split_block': 9, 'sel_register_cfg_hooks': 4, 'setup_nop_and_exit_insns': 2, 'setup_nop_vinsn': 3, 'free_nop_vinsn': 1, 'sel_estimate_number_of_insns': 4, 'sel_setup_sched_infos': 1, 'get_loop_nest_for_rgn': 2, 'VEC_loop_p_base_iterate': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 60, 'sel_finish_pipelining': 51, 'bb_top_order_comparator': 10, 'make_region_from_loop': 37, 'VEC_loop_p_base_space': 2, 'VEC_loop_p_heap_reserve': 2, 'VEC_loop_p_base_quick_push': 2, 'VEC_loop_p_heap_safe_push': 4, 'make_regions_from_loop_nest': 46, 'make_regions_from_the_rest': 119, 'sel_find_rgns': 371, 'sel_add_loop_preheaders': 10, 'setup_id_for_insn': 4}, "PosixPath('602/graphite-sese-to-poly.bc')": {}, "PosixPath('602/toplev.bc')": {'announce_function': 2, 'wrapup_global_declaration_1': 7, 'wrapup_global_declaration_2': 12, 'check_global_declaration_1': 24, 'emit_debug_global_declarations': 6, 'warn_deprecated_use': 29, 'setup_core_dumping': 1, 'decode_d_option': 19, 'option_affects_pch_p': 3, 'default_get_pch_validity': 16, 'default_pch_valid_p': 28, 'default_tree_printer': 17, 'general_init': 1, 'init_local_tick': 4, 'print_switch_values': 9, 'process_options': 92, 'init_asm_output': 2, 'lang_dependent_init': 2, 'compile_file': 3, 'finalize': 3, 'do_compile': 109, 'toplev_main': 132}, "PosixPath('602/tree-scalar-evolution.bc')": {'chrec_is_positive': 40, 'initialize_scalar_evolutions_analyzer': 2, 'tree_operand_length': 3, 'chrec_contains_symbols_defined_in_loop': 7, 'get_chrec_loop': 2, 'number_of_latch_executions': 12, 'get_instantiated_value': 1, 'new_scev_info_str': 5, 'set_instantiated_value': 7, 'find_var_scev_info': 9, 'gimple_ops': 1, 'gimple_op': 1, 'gimple_assign_lhs': 1, 'gimple_assign_rhs1': 1, 'gimple_assign_rhs_code': 2, 'gimple_assign_rhs2': 3, 'analyze_initial_condition': 26, 'build_polynomial_chrec': 6, 'add_to_evolution_1': 31, 'add_to_evolution': 4, 'gimple_call_fn': 1, 'gimple_call_return_type': 2, 'gimple_expr_type': 4, 'set_scalar_evolution': 1, 'gsi_stmt': 1, 'loop_closed_phi_def': 11, 'eq_scev_info': 4, 'follow_ssa_edge': 81, 'follow_ssa_edge_inner_loop_phi': 10, 'follow_ssa_edge_expr': 11, 'follow_ssa_edge_binary': 16, 'analyze_scalar_evolution': 5, 'analyze_scalar_evolution_1': 25, 'interpret_condition_phi': 10, 'interpret_loop_phi': 80, 'interpret_gimple_assign': 9, 'interpret_rhs_expr': 1, 'compute_overall_effect_of_inner_loop': 4, 'instantiate_scev_r': 18, 'instantiate_scev_1': 4, 'instantiate_scev_2': 7, 'instantiate_scev_3': 11, 'instantiate_scev_poly': 18, 'instantiate_scev_name': 12, 'evolution_function_is_affine_p': 5, 'gather_chrec_stats': 10, 'gather_stats_on_scev_database': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 2, 'VEC_int_base_iterate': 2, 'fel_next': 7, 'fel_init': 52, 'scev_initialize': 55, 'scev_reset': 49, 'analyze_scalar_evolution_in_loop': 2, 'simple_iv': 12, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 5, 'get_exit_conditions_rec': 4, 'VEC_gimple_base_iterate': 2, 'analyze_scalar_evolution_for_all_loop_phi_nodes': 24, 'number_of_iterations_for_all_loops': 1, 'scev_analysis': 51, 'expression_expensive_p': 4, 'bmp_iter_set_init': 10, 'bmp_iter_set': 12, 'bb_seq': 2, 'gsi_start_bb': 6, 'gsi_after_labels': 41, 'scev_const_prop': 149, 'gt_ggc_mx_scev_info_str': 4, 'gt_ggc_m_P13scev_info_str4htab': 5, 'gt_pch_nx_scev_info_str': 4, 'gt_pch_p_P13scev_info_str4htab': 5, 'gt_pch_n_P13scev_info_str4htab': 5}, "PosixPath('602/c-common.bc')": {'handle_aligned_attribute': 10, 'c_addr_space_name': 1, 'start_fname_decls': 2, 'finish_fname_decls': 25, 'fname_as_string': 13, 'fname_decl': 10, 'fix_string_type': 26, 'decl_constant_value_for_optimization': 4, 'overflow_warning': 2, 'c_fully_fold_internal': 506, 'c_fully_fold': 34, 'warn_logical_operator': 117, 'strict_aliasing_warning': 15, 'check_main_parameter_types': 45, 'vector_targets_convertible_p': 4, 'vector_types_convertible_p': 37, 'c_common_signed_or_unsigned_type': 377, 'shorten_binary_op': 60, 'tree_operand_length': 3, 'conversion_warning': 94, 'warnings_for_convert_and_check': 2, 'convert_and_check': 5, 'warning_candidate_p': 4, 'new_tlist': 4, 'warn_for_collisions_1': 18, 'warn_for_collisions': 3, 'merge_tlist': 19, 'add_tlist': 8, 'init_call_expr_arg_iterator': 3, 'next_call_expr_arg': 4, 'first_call_expr_arg': 6, 'verify_tree': 111, 'verify_sequence_points': 4, 'c_common_type_for_size': 46, 'c_common_type_for_mode': 232, 'c_common_fixed_point_type_for_size': 6, 'c_build_bitfield_integer_type': 9, 'shorten_compare': 163, 'pointer_int_sum': 29, 'c_wrap_maybe_const': 17, 'c_save_expr': 1, 'decl_with_nonnull_addr_p': 2, 'c_common_truthvalue_conversion': 71, 'c_apply_type_quals_to_decl': 9, 'c_type_hash': 13, 'c_common_get_alias_set': 54, 'c_sizeof_or_alignof_type': 8, 'c_alignof_expr': 21, 'def_fn_type': 16, 'builtin_function_disabled_p': 2, 'def_builtin_1': 5, 'c_define_builtins': 223, 'c_common_nodes_and_builtins': 8, 'set_compound_literal_name': 1, 'disable_builtin_function': 2, 'c_promoting_integer_type_p': 13, 'self_promoting_args_p': 5, 'strip_pointer_operator': 2, 'strip_pointer_or_array_types': 2, 'check_case_value': 22, 'check_case_bounds': 2, 'c_add_case_label': 3, 'match_case_to_enum_1': 12, 'match_case_to_enum': 5, 'c_do_switch_warnings': 6, 'boolean_increment': 2, 'c_determine_visibility': 7, 'VEC_const_char_p_base_space': 2, 'VEC_const_char_p_gc_reserve': 2, 'VEC_const_char_p_base_quick_push': 2, 'VEC_const_char_p_gc_safe_push': 4, 'parse_optimize_options': 52, 'get_nonnull_operand': 4, 'nonnull_check_p': 6, 'check_function_arguments_recurse': 26, 'check_function_nonnull': 8, 'check_function_sentinel': 7, 'check_function_arguments': 28, 'check_builtin_function_arguments': 3, 'field_decl_cmp': 4, 'resort_field_decl_cmp': 21, 'c_cpp_error': 6, 'fold_offsetof_1': 25, 'complete_array_type': 17, 'sync_resolve_size': 6, 'sync_resolve_params': 5, 'resolve_overloaded_builtin': 13, 'warn_array_subscript_with_type_char': 4, 'warn_about_parentheses': 3, 'warn_for_unused_label': 2, 'warn_for_sign_compare': 81, 'set_underlying_type': 12, 'is_typedef_decl': 2, 'record_types_used_by_current_var_decl': 1, 'VEC_tree_gc_vec_base_pop': 2, 'make_tree_vector': 2, 'VEC_tree_gc_vec_base_space': 2, 'VEC_tree_gc_vec_gc_reserve': 2, 'VEC_tree_gc_vec_base_quick_push': 2, 'VEC_tree_gc_vec_gc_safe_push': 4, 'release_tree_vector': 4, 'VEC_tree_base_quick_push': 2, 'make_tree_vector_single': 2, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 2, 'VEC_tree_base_iterate': 2, 'make_tree_vector_copy': 9, 'handle_optimize_attribute': 4, 'handle_hot_attribute': 2, 'handle_cold_attribute': 2, 'handle_alloc_size_attribute': 6, 'handle_type_generic_attribute': 3, 'handle_sentinel_attribute': 2, 'handle_nonnull_attribute': 7, 'handle_tls_model_attribute': 5, 'handle_visibility_attribute': 9, 'handle_vector_size_attribute': 6, 'handle_deprecated_attribute': 6, 'handle_novops_attribute': 1, 'handle_pure_attribute': 2, 'handle_no_limit_stack_attribute': 7, 'handle_returns_twice_attribute': 2, 'handle_malloc_attribute': 4, 'handle_no_instrument_function_attribute': 7, 'handle_weakref_attribute': 2, 'handle_alias_attribute': 11, 'handle_weak_attribute': 2, 'handle_section_attribute': 7, 'handle_mode_attribute': 37, 'handle_destructor_attribute': 2, 'handle_constructor_attribute': 2, 'handle_transparent_union_attribute': 6, 'handle_const_attribute': 4, 'handle_externally_visible_attribute': 2, 'handle_unused_attribute': 2, 'handle_used_attribute': 3, 'handle_artificial_attribute': 2, 'handle_gnu_inline_attribute': 2, 'handle_always_inline_attribute': 2, 'handle_noinline_attribute': 2, 'handle_noreturn_attribute': 4, 'handle_common_attribute': 2, 'handle_nocommon_attribute': 2, 'handle_packed_attribute': 5}, "PosixPath('602/spec_qsort/spec_qsort.bc')": {'swapfunc': 8, 'spec_qsort': 150}}
found results: {"PosixPath('602/diagnostic.bc')": {'build_message_string': ([], 8235), 'diagnostic_report_current_module': ([], 8235), 'trim_filename': ([], 8235), 'diagnostic_set_info_translated': ([], 8235), 'diagnostic_set_info': ([], 8235), 'internal_error': ([], 8235), 'diagnostic_action_after_output': ([], 8235), 'diagnostic_report_diagnostic': ([0], 8222), 'diagnostic_build_prefix': ([], 8235), 'diagnostic_initialize': ([], 8235), 'verbatim': ([], 8235), 'emit_diagnostic': ([], 8235), 'inform': ([], 8235), 'inform_n': ([], 8235), 'warning': ([], 8235), 'warning_at': ([], 8235), 'pedwarn': ([], 8235), 'permerror': ([], 8235), 'error': ([], 8235), 'error_n': ([], 8235), 'error_at': ([], 8235), 'sorry': ([], 8235), 'fatal_error': ([], 8235)}, "PosixPath('602/decContext.bc')": {'decContextSetStatus': ([], 2136), 'decContextDefault': ([], 2136), 'decContextSetStatusFromString': ([], 2136)}, "PosixPath('602/alloca.bc')": {'find_stack_direction': ([], 334), 'C_alloca': ([], 334)}, "PosixPath('602/tree-ssa-loop-unswitch.bc')": {'VEC_loop_p_base_iterate': ([], 2290), 'VEC_int_base_quick_push': ([], 2290), 'VEC_int_base_iterate': ([], 2290), 'fel_next': ([], 2290), 'fel_init': ([], 2290), 'gimple_use_ops': ([], 2290), 'gimple_vuse': ([], 2290), 'op_iter_init': ([], 2290), 'op_iter_next_tree': ([], 2290), 'op_iter_init_tree': ([], 2290), 'gimple_ops': ([], 2290), 'gimple_op': ([], 2290), 'gimple_cond_lhs': ([], 2290), 'gimple_cond_rhs': ([], 2290), 'tree_may_unswitch_on': ([], 2290), 'single_pred_edge': ([], 2290), 'simplify_using_entry_checks': ([], 2290), 'tree_unswitch_loop': ([], 2290), 'tree_unswitch_single_loop': ([38], 2275), 'tree_ssa_unswitch_loops': ([4], 2287)}, "PosixPath('602/reload.bc')": {'find_reloads_address': ([27], 52189), 'push_reload': ([44, 163, 176, 183, 191, 203, 1338], 52145), 'push_secondary_reload': ([1, 39], 52182), 'find_reloads': ([24, 38, 40, 58, 59, 94, 291, 437, 3734, 3735, 3739, 3741, 3768, 3777, 3786, 3793, 3797, 3798, 7194], 51151), 'find_reloads_toplev': ([0, 3, 43, 44], 52178), 'copy_replacements': ([], 52201), 'find_reloads_subreg_address': ([12, 31, 32, 39], 52182), 'scratch_reload_class': ([], 52201), 'secondary_reload_class': ([], 52201), 'reload_inner_reg_of_subreg': ([], 52201), 'find_valid_class': ([], 52201), 'refers_to_mem_for_reload_p': ([], 52201), 'refers_to_regno_for_reload_p': ([2, 5], 52193), 'reg_overlap_mentioned_for_reload_p': ([0, 14], 52196), 'find_reusable_reload': ([], 52201), 'remove_address_replacements': ([], 52201), 'df_lr_get_bb_info': ([], 52201), 'hard_reg_set_here_p': ([], 52201), 'find_dummy_reload': ([33], 52187), 'find_equiv_reg': ([90, 94], 52190), 'recog_memoized': ([], 52201), 'can_reload_into': ([], 52201), 'push_reg_equiv_alt_mem': ([1], 52197), 'regno_clobbered_p': ([], 52201), 'subst_reg_equivs': ([], 52201), 'copy_replacements_1': ([], 52201), 'find_inc_amount': ([], 52201), 'form_sum': ([], 52201), 'subst_indexed_address': ([12], 52192), 'get_secondary_mem': ([2], 52200), 'find_reloads_address_1': ([1, 4, 275, 280], 52003), 'find_reloads_address_part': ([6], 52182), 'transfer_replacements': ([], 52201), 'operands_match_p': ([0], 52198), 'decompose': ([4, 22], 52193), 'immune_p': ([], 52201), 'safe_from_earlyclobber': ([], 52201), 'skip_alternative': ([], 52201), 'alternative_allows_const_pool_ref': ([], 52201), 'push_replacement': ([], 52201), 'dup_replacements': ([], 52201), 'combine_reloads': ([], 52201), 'reload_adjust_reg_for_mode': ([], 52201), 'subst_reloads': ([], 52201), 'move_replacements': ([], 52201), 'find_replacement': ([29], 52190), 'debug_reload_to_stream': ([14], 52197)}, "PosixPath('602/debug.bc')": {}, "PosixPath('602/tree-chrec.bc')": {'tree_fold_binomial': ([39, 40], 11686), 'tree_operand_length': ([], 11695), 'evolution_function_is_invariant_rec_p': ([0], 11693), 'evolution_function_is_affine_p': ([], 11695), 'get_chrec_loop': ([], 11695), 'initial_condition': ([], 11695), 'hide_evolution_in_other_loops_than_loop': ([], 11695), 'build_polynomial_chrec': ([], 11695), 'chrec_convert_1': ([], 11695), 'convert_affine_scev': ([], 11695), 'tree_contains_chrecs': ([], 11695), 'chrec_fold_plus_1': ([1, 2], 11678), 'chrec_fold_plus_poly_poly': ([28], 11694), 'chrec_fold_multiply': ([], 11695), 'chrec_fold_multiply_poly_poly': ([], 11695), 'chrec_evaluate': ([1], 11691), 'chrec_apply': ([], 11695), 'chrec_replace_initial_condition': ([], 11695), 'chrec_component_in_loop_num': ([], 11695), 'reset_evolution_in_loop': ([4, 8], 11670), 'eq_evolutions_p': ([], 11695), 'is_multivariate_chrec_rec': ([], 11695), 'is_multivariate_chrec': ([], 11695), 'chrec_contains_symbols': ([], 11695), 'chrec_contains_undetermined': ([], 11695), 'evolution_function_is_affine_multivariate_p': ([], 11695), 'evolution_function_is_univariate_p': ([], 11695), 'nb_vars_in_chrec': ([], 11695), 'chrec_convert_aggressive': ([], 11695), 'scev_direction': ([], 11695), 'for_each_scev_op': ([], 11695), 'scev_is_linear_expression': ([0], 11689), 'evolution_function_right_is_integer_cst': ([], 11695)}, "PosixPath('602/cgraphunit.bc')": {'cgraph_build_static_cdtor': ([1], 16916), 'save_inline_function_body': ([], 16969), 'init_lowered_empty_function': ([], 16969), 'cgraph_decide_is_function_needed': ([], 16969), 'cgraph_reset_node': ([0], 16964), 'VEC_tree_base_space': ([], 16969), 'VEC_tree_gc_reserve': ([], 16969), 'VEC_tree_base_quick_push': ([], 16969), 'VEC_tree_gc_safe_push': ([], 16969), 'record_cdtor_fn': ([], 16969), 'cgraph_finalize_function': ([19], 16965), 'cgraph_lower_function': ([], 16969), 'bb_seq': ([], 16969), 'gsi_start_bb': ([], 16969), 'thunk_adjust': ([], 16969), 'gimple_ops': ([], 16969), 'gimple_set_op': ([], 16969), 'gimple_call_set_lhs': ([], 16969), 'single_succ_edge': ([], 16969), 'gsi_last_bb': ([], 16969), 'assemble_thunk': ([], 16969), 'cgraph_expand_function': ([], 16969), 'cgraph_process_new_functions': ([], 16969), 'gsi_stmt': ([], 16969), 'gimple_op': ([], 16969), 'gimple_call_fn': ([], 16969), 'gimple_call_fndecl': ([], 16969), 'verify_cgraph_node': ([70, 164], 16961), 'verify_cgraph': ([], 16969), 'build_cdtor': ([0], 16967), 'cgraph_build_cdtor_fns': ([], 16969), 'process_function_and_variable_attributes': ([], 16969), 'cgraph_analyze_functions': ([], 16969), 'cgraph_materialize_clone': ([], 16969), 'gimple_vdef': ([], 16969), 'gimple_call_set_fndecl': ([], 16969), 'cgraph_redirect_edge_call_stmt_to_callee': ([], 16969), 'cgraph_materialize_all_clones': ([], 16969), 'cgraph_mark_functions_to_output': ([10], 16967), 'cgraph_output_in_order': ([], 16969), 'cgraph_output_pending_asms': ([], 16969), 'cgraph_expand_all_functions': ([1], 16952), 'cgraph_optimize': ([7], 16946), 'cgraph_finalize_compilation_unit': ([0, 1], 16959), 'VEC_cgraph_edge_p_base_iterate': ([], 16969), 'cgraph_copy_node_for_versioning': ([], 16969), 'update_call_expr': ([], 16969), 'cgraph_function_versioning': ([], 16969)}, "PosixPath('602/c-omp.bc')": {'c_finish_omp_critical': ([], 3241), 'c_finish_omp_atomic': ([], 3241), 'check_omp_for_incr_expr': ([], 3241), 'c_finish_omp_for': ([2, 6], 3232), 'c_split_parallel_clauses': ([], 3241)}, "PosixPath('602/make-relative-prefix.bc')": {'split_directories': ([], 1581), 'make_relative_prefix_1': ([2, 3, 4], 1514)}, "PosixPath('602/dce.bc')": {'VEC_rtx_base_space': ([], 7537), 'VEC_rtx_heap_reserve': ([], 7537), 'VEC_rtx_base_quick_push': ([], 7537), 'VEC_rtx_heap_safe_push': ([], 7537), 'deletable_insn_p': ([], 7537), 'find_call_stack_args': ([93], 7532), 'mark_insn': ([], 7537), 'prescan_insns_for_dce': ([], 7537), 'ei_end_p': ([], 7537), 'ei_cond': ([], 7537), 'ei_next': ([], 7537), 'bb_has_eh_pred': ([], 7537), 'df_byte_lr_get_bb_info': ([], 7537), 'byte_dce_process_block': ([], 7537), 'df_lr_get_bb_info': ([], 7537), 'dce_process_block': ([], 7537), 'delete_corresponding_reg_eq_notes': ([], 7537), 'delete_unmarked_insns': ([], 7537), 'fast_dce': ([], 7537), 'df_scan_get_bb_info': ([], 7537), 'df_get_artificial_uses': ([], 7537), 'mark_artificial_uses': ([], 7537), 'VEC_rtx_base_pop': ([], 7537), 'mark_reg_dependencies': ([], 7537), 'rest_of_handle_ud_dce': ([], 7537)}, "PosixPath('602/regcprop.bc')": {'debug_value_data': ([], 6927), 'single_pred_edge': ([], 6927), 'init_value_data': ([], 6927), 'mode_change_ok': ([], 6927), 'maybe_mode_change': ([], 6927), 'find_oldest_value_reg': ([], 6927), 'replace_oldest_value_reg': ([], 6927), 'replace_oldest_value_addr': ([], 6927), 'free_debug_insn_changes': ([], 6927), 'kill_value_one_regno': ([], 6927), 'kill_value': ([], 6927), 'set_value_regno': ([], 6927), 'copy_value': ([], 6927), 'kill_set_value': ([], 6927), 'kill_autoinc_value': ([], 6927), 'apply_debug_insn_changes': ([], 6927), 'cprop_find_used_regs_1': ([], 6927), 'copyprop_hardreg_forward_1': ([], 6927), 'copyprop_hardreg_forward': ([5, 281], 6922)}, "PosixPath('602/tree-ssa-structalias.bc')": {'heapvar_insert': ([], 44969), 'create_variable_info_for': ([84], 44962), 'get_constraint_for_ptr_offset': ([], 44969), 'do_structure_copy': ([18], 44964), 'get_constraint_for_ssa_var': ([2, 3], 44956), 'init_graph': ([], 44969), 'build_pred_graph': ([], 44969), 'dump_constraint': ([], 44969), 'VEC_constraint_t_base_iterate': ([], 44969), 'dump_constraints': ([], 44969), 'dump_constraint_edge': ([], 44969), 'dump_constraint_graph': ([], 44969), 'bmp_iter_set_init': ([], 44969), 'bmp_iter_set': ([], 44969), 'dump_solution_for_var': ([], 44969), 'pt_solution_reset': ([], 44969), 'is_global_var': ([], 44969), 'pt_solution_set': ([], 44969), 'pt_solution_includes_global': ([], 44969), 'pt_solution_includes_1': ([2], 44968), 'pt_solution_empty_p': ([], 44969), 'pt_solutions_intersect_1': ([0], 44959), 'pt_solutions_same_restrict_base': ([2, 3], 44965), 'VEC_varinfo_t_base_space': ([], 44969), 'VEC_varinfo_t_heap_reserve': ([], 44969), 'VEC_varinfo_t_base_quick_push': ([], 44969), 'VEC_varinfo_t_heap_safe_push': ([], 44969), 'new_var_info': ([], 44969), 'new_constraint': ([], 44969), 'VEC_constraint_t_base_space': ([], 44969), 'VEC_constraint_t_heap_reserve': ([], 44969), 'VEC_constraint_t_base_quick_push': ([], 44969), 'VEC_constraint_t_heap_safe_push': ([], 44969), 'new_scalar_tmp_constraint_exp': ([], 44969), 'process_constraint': ([41], 44965), 'init_base_vars': ([], 44969), 'init_alias_vars': ([], 44969), 'heapvar_map_eq': ([], 44969), 'type_could_have_pointers': ([], 44969), 'heapvar_map_hash': ([], 44969), 'heapvar_lookup': ([], 44969), 'get_var_ann': ([], 44969), 'alias_get_name': ([], 44969), 'var_can_have_subvars': ([], 44969), 'bitpos_of_field': ([], 44969), 'VEC_fieldoff_s_base_space': ([], 44969), 'VEC_fieldoff_s_heap_reserve': ([], 44969), 'VEC_fieldoff_s_heap_safe_push': ([], 44969), 'push_fields_onto_fieldstack': ([16], 44966), 'make_constraint_from': ([], 44969), 'make_constraint_from_heapvar': ([], 44969), 'make_copy_constraint': ([], 44969), 'fieldoff_compare': ([], 44969), 'get_vi_for_tree': ([69], 44962), 'intra_create_variable_infos': ([], 44969), 'gsi_stmt': ([], 44969), 'VEC_ce_s_base_space': ([], 44969), 'VEC_ce_s_heap_reserve': ([], 44969), 'VEC_ce_s_base_quick_push': ([], 44969), 'VEC_ce_s_heap_safe_push': ([1], 44967), 'do_deref': ([], 44969), 'ref_contains_array_ref': ([0, 1], 44945), 'get_constraint_for_1': ([46, 57, 179], 44936), 'get_constraint_for_address_of': ([], 44969), 'gimple_ops': ([], 44969), 'gimple_op': ([], 44969), 'gimple_call_fn': ([], 44969), 'gimple_call_fndecl': ([], 44969), 'gimple_call_lhs': ([], 44969), 'gimple_call_arg': ([], 44969), 'first_or_preceding_vi_for_offset': ([], 44969), 'process_all_all_constraints': ([], 44969), 'gimple_call_chain': ([], 44969), 'make_constraint_to': ([1, 10], 44957), 'handle_const_call': ([], 44969), 'handle_pure_call': ([], 44969), 'handle_rhs_call': ([], 44969), 'handle_lhs_call': ([], 44969), 'first_vi_for_offset': ([], 44969), 'gimple_assign_lhs': ([], 44969), 'gimple_assign_rhs1': ([], 44969), 'gimple_assign_rhs_code': ([], 44969), 'gimple_assign_rhs2': ([], 44969), 'gimple_call_return_type': ([], 44969), 'gimple_expr_type': ([], 44969), 'gimple_assign_cast_p': ([], 44969), 'gimple_return_retval': ([], 44969), 'gimple_asm_output_op': ([], 44969), 'gimple_asm_input_op': ([], 44969), 'find_func_aliases': ([1, 113, 123, 158, 210, 234, 628, 726, 1067, 1071, 1075, 1075], 44818), 'bb_seq': ([], 44969), 'gsi_start_bb': ([], 44969), 'add_pred_graph_edge': ([0], 44967), 'add_implicit_graph_edge': ([0], 44967), 'init_scc_info': ([], 44969), 'VEC_unsigned_base_last': ([], 44969), 'VEC_unsigned_base_pop': ([], 44969), 'VEC_unsigned_base_space': ([], 44969), 'VEC_unsigned_heap_reserve': ([], 44969), 'VEC_unsigned_base_quick_push': ([], 44969), 'VEC_unsigned_heap_safe_push': ([], 44969), 'condense_visit': ([94, 98, 101], 44957), 'equiv_class_lookup': ([], 44969), 'equiv_class_add': ([], 44969), 'label_visit': ([], 44969), 'equiv_class_label_eq': ([], 44969), 'perform_var_substitution': ([], 44969), 'merge_graph_nodes': ([], 44969), 'constraint_less': ([], 44969), 'constraint_equal': ([], 44969), 'constraint_vec_find': ([], 44969), 'VEC_constraint_t_base_quick_insert': ([], 44969), 'VEC_constraint_t_heap_safe_insert': ([], 44969), 'constraint_set_union': ([], 44969), 'merge_node_constraints': ([], 44969), 'unify_nodes': ([153, 176, 180], 44945), 'find_equivalent_node': ([], 44969), 'rewrite_constraints': ([], 44969), 'add_graph_edge': ([0, 1], 44965), 'build_succ_graph': ([], 44969), 'free_scc_info': ([], 44969), 'free_var_substitution_info': ([], 44969), 'insert_into_complex': ([], 44969), 'move_complex_constraints': ([], 44969), 'unite_pointer_equivalences': ([], 44969), 'scc_visit': ([], 44969), 'find_indirect_cycles': ([], 44969), 'remove_preds_and_fake_succs': ([], 44969), 'topo_visit': ([], 44969), 'compute_topo_order': ([], 44969), 'VEC_unsigned_base_iterate': ([], 44969), 'eliminate_indirect_cycles': ([], 44969), 'solution_set_expand': ([], 44969), 'do_ds_constraint': ([], 44969), 'do_sd_constraint': ([], 44969), 'solution_set_add': ([], 44969), 'set_union_with_increment': ([], 44969), 'do_complex_constraint': ([], 44969), 'free_topo_info': ([], 44969), 'solve_graph': ([], 44969), 'solve_constraints': ([36, 322], 44948), 'set_uids_in_ptset': ([], 44969), 'shared_bitmap_lookup': ([], 44969), 'shared_bitmap_add': ([], 44969), 'find_what_var_points_to': ([], 44969), 'VEC_varinfo_t_base_iterate': ([], 44969), 'find_what_p_points_to': ([], 44969), 'compute_points_to_sets': ([], 44969), 'delete_points_to_sets': ([3], 44966), 'compute_may_aliases': ([], 44969), 'count_num_arguments': ([], 44969), 'insert_into_field_list_sorted': ([], 44969), 'create_function_info_for': ([], 44969), 'ipa_pta_execute': ([], 44969), 'gate_ipa_pta': ([], 44969)}, "PosixPath('602/tree-dfa.bc')": {'bb_seq': ([], 8587), 'gsi_start_bb': ([], 8587), 'gsi_stmt': ([], 8587), 'renumber_gimple_stmt_uids': ([], 8587), 'renumber_gimple_stmt_uids_in_blocks': ([], 8587), 'get_var_ann': ([], 8587), 'referenced_var_check_and_insert': ([], 8587), 'add_referenced_var': ([], 8587), 'find_vars_r': ([], 8587), 'make_rename_temp': ([], 8587), 'first_htab_element': ([], 8587), 'first_referenced_var': ([], 8587), 'end_htab_p': ([], 8587), 'end_referenced_vars_p': ([], 8587), 'var_ann': ([], 8587), 'is_global_var': ([], 8587), 'may_be_aliased': ([], 8587), 'is_call_clobbered': ([], 8587), 'is_call_used': ([], 8587), 'gimple_default_def': ([], 8587), 'dump_variable': ([6], 8585), 'next_htab_element': ([], 8587), 'next_referenced_var': ([], 8587), 'dump_referenced_vars': ([], 8587), 'gimple_def_ops': ([], 8587), 'gimple_vdef': ([], 8587), 'gimple_use_ops': ([], 8587), 'gimple_vuse': ([], 8587), 'op_iter_init': ([], 8587), 'op_iter_next_tree': ([], 8587), 'op_iter_init_tree': ([], 8587), 'num_ssa_operands': ([], 8587), 'collect_dfa_stats': ([], 8587), 'dump_dfa_stats': ([], 8587), 'gimple_ops': ([], 8587), 'gimple_op_ptr': ([], 8587), 'find_referenced_vars_in': ([], 8587), 'referenced_var_lookup': ([], 8587), 'set_default_def': ([30], 8585), 'remove_referenced_var': ([], 8587), 'get_virtual_var': ([], 8587), 'mark_symbols_for_renaming': ([], 8587), 'find_new_referenced_vars_1': ([0], 8582), 'get_ref_base_and_extent': ([], 8587), 'op_iter_next_use': ([], 8587), 'op_iter_init_use': ([], 8587), 'stmt_references_abnormal_ssa_name': ([], 8587), 'find_referenced_vars': ([], 8587)}, "PosixPath('602/dbxout.bc')": {'dbxout_init': ([], 27669), 'dbxout_end_source_file': ([], 27669), 'dbxout_symbol': ([], 27669), 'dbxout_type': ([52], 27661), 'stabstr_D': ([], 27669), 'stabstr_U': ([], 27669), 'dbxout_int': ([], 27669), 'dbxout_stab_value_internal_label': ([], 27669), 'dbxout_stab_value_internal_label_diff': ([], 27669), 'emit_pending_bincls': ([], 27669), 'emit_pending_bincls_if_required': ([], 27669), 'VEC_tree_base_iterate': ([], 27669), 'output_types_sort': ([], 27669), 'VEC_tree_base_quick_push': ([], 27669), 'output_used_types_helper': ([], 27669), 'output_used_types': ([], 27669), 'dbxout_begin_complex_stabs': ([], 27669), 'dbxout_type_index': ([], 27669), 'print_int_cst_bounds_in_octal_p': ([], 27669), 'stabstr_O': ([], 27669), 'dbxout_type_name': ([], 27669), 'dbxout_type_methods': ([], 27669), 'dbxout_type_fields': ([7], 27663), 'dbxout_range_type': ([], 27669), 'dbxout_finish_complex_stabs': ([], 27669), 'dbxout_class_name_qualifiers': ([], 27669), 'dbxout_symbol_name': ([], 27669), 'dbxout_expand_expr': ([], 27669), 'dbxout_common_check': ([9], 27667), 'dbxout_symbol_location': ([31], 27666), 'dbxout_syms': ([], 27669), 'dbxout_parms': ([64, 82], 27661), 'dbxout_reg_parms': ([], 27669), 'dbxout_start_source_file': ([], 27669), 'dbxout_global_decl': ([], 27669), 'dbxout_block': ([], 27669), 'dbxout_function_end': ([], 27669), 'dbxout_function_decl': ([], 27669), 'dbxout_begin_function': ([], 27669), 'dbxout_source_line': ([], 27669), 'dbxout_begin_prologue': ([], 27669), 'dbxout_end_block': ([], 27669), 'dbxout_begin_block': ([], 27669), 'dbxout_typedefs': ([], 27669)}, "PosixPath('602/sese.bc')": {'bb_in_sese_p': ([], 14931), 'VEC_loop_p_base_space': ([], 14931), 'VEC_loop_p_heap_reserve': ([], 14931), 'VEC_loop_p_base_quick_push': ([], 14931), 'VEC_loop_p_heap_safe_push': ([], 14931), 'sese_record_loop': ([], 14931), 'VEC_loop_p_base_iterate': ([], 14931), 'build_sese_loop_nests': ([], 14931), 'new_sese': ([], 14931), 'free_sese': ([], 14931), 'ei_end_p': ([], 14931), 'ei_cond': ([], 14931), 'gsi_stmt': ([], 14931), 'sese_build_liveouts_use': ([], 14931), 'ei_next': ([], 14931), 'bb_seq': ([], 14931), 'gsi_start_bb': ([], 14931), 'gimple_def_ops': ([], 14931), 'gimple_vdef': ([], 14931), 'gimple_use_ops': ([], 14931), 'gimple_vuse': ([], 14931), 'op_iter_init': ([], 14931), 'op_iter_next_use': ([], 14931), 'op_iter_init_use': ([], 14931), 'sese_build_liveouts_bb': ([], 14931), 'sese_bad_liveouts_use': ([], 14931), 'gimple_ops': ([], 14931), 'gimple_set_op': ([], 14931), 'gimple_debug_bind_reset_value': ([], 14931), 'sese_reset_debug_liveouts_bb': ([], 14931), 'sese_build_liveouts': ([], 14931), 'bmp_iter_set_init': ([], 14931), 'bmp_iter_set': ([], 14931), 'sese_insert_phis_for_liveouts': ([], 14931), 'new_rename_map_elt': ([], 14931), 'set_rename': ([], 14931), 'VEC_int_base_quick_push': ([], 14931), 'loop_outer': ([], 14931), 'VEC_int_base_iterate': ([], 14931), 'fel_next': ([], 14931), 'fel_init': ([], 14931), 'get_rename': ([], 14931), 'rename_variables_in_expr': ([], 14931), 'rename_nb_iterations': ([], 14931), 'VEC_tree_base_iterate': ([], 14931), 'rename_sese_parameters': ([], 14931), 'gimple_vuse_op': ([], 14931), 'get_vdef_before_sese': ([8, 12], 14921), 'delink_imm_use': ([], 14931), 'link_imm_use_to_list': ([], 14931), 'link_imm_use': ([], 14931), 'set_ssa_use_from_ptr': ([], 14931), 'sese_adjust_vphi': ([], 14931), 'sese_adjust_liveout_phis': ([], 14931), 'get_true_edge_from_guard_bb': ([], 14931), 'get_false_edge_from_guard_bb': ([], 14931), 'VEC_rename_map_elt_base_iterate': ([], 14931), 'name_defined_in_loop_p': ([], 14931), 'expr_defined_in_loop_p': ([], 14931), 'end_readonly_imm_use_p': ([], 14931), 'first_readonly_imm_use': ([], 14931), 'next_readonly_imm_use': ([], 14931), 'alive_after_loop': ([], 14931), 'close_phi_not_yet_inserted_p': ([], 14931), 'single_pred_edge': ([], 14931), 'VEC_rename_map_elt_base_space': ([], 14931), 'VEC_rename_map_elt_heap_reserve': ([], 14931), 'VEC_rename_map_elt_base_quick_push': ([], 14931), 'VEC_rename_map_elt_heap_safe_push': ([], 14931), 'add_loop_exit_phis': ([], 14931), 'insert_loop_close_phis': ([], 14931), 'convert_for_phi_arg': ([], 14931), 'add_guard_exit_phis': ([], 14931), 'insert_guard_phis': ([], 14931), 'single_succ_edge': ([], 14931), 'gimple_vop': ([], 14931), 'op_iter_next_def': ([], 14931), 'op_iter_init_def': ([], 14931), 'graphite_copy_stmts_from_block': ([], 14931), 'gsi_last_bb': ([], 14931), 'remove_condition': ([], 14931), 'gsi_after_labels': ([], 14931), 'gimple_op': ([], 14931), 'gimple_assign_rhs1': ([], 14931), 'gimple_assign_rhs_code': ([], 14931), 'gimple_assign_rhs2': ([], 14931), 'gimple_call_fn': ([], 14931), 'gimple_call_return_type': ([], 14931), 'gimple_expr_type': ([], 14931), 'gimple_call_fndecl': ([], 14931), 'gimple_call_arg': ([], 14931), 'VEC_tree_base_quick_push': ([], 14931), 'gimple_call_lhs': ([], 14931), 'gimple_call_set_lhs': ([], 14931), 'expand_scalar_variables_stmt': ([], 14931), 'expand_scalar_variables_expr': ([], 14931), 'expand_scalar_variables_ssa_name': ([], 14931), 'expand_scalar_variables_call': ([1], 14929), 'expand_scalar_variables': ([], 14931), 'rename_variables_in_stmt': ([], 14931), 'rename_variables': ([], 14931), 'copy_bb_and_scalar_dependences': ([0], 14925), 'loop_in_sese_p': ([], 14931), 'outermost_loop_in_sese': ([], 14931), 'if_region_set_false_region': ([], 14931), 'create_if_region_on_edge': ([], 14931), 'move_sese_in_condition': ([], 14931), 'set_ifsese_condition': ([], 14931), 'defined_in_sese_p': ([], 14931), 'scalar_evolution_in_region': ([], 14931)}, "PosixPath('602/tree-ssa-ifcombine.bc')": {'tree_ssa_ifcombine_bb': ([], 8111), 'recognize_if_then_else': ([11], 8109), 'single_pred_edge': ([], 8111), 'gsi_stmt': ([], 8111), 'same_phi_args_p': ([5], 8102), 'bb_seq': ([], 8111), 'gsi_start_bb': ([], 8111), 'gimple_vuse': ([], 8111), 'bb_no_side_effects_p': ([], 8111), 'gimple_ops': ([], 8111), 'gimple_op': ([], 8111), 'gimple_cond_lhs': ([], 8111), 'gimple_cond_rhs': ([], 8111), 'gimple_assign_rhs1': ([], 8111), 'gimple_assign_rhs_code': ([], 8111), 'gimple_assign_rhs2': ([], 8111), 'gimple_assign_lhs': ([], 8111), 'has_single_use': ([], 8111), 'get_name_for_bit_test': ([], 8111), 'recognize_single_bit_test': ([], 8111), 'ifcombine_ifandif': ([], 8111), 'recognize_bits_test': ([], 8111), 'ifcombine_iforif': ([0, 5], 8081), 'tree_ssa_ifcombine': ([92, 97], 8081)}, "PosixPath('602/options.bc')": {'cl_optimization_save': ([], 114683), 'cl_optimization_restore': ([], 114683), 'cl_optimization_print': ([], 114683), 'cl_target_option_save': ([], 114683), 'cl_target_option_restore': ([], 114683), 'cl_target_option_print': ([], 114683)}, "PosixPath('602/getopt1.bc')": {}, "PosixPath('602/graphite-poly.bc')": {}, "PosixPath('602/print-tree.bc')": {'print_node': ([35, 50, 59, 80, 84, 87, 95], 10120), 'print_node_brief': ([4, 10], 10263), 'init_call_expr_arg_iterator': ([], 10267), 'next_call_expr_arg': ([], 10267), 'first_call_expr_arg': ([], 10267), 'tree_operand_length': ([], 10267)}, "PosixPath('602/unlink-if-ordinary.bc')": {'unlink_if_ordinary': ([], 146)}, "PosixPath('602/double-int.bc')": {'dump_double_int': ([], 3514), 'tree_to_double_int': ([], 3514), 'double_int_mul': ([], 3514), 'double_int_add': ([], 3514), 'double_int_neg': ([], 3514), 'double_int_divmod': ([], 3514), 'double_int_sdivmod': ([], 3514), 'double_int_udivmod': ([], 3514), 'double_int_div': ([], 3514), 'double_int_sdiv': ([], 3514), 'double_int_udiv': ([], 3514), 'double_int_mod': ([], 3514), 'double_int_smod': ([], 3514), 'double_int_umod': ([], 3514), 'double_int_to_tree': ([], 3514), 'double_int_fits_to_tree_p': ([], 3514), 'double_int_split_digit': ([], 3514), 'mpz_set_double_int': ([], 3514), 'mpz_get_double_int': ([], 3514)}, "PosixPath('602/tree-switch-conversion.bc')": {'gimple_ops': ([], 6435), 'gimple_op': ([], 6435), 'gimple_switch_index': ([], 6435), 'gimple_switch_label': ([], 6435), 'check_range': ([], 6435), 'single_succ_edge': ([], 6435), 'check_process_case': ([], 6435), 'gsi_stmt': ([], 6435), 'single_pred_edge': ([], 6435), 'check_final_bb': ([], 6435), 'create_temp_arrays': ([], 6435), 'gather_default_values': ([], 6435), 'build_constructors': ([], 6435), 'build_one_array': ([], 6435), 'build_arrays': ([], 6435), 'gen_def_assigns': ([], 6435), 'bb_seq': ([], 6435), 'gsi_start_bb': ([], 6435), 'ei_end_p': ([], 6435), 'ei_safe_edge': ([], 6435), 'prune_bbs': ([], 6435), 'fix_phi_nodes': ([], 6435), 'gen_inbound_check': ([], 6435), 'process_switch': ([], 6435), 'do_switchconv': ([], 6435)}, "PosixPath('602/langhooks.bc')": {'add_builtin_function_common': ([6], 3208), 'lhd_warn_unused_global_decl': ([], 3209), 'lhd_set_decl_assembler_name': ([0], 3203), 'lhd_decl_printable_name': ([0], 3207), 'lhd_dwarf_name': ([], 3209), 'lhd_tree_dump_type_quals': ([], 3209), 'lhd_print_error_function': ([], 3209)}, "PosixPath('602/tree-ssa-address.bc')": {'VEC_mem_addr_template_base_space': ([], 6133), 'VEC_mem_addr_template_gc_reserve_exact': ([], 6133), 'VEC_mem_addr_template_gc_safe_grow': ([], 6133), 'VEC_mem_addr_template_gc_safe_grow_cleared': ([], 6133), 'gen_addr_rtx': ([], 6133), 'addr_for_mem_ref': ([], 6133), 'tree_mem_ref_addr': ([], 6133), 'fixed_address_object_p': ([], 6133), 'move_fixed_address_to_symbol': ([], 6133), 'most_expensive_mult_to_index': ([], 6133), 'move_hint_to_base': ([], 6133), 'move_pointer_to_base': ([], 6133), 'add_to_parts': ([], 6133), 'addr_to_parts': ([], 6133), 'gimplify_mem_ref_parts': ([], 6133), 'create_mem_ref_raw': ([2, 3], 6124), 'create_mem_ref': ([14, 64], 6112), 'get_address_description': ([], 6133), 'copy_mem_ref_info': ([], 6133), 'maybe_fold_tmr': ([], 6133), 'dump_mem_address': ([], 6133)}, "PosixPath('602/tree-ssa-loop-ch.bc')": {'VEC_int_base_quick_push': ([], 1652), 'loop_outer': ([], 1652), 'VEC_int_base_iterate': ([], 1652), 'fel_next': ([], 1652), 'fel_init': ([], 1652), 'bb_seq': ([], 1652), 'gsi_start_bb': ([], 1652), 'gsi_stmt': ([], 1652), 'should_duplicate_loop_header_p': ([], 1652), 'single_pred_edge': ([], 1652), 'gimple_ops': ([], 1652), 'gimple_op': ([], 1652), 'gimple_assign_rhs1': ([], 1652), 'gimple_assign_rhs_code': ([], 1652), 'copy_loop_headers': ([], 1652)}, "PosixPath('602/regex.bc')": {'byte_re_match_2_internal': ([0, 35, 130, 155, 179, 249], 26725), 'byte_re_compile_fastmap': ([], 27137), 'xre_set_registers': ([0], 27134), 'byte_group_match_null_string_p': ([], 27137), 'byte_alt_match_null_string_p': ([], 27137), 'byte_common_op_match_null_string_p': ([], 27137), 'byte_bcmp_translate': ([], 27137), 'byte_re_search_2': ([], 27137), 'xre_search_2': ([], 27137), 'byte_at_begline_loc_p': ([], 27137), 'byte_at_endline_loc_p': ([], 27137), 'byte_store_op1': ([], 27137), 'byte_insert_op1': ([], 27137), 'byte_compile_range': ([], 27137), 'byte_store_op2': ([], 27137), 'byte_insert_op2': ([], 27137), 'byte_regex_compile': ([0, 3, 122, 126, 133, 137, 142, 143, 208, 225], 26389), 'xre_compile_pattern': ([], 27137), 'xre_comp': ([], 27137), 'xregcomp': ([], 27137), 'xregexec': ([], 27137), 'xregfree': ([], 27137)}, "PosixPath('602/tree-ssa.bc')": {'insert_debug_temp_for_var_def': ([3, 12], 15689), 'first_imm_use_on_stmt': ([], 15727), 'next_imm_use_on_stmt': ([], 15727), 'delete_tree_ssa': ([], 15727), 'VEC_edge_var_map_base_space': ([], 15727), 'VEC_edge_var_map_heap_reserve': ([], 15727), 'VEC_edge_var_map_base_quick_push': ([], 15727), 'VEC_edge_var_map_heap_safe_push': ([], 15727), 'redirect_edge_var_map_add': ([], 15727), 'VEC_edge_var_map_heap_copy': ([], 15727), 'redirect_edge_var_map_dup': ([], 15727), 'gsi_stmt': ([], 15727), 'ssa_redirect_edge': ([1, 6], 15714), 'flush_pending_stmts': ([], 15727), 'target_for_debug_bind': ([], 15727), 'end_readonly_imm_use_p': ([], 15727), 'first_readonly_imm_use': ([], 15727), 'gimple_ops': ([], 15727), 'gimple_op': ([], 15727), 'gimple_debug_bind_get_value': ([], 15727), 'next_readonly_imm_use': ([], 15727), 'end_imm_use_stmt_p': ([], 15727), 'clear_and_done_ssa_iter': ([], 15727), 'op_iter_next_use': ([], 15727), 'op_iter_init_phiuse': ([], 15727), 'delink_imm_use': ([], 15727), 'link_imm_use_to_list': ([], 15727), 'move_use_after_head': ([], 15727), 'gimple_def_ops': ([], 15727), 'gimple_vdef': ([], 15727), 'gimple_use_ops': ([], 15727), 'gimple_vuse': ([], 15727), 'op_iter_init': ([], 15727), 'op_iter_init_use': ([7], 15708), 'gimple_vuse_op': ([], 15727), 'link_use_stmts_after': ([], 15727), 'first_imm_use_stmt': ([], 15727), 'link_imm_use': ([], 15727), 'set_ssa_use_from_ptr': ([], 15727), 'gimple_set_op': ([], 15727), 'gimple_debug_bind_reset_value': ([], 15727), 'next_imm_use_stmt': ([], 15727), 'op_iter_init_phidef': ([], 15727), 'op_iter_next_def': ([], 15727), 'op_iter_init_def': ([], 15727), 'insert_debug_temps_for_defs': ([], 15727), 'bmp_iter_set_init': ([], 15727), 'bmp_iter_set': ([], 15727), 'end_imm_use_stmt_traverse': ([], 15727), 'release_defs_bitset': ([], 15727), 'gimple_vop': ([0], 15725), 'verify_ssa_name': ([], 15727), 'ei_end_p': ([], 15727), 'ei_cond': ([], 15727), 'ei_next': ([], 15727), 'verify_use': ([1], 15724), 'verify_phi_args': ([], 15727), 'bb_seq': ([], 15727), 'gsi_start_bb': ([], 15727), 'gimple_assign_lhs': ([], 15727), 'gimple_debug_bind_has_value_p': ([], 15727), 'gimple_vdef_op': ([], 15727), 'op_iter_next_tree': ([], 15727), 'op_iter_init_tree': ([], 15727), 'verify_ssa': ([50], 15671), 'first_htab_element': ([], 15727), 'first_referenced_var': ([], 15727), 'end_htab_p': ([], 15727), 'end_referenced_vars_p': ([], 15727), 'is_global_var': ([], 15727), 'var_ann': ([], 15727), 'next_htab_element': ([], 15727), 'next_referenced_var': ([], 15727), 'useless_type_conversion_p': ([64], 15725), 'tree_ssa_useless_type_conversion': ([], 15727), 'tree_ssa_strip_useless_type_conversions': ([], 15727), 'walk_use_def_chains_1': ([], 15727), 'walk_use_def_chains': ([], 15727), 'ssa_undefined_value_p': ([], 15727), 'gimple_references_memory_p': ([], 15727), 'execute_update_addresses_taken': ([], 15727), 'single_succ_edge': ([], 15727), 'warn_uninit': ([], 15727), 'warn_uninitialized_var': ([], 15727), 'warn_uninitialized_vars': ([], 15727), 'warn_uninitialized_phi': ([], 15727), 'execute_late_warn_uninitialized': ([], 15727)}, "PosixPath('602/safe-ctype.bc')": {}, "PosixPath('602/partition.bc')": {'partition_new': ([], 846), 'partition_union': ([21], 843), 'partition_print': ([], 846)}, "PosixPath('602/ipa-type-escape.bc')": {'ipa_type_escape_star_count_of_interesting_type': ([], 13066), 'ipa_type_escape_star_count_of_interesting_or_array_type': ([], 13066), 'type_to_consider': ([], 13066), 'get_name_of_type': ([], 13066), 'discover_unique_type': ([], 13066), 'get_canon_type': ([], 13066), 'ipa_type_escape_field_does_not_clobber_p': ([], 13066), 'gimple_def_ops': ([], 13066), 'gimple_vdef': ([], 13066), 'gimple_use_ops': ([], 13066), 'gimple_vuse': ([], 13066), 'op_iter_init': ([], 13066), 'op_iter_next_tree': ([], 13066), 'op_iter_init_tree': ([], 13066), 'single_ssa_tree_operand': ([], 13066), 'gimple_ops': ([], 13066), 'gimple_op': ([], 13066), 'gimple_assign_lhs': ([], 13066), 'gimple_assign_rhs1': ([], 13066), 'gimple_assign_rhs_code': ([], 13066), 'gimple_assign_rhs2': ([], 13066), 'gimple_assign_cast_p': ([], 13066), 'count_stars': ([], 13066), 'VEC_tree_base_iterate': ([], 13066), 'parent_type_p': ([], 13066), 'check_cast_type': ([], 13066), 'gimple_call_lhs': ([], 13066), 'is_malloc_result': ([], 13066), 'check_cast': ([], 13066), 'look_for_casts': ([0], 13060), 'look_for_casts_stmt': ([], 13066), 'op_iter_next_use': ([], 13066), 'op_iter_init_use': ([], 13066), 'is_cast_from_non_pointer': ([], 13066), 'is_array_access_through_pointer_and_index': ([], 13066), 'compare_type_brand': ([], 13066), 'mark_interesting_type': ([], 13066), 'check_function_parameter_and_return_types': ([], 13066), 'has_proper_scope_for_analysis': ([], 13066), 'check_operand': ([], 13066), 'check_tree': ([0], 13061), 'analyze_variable': ([], 13066), 'bb_seq': ([], 13066), 'gsi_start_bb': ([], 13066), 'gsi_stmt': ([], 13066), 'okay_pointer_operation': ([], 13066), 'mark_interesting_addressof': ([], 13066), 'look_for_address_of': ([], 13066), 'check_rhs_var': ([], 13066), 'check_assign': ([], 13066), 'gimple_call_fn': ([], 13066), 'gimple_call_fndecl': ([], 13066), 'gimple_call_arg': ([], 13066), 'check_call': ([], 13066), 'gimple_asm_output_op': ([], 13066), 'gimple_asm_input_op': ([], 13066), 'check_asm': ([], 13066), 'scan_for_refs': ([], 13066), 'analyze_function': ([], 13066), 'bmp_iter_set_init': ([], 13066), 'bmp_iter_set': ([], 13066), 'close_type_seen': ([], 13066), 'close_type_exposed_parameter': ([], 13066), 'close_type_full_escape': ([], 13066), 'close_addressof_down': ([], 13066), 'type_escape_execute': ([], 13066), 'gate_type_escape_vars': ([], 13066)}, "PosixPath('602/fwprop.bc')": {'propagate_rtx': ([4], 9334), 'propagate_rtx_1': ([], 9335), 'VEC_df_ref_base_space': ([], 9335), 'VEC_df_ref_heap_reserve_exact': ([], 9335), 'VEC_df_ref_heap_safe_grow': ([], 9335), 'VEC_df_ref_heap_safe_grow_cleared': ([], 9335), 'VEC_df_ref_base_pop': ([], 9335), 'single_def_use_leave_block': ([], 9335), 'df_md_get_bb_info': ([], 9335), 'df_lr_get_bb_info': ([], 9335), 'VEC_df_ref_heap_reserve': ([], 9335), 'VEC_df_ref_base_quick_push': ([], 9335), 'VEC_df_ref_heap_safe_push': ([], 9335), 'df_scan_get_bb_info': ([], 9335), 'df_get_artificial_uses': ([], 9335), 'process_uses': ([], 9335), 'df_get_artificial_defs': ([], 9335), 'process_defs': ([], 9335), 'single_def_use_enter_block': ([], 9335), 'build_single_def_use_links': ([], 9335), 'fwprop_init': ([], 9335), 'loop_outer': ([], 9335), 'local_ref_killed_between_p': ([1], 9323), 'single_pred_edge': ([], 9335), 'use_killed_between': ([], 9335), 'all_uses_available_at': ([7], 9323), 'can_simplify_addr': ([0], 9330), 'canonicalize_address': ([], 9335), 'forward_propagate_asm': ([], 9335), 'find_occurrence': ([], 9335), 'update_df': ([], 9335), 'try_fwprop_subst': ([], 9335), 'forward_propagate_and_simplify': ([11], 9332), 'forward_propagate_subreg': ([], 9335), 'forward_propagate_into': ([], 9335), 'fwprop_addr': ([], 9335), 'fwprop': ([], 9335)}, "PosixPath('602/expmed.bc')": {'choose_mult_variant': ([10], 43677), 'choose_multiplier': ([4, 6, 14, 15], 43670), 'synth_mult': ([0, 1, 7, 9], 43380), 'init_expmed': ([705], 43690), 'mode_for_extraction': ([], 43697), 'make_tree': ([], 43697), 'expand_shift': ([], 43697), 'extract_fixed_bit_field': ([0, 9], 43688), 'extract_split_bit_field': ([7], 43687), 'store_fixed_bit_field': ([], 43697), 'store_split_bit_field': ([], 43697), 'store_bit_field_1': ([1, 24, 27, 43, 46, 47], 43641), 'convert_extracted_bit_field': ([], 43697), 'extract_bit_field_1': ([40, 61], 43667), 'extract_low_bits': ([], 43697), 'expand_mult_const': ([], 43697), 'expand_mult': ([], 43697), 'emit_cstore': ([], 43697), 'emit_store_flag': ([42], 43683), 'emit_store_flag_1': ([], 43697), 'emit_store_flag_force': ([], 43697), 'extract_high_half': ([], 43697), 'expand_mult_highpart_optab': ([], 43697), 'expand_mult_highpart': ([], 43697), 'expand_divmod': ([], 43697)}, "PosixPath('602/tree-ssa-operands.bc')": {'init_ssa_operands': ([], 10028), 'create_vop_var': ([], 10028), 'fini_ssa_operands': ([], 10028), 'first_imm_use_on_stmt': ([], 10028), 'next_imm_use_on_stmt': ([], 10028), 'gimple_def_ops': ([], 10028), 'gimple_use_ops': ([], 10028), 'delink_imm_use': ([], 10028), 'free_stmt_operands': ([15], 10021), 'gimple_ops': ([], 10028), 'gimple_op': ([], 10028), 'gimple_asm_output_op': ([], 10028), 'VEC_tree_base_space': ([], 10028), 'VEC_tree_heap_reserve': ([], 10028), 'VEC_tree_base_quick_push': ([], 10028), 'VEC_tree_heap_safe_push': ([], 10028), 'append_def': ([], 10028), 'append_use': ([], 10028), 'gimple_vop': ([], 10028), 'add_virtual_operand': ([], 10028), 'add_stmt_operand': ([0, 2], 10014), 'get_expr_operands': ([1], 10026), 'gimple_asm_input_op': ([], 10028), 'gimple_asm_clobber_op': ([], 10028), 'get_asm_expr_operands': ([], 10028), 'gimple_debug_bind_has_value_p': ([], 10028), 'gimple_op_ptr': ([], 10028), 'gimple_debug_bind_get_value_ptr': ([], 10028), 'parse_ssa_operands': ([], 10028), 'gimple_vdef': ([], 10028), 'VEC_tree_base_quick_insert': ([], 10028), 'VEC_tree_heap_safe_insert': ([], 10028), 'end_imm_use_stmt_p': ([], 10028), 'clear_and_done_ssa_iter': ([], 10028), 'op_iter_next_use': ([], 10028), 'op_iter_init_phiuse': ([], 10028), 'link_imm_use_to_list': ([], 10028), 'move_use_after_head': ([2], 10006), 'gimple_vuse': ([], 10028), 'op_iter_init': ([], 10028), 'op_iter_init_use': ([], 10028), 'gimple_vuse_op': ([], 10028), 'link_use_stmts_after': ([], 10028), 'first_imm_use_stmt': ([], 10028), 'link_imm_use': ([], 10028), 'set_ssa_use_from_ptr': ([], 10028), 'next_imm_use_stmt': ([], 10028), 'unlink_stmt_vdef': ([49, 50, 83], 10015), 'ssa_operand_alloc': ([], 10028), 'alloc_def': ([], 10028), 'add_def_op': ([], 10028), 'finalize_ssa_defs': ([], 10028), 'alloc_use': ([], 10028), 'link_imm_use_stmt': ([], 10028), 'add_use_op': ([], 10028), 'finalize_ssa_uses': ([], 10028), 'finalize_ssa_stmt_operands': ([], 10028), 'build_ssa_operands': ([], 10028), 'update_stmt_operands': ([37], 10025), 'swap_tree_operands': ([], 10028), 'verify_imm_links': ([], 10028), 'has_zero_uses': ([], 10028), 'has_single_use': ([], 10028), 'num_imm_uses': ([], 10028), 'end_readonly_imm_use_p': ([], 10028), 'first_readonly_imm_use': ([], 10028), 'next_readonly_imm_use': ([], 10028), 'dump_immediate_uses_for': ([1], 10023), 'dump_immediate_uses': ([], 10028)}, "PosixPath('602/tree-ssa-loop-im.bc')": {'for_each_index': ([3], 17640), 'gimple_vdef': ([], 17643), 'gimple_ops': ([], 17643), 'gimple_op': ([], 17643), 'gimple_call_lhs': ([], 17643), 'gimple_assign_lhs': ([], 17643), 'movement_possibility': ([], 17643), 'lsm_tmp_name_add': ([], 17643), 'gen_lsm_tmp_name': ([], 17643), 'get_lsm_tmp_name': ([], 17643), 'bb_seq': ([], 17643), 'gsi_start_bb': ([], 17643), 'gsi_stmt': ([], 17643), 'ei_end_p': ([], 17643), 'ei_cond': ([], 17643), 'ei_next': ([], 17643), 'fill_always_executed_in': ([], 17643), 'tree_ssa_lim_initialize': ([], 17643), 'VEC_bitmap_base_quick_push': ([], 17643), 'VEC_htab_t_base_quick_push': ([], 17643), 'gimple_vuse': ([], 17643), 'gimple_assign_rhs1': ([], 17643), 'gimple_assign_rhs_code': ([], 17643), 'gimple_op_ptr': ([], 17643), 'gimple_assign_lhs_ptr': ([], 17643), 'gimple_assign_rhs1_ptr': ([], 17643), 'simple_mem_ref_in_stmt': ([], 17643), 'mem_ref_alloc': ([], 17643), 'VEC_mem_ref_p_base_space': ([], 17643), 'VEC_mem_ref_p_heap_reserve': ([], 17643), 'VEC_mem_ref_p_base_quick_push': ([], 17643), 'VEC_mem_ref_p_heap_safe_push': ([], 17643), 'loop_outer': ([], 17643), 'mark_ref_stored': ([], 17643), 'VEC_mem_ref_locs_p_base_space': ([], 17643), 'VEC_mem_ref_locs_p_heap_reserve_exact': ([], 17643), 'VEC_mem_ref_locs_p_heap_safe_grow': ([], 17643), 'VEC_mem_ref_locs_p_heap_safe_grow_cleared': ([], 17643), 'VEC_mem_ref_loc_p_base_space': ([], 17643), 'VEC_mem_ref_loc_p_heap_reserve': ([], 17643), 'VEC_mem_ref_loc_p_base_quick_push': ([], 17643), 'VEC_mem_ref_loc_p_heap_safe_push': ([], 17643), 'record_mem_ref_loc': ([], 17643), 'gather_mem_refs_stmt': ([], 17643), 'VEC_int_base_quick_push': ([], 17643), 'VEC_int_base_iterate': ([], 17643), 'fel_next': ([], 17643), 'fel_init': ([], 17643), 'gather_mem_refs_in_loops': ([], 17643), 'bmp_iter_set_init': ([], 17643), 'bmp_iter_set': ([], 17643), 'bmp_iter_and_compl_init': ([], 17643), 'bmp_iter_and_compl': ([], 17643), 'add_vop_ref_mapping': ([], 17643), 'create_vop_ref_mapping_loop': ([], 17643), 'create_vop_ref_mapping': ([], 17643), 'vtoe_free': ([], 17643), 'VEC_mem_ref_locs_p_base_iterate': ([], 17643), 'VEC_mem_ref_loc_p_base_iterate': ([], 17643), 'free_mem_ref_locs': ([], 17643), 'memref_free': ([], 17643), 'analyze_memory_references': ([169], 17638), 'gimple_assign_rhs2': ([], 17643), 'outermost_invariant_loop': ([], 17643), 'gimple_set_op': ([], 17643), 'gimple_assign_set_lhs': ([], 17643), 'rewrite_reciprocal': ([], 17643), 'has_single_use': ([], 17643), 'single_imm_use': ([], 17643), 'gimple_cond_lhs': ([], 17643), 'gimple_cond_rhs': ([], 17643), 'delink_imm_use': ([], 17643), 'link_imm_use_to_list': ([], 17643), 'link_imm_use': ([], 17643), 'set_ssa_use_from_ptr': ([], 17643), 'gimple_cond_set_rhs': ([], 17643), 'rewrite_bittest': ([], 17643), 'gimple_use_ops': ([], 17643), 'op_iter_init': ([], 17643), 'op_iter_next_tree': ([], 17643), 'op_iter_init_tree': ([], 17643), 'add_dependency': ([], 17643), 'mem_ref_in_stmt': ([], 17643), 'cannot_overlap_p': ([], 17643), 'mem_refs_may_alias_p': ([], 17643), 'refs_independent_p': ([], 17643), 'ref_indep_loop_p_1': ([], 17643), 'ref_indep_loop_p': ([], 17643), 'gimple_references_memory_p': ([], 17643), 'gimple_call_fn': ([], 17643), 'gimple_call_fndecl': ([], 17643), 'stmt_cost': ([], 17643), 'determine_max_movement': ([], 17643), 'set_level': ([], 17643), 'set_profitable_level': ([], 17643), 'determine_invariantness_stmt': ([22, 33, 109], 17631), 'determine_invariantness': ([], 17643), 'VEC_edge_base_iterate': ([], 17643), 'get_all_locs_in_loop': ([], 17643), 'ref_always_accessed_p': ([], 17643), 'may_move_till': ([], 17643), 'can_sm_ref_p': ([], 17643), 'find_refs_for_sm': ([], 17643), 'rewrite_mem_refs': ([], 17643), 'force_move_till_op': ([], 17643), 'force_move_till': ([], 17643), 'execute_sm': ([], 17643), 'hoist_memory_references': ([], 17643), 'store_motion_loop': ([], 17643), 'move_computations_stmt': ([7], 17637), 'move_computations': ([], 17643), 'VEC_bitmap_base_iterate': ([], 17643), 'VEC_htab_t_base_iterate': ([], 17643), 'tree_ssa_lim_finalize': ([], 17643), 'tree_ssa_lim': ([], 17643)}, "PosixPath('602/c-lang.bc')": {}, "PosixPath('602/sdbout.bc')": {}, "PosixPath('602/c-decl.bc')": {'push_scope': ([0], 84848), 'c_bindings_end_stmt_expr': ([], 84874), 'pushdecl': ([5, 31], 84868), 'implicitly_declare': ([3], 84871), 'groktypename': ([], 84874), 'grokdeclarator': ([16, 25, 42, 43, 327, 433], 84625), 'start_decl': ([23], 84866), 'build_compound_literal': ([], 84874), 'parser_xref_tag': ([], 84874), 'finish_struct': ([32, 103, 301], 84858), 'finish_enum': ([], 84874), 'start_function': ([], 84874), 'merge_decls': ([6], 84871), 'grokparms': ([], 84874), 'add_stmt': ([], 84874), 'c_print_identifier': ([], 84874), 'c_finish_incomplete_decl': ([], 84874), 'record_inline_static': ([], 84874), 'objc_mark_locals_volatile': ([], 84874), 'update_spot_bindings': ([], 84874), 'decl_jump_unsafe': ([], 84874), 'VEC_tree_base_space': ([], 84874), 'VEC_tree_gc_reserve': ([], 84874), 'VEC_tree_base_quick_push': ([], 84874), 'VEC_tree_gc_safe_push': ([], 84874), 'VEC_c_goto_bindings_p_base_iterate': ([], 84874), 'update_label_decls': ([], 84874), 'set_type_context': ([], 84874), 'free_binding_and_advance': ([], 84874), 'pop_scope': ([230], 84862), 'bind': ([], 84874), 'push_file_scope': ([], 84874), 'check_inline_statics': ([], 84874), 'pop_file_scope': ([], 84874), 'c_bindings_start_stmt_expr': ([], 84874), 'locate_old_decl': ([], 84874), 'match_builtin_function_types': ([], 84874), 'diagnose_arglist_conflict': ([0], 84868), 'validate_proto_after_old_defn': ([], 84874), 'diagnose_mismatched_decls': ([0], 84860), 'duplicate_decls': ([2], 84868), 'warn_if_shadowing': ([], 84874), 'pushdecl_top_level': ([0], 84864), 'set_spot_bindings': ([], 84874), 'make_label': ([], 84874), 'bind_label': ([], 84874), 'lookup_label': ([], 84874), 'VEC_c_goto_bindings_p_base_space': ([], 84874), 'VEC_c_goto_bindings_p_gc_reserve': ([], 84874), 'VEC_c_goto_bindings_p_base_quick_push': ([], 84874), 'VEC_c_goto_bindings_p_gc_safe_push': ([], 84874), 'VEC_tree_base_iterate': ([], 84874), 'lookup_label_for_goto': ([], 84874), 'declare_label': ([], 84874), 'check_earlier_gotos': ([], 84874), 'lookup_name': ([], 84874), 'define_label': ([], 84874), 'c_get_switch_bindings': ([], 84874), 'c_release_switch_bindings': ([], 84874), 'c_check_switch_jump_warnings': ([], 84874), 'add_flexible_array_elts_to_size': ([], 84874), 'finish_decl': ([1], 84854), 'c_make_fname_decl': ([], 84874), 'c_builtin_function': ([], 84874), 'c_builtin_function_ext_scope': ([], 84874), 'lookup_tag': ([], 84874), 'pushtag': ([], 84874), 'shadow_tag_warned': ([], 84874), 'quals_from_declspecs': ([], 84874), 'build_array_declarator': ([], 84874), 'flexible_array_type_p': ([], 84874), 'c_variable_size': ([], 84874), 'check_bitfield_type_and_width': ([], 84874), 'identifier_global_value': ([], 84874), 'grokparm': ([], 84874), 'push_parm_decl': ([], 84874), 'mark_forward_parm_decls': ([], 84874), 'get_parm_info': ([29], 84871), 'xref_tag': ([], 84874), 'start_struct': ([], 84874), 'VEC_c_binding_ptr_base_space': ([], 84874), 'VEC_c_binding_ptr_heap_reserve': ([], 84874), 'VEC_c_binding_ptr_base_quick_push': ([], 84874), 'VEC_c_binding_ptr_heap_safe_push': ([], 84874), 'grokfield': ([], 84874), 'detect_field_duplicates': ([], 84874), 'VEC_c_binding_ptr_base_iterate': ([], 84874), 'warn_cxx_compat_finish_struct': ([], 84874), 'VEC_tree_heap_reserve': ([], 84874), 'VEC_tree_heap_safe_push': ([1], 84872), 'start_enum': ([4], 84863), 'build_enumerator': ([0], 84861), 'lookup_name_in_scope': ([], 84874), 'store_parm_decls_newstyle': ([], 84874), 'store_parm_decls_oldstyle': ([], 84874), 'store_parm_decls': ([], 84874), 'finish_function': ([], 84874), 'check_for_loop_decls': ([], 84874), 'c_push_function_context': ([], 84874), 'c_pop_function_context': ([], 84874), 'build_c_parm': ([], 84874), 'build_attrs_declarator': ([], 84874), 'build_function_declarator': ([], 84874), 'build_id_declarator': ([], 84874), 'make_pointer_declarator': ([], 84874), 'build_null_declspecs': ([], 84874), 'declspecs_add_addrspace': ([], 84874), 'declspecs_add_qual': ([], 84874), 'declspecs_add_type': ([2, 6, 7], 84865), 'declspecs_add_scspec': ([9], 84872), 'declspecs_add_attrs': ([], 84874), 'finish_declspecs': ([0, 3, 4], 84800), 'c_write_global_declarations_1': ([], 84874), 'c_write_global_declarations_2': ([], 84874), 'c_write_global_declarations': ([], 84874), 'tree_operand_length': ([], 84874), 'gt_ggc_mx_lang_tree_node': ([], 84874), 'gt_ggc_mx_c_binding': ([], 84874), 'gt_ggc_mx_c_label_vars': ([], 84874), 'gt_ggc_mx_c_goto_bindings': ([], 84874), 'gt_ggc_mx_c_scope': ([], 84874), 'gt_ggc_mx_lang_type': ([], 84874), 'gt_ggc_mx_c_inline_static': ([4], 84870), 'gt_ggc_mx_language_function': ([], 84874), 'gt_pch_p_14lang_tree_node': ([], 84874), 'gt_pch_nx_lang_tree_node': ([], 84874), 'gt_pch_nx_c_binding': ([], 84874), 'gt_pch_nx_c_label_vars': ([], 84874), 'gt_pch_nx_c_goto_bindings': ([], 84874), 'gt_pch_nx_c_scope': ([], 84874), 'gt_pch_nx_lang_type': ([0], 84870), 'gt_pch_nx_c_inline_static': ([4], 84870), 'gt_pch_nx_language_function': ([], 84874)}, "PosixPath('602/tree-ssanames.bc')": {'release_ssa_name': ([0], 1761), 'VEC_tree_base_quick_push': ([], 1771), 'init_ssanames': ([], 1771), 'fini_ssanames': ([], 1771), 'VEC_tree_base_space': ([], 1771), 'VEC_tree_gc_reserve': ([], 1771), 'VEC_tree_gc_safe_push': ([], 1771), 'make_ssa_name_fn': ([], 1771), 'delink_imm_use': ([], 1771), 'duplicate_ssa_name_ptr_info': ([], 1771), 'duplicate_ssa_name': ([], 1771), 'gimple_def_ops': ([], 1771), 'op_iter_init': ([], 1771), 'op_iter_next_tree': ([], 1771), 'op_iter_init_tree': ([], 1771), 'release_defs': ([], 1771), 'replace_ssa_name_symbol': ([], 1771), 'first_htab_element': ([], 1771), 'first_referenced_var': ([], 1771), 'end_htab_p': ([], 1771), 'end_referenced_vars_p': ([], 1771), 'next_htab_element': ([], 1771), 'next_referenced_var': ([], 1771), 'release_dead_ssa_names': ([], 1771)}, "PosixPath('602/insn-recog.bc')": {'recog_1': ([], 428016), 'recog_2': ([], 428016), 'recog_3': ([], 428016), 'recog_4': ([], 428016), 'recog_5': ([], 428016), 'recog_6': ([], 428016), 'recog_7': ([], 428016), 'recog_8': ([], 428016), 'recog_9': ([], 428016), 'recog_10': ([], 428016), 'recog_11': ([], 428016), 'recog_12': ([], 428016), 'recog_13': ([], 428016), 'recog_14': ([], 428016), 'recog_15': ([], 428016), 'recog_16': ([], 428016), 'recog_17': ([], 428016), 'recog_18': ([], 428016), 'recog_19': ([], 428016), 'recog_20': ([], 428016), 'recog_21': ([], 428016), 'recog_22': ([], 428016), 'recog_23': ([], 428016), 'recog_24': ([], 428016), 'recog_25': ([], 428016), 'recog_26': ([], 428016), 'recog_27': ([], 428016), 'recog_28': ([], 428016), 'recog_29': ([], 428016), 'recog_30': ([], 428016), 'recog_31': ([], 428016), 'recog_32': ([529, 540, 541, 553, 555, 558, 643, 659], 427982), 'recog_33': ([], 428016), 'recog_34': ([], 428016), 'recog_35': ([], 428016), 'recog_36': ([], 428016), 'recog_37': ([], 428016), 'recog_38': ([], 428016), 'recog_39': ([], 428016), 'recog_40': ([], 428016), 'recog_41': ([], 428016), 'recog_42': ([], 428016), 'recog_43': ([967, 972], 428004), 'recog_44': ([], 428016), 'recog_45': ([], 428016), 'recog_46': ([], 428016), 'recog_47': ([432, 449], 428004), 'recog_48': ([], 428016), 'recog': ([148], 427992), 'satisfies_constraint_K': ([], 428016), 'split_1': ([484, 988, 993, 1395], 427965), 'split_2': ([], 428016), 'split_3': ([], 428016), 'split_4': ([410, 412, 415, 419], 427961), 'split_insns': ([], 428016), 'peephole2_insns': ([376, 677], 428000)}, "PosixPath('602/tracer.bc')": {'bb_seq': ([], 3000), 'gsi_start_bb': ([], 3000), 'gsi_stmt': ([], 3000), 'count_insns': ([], 3000), 'ei_end_p': ([], 3000), 'ei_cond': ([], 3000), 'better_p': ([], 3000), 'ei_next': ([], 3000), 'find_best_predecessor': ([], 3000), 'find_best_successor': ([], 3000), 'find_trace': ([], 3000), 'mark_bb_seen': ([], 3000), 'tail_duplicate': ([], 3000), 'tracer': ([], 3000)}, "PosixPath('602/bb-reorder.bc')": {'ei_end_p': ([], 11153), 'ei_cond': ([], 11153), 'ei_next': ([], 11153), 'bb_to_key': ([], 11153), 'push_to_next_round_p': ([], 11153), 'mark_bb_visited': ([], 11153), 'better_edge_p': ([], 11153), 'copy_bb_p': ([], 11153), 'single_succ_edge': ([], 11153), 'copy_bb': ([16], 11150), 'rotate_loop': ([29], 11066), 'find_traces_1_round': ([], 11153), 'find_traces': ([], 11153), 'connect_traces': ([], 11153), 'verify_hot_cold_block_grouping': ([], 11153), 'reorder_basic_blocks': ([614], 11148), 'find_rarely_executed_basic_blocks_and_crossing_edges': ([], 11153), 'add_labels_and_missing_jumps': ([], 11153), 'fix_up_fall_thru_edges': ([], 11153), 'add_reg_crossing_jump_notes': ([], 11153), 'fix_edges_for_rarely_executed_code': ([], 11153), 'partition_hot_cold_basic_blocks': ([], 11153), 'rest_of_handle_partition_blocks': ([], 11153), 'gate_handle_partition_blocks': ([], 11153), 'insert_section_boundary_note': ([2], 11152), 'rest_of_handle_reorder_blocks': ([6], 11146), 'duplicate_computed_gotos': ([], 11153)}, "PosixPath('602/cfgbuild.bc')": {'find_many_sub_basic_blocks': ([105, 135], 3534), 'find_bb_boundaries': ([], 3551), 'compute_outgoing_frequencies': ([], 3551), 'inside_basic_block_p': ([], 3551), 'control_flow_insn_p': ([], 3551), 'make_label_edge': ([], 3551), 'rtl_make_eh_edge': ([2], 3549), 'mark_tablejump_edge': ([], 3551), 'ei_end_p': ([], 3551), 'ei_safe_edge': ([], 3551), 'ei_next': ([], 3551), 'purge_dead_tablejump_edges': ([], 3551), 'ei_cond': ([], 3551), 'make_edges': ([18], 3542), 'single_succ_edge': ([], 3551)}, "PosixPath('602/sel-sched.bc')": {'create_block_for_bookkeeping': ([], 60118), 'compute_av_set_inside_bb': ([5], 60101), 'fill_vec_av_set': ([671], 60115), 'hard_reg_set_iter_init': ([], 60118), 'advance_state_on_fence': ([0], 60111), 'find_ebb_boundaries': ([], 60118), 'ei_end_p': ([], 60118), 'ei_cond': ([], 60118), 'ei_next': ([], 60118), 'propagate_lv_set': ([], 60118), 'compute_live': ([], 60118), 'compute_live_after_bb': ([8], 60116), 'sel_add_to_insn_priority': ([], 60118), 'current_region_empty_p': ([], 60118), 'sel_setup_region_sched_flags': ([], 60118), 'VEC_basic_block_base_quick_push': ([], 60118), 'bitmap_initialize_stat': ([], 60118), 'sel_region_init': ([], 60118), 'bmp_iter_set_init': ([], 60118), 'bmp_iter_set': ([], 60118), '_succ_iter_start': ([], 60118), 'VEC_edge_base_iterate': ([], 60118), 'sel_bb_empty_or_nop_p': ([], 60118), '_eligible_successor_edge_p': ([], 60118), 'single_succ_edge': ([], 60118), 'inner_loop_header_p': ([], 60118), 'loop_outer': ([], 60118), 'VEC_edge_base_space': ([], 60118), 'VEC_edge_heap_reserve': ([], 60118), 'VEC_edge_base_quick_push': ([], 60118), 'VEC_edge_heap_safe_push': ([], 60118), 'get_loop_exit_edges_unique_dests': ([], 60118), 'VEC_edge_base_ordered_remove': ([], 60118), 'get_all_loop_exits': ([], 60118), '_succ_iter_cond': ([], 60118), '_succ_iter_next': ([], 60118), 'init_seqno_1': ([], 60118), 'init_seqno': ([], 60118), 'find_min_max_seqno': ([], 60118), '_xlist_is_in_p': ([], 60118), 'is_ineligible_successor': ([33], 60114), '_xlist_add': ([], 60118), 'VEC_rtx_base_iterate': ([], 60118), '_list_iter_start': ([], 60118), '_list_iter_next': ([], 60118), 'try_bitmap_cache': ([], 60118), 'try_transformation_cache': ([0], 60116), 'block_valid_for_bookkeeping_p': ([], 60118), 'find_block_for_bookkeeping': ([], 60118), 'moving_insn_creates_bookkeeping_block_p': ([], 60118), 'can_substitute_through_p': ([], 60118), 'count_occurrences_1': ([], 60118), 'count_occurrences_equiv': ([], 60118), 'rtx_ok_for_substitution_p': ([], 60118), 'substitute_reg_in_expr': ([], 60118), 'moveup_expr': ([], 60118), 'update_bitmap_cache': ([], 60118), 'update_transformation_cache': ([], 60118), 'moveup_expr_cached': ([14], 60108), 'moveup_set_expr': ([], 60118), 'compute_av_set_at_bb_end': ([103], 60115), 'compute_av_set_on_boundaries': ([], 60118), 'remove_insns_that_need_bookkeeping': ([], 60118), 'remove_insns_for_debug': ([], 60118), 'process_pipelined_exprs': ([], 60118), 'process_spec_exprs': ([], 60118), 'recog_memoized': ([], 60118), 'process_use_exprs': ([], 60118), 'VEC_expr_t_base_block_remove': ([], 60118), 'VEC_expr_t_base_space': ([], 60118), 'VEC_expr_t_heap_reserve': ([], 60118), 'VEC_expr_t_base_quick_push': ([], 60118), 'VEC_expr_t_heap_safe_push': ([], 60118), 'sel_target_adjust_priority': ([3], 60114), 'VEC_expr_t_base_unordered_remove': ([], 60118), 'VEC_vinsn_t_base_iterate': ([], 60118), 'vinsn_vec_has_expr_p': ([], 60118), 'equal_after_moveup_path_p': ([], 60118), 'replace_dest_with_reg_in_expr': ([], 60118), 'find_sequential_best_exprs': ([], 60118), 'identical_copy_p': ([], 60118), 'undo_transformations': ([33], 60114), 'code_motion_path_driver': ([0, 6, 10, 39, 564], 60081), 'get_reg_class': ([], 60118), 'init_regs_for_mode': ([], 60118), 'hard_reg_set_iter_set': ([], 60118), 'init_hard_regno_rename': ([], 60118), 'sel_hard_regno_rename_ok': ([], 60118), 'mark_unavailable_hard_regs': ([], 60118), 'fur_orig_expr_not_found': ([], 60118), 'compute_live_below_insn': ([], 60118), 'fur_orig_expr_found': ([], 60118), 'fur_on_enter': ([], 60118), 'find_used_regs': ([], 60118), 'collect_unavailable_regs_from_bnds': ([], 60118), 'verify_target_availability': ([], 60118), 'choose_best_reg_1': ([], 60118), 'choose_best_reg': ([], 60118), 'choose_best_pseudo_reg': ([], 60118), 'replace_src_with_reg_ok_p': ([], 60118), 'replace_dest_with_reg_ok_p': ([], 60118), 'try_replace_dest_reg': ([], 60118), 'vinsn_writes_one_of_regs_p': ([], 60118), 'find_best_reg_for_expr': ([], 60118), 'VEC_expr_t_base_iterate': ([], 60118), 'sel_rank_for_schedule': ([0, 7], 60107), 'convert_vec_av_set_to_ready': ([], 60118), 'fill_ready_list': ([], 60118), 'invoke_reorder_hooks': ([], 60118), 'invoke_dfa_lookahead_guard': ([], 60118), 'calculate_privileged_insns': ([], 60118), 'get_expr_cost': ([], 60118), 'choose_best_insn': ([17], 60104), 'VEC_rtx_base_unordered_remove': ([], 60118), 'debug_state': ([], 60118), 'advance_one_cycle': ([], 60118), 'sel_dfa_new_cycle': ([], 60118), 'invoke_aftermath_hooks': ([], 60118), 'find_best_expr': ([135], 60104), 'stall_for_cycles': ([], 60118), 'move_cond_jump': ([], 60118), 'prepare_place_to_insert': ([], 60118), 'get_dest_from_orig_ops': ([], 60118), 'single_pred_edge': ([], 60118), 'find_place_for_bookkeeping': ([], 60118), 'find_seqno_for_bookkeeping': ([], 60118), 'emit_insn_from_expr_after': ([], 60118), 'emit_bookkeeping_insn': ([], 60118), 'generate_bookkeeping_insn': ([], 60118), 'VEC_vinsn_t_base_space': ([], 60118), 'VEC_vinsn_t_heap_reserve': ([], 60118), 'VEC_vinsn_t_base_quick_push': ([], 60118), 'VEC_vinsn_t_heap_safe_push': ([], 60118), 'vinsn_vec_add': ([], 60118), 'update_and_record_unavailable_insns': ([], 60118), 'move_op_at_first_insn': ([], 60118), 'move_op_ascend': ([], 60118), 'move_op_merge_succs': ([], 60118), 'track_scheduled_insns_and_blocks': ([], 60118), 'maybe_emit_renaming_copy': ([], 60118), 'get_spec_check_type_for_insn': ([], 60118), 'create_speculation_check': ([], 60118), 'maybe_emit_speculative_check': ([], 60118), 'handle_emitting_transformations': ([], 60118), 'need_nop_to_preserve_insn_bb': ([], 60118), 'VEC_insn_t_base_space': ([], 60118), 'VEC_insn_t_heap_reserve': ([], 60118), 'VEC_insn_t_base_quick_push': ([], 60118), 'VEC_insn_t_heap_safe_push': ([], 60118), 'remove_insn_from_stream': ([], 60118), 'move_op_orig_expr_found': ([], 60118), 'move_op': ([], 60118), 'move_exprs_to_boundary': ([], 60118), 'VEC_insn_t_base_iterate': ([], 60118), 'VEC_insn_t_base_block_remove': ([], 60118), 'remove_temp_moveop_nops': ([], 60118), 'schedule_expr_on_boundary': ([], 60118), 'VEC_rtx_base_space': ([], 60118), 'VEC_rtx_gc_reserve': ([], 60118), 'VEC_rtx_base_quick_push': ([], 60118), 'VEC_rtx_gc_safe_push': ([], 60118), 'update_fence_and_insn': ([22], 60114), 'update_boundaries': ([3], 60111), 'fill_insns': ([251, 465], 60099), 'VEC_vinsn_t_base_block_remove': ([], 60118), 'vinsn_vec_clear': ([], 60118), 'schedule_on_fences': ([], 60118), 'extract_new_fences_from': ([61], 60114), 'calculate_new_fences': ([], 60118), 'update_seqnos_and_stage': ([], 60118), 'sel_sched_region_2': ([], 60118), 'sel_sched_region_1': ([], 60118), 'simplify_changed_insns': ([], 60118), 'bb_next_bb': ([], 60118), 'reset_sched_cycles_in_current_ebb': ([0], 60110), 'put_TImodes': ([], 60118), 'sel_region_target_finish': ([], 60118), 'sel_region_finish': ([], 60118), 'sel_sched_region': ([], 60118), 'init_hard_regs_data': ([], 60118), 'sel_global_init': ([], 60118), 'run_selective_scheduling': ([], 60118)}, "PosixPath('602/ira-emit.bc')": {'emit_moves': ([], 9635), 'add_range_and_copies_from_move_list': ([4, 10], 9616), 'print_move_list': ([], 9635), 'ira_debug_move_list': ([], 9635), 'set_allocno_somewhere_renamed_p': ([], 9635), 'VEC_loop_p_base_iterate': ([], 9635), 'ei_end_p': ([], 9635), 'ei_cond': ([], 9635), 'ei_next': ([], 9635), 'entered_from_non_parent_p': ([], 9635), 'setup_entered_from_non_parent_p': ([], 9635), 'df_lr_get_bb_info': ([], 9635), 'bmp_iter_set_init': ([], 9635), 'bmp_iter_set': ([], 9635), 'store_can_be_removed_p': ([], 9635), 'create_move': ([], 9635), 'generate_edge_moves': ([], 9635), 'eq_move_lists_p': ([], 9635), 'eq_edge_move_lists_p': ([], 9635), 'free_move_list': ([], 9635), 'unify_moves': ([3], 9623), 'VEC_move_t_base_space': ([], 9635), 'VEC_move_t_heap_reserve': ([], 9635), 'VEC_move_t_base_quick_push': ([], 9635), 'VEC_move_t_heap_safe_push': ([], 9635), 'traverse_moves': ([], 9635), 'VEC_move_t_base_last': ([], 9635), 'create_new_reg': ([], 9635), 'modify_move_list': ([], 9635), 'recog_memoized': ([], 9635), 'ira_get_register_move_cost': ([], 9635), 'emit_move_list': ([7], 9628), 'update_costs': ([], 9635), 'add_ranges_and_copies': ([], 9635), 'change_regs': ([], 9635), 'set_allocno_reg': ([], 9635), 'change_loop': ([], 9635), 'ira_emit': ([385], 9632)}, "PosixPath('602/cpp_symtab.bc')": {'ht_create': ([], 2848), 'ht_destroy': ([], 2848), 'calc_hash': ([], 2848), 'ht_expand': ([], 2848), 'ht_lookup_with_hash': ([11], 2844), 'ht_lookup': ([], 2848), 'ht_forall': ([], 2848), 'ht_purge': ([], 2848), 'ht_load': ([], 2848), 'ht_dump_statistics': ([], 2848)}, "PosixPath('602/tree-ssa-uncprop.bc')": {'gsi_start': ([], 3504), 'bb_seq': ([], 3504), 'gsi_last_bb': ([], 3504), 'gsi_stmt': ([], 3504), 'gimple_ops': ([], 3504), 'gimple_op': ([], 3504), 'gimple_cond_lhs': ([], 3504), 'gimple_cond_rhs': ([], 3504), 'gimple_switch_index': ([], 3504), 'gimple_switch_label': ([], 3504), 'associate_equivalences_with_edges': ([], 3504), 'ei_end_p': ([], 3504), 'ei_cond': ([], 3504), 'ei_next': ([], 3504), 'VEC_tree_base_pop': ([], 3504), 'remove_equivalence': ([], 3504), 'uncprop_leave_block': ([], 3504), 'single_incoming_edge_ignoring_loop_edges': ([], 3504), 'VEC_tree_base_space': ([], 3504), 'VEC_tree_heap_reserve': ([], 3504), 'VEC_tree_base_quick_push': ([], 3504), 'VEC_tree_heap_safe_push': ([], 3504), 'record_equiv': ([], 3504), 'phi_nodes': ([], 3504), 'delink_imm_use': ([], 3504), 'link_imm_use_to_list': ([], 3504), 'link_imm_use': ([], 3504), 'set_ssa_use_from_ptr': ([], 3504), 'uncprop_into_successor_phis': ([], 3504), 'uncprop_enter_block': ([], 3504), 'equiv_free': ([], 3504), 'tree_ssa_uncprop': ([], 3504)}, "PosixPath('602/vasprintf.bc')": {}, "PosixPath('602/varray.bc')": {'varray_init': ([], 476), 'varray_grow': ([], 476), 'varray_clear': ([], 476)}, "PosixPath('602/calls.bc')": {'expand_call': ([0, 2, 4, 188], 23252), 'initialize_argument_information': ([], 23277), 'precompute_arguments': ([], 23277), 'emit_library_call_value_1': ([3, 117], 23255), 'special_function_p': ([6, 7], 23261), 'gimple_ops': ([], 23277), 'gimple_op': ([], 23277), 'gimple_call_fn': ([], 23277), 'gimple_call_fndecl': ([], 23277), 'gimple_alloca_call_p': ([], 23277), 'alloca_call_p': ([], 23277), 'flags_from_decl_or_type': ([], 23277), 'call_expr_flags': ([], 23277), 'shift_return_value': ([0], 23271), 'init_call_expr_arg_iterator': ([], 23277), 'next_call_expr_arg': ([], 23277), 'first_call_expr_arg': ([], 23277), 'split_complex_types': ([], 23277), 'finalize_must_preallocate': ([], 23277), 'compute_argument_block_size': ([], 23277), 'compute_argument_addresses': ([], 23277), 'rtx_for_function_call': ([], 23277), 'precompute_register_parameters': ([], 23277), 'save_fixed_argument_area': ([], 23277), 'mem_overlaps_already_clobbered_arg_p': ([], 23277), 'store_one_arg': ([], 23277), 'check_sibcall_argument_overlap_1': ([], 23277), 'check_sibcall_argument_overlap': ([], 23277), 'load_register_parameters': ([], 23277), 'emit_call_1': ([], 23277), 'avoid_likely_spilled_reg': ([], 23277), 'fixup_tail_calls': ([], 23277), 'must_pass_in_stack_var_size': ([], 23277), 'must_pass_in_stack_var_size_or_pad': ([], 23277)}, "PosixPath('602/jump.bc')": {'init_label_info': ([], 8928), 'mark_jump_label': ([], 8928), 'mark_jump_label_1': ([0], 8923), 'pc_set': ([2], 8923), 'mark_all_labels': ([], 8928), 'rebuild_jump_labels': ([], 8928), 'cleanup_barriers': ([], 8928), 'reversed_comparison_code_parts': ([], 8928), 'reversed_comparison_code': ([], 8928), 'reversed_comparison': ([], 8928), 'simplejump_p': ([], 8928), 'condjump_p': ([], 8928), 'condjump_in_parallel_p': ([], 8928), 'any_condjump_p': ([], 8928), 'condjump_label': ([], 8928), 'onlyjump_p': ([], 8928), 'delete_related_insns': ([3], 8926), 'delete_for_peephole': ([], 8928), 'redirect_exp_1': ([], 8928), 'redirect_jump_1': ([], 8928), 'invert_exp_1': ([], 8928), 'redirect_jump_2': ([], 8928), 'rtx_renumbered_equal_p': ([], 8928), 'true_regnum': ([], 8928), 'reg_or_subregno': ([0], 8924)}, "PosixPath('602/host-ieee64.bc')": {}, "PosixPath('602/varasm.bc')": {'emutls_decl': ([], 48440), 'output_constructor': ([76], 48429), 'compute_reloc_for_rtx': ([], 48440), 'output_constructor_bitfield': ([], 48440), 'default_emutls_var_fields': ([], 48440), 'prefix_name': ([0], 48438), 'get_emutls_object_type': ([], 48440), 'make_decl_one_only': ([0], 48429), 'emutls_common_1': ([], 48440), 'emutls_finish': ([], 48440), 'get_unnamed_section': ([], 48440), 'get_section': ([], 48440), 'initialize_cold_section_name': ([], 48440), 'get_named_section': ([], 48440), 'unlikely_text_section_p': ([], 48440), 'resolve_unique_section': ([], 48440), 'hot_function_section': ([], 48440), 'default_function_rodata_section': ([], 48440), 'mergeable_constant_section': ([], 48440), 'set_user_assembler_name': ([], 48440), 'decode_reg_name': ([], 48440), 'align_variable': ([], 48440), 'bss_initializer_p': ([], 48440), 'contains_pointers_p': ([], 48440), 'compute_reloc_for_constant': ([], 48440), 'get_variable_section': ([6], 48439), 'hash_section': ([], 48440), 'get_block_for_section': ([], 48440), 'get_block_for_decl': ([], 48440), 'change_symbol_block': ([], 48440), 'use_blocks_for_decl_p': ([], 48440), 'create_block_symbol': ([], 48440), 'make_decl_rtl': ([0, 34], 48416), 'make_decl_rtl_for_debug': ([0], 48434), 'assemble_asm': ([], 48440), 'switch_to_section': ([0], 48431), 'notice_global_symbol': ([], 48440), 'copy_constant': ([], 48440), 'get_constant_section': ([], 48440), 'build_constant_desc': ([], 48440), 'get_constant_size': ([], 48440), 'VEC_rtx_base_space': ([], 48440), 'VEC_rtx_gc_reserve': ([], 48440), 'VEC_rtx_base_quick_push': ([], 48440), 'VEC_rtx_gc_safe_push': ([], 48440), 'place_block_symbol': ([], 48440), 'ultimate_transparent_alias_target': ([], 48440), 'assemble_name': ([], 48440), 'assemble_real': ([], 48440), 'array_size_for_constructor': ([], 48440), 'assemble_string': ([], 48440), 'output_constant': ([0, 15], 48431), 'assemble_constant_contents': ([], 48440), 'output_constant_def_contents': ([], 48440), 'output_constant_def': ([], 48440), 'const_hash_1': ([], 48440), 'decode_addr_const': ([0], 48438), 'output_addressed_constants': ([], 48440), 'mark_constant': ([], 48440), 'mark_constants': ([], 48440), 'output_constant_pool_2': ([], 48440), 'output_constant_pool_1': ([4], 48435), 'output_constant_pool_contents': ([], 48440), 'globalize_decl': ([], 48440), 'assemble_start_function': ([], 48440), 'default_emutls_var_init': ([], 48440), 'get_emutls_init_templ_addr': ([], 48440), 'assemble_variable_contents': ([], 48440), 'assemble_variable': ([25, 29], 48428), 'incorporeal_function_p': ([], 48440), 'assemble_external_real': ([], 48440), 'process_pending_assemble_externals': ([], 48440), 'assemble_external': ([], 48440), 'mark_decl_referenced': ([], 48440), 'assemble_static_space': ([], 48440), 'assemble_trampoline_template': ([], 48440), 'lookup_constant_def': ([], 48440), 'const_desc_rtx_eq': ([], 48440), 'create_constant_pool': ([], 48440), 'const_rtx_hash_1': ([], 48440), 'const_rtx_hash': ([], 48440), 'force_const_mem': ([], 48440), 'get_pool_constant': ([], 48440), 'get_pool_constant_mark': ([], 48440), 'get_pool_mode': ([], 48440), 'constructor_static_from_elts_p': ([], 48440), 'initializer_constant_valid_p_1': ([0, 64, 74], 48408), 'narrowing_initializer_constant_valid_p': ([], 48440), 'initializer_constant_valid_for_bitfield_p': ([], 48440), 'mark_weak': ([8], 48434), 'merge_weak': ([], 48440), 'weak_finish_1': ([], 48440), 'weak_finish': ([], 48440), 'VEC_alias_pair_base_unordered_remove': ([], 48440), 'remove_unreachable_alias_pairs': ([0], 48437), 'finish_aliases_1': ([], 48440), 'do_assemble_alias': ([], 48440), 'finish_aliases_2': ([], 48440), 'VEC_alias_pair_base_space': ([], 48440), 'VEC_alias_pair_gc_reserve': ([], 48440), 'VEC_alias_pair_gc_safe_push': ([], 48440), 'assemble_alias': ([12], 48439), 'default_assemble_visibility': ([], 48440), 'get_noswitch_section': ([], 48440), 'asm_output_aligned_bss': ([], 48440), 'emit_bss': ([], 48440), 'compare_constant': ([80], 48437), 'const_desc_eq': ([], 48440), 'object_block_entry_hash': ([], 48440), 'init_varasm_once': ([], 48440), 'categorize_decl_for_section': ([], 48440), 'default_section_type_flags': ([], 48440), 'default_elf_asm_named_section': ([], 48440), 'default_coff_asm_named_section': ([], 48440), 'default_select_section': ([], 48440), 'mergeable_string_section': ([], 48440), 'compute_reloc_for_rtx_1': ([], 48440), 'default_encode_section_info': ([4], 48432), 'default_asm_output_anchor': ([], 48440), 'default_use_anchors_for_symbol_p': ([], 48440), 'default_binds_local_p_1': ([], 48440), 'default_globalize_decl_name': ([], 48440), 'VEC_rtx_base_quick_insert': ([], 48440), 'VEC_rtx_gc_safe_insert': ([], 48440), 'get_section_anchor': ([], 48440), 'VEC_rtx_base_iterate': ([], 48440), 'output_object_block': ([], 48440), 'output_object_block_htab': ([], 48440), 'elf_record_gcc_switches': ([], 48440), 'gt_ggc_mx_constant_descriptor_rtx': ([], 48440), 'gt_ggc_m_P23constant_descriptor_rtx4htab': ([3, 4], 48433), 'gt_ggc_mx_rtx_constant_pool': ([], 48440), 'gt_pch_nx_constant_descriptor_rtx': ([], 48440), 'gt_pch_p_P23constant_descriptor_rtx4htab': ([4], 48435), 'gt_pch_n_P23constant_descriptor_rtx4htab': ([3, 4], 48433), 'gt_pch_nx_rtx_constant_pool': ([], 48440)}, "PosixPath('602/fdmatch.bc')": {'fdmatch': ([], 150)}, "PosixPath('602/c-parser.bc')": {'disable_extension_diagnostics': ([], 61492), 'c_parser_binary_expression': ([], 61492), 'c_parser_postfix_expression_after_primary': ([], 61492), 'c_parser_postfix_expression': ([], 61492), 'c_parser_struct_declaration': ([0, 1, 12], 61475), 'c_parse_init': ([], 61492), 'c_lex_one_token': ([], 61492), 'c_parser_consume_token': ([7], 61490), 'pragma_lex': ([], 61492), 'c_parser_consume_pragma': ([], 61492), 'c_parser_next_token_is': ([], 61492), 'c_parser_set_source_position_from_token': ([], 61492), 'c_parser_error': ([0], 61487), 'c_parser_require': ([], 61492), 'c_parser_skip_to_pragma_eol': ([3], 61487), 'c_parser_pragma_pch_preprocess': ([], 61492), 'restore_extension_diagnostics': ([], 61492), 'c_parser_next_token_is_keyword': ([], 61492), 'c_parser_asm_string_literal': ([1], 61489), 'c_parser_skip_until_found': ([], 61492), 'c_parser_simple_asm_expr': ([], 61492), 'c_parser_next_token_is_not': ([], 61492), 'c_parser_objc_protocol_refs': ([], 61492), 'c_parser_objc_method_type': ([], 61492), 'c_token_starts_typename': ([0], 61488), 'c_parser_peek_2nd_token': ([0], 61487), 'c_parser_objc_selector': ([], 61492), 'c_token_starts_declspecs': ([0], 61489), 'c_parser_skip_to_end_of_block_or_statement': ([], 61492), 'c_parser_skip_to_end_of_parameter': ([], 61492), 'c_parser_omp_barrier': ([], 61492), 'c_parser_omp_variable_list': ([], 61492), 'c_parser_omp_var_list_parens': ([], 61492), 'c_parser_omp_flush': ([], 61492), 'c_parser_omp_taskwait': ([], 61492), 'c_parser_omp_threadprivate': ([], 61492), 'c_parser_require_keyword': ([], 61492), 'c_parser_asm_clobbers': ([], 61492), 'c_parser_asm_goto_operands': ([], 61492), 'c_parser_omp_clause_name': ([], 61492), 'check_no_duplicate_clause': ([], 61492), 'c_parser_omp_clause_default': ([], 61492), 'c_parser_omp_clause_nowait': ([], 61492), 'c_parser_omp_clause_ordered': ([], 61492), 'c_parser_omp_clause_reduction': ([], 61492), 'c_parser_omp_clause_untied': ([], 61492), 'c_parser_objc_selector_arg': ([], 61492), 'VEC_tree_base_quick_push': ([], 61492), 'VEC_tree_base_space': ([], 61492), 'VEC_tree_gc_reserve': ([], 61492), 'VEC_tree_gc_safe_push': ([], 61492), 'c_parser_initval': ([], 61492), 'c_parser_braced_init': ([9], 61487), 'c_parser_expr_no_commas': ([], 61492), 'c_parser_conditional_expression': ([], 61492), 'c_parser_cast_expression': ([], 61492), 'c_parser_type_name': ([], 61492), 'c_parser_declspecs': ([], 61492), 'c_parser_pragma': ([], 61492), 'c_parser_omp_single': ([], 61492), 'c_parser_omp_parallel': ([1], 61490), 'c_parser_omp_sections_scope': ([0], 61488), 'c_parser_omp_for_loop': ([], 61492), 'c_parser_omp_all_clauses': ([1], 61471), 'c_parser_omp_critical': ([1], 61490), 'c_parser_omp_atomic': ([], 61492), 'c_parser_unary_expression': ([], 61492), 'c_parser_compound_statement_nostart': ([], 61492), 'c_parser_statement_after_labels': ([], 61492), 'c_parser_objc_synchronized_statement': ([], 61492), 'c_parser_objc_try_catch_statement': ([], 61492), 'c_parser_asm_statement': ([], 61492), 'c_parser_asm_operands': ([], 61492), 'c_parser_for_statement': ([], 61492), 'c_parser_do_statement': ([], 61492), 'c_parser_while_statement': ([], 61492), 'c_parser_switch_statement': ([], 61492), 'c_parser_c99_block_statement': ([], 61492), 'c_parser_statement': ([], 61492), 'c_parser_if_statement': ([], 61492), 'c_parser_condition': ([], 61492), 'c_parser_expression_conv': ([], 61492), 'c_parser_label': ([3], 61488), 'c_parser_declaration_or_fndef': ([0], 61473), 'c_parser_compound_statement': ([], 61492), 'c_parser_declarator': ([0], 61479), 'c_parser_direct_declarator_inner': ([24], 61488), 'c_parser_parms_declarator': ([1], 61485), 'c_parser_parms_list_declarator': ([], 61492), 'c_parser_parameter_declaration': ([], 61492), 'c_parser_alignof_expression': ([], 61492), 'c_parser_sizeof_expression': ([], 61492), 'c_parser_postfix_expression_after_paren_type': ([15], 61490), 'c_parser_attributes': ([], 61492), 'c_parser_expr_list': ([], 61492), 'c_parser_expression': ([8], 61474), 'c_parser_objc_message_args': ([], 61492), 'c_parser_objc_type_name': ([], 61492), 'c_parser_objc_method_decl': ([], 61492), 'c_parser_objc_methodprotolist': ([], 61492), 'c_parser_objc_class_instance_variables': ([], 61492), 'c_parser_objc_class_definition': ([0], 61491), 'c_parser_objc_class_declaration': ([], 61492), 'c_parser_objc_alias_declaration': ([], 61492), 'c_parser_objc_protocol_definition': ([], 61492), 'c_parser_objc_method_definition': ([], 61492), 'c_parser_external_declaration': ([1], 61488), 'c_parser_translation_unit': ([], 61492), 'c_parse_file': ([10], 61489)}, "PosixPath('602/decNumber.bc')": {'decNumberFMA': ([], 37977), 'decNumberZero': ([], 37977), 'decGetDigits': ([], 37977), 'decNumberFromUInt32': ([], 37977), 'decNumberToInt32': ([], 37977), 'decNumberToUInt32': ([], 37977), 'decToString': ([], 37977), 'decBiStr': ([], 37977), 'decSetCoeff': ([], 37977), 'decSetMaxValue': ([], 37977), 'decSetOverflow': ([], 37977), 'decUnitAddSub': ([], 37977), 'decApplyRound': ([], 37977), 'decShiftToMost': ([], 37977), 'decSetSubnormal': ([], 37977), 'decUnitCompare': ([], 37977), 'decCompare': ([4], 37956), 'decFinalize': ([11], 37971), 'decStatus': ([], 37977), 'decNumberFromString': ([113], 37974), 'decNumberCopy': ([], 37977), 'decDecap': ([], 37977), 'decNaNs': ([], 37977), 'decCopyFit': ([], 37977), 'decAddOp': ([2, 11, 12, 48], 37947), 'decNumberAbs': ([], 37977), 'decNumberAdd': ([], 37977), 'decNumberAnd': ([], 37977), 'decCompareOp': ([], 37977), 'decNumberCompare': ([], 37977), 'decNumberCompareSignal': ([], 37977), 'decNumberCompareTotal': ([], 37977), 'decNumberCompareTotalMag': ([], 37977), 'decShiftToLeast': ([], 37977), 'decDivideOp': ([6, 19, 38], 37959), 'decNumberDivide': ([], 37977), 'decNumberDivideInteger': ([], 37977), 'decCheckMath': ([0], 37966), 'decMultiplyOp': ([], 37977), 'decExpOp': ([95], 37969), 'decNumberExp': ([], 37977), 'decNumberInvert': ([], 37977), 'decGetInt': ([7], 37960), 'decLnOp': ([42, 98, 199], 37951), 'decNumberLn': ([], 37977), 'decNumberLogB': ([10], 37976), 'decNumberLog10': ([17], 37967), 'decNumberMax': ([], 37977), 'decNumberMaxMag': ([], 37977), 'decNumberMin': ([], 37977), 'decNumberMinMag': ([], 37977), 'decNumberMinus': ([], 37977), 'decNumberNextMinus': ([], 37977), 'decNumberNextPlus': ([], 37977), 'decNumberIsNormal': ([], 37977), 'decNumberNextToward': ([], 37977), 'decNumberOr': ([], 37977), 'decNumberPlus': ([], 37977), 'decNumberMultiply': ([], 37977), 'decNumberPower': ([10], 37969), 'decQuantizeOp': ([9], 37969), 'decNumberQuantize': ([], 37977), 'decTrim': ([], 37977), 'decNumberReduce': ([], 37977), 'decNumberRescale': ([], 37977), 'decNumberRemainder': ([], 37977), 'decNumberRemainderNear': ([], 37977), 'decReverse': ([], 37977), 'decNumberRotate': ([], 37977), 'decNumberSameQuantum': ([], 37977), 'decNumberScaleB': ([], 37977), 'decNumberShift': ([3], 37976), 'decNumberSquareRoot': ([12, 13, 20, 49, 56], 37924), 'decNumberSubtract': ([], 37977), 'decNumberToIntegralExact': ([], 37977), 'decNumberToIntegralValue': ([], 37977), 'decNumberXor': ([], 37977), 'decNumberClass': ([0], 37975), 'decNumberGetBCD': ([], 37977), 'decNumberSetBCD': ([], 37977), 'decNumberIsSubnormal': ([], 37977), 'decNumberTrim': ([], 37977)}, "PosixPath('602/fixed-value.bc')": {'do_fixed_neg': ([], 9800), 'do_fixed_add': ([], 9800), 'do_fixed_multiply': ([], 9800), 'do_fixed_divide': ([], 9800), 'fixed_saturate2': ([], 9800), 'fixed_saturate1': ([], 9800), 'fixed_convert_from_int': ([39], 9790), 'fixed_convert_from_real': ([], 9800), 'fixed_identical': ([], 9800), 'fixed_hash': ([], 9800), 'check_real_for_fixed_mode': ([], 9800), 'fixed_from_string': ([0, 11], 9783), 'fixed_to_decimal': ([], 9800), 'do_fixed_shift': ([], 9800), 'fixed_arithmetic': ([122, 156], 9796), 'fixed_compare': ([], 9800), 'fixed_convert': ([96], 9792), 'real_convert_from_fixed': ([], 9800), 'fixed_isneg': ([], 9800)}, "PosixPath('602/tree-eh.bc')": {'gsi_start': ([], 27922), 'lower_eh_must_not_throw': ([], 27922), 'lower_resx': ([], 27922), 'first_imm_use_on_stmt': ([], 27922), 'next_imm_use_on_stmt': ([], 27922), 'add_stmt_to_eh_lp_fn': ([], 27922), 'lookup_stmt_eh_lp_fn': ([], 27922), 'lookup_stmt_eh_lp': ([], 27922), 'make_eh_dispatch_edges': ([], 27922), 'make_eh_edges': ([], 27922), 'ei_end_p': ([], 27922), 'ei_cond': ([], 27922), 'ei_next': ([], 27922), 'redirect_eh_edge_1': ([], 27922), 'redirect_eh_dispatch_edge': ([], 27922), 'operation_could_trap_helper_p': ([], 27922), 'operation_could_trap_p': ([], 27922), 'tree_could_trap_p': ([], 27922), 'gimple_ops': ([], 27922), 'gimple_op': ([], 27922), 'gimple_call_fn': ([], 27922), 'gimple_call_return_type': ([], 27922), 'gimple_assign_rhs1': ([], 27922), 'gimple_assign_rhs_code': ([], 27922), 'gimple_expr_type': ([], 27922), 'gimple_assign_rhs2': ([], 27922), 'stmt_could_throw_1_p': ([], 27922), 'stmt_could_throw_p': ([], 27922), 'tree_could_throw_p': ([0, 1], 27916), 'maybe_duplicate_eh_stmt_fn': ([], 27922), 'verify_eh_edges': ([], 27922), 'verify_eh_dispatch_edge': ([], 27922), 'bb_seq': ([], 27922), 'gsi_start_bb': ([], 27922), 'gsi_stmt': ([], 27922), 'gsi_one_before_end_p': ([], 27922), 'VEC_eh_region_base_iterate': ([], 27922), 'VEC_eh_landing_pad_base_iterate': ([], 27922), 'remove_unreachable_handlers': ([], 27922), 'gsi_after_labels': ([], 27922), 'gsi_next_nondebug': ([], 27922), 'gimple_label_label': ([], 27922), 'phi_nodes': ([], 27922), 'end_imm_use_stmt_p': ([], 27922), 'clear_and_done_ssa_iter': ([], 27922), 'op_iter_next_use': ([], 27922), 'op_iter_init_phiuse': ([], 27922), 'delink_imm_use': ([], 27922), 'link_imm_use_to_list': ([], 27922), 'move_use_after_head': ([2], 27908), 'gimple_def_ops': ([], 27922), 'gimple_vdef': ([], 27922), 'gimple_use_ops': ([], 27922), 'gimple_vuse': ([], 27922), 'op_iter_init': ([], 27922), 'op_iter_init_use': ([], 27922), 'gimple_vuse_op': ([], 27922), 'link_use_stmts_after': ([], 27922), 'first_imm_use_stmt': ([], 27922), 'link_imm_use': ([], 27922), 'set_ssa_use_from_ptr': ([], 27922), 'next_imm_use_stmt': ([], 27922), 'unsplit_eh': ([0], 27914), 'unsplit_all_eh': ([], 27922), 'ei_safe_edge': ([], 27922), 'cleanup_empty_eh_merge_phis': ([0, 36, 38], 27909), 'cleanup_empty_eh_unsplit': ([], 27922), 'gsi_last_bb': ([], 27922), 'cleanup_empty_eh_move_lp': ([], 27922), 'cleanup_empty_eh': ([], 27922), 'cleanup_all_empty_eh': ([], 27922), 'remove_unreachable_handlers_no_lp': ([], 27922), 'execute_cleanup_eh': ([228, 230], 27904), 'VEC_tree_base_space': ([], 27922), 'VEC_tree_heap_reserve': ([], 27922), 'VEC_tree_base_quick_push': ([], 27922), 'VEC_tree_heap_safe_push': ([], 27922), 'single_succ_edge': ([], 27922), 'gimple_set_op': ([], 27922), 'gimple_call_set_lhs': ([], 27922), 'lower_eh_dispatch': ([], 27922), 'execute_lower_eh_dispatch': ([], 27922), 'execute_lower_resx': ([], 27922), 'gimple_call_lhs': ([], 27922), 'gimple_call_chain': ([], 27922), 'gimple_call_arg': ([], 27922), 'same_handler_p': ([], 27922), 'optimize_double_finally': ([], 27922), 'refactor_eh_r': ([], 27922), 'record_in_finally_tree': ([], 27922), 'collect_finally_tree_1': ([], 27922), 'gimple_call_fndecl': ([], 27922), 'gimple_call_set_arg': ([], 27922), 'gimple_has_lhs': ([], 27922), 'record_stmt_eh_region': ([], 27922), 'note_eh_region_may_contain_throw': ([], 27922), 'gimple_op_ptr': ([], 27922), 'gimple_cond_true_label': ([], 27922), 'outside_finally_tree': ([], 27922), 'record_in_goto_queue': ([], 27922), 'record_in_goto_queue_label': ([5], 27914), 'gimple_cond_false_label': ([], 27922), 'gimple_goto_dest': ([], 27922), 'maybe_record_in_goto_queue': ([2], 27918), 'gimple_try_catch_is_cleanup': ([], 27922), 'emit_post_landing_pad': ([], 27922), 'gimple_return_retval': ([], 27922), 'do_return_redirection': ([0], 27911), 'do_goto_redirection': ([], 27922), 'find_goto_replacement': ([5], 27919), 'gimple_seq_singleton_p': ([], 27922), 'replace_goto_queue_cond_clause': ([], 27922), 'replace_goto_queue_stmt_list': ([], 27922), 'replace_goto_queue': ([], 27922), 'lower_try_finally_fallthru_label': ([], 27922), 'frob_into_branch_around': ([], 27922), 'honor_protect_cleanup_actions': ([], 27922), 'lower_eh_constructs_1': ([305, 326], 27904), 'lower_eh_constructs': ([], 27922)}, "PosixPath('602/tree-phinodes.bc')": {'gsi_last': ([], 3804), 'gsi_start': ([], 3804), 'VEC_gimple_base_pop': ([], 3804), 'allocate_phi_node': ([], 3804), 'make_phi_node': ([], 3804), 'delink_imm_use': ([], 3804), 'VEC_gimple_base_space': ([], 3804), 'VEC_gimple_gc_reserve': ([], 3804), 'VEC_gimple_base_quick_push': ([], 3804), 'VEC_gimple_gc_safe_push': ([], 3804), 'release_phi_node': ([], 3804), 'relink_imm_use': ([], 3804), 'link_imm_use_to_list': ([], 3804), 'link_imm_use': ([], 3804), 'relink_imm_use_stmt': ([], 3804), 'resize_phi_node': ([], 3804), 'set_ssa_use_from_ptr': ([], 3804), 'reserve_phi_args_for_new_edge': ([18, 51], 3797), 'phi_nodes': ([], 3804), 'gsi_stmt': ([], 3804), 'set_phi_nodes': ([], 3804), 'add_phi_node_to_bb': ([], 3804), 'add_phi_arg': ([], 3804), 'remove_phi_arg_num': ([], 3804), 'remove_phi_args': ([], 3804), 'remove_phi_nodes': ([], 3804)}, "PosixPath('602/lto-cgraph.bc')": {'lto_cgraph_encoder_new': ([], 6151), 'lto_cgraph_encoder_delete': ([], 6151), 'VEC_cgraph_node_ptr_base_space': ([], 6151), 'VEC_cgraph_node_ptr_heap_reserve': ([], 6151), 'VEC_cgraph_node_ptr_base_quick_push': ([], 6151), 'VEC_cgraph_node_ptr_heap_safe_push': ([], 6151), 'lto_cgraph_encoder_encode': ([], 6151), 'output_profile_summary': ([], 6151), 'lto_output_node': ([], 6151), 'output_cgraph': ([8, 11], 6145), 'input_profile_summary': ([], 6151), 'input_edge': ([], 6151), 'lto_file_decl_data_get_fn_decl': ([], 6151), 'input_overwrite_node': ([], 6151), 'input_node': ([], 6151), 'VEC_cgraph_node_ptr_base_iterate': ([], 6151), 'input_cgraph_1': ([], 6151), 'input_cgraph': ([], 6151)}, "PosixPath('602/tree-ssa-threadedge.bc')": {'VEC_tree_base_space': ([], 4833), 'VEC_tree_heap_reserve_exact': ([], 4833), 'VEC_tree_heap_safe_grow': ([], 4833), 'VEC_tree_heap_safe_grow_cleared': ([], 4833), 'set_ssa_name_value': ([1, 2], 4830), 'bb_seq': ([], 4833), 'gsi_last_bb': ([], 4833), 'gsi_stmt': ([], 4833), 'potentially_threadable_block': ([], 4833), 'gimple_use_ops': ([], 4833), 'op_iter_init': ([], 4833), 'op_iter_next_use': ([], 4833), 'op_iter_init_use': ([], 4833), 'VEC_tree_heap_reserve': ([], 4833), 'VEC_tree_base_quick_push': ([], 4833), 'record_temporary_equivalence': ([0, 2], 4829), 'record_temporary_equivalences_from_phis': ([], 4833), 'gsi_start_bb': ([], 4833), 'gimple_ops': ([], 4833), 'gimple_op': ([], 4833), 'gimple_assign_lhs': ([], 4833), 'gimple_call_lhs': ([], 4833), 'gimple_call_fn': ([], 4833), 'gimple_call_fndecl': ([], 4833), 'gimple_assign_rhs1': ([], 4833), 'op_iter_next_tree': ([], 4833), 'op_iter_init_tree': ([], 4833), 'num_ssa_operands': ([], 4833), 'delink_imm_use': ([], 4833), 'link_imm_use_to_list': ([], 4833), 'link_imm_use': ([], 4833), 'set_ssa_use_from_ptr': ([], 4833), 'gimple_assign_rhs_code': ([], 4833), 'gimple_assign_rhs2': ([], 4833), 'fold_assignment_stmt': ([], 4833), 'record_temporary_equivalences_from_stmts_at_dest': ([], 4833), 'gimple_cond_lhs': ([], 4833), 'gimple_cond_rhs': ([], 4833), 'end_readonly_imm_use_p': ([], 4833), 'first_readonly_imm_use': ([], 4833), 'next_readonly_imm_use': ([], 4833), 'lhs_of_dominating_assert': ([], 4833), 'gimple_set_op': ([], 4833), 'gimple_cond_set_lhs': ([], 4833), 'gimple_cond_set_rhs': ([], 4833), 'gimple_switch_index': ([], 4833), 'gimple_goto_dest': ([], 4833), 'simplify_control_stmt_condition': ([], 4833), 'VEC_tree_base_pop': ([], 4833), 'remove_temporary_equivalences': ([], 4833), 'thread_across_edge': ([], 4833)}, "PosixPath('602/tree-object-size.bc')": {'gimple_ops': ([], 11046), 'gimple_op': ([], 11046), 'gimple_assign_rhs1': ([], 11046), 'gimple_assign_rhs_code': ([], 11046), 'gimple_assign_rhs2': ([], 11046), 'unknown_object_size': ([], 11046), 'gimple_call_fn': ([], 11046), 'gimple_call_fndecl': ([], 11046), 'gimple_call_arg': ([], 11046), 'pass_through_call': ([], 11046), 'alloc_object_size': ([], 11046), 'call_object_size': ([], 11046), 'compute_object_offset': ([], 11046), 'bmp_iter_set_init': ([], 11046), 'bmp_iter_set': ([], 11046), 'check_for_plus_in_loops_1': ([], 11046), 'check_for_plus_in_loops': ([], 11046), 'compute_builtin_object_size': ([122], 11041), 'addr_object_size': ([63, 79], 11036), 'collect_object_sizes_for': ([], 11046), 'cond_expr_object_size': ([], 11046), 'expr_object_size': ([11], 11043), 'merge_object_sizes': ([], 11046), 'init_object_sizes': ([], 11046), 'fini_object_sizes': ([], 11046), 'bb_seq': ([], 11046), 'gsi_start_bb': ([], 11046), 'gsi_stmt': ([], 11046), 'compute_object_sizes': ([0, 11], 11036)}, "PosixPath('602/rtl-error.bc')": {'location_for_asm': ([], 766), 'diagnostic_for_asm': ([], 766)}, "PosixPath('602/vmsdbgout.bc')": {}, "PosixPath('602/tree-ssa-threadupdate.bc')": {'thread_single_edge': ([], 5605), 'bmp_iter_set_init': ([], 5605), 'bmp_iter_set': ([], 5605), 'bb_seq': ([], 5605), 'gsi_start_bb': ([], 5605), 'gsi_stmt': ([], 5605), 'redirection_block_p': ([7], 5604), 'ei_end_p': ([], 5605), 'ei_cond': ([], 5605), 'ei_next': ([], 5605), 'mark_threaded_blocks': ([], 5605), 'lookup_redirection_data': ([], 5605), 'gsi_last_bb': ([], 5605), 'ei_safe_edge': ([], 5605), 'remove_ctrl_stmt_and_useless_edges': ([0], 5600), 'single_succ_edge': ([], 5605), 'redirect_edges': ([26], 5576), 'create_edge_and_update_destination_phis': ([11], 5599), 'create_block_for_threading': ([], 5605), 'create_duplicates': ([], 5605), 'thread_block': ([26], 5599), 'VEC_int_base_quick_push': ([], 5605), 'loop_outer': ([], 5605), 'VEC_int_base_iterate': ([], 5605), 'fel_next': ([], 5605), 'fel_init': ([], 5605), 'determine_bb_domination_status': ([], 5605), 'thread_through_loop_header': ([], 5605), 'thread_through_all_blocks': ([], 5605), 'VEC_edge_base_space': ([], 5605), 'VEC_edge_heap_reserve': ([], 5605), 'VEC_edge_base_quick_push': ([], 5605), 'VEC_edge_heap_safe_push': ([], 5605), 'register_jump_thread': ([], 5605)}, "PosixPath('602/ira-lives.bc')": {'process_bb_node_lives': ([0, 269, 454], 11045), 'set_allocno_live': ([0], 11056), 'ira_implicitly_set_insn_hard_regs': ([0], 11059), 'create_start_finish_chains': ([], 11061), 'ira_print_live_range_list': ([], 11061), 'print_allocno_live_ranges': ([], 11061), 'ira_debug_allocno_live_ranges': ([], 11061), 'print_live_ranges': ([], 11061), 'df_lr_get_bb_info': ([], 11061), 'sparseset_clear': ([], 11061), 'bmp_iter_set_init': ([], 11061), 'bmp_iter_set': ([], 11061), 'sparseset_bit_p': ([], 11061), 'sparseset_insert_bit': ([], 11061), 'sparseset_set_bit': ([], 11061), 'sparseset_iter_init': ([], 11061), 'sparseset_iter_p': ([], 11061), 'sparseset_iter_elm': ([], 11061), 'sparseset_iter_next': ([], 11061), 'make_regno_born': ([], 11061), 'mark_reg_live': ([], 11061), 'mark_ref_live': ([], 11061), 'single_reg_class': ([], 11061), 'single_reg_operand_class': ([], 11061), 'ira_get_register_move_cost': ([], 11061), 'process_single_reg_class_operands': ([37], 11056), 'update_allocno_pressure_excess_length': ([], 11061), 'clear_allocno_live': ([], 11061), 'make_regno_dead': ([], 11061), 'mark_reg_dead': ([], 11061), 'mark_ref_dead': ([], 11061), 'make_pseudo_conflict': ([0], 11056), 'check_and_make_def_use_conflict': ([], 11061), 'check_and_make_def_conflict': ([1], 11056), 'make_early_clobber_and_input_conflicts': ([], 11061), 'mark_hard_reg_early_clobbers': ([2], 11053), 'ei_end_p': ([], 11061), 'ei_cond': ([], 11061), 'ei_next': ([], 11061), 'bb_has_eh_pred': ([], 11061), 'bb_has_abnormal_pred': ([], 11061), 'bb_has_abnormal_call_pred': ([], 11061), 'remove_some_program_points_and_update_live_ranges': ([], 11061), 'ira_compress_allocno_live_ranges': ([], 11061)}, "PosixPath('602/resource.bc')": {'add_to_hard_reg_set': ([], 8678), 'mark_referenced_resources': ([10, 27], 8670), 'mark_set_resources': ([18, 22, 24, 29], 8641), 'return_insn_p': ([], 8678), 'find_basic_block': ([], 8678), 'df_lr_get_bb_info': ([], 8678), 'remove_from_hard_reg_set': ([], 8678), 'next_insn_no_annul': ([], 8678), 'find_dead_or_set_registers': ([60], 8675), 'update_live_status': ([], 8678), 'mark_target_live_regs': ([200, 275], 8670), 'init_resource_info': ([], 8678), 'free_resource_info': ([], 8678), 'clear_hashed_info_for_insn': ([], 8678)}, "PosixPath('602/opts.bc')": {'set_struct_debug_option': ([], 17381), 'base_of_path': ([], 17381), 'matches_main_base': ([], 17381), 'should_emit_struct_debug': ([], 17381), 'VEC_const_char_p_base_pop': ([], 17381), 'print_ignored_options': ([], 17381), 'VEC_char_p_base_iterate': ([], 17381), 'flag_instrument_functions_exclude_p': ([], 17381), 'VEC_const_char_p_base_space': ([], 17381), 'VEC_const_char_p_heap_reserve': ([], 17381), 'VEC_const_char_p_base_quick_push': ([], 17381), 'VEC_const_char_p_heap_safe_push': ([], 17381), 'postpone_unknown_option_warning': ([], 17381), 'write_langs': ([], 17381), 'set_option': ([], 17381), 'wrap_help': ([], 17381), 'option_enabled': ([], 17381), 'print_filtered_help': ([], 17381), 'print_specific_help': ([], 17381), 'enable_warning_as_error': ([], 17381), 'VEC_char_p_base_space': ([], 17381), 'VEC_char_p_heap_reserve': ([], 17381), 'VEC_char_p_base_quick_push': ([], 17381), 'VEC_char_p_heap_safe_push': ([], 17381), 'add_comma_separated_to_vector': ([], 17381), 'common_handle_option': ([], 17381), 'handle_option': ([], 17381), 'handle_options': ([], 17381), 'decode_options': ([], 17381), 'fast_math_flags_struct_set_p': ([], 17381), 'get_option_state': ([], 17381)}, "PosixPath('602/function.bc')": {'allocate_struct_function': ([], 31933), 'assign_stack_temp_for_type': ([], 31933), 'expand_function_end': ([15], 31932), 'split_complex_args': ([], 31933), 'aggregate_value_p': ([], 31933), 'VEC_function_p_base_space': ([], 31933), 'VEC_function_p_heap_reserve': ([], 31933), 'VEC_function_p_base_quick_push': ([], 31933), 'VEC_function_p_heap_safe_push': ([], 31933), 'push_function_context': ([], 31933), 'VEC_function_p_base_pop': ([], 31933), 'pop_function_context': ([], 31933), 'free_after_compilation': ([], 31933), 'cut_slot_from_list': ([], 31933), 'insert_slot_to_list': ([], 31933), 'VEC_temp_slot_p_base_space': ([], 31933), 'VEC_temp_slot_p_gc_reserve_exact': ([], 31933), 'VEC_temp_slot_p_gc_safe_grow': ([], 31933), 'VEC_temp_slot_p_gc_safe_grow_cleared': ([], 31933), 'temp_slots_at_level': ([0], 31932), 'temp_slot_address_compute_hash': ([], 31933), 'insert_temp_slot_address': ([], 31933), 'assign_temp': ([3, 5], 31928), 'find_temp_slot_from_address': ([9], 31925), 'update_temp_slot_address': ([], 31933), 'mark_temp_addr_taken': ([], 31933), 'move_slot_to_level': ([], 31933), 'preserve_temp_slots': ([0], 31926), 'make_slot_available': ([], 31933), 'combine_temp_slots': ([], 31933), 'free_temp_slots': ([], 31933), 'instantiate_virtual_regs_in_rtx': ([], 31933), 'instantiate_decl_rtl': ([], 31933), 'use_register_for_decl': ([], 31933), 'pass_by_reference': ([], 31933), 'VEC_tree_base_space': ([], 31933), 'VEC_tree_heap_reserve': ([], 31933), 'VEC_tree_base_quick_push': ([], 31933), 'VEC_tree_heap_safe_push': ([], 31933), 'VEC_tree_base_quick_insert': ([], 31933), 'VEC_tree_heap_safe_insert': ([], 31933), 'VEC_tree_base_iterate': ([], 31933), 'assign_parms_augmented_arg_list': ([20], 31924), 'assign_parm_find_data_types': ([19], 31927), 'gimplify_parm_type': ([], 31933), 'gimplify_parameters': ([22], 31929), 'pad_to_arg_alignment': ([], 31933), 'locate_and_pad_parm': ([], 31933), 'setjmp_vars_warning': ([], 31933), 'setjmp_args_warning': ([], 31933), 'generate_setjmp_warnings': ([], 31933), 'clear_block_marks': ([], 31933), 'VEC_tree_base_pop': ([], 31933), 'blocks_nreverse': ([], 31933), 'reorder_blocks_1': ([], 31933), 'reorder_blocks': ([], 31933), 'all_blocks': ([], 31933), 'number_blocks': ([0], 31924), 'debug_find_var_in_block_tree': ([], 31933), 'push_cfun': ([], 31933), 'pop_cfun': ([], 31933), 'push_struct_function': ([], 31933), 'init_function_start': ([], 31933), 'assign_parms_setup_varargs': ([], 31933), 'assign_parm_find_entry_rtl': ([], 31933), 'assign_parm_is_stack_parm': ([], 31933), 'assign_parm_find_stack_rtl': ([], 31933), 'assign_parm_adjust_entry_rtl': ([], 31933), 'assign_parm_adjust_stack_rtl': ([], 31933), 'assign_parm_setup_block_p': ([], 31933), 'assign_parm_setup_block': ([], 31933), 'assign_parm_setup_reg': ([], 31933), 'assign_parm_setup_stack': ([], 31933), 'assign_parms_unsplit_complex': ([], 31933), 'assign_parms': ([], 31933), 'expand_function_start': ([], 31933), 'expand_dummy_function_end': ([], 31933), 'diddle_return_value': ([4], 31928), 'clobber_return_register': ([], 31933), 'do_warn_unused_parameter': ([], 31933), 'use_return_register': ([], 31933), 'contains': ([], 31933), 'ei_end_p': ([], 31933), 'ei_cond': ([], 31933), 'ei_next': ([], 31933), 'reposition_prologue_and_epilogue_notes': ([], 31933), 'used_types_insert_helper': ([], 31933), 'used_types_insert': ([0], 31926), 'hash_types_used_by_vars_entry': ([], 31933), 'types_used_by_vars_eq': ([], 31933), 'types_used_by_var_decl_insert': ([], 31933), 'gt_ggc_mx_temp_slot': ([], 31933), 'gt_ggc_mx_temp_slot_address_entry': ([], 31933), 'gt_ggc_m_P23temp_slot_address_entry4htab': ([3, 4], 31926), 'gt_pch_nx_temp_slot': ([], 31933), 'gt_pch_nx_temp_slot_address_entry': ([], 31933), 'gt_pch_p_P23temp_slot_address_entry4htab': ([4], 31928), 'gt_pch_n_P23temp_slot_address_entry4htab': ([3, 4], 31926), 'match_asm_constraints_1': ([], 31933), 'rest_of_match_asm_constraints': ([5, 6], 31926), 'set_insn_locators': ([], 31933), 'single_succ_edge': ([], 31933), 'ei_safe_edge': ([], 31933), 'thread_prologue_and_epilogue_insns': ([], 31933), 'rest_of_handle_thread_prologue_and_epilogue': ([], 31933), 'safe_insn_predicate': ([], 31933), 'recog_memoized': ([], 31933), 'instantiate_virtual_regs_in_insn': ([], 31933), 'instantiate_expr': ([], 31933), 'instantiate_decls_1': ([5], 31927), 'instantiate_decls': ([], 31933), 'instantiate_virtual_regs': ([], 31933)}, "PosixPath('602/cfgloopanal.bc')": {'just_once_each_iteration_p': ([], 2923), 'ei_end_p': ([], 2923), 'ei_cond': ([], 2923), 'ei_next': ([], 2923), 'mark_irreducible_loops': ([15, 73], 2912), 'num_loop_insns': ([], 2923), 'average_num_loop_insns': ([], 2923), 'expected_loop_iterations_unbounded': ([], 2923), 'seq_cost': ([], 2923), 'init_set_costs': ([], 2923), 'estimate_reg_pressure_cost': ([], 2923), 'loop_outer': ([], 2923), 'mark_loop_exit_edges': ([], 2923)}, "PosixPath('602/combine-stack-adj.bc')": {'single_set_for_csa': ([0], 2554), 'try_apply_stack_adjustment': ([], 2557), 'adjust_frame_related_expr': ([], 2557), 'stack_memref_p': ([], 2557), 'record_one_stack_ref': ([], 2557), 'record_stack_refs': ([], 2557), 'combine_stack_adjustments_for_block': ([], 2557), 'combine_stack_adjustments': ([], 2557), 'rest_of_handle_stack_adjustments': ([], 2557)}, "PosixPath('602/var-tracking.bc')": {'dataflow_set_merge': ([], 57653), 'dataflow_set_clear_at_call': ([], 57653), 'delete_debug_insns': ([], 57653), 'dataflow_set_init': ([], 57653), 'stack_adjust_offset_pre_post': ([], 57653), 'insn_stack_adjust_offset_pre_post': ([], 57653), 'ei_one_before_end_p': ([], 57653), 'ei_next': ([], 57653), 'vt_stack_adjustments': ([], 57653), 'VEC_rtx_base_space': ([], 57653), 'VEC_rtx_heap_reserve': ([], 57653), 'VEC_rtx_base_quick_push': ([], 57653), 'VEC_rtx_heap_safe_push': ([], 57653), 'preserve_value': ([], 57653), 'var_debug_decl': ([], 57653), 'attrs_list_insert': ([], 57653), 'dv_uid': ([], 57653), 'dv_htab_hash': ([], 57653), 'shared_hash_find_slot_noinsert': ([], 57653), 'shared_hash_find_slot_1': ([], 57653), 'shared_hash_find_slot': ([], 57653), 'vars_copy_1': ([], 57653), 'dv_onepart_p': ([], 57653), 'variable_htab_free': ([8], 57650), 'variable_htab_hash': ([], 57653), 'shared_hash_unshare': ([], 57653), 'shared_hash_find_slot_unshare_1': ([], 57653), 'shared_hash_find_slot_unshare': ([], 57653), 'loc_cmp': ([0], 57650), 'shared_var_p': ([], 57653), 'unshare_variable': ([], 57653), 'add_value_chain': ([], 57653), 'add_value_chains': ([], 57653), 'set_dv_changed': ([0], 57648), 'variable_was_changed': ([15], 57650), 'set_slot_part': ([38, 67, 123], 57617), 'set_variable_part': ([], 57653), 'var_reg_decl_set': ([], 57653), 'vt_init_cfa_base': ([], 57653), 'single_succ_edge': ([], 57653), 'log_op_type': ([], 57653), 'VEC_micro_operation_base_space': ([], 57653), 'VEC_micro_operation_heap_reserve': ([], 57653), 'VEC_micro_operation_base_quick_push': ([], 57653), 'VEC_micro_operation_heap_safe_push': ([1], 57651), 'use_narrower_mode': ([], 57653), 'adjust_mems': ([2], 57635), 'adjust_insn': ([], 57653), 'contains_symbol_ref': ([], 57653), 'track_expr_p': ([], 57653), 'find_use_val': ([], 57653), 'get_address_mode': ([], 57653), 'track_loc_p': ([], 57653), 'use_type': ([], 57653), 'var_lowpart': ([], 57653), 'same_variable_part_p': ([], 57653), 'replace_expr_with_values': ([], 57653), 'reverse_op': ([], 57653), 'add_stores': ([], 57653), 'add_uses': ([12, 47, 76], 57615), 'add_with_sets': ([], 57653), 'fp_setter': ([], 57653), 'vt_get_decl_and_offset': ([], 57653), 'vt_add_function_parameters': ([], 57653), 'value_chain_htab_hash': ([], 57653), 'vt_initialize': ([23, 67, 522], 57638), 'shared_hash_destroy': ([0], 57648), 'dataflow_set_destroy': ([], 57653), 'vt_finalize': ([1], 57649), 'dataflow_set_clear': ([], 57653), 'ei_end_p': ([], 57653), 'ei_cond': ([], 57653), 'attrs_list_copy': ([], 57653), 'dataflow_set_copy': ([], 57653), 'attrs_list_member': ([], 57653), 'attrs_list_mpdv_union': ([], 57653), 'variable_union_info_cmp_pos': ([], 57653), 'variable_union': ([34, 77, 78, 246, 284], 57610), 'onepart_variable_different_p': ([], 57653), 'find_loc_in_1pdv': ([], 57653), 'insert_into_intersection': ([], 57653), 'shared_hash_find': ([], 57653), 'intersect_loc_chains': ([], 57653), 'remove_value_chain': ([8, 10], 57644), 'remove_value_chains': ([], 57653), 'delete_slot_part': ([], 57653), 'clobber_slot_part': ([8], 57652), 'clobber_variable_part': ([], 57653), 'canonicalize_values_star': ([35, 58], 57645), 'variable_merge_over_cur': ([35], 57651), 'variable_merge_over_src': ([], 57653), 'canonicalize_vars_star': ([0, 8, 18], 57588), 'delete_variable_part': ([], 57653), 'var_mem_decl_set': ([], 57653), 'val_reset': ([], 57653), 'variable_post_merge_perm_vals': ([], 57653), 'remove_duplicate_values': ([], 57653), 'variable_post_merge_new_vals': ([42], 57651), 'dataflow_post_merge_adjust': ([], 57653), 'attrs_list_union': ([], 57653), 'dataflow_set_union': ([], 57653), 'var_regno_delete': ([], 57653), 'may_be_aliased': ([], 57653), 'is_global_var': ([], 57653), 'mem_dies_at_call': ([], 57653), 'dataflow_set_remove_mem_locs': ([], 57653), 'find_mem_expr_in_1pdv': ([0], 57649), 'dataflow_set_preserve_mem_locs': ([1, 20, 21, 24], 57625), 'var_reg_set': ([], 57653), 'var_mem_set': ([], 57653), 'val_resolve': ([2], 57652), 'val_store': ([], 57653), 'var_reg_delete': ([], 57653), 'var_mem_delete': ([], 57653), 'get_init_value': ([], 57653), 'find_src_status': ([], 57653), 'find_src_set_src': ([15], 57628), 'var_reg_delete_and_set': ([], 57653), 'var_mem_delete_and_set': ([], 57653), 'dataflow_set_equiv_regs': ([], 57653), 'dump_var': ([], 57653), 'variable_part_different_p': ([], 57653), 'variable_different_p': ([], 57653), 'dataflow_set_different_1': ([], 57653), 'canonicalize_values_mark': ([], 57653), 'compute_bb_dataflow': ([], 57653), 'dump_attrs_list': ([], 57653), 'dump_dataflow_set': ([], 57653), 'vt_find_locations': ([159, 163, 167, 591], 57574), 'dump_dataflow_sets': ([], 57653), 'VEC_rtx_base_iterate': ([], 57653), 'add_cselib_value_chains': ([], 57653), 'VEC_variable_base_pop': ([], 57653), 'dv_changed_p': ([], 57653), 'VEC_variable_base_space': ([], 57653), 'VEC_variable_heap_reserve': ([], 57653), 'VEC_variable_base_quick_push': ([], 57653), 'VEC_variable_heap_safe_push': ([], 57653), 'check_changed_vars_0': ([], 57653), 'check_changed_vars_2': ([], 57653), 'VEC_rtx_base_pop': ([], 57653), 'vt_expand_loc_callback': ([], 57653), 'vt_expand_loc': ([], 57653), 'vt_expand_loc_dummy': ([], 57653), 'emit_note_insn_var_location': ([39], 57582), 'check_changed_vars_3': ([16], 57652), 'check_changed_vars_1': ([0], 57652), 'emit_notes_for_changes': ([], 57653), 'emit_notes_for_differences_2': ([], 57653), 'emit_notes_for_differences_1': ([], 57653), 'emit_notes_in_bb': ([], 57653), 'vt_emit_notes': ([], 57653), 'variable_tracking_main_1': ([], 57653), 'variable_tracking_main': ([], 57653)}, "PosixPath('602/md5.bc')": {'md5_init_ctx': ([], 3538), 'md5_read_ctx': ([], 3538), 'md5_process_block': ([], 3538), 'md5_finish_ctx': ([], 3538), 'md5_process_bytes': ([], 3538), 'md5_stream': ([], 3538), 'md5_buffer': ([], 3538)}, "PosixPath('602/cgraphbuild.bc')": {'reset_inline_failed': ([], 2300), 'compute_call_stmt_bb_frequency': ([], 2300), 'record_reference': ([], 2300), 'bb_seq': ([], 2300), 'gsi_start_bb': ([], 2300), 'gsi_stmt': ([], 2300), 'gimple_ops': ([], 2300), 'gimple_op': ([], 2300), 'gimple_call_fn': ([], 2300), 'gimple_call_fndecl': ([], 2300), 'rebuild_cgraph_edges': ([], 2300), 'gimple_op_ptr': ([], 2300), 'gimple_call_arg_ptr': ([], 2300), 'gimple_call_lhs': ([], 2300), 'gimple_call_lhs_ptr': ([], 2300), 'build_cgraph_edges': ([78], 2289)}, "PosixPath('602/ira.bc')": {'setup_class_subset_and_memory_move_costs': ([], 18097), 'fix_reg_equiv_init': ([], 18097), 'ira_print_disposition': ([], 18097), 'print_class_cover': ([], 18097), 'ira_debug_class_cover': ([], 18097), 'ira_init_register_move_cost': ([8], 18095), 'ira_init_once': ([], 18097), 'free_register_move_costs': ([], 18097), 'setup_reg_mode_hard_regset': ([], 18097), 'setup_class_hard_regs': ([], 18097), 'setup_available_class_regs': ([], 18097), 'setup_alloc_regs': ([], 18097), 'setup_reg_subclasses': ([], 18097), 'setup_cover_and_important_classes': ([], 18097), 'setup_class_translate': ([], 18097), 'comp_reg_classes_func': ([], 18097), 'reorder_important_classes': ([], 18097), 'setup_reg_class_relations': ([42], 18095), 'find_reg_class_closure': ([], 18097), 'setup_hard_regno_cover_class': ([], 18097), 'setup_reg_class_nregs': ([], 18097), 'setup_prohibited_class_mode_regs': ([], 18097), 'ira_init': ([], 18097), 'compute_regs_asm_clobbered': ([], 18097), 'ira_setup_eliminable_regset': ([], 18097), 'df_lr_get_bb_info': ([], 18097), 'mark_elimination': ([], 18097), 'recog_memoized': ([], 18097), 'setup_prohibited_mode_move_regs': ([], 18097), 'no_equiv': ([], 18097), 'validate_equiv_mem_from_store': ([0], 18092), 'validate_equiv_mem': ([], 18097), 'equiv_init_varies_p': ([], 18097), 'equiv_init_movable_p': ([], 18097), 'contains_replace_regs': ([], 18097), 'memref_referenced_p': ([], 18097), 'memref_used_between_p': ([], 18097), 'df_live_get_bb_info': ([], 18097), 'adjust_cleared_regs': ([], 18097), 'update_equiv_regs': ([], 18097), 'find_reg_equiv_invariant_const': ([], 18097), 'setup_allocno_assignment_flags': ([2], 18094), 'setup_reg_renumber': ([], 18097), 'calculate_allocation_cost': ([], 18097), 'VEC_rtx_base_space': ([], 18097), 'VEC_rtx_gc_reserve_exact': ([], 18097), 'VEC_rtx_gc_safe_grow': ([], 18097), 'bmp_iter_set_init': ([], 18097), 'bmp_iter_set': ([], 18097), 'pseudo_for_reload_consideration_p': ([], 18097), 'init_live_subregs': ([0], 18096), 'build_insn_chain': ([], 18097), 'ira': ([3, 19], 18091)}, "PosixPath('602/stor-layout.bc')": {'start_record_layout': ([], 16274), 'place_field': ([4], 16269), 'finalize_type_size': ([5], 16248), 'finish_builtin_struct': ([], 16274), 'layout_type': ([0], 16255), 'initialize_sizetypes': ([0], 16266), 'set_sizetype': ([3], 16270), 'VEC_tree_base_iterate': ([], 16274), 'VEC_tree_base_space': ([], 16274), 'VEC_tree_gc_reserve': ([], 16274), 'VEC_tree_base_quick_push': ([], 16274), 'VEC_tree_gc_safe_push': ([], 16274), 'copy_self_referential_tree_r': ([], 16274), 'self_referential_size': ([], 16274), 'variable_size': ([], 16274), 'finalize_size_functions': ([], 16274), 'mode_for_size': ([], 16274), 'smallest_mode_for_size': ([], 16274), 'int_mode_for_mode': ([], 16274), 'vector_type_mode': ([], 16274), 'do_type_align': ([], 16274), 'layout_decl': ([16, 36], 16246), 'relayout_decl': ([], 16274), 'debug_rli': ([], 16274), 'rli_size_unit_so_far': ([], 16274), 'rli_size_so_far': ([], 16274), 'update_alignment_for_field': ([], 16274), 'place_union_field': ([], 16274), 'compute_record_mode': ([], 16274), 'finalize_record_size': ([], 16274), 'finish_record_layout': ([], 16274), 'set_min_and_max_values_for_integral_type': ([], 16274), 'fixup_unsigned_type': ([], 16274), 'make_fract_type': ([], 16274), 'make_accum_type': ([], 16274), 'get_best_mode': ([], 16274)}, "PosixPath('602/cpp_directives.bc')": {'do_pragma_push_macro': ([11], 17370), 'start_directive': ([], 17376), 'do_ident': ([], 17376), 'parse_answer': ([], 17376), 'parse_assertion': ([], 17376), 'find_answer': ([2], 17372), 'do_unassert': ([], 17376), 'do_assert': ([2], 17348), 'do_diagnostic': ([], 17376), 'lookup_pragma_entry': ([], 17376), 'do_pragma': ([], 17376), 'do_elif': ([], 17376), 'strtolinenum': ([], 17376), 'skip_rest_of_line': ([], 17376), 'do_line': ([], 17376), 'lex_macro_node': ([], 17376), 'do_undef': ([], 17376), 'push_conditional': ([5], 17370), 'do_ifndef': ([2], 17373), 'do_else': ([], 17376), 'do_if': ([], 17376), 'do_ifdef': ([2], 17373), 'do_endif': ([], 17376), 'do_define': ([], 17376), 'parse_include': ([], 17376), 'do_include_common': ([17], 17355), 'directive_diagnostics': ([], 17376), 'prepare_directive_trad': ([], 17376), 'end_directive': ([], 17376), 'read_flag': ([], 17376), 'do_linemarker': ([], 17376), '_cpp_handle_directive': ([0, 64], 17360), 'new_pragma_entry': ([], 17376), 'register_pragma_1': ([], 17376), 'cpp_register_pragma': ([], 17376), 'cpp_register_deferred_pragma': ([], 17376), 'register_pragma_internal': ([], 17376), 'do_pragma_dependency': ([], 17376), 'do_pragma_poison': ([], 17376), 'get__Pragma_string': ([1], 17374), 'cpp_pop_definition': ([0], 17327), 'do_pragma_pop_macro': ([6], 17370), 'cpp_push_definition': ([], 17376), '_cpp_init_internal_pragmas': ([], 17376), 'count_registered_pragmas': ([], 17376), 'save_registered_pragmas': ([], 17376), 'restore_registered_pragmas': ([], 17376), 'cpp_push_buffer': ([5], 17370), '_cpp_pop_buffer': ([], 17376), 'destringize_and_run': ([27], 17372), '_cpp_test_assertion': ([], 17376), 'run_directive': ([], 17376), 'cpp_define': ([], 17376), 'cpp_define_formatted': ([], 17376), 'handle_assertion': ([], 17376), 'cpp_get_deps': ([], 17376), '_cpp_init_directives': ([], 17376)}, "PosixPath('602/cp-demangle.bc')": {'cplus_demangle_type': ([3, 5], 31327), 'd_print_flush': ([], 31372), 'd_print_cast': ([], 31372), 'cplus_demangle_fill_name': ([], 31372), 'cplus_demangle_fill_extended_operator': ([], 31372), 'cplus_demangle_fill_ctor': ([], 31372), 'cplus_demangle_fill_dtor': ([], 31372), 'd_make_empty': ([], 31372), 'd_make_comp': ([], 31372), 'd_cv_qualifiers': ([9], 31369), 'd_add_substitution': ([], 31372), 'd_make_builtin_type': ([], 31372), 'd_number': ([0], 31370), 'd_make_name': ([], 31372), 'd_identifier': ([], 31372), 'd_source_name': ([], 31372), 'd_make_extended_operator': ([], 31372), 'd_make_operator': ([], 31372), 'd_make_ctor': ([], 31372), 'd_make_dtor': ([], 31372), 'd_ctor_dtor_name': ([], 31372), 'd_compact_number': ([0], 31371), 'd_unnamed_type': ([], 31372), 'd_make_sub': ([], 31372), 'd_substitution': ([], 31372), 'd_make_template_param': ([], 31372), 'd_template_param': ([], 31372), 'd_make_function_param': ([], 31372), 'd_make_default_arg': ([], 31372), 'd_number_component': ([], 31372), 'd_make_character': ([], 31372), 'd_java_resource': ([], 31372), 'is_ctor_dtor_or_conversion': ([], 31372), 'has_return_type': ([], 31372), 'd_unqualified_name': ([2], 31371), 'd_lambda': ([], 31372), 'd_operator_name': ([0], 31359), 'd_vector_type': ([], 31372), 'd_pointer_to_member_type': ([], 31372), 'd_array_type': ([], 31372), 'd_expression': ([], 31372), 'd_exprlist': ([], 31372), 'd_expr_primary': ([], 31372), 'cplus_demangle_mangled_name': ([0], 31338), 'd_encoding': ([], 31372), 'd_name': ([], 31372), 'd_template_args': ([26], 31368), 'd_function_type': ([], 31372), 'd_bare_function_type': ([], 31372), 'd_parmlist': ([], 31372), 'd_print_init': ([], 31372), 'd_append_char': ([], 31372), 'd_append_buffer': ([], 31372), 'd_print_java_identifier': ([41], 31366), 'd_append_string': ([], 31372), 'd_index_template_argument': ([], 31372), 'd_lookup_template_argument': ([], 31372), 'd_append_num': ([], 31372), 'd_find_pack': ([], 31372), 'd_pack_length': ([], 31372), 'd_print_comp': ([415, 428, 507], 31357), 'd_print_subexpr': ([], 31372), 'd_print_expr_op': ([], 31372), 'd_print_function_type': ([], 31372), 'd_print_mod_list': ([31], 31370), 'd_print_array_type': ([], 31372), 'd_print_mod': ([], 31372), 'cplus_demangle_print_callback': ([], 31372), 'd_growable_string_resize': ([], 31372), 'd_growable_string_init': ([], 31372), 'd_growable_string_append_buffer': ([], 31372), 'd_growable_string_callback_adapter': ([], 31372), 'cplus_demangle_print': ([], 31372), 'cplus_demangle_init_info': ([], 31372), 'd_demangle_callback': ([], 31372), 'd_demangle': ([], 31372), 'cplus_demangle_v3': ([], 31372), 'java_demangle_v3': ([], 31372), 'is_ctor_or_dtor': ([], 31372), 'is_gnu_v3_mangled_ctor': ([], 31372), 'is_gnu_v3_mangled_dtor': ([], 31372)}, "PosixPath('602/genrtl.bc')": {'gen_rtx_fmt_0_stat': ([], 3937), 'gen_rtx_fmt_ee_stat': ([], 3937), 'gen_rtx_fmt_ue_stat': ([], 3937), 'gen_rtx_fmt_E_stat': ([], 3937), 'gen_rtx_fmt_e_stat': ([], 3937), 'gen_rtx_fmt_iuuBieie_stat': ([], 3937), 'gen_rtx_fmt_iuuBieie0_stat': ([], 3937), 'gen_rtx_fmt_iuuBieiee_stat': ([], 3937), 'gen_rtx_fmt_iuu00000_stat': ([], 3937), 'gen_rtx_fmt_iuuB00is_stat': ([], 3937), 'gen_rtx_fmt_si_stat': ([], 3937), 'gen_rtx_fmt_ssiEEEi_stat': ([], 3937), 'gen_rtx_fmt_Ei_stat': ([], 3937), 'gen_rtx_fmt_eEee0_stat': ([], 3937), 'gen_rtx_fmt_eee_stat': ([], 3937), 'gen_rtx_fmt_w_stat': ([], 3937), 'gen_rtx_fmt_www_stat': ([], 3937), 'gen_rtx_fmt_s_stat': ([], 3937), 'gen_rtx_fmt_i00_stat': ([], 3937), 'gen_rtx_fmt_ei_stat': ([], 3937), 'gen_rtx_fmt_e0_stat': ([], 3937), 'gen_rtx_fmt_u_stat': ([], 3937), 'gen_rtx_fmt_s00_stat': ([], 3937), 'gen_rtx_fmt_tei_stat': ([], 3937), 'gen_rtx_fmt_iss_stat': ([], 3937), 'gen_rtx_fmt_is_stat': ([], 3937), 'gen_rtx_fmt_isE_stat': ([], 3937), 'gen_rtx_fmt_i_stat': ([], 3937), 'gen_rtx_fmt_iE_stat': ([], 3937), 'gen_rtx_fmt_ss_stat': ([], 3937), 'gen_rtx_fmt_sEss_stat': ([], 3937), 'gen_rtx_fmt_eE_stat': ([], 3937), 'gen_rtx_fmt_Ess_stat': ([], 3937), 'gen_rtx_fmt_ses_stat': ([], 3937), 'gen_rtx_fmt_sss_stat': ([], 3937), 'gen_rtx_fmt_sse_stat': ([], 3937), 'gen_rtx_fmt_sies_stat': ([], 3937), 'gen_rtx_fmt_sE_stat': ([], 3937), 'gen_rtx_fmt_ii_stat': ([], 3937), 'gen_rtx_fmt_Ee_stat': ([], 3937)}, "PosixPath('602/ipa-prop.bc')": {'ipa_push_func_to_list_1': ([], 18393), 'ipa_init_func_list': ([], 18393), 'ipa_initialize_node_params': ([], 18393), 'bb_seq': ([], 18393), 'gsi_start_bb': ([], 18393), 'gsi_stmt': ([], 18393), 'ipa_get_param_decl_index': ([], 18393), 'visit_store_addr_for_mod_analysis': ([], 18393), 'ipa_detect_param_modifications': ([24, 25], 18376), 'VEC_ipa_edge_args_t_base_space': ([], 18393), 'VEC_ipa_edge_args_t_gc_reserve_exact': ([], 18393), 'VEC_ipa_edge_args_t_gc_safe_grow': ([], 18393), 'VEC_ipa_edge_args_t_gc_safe_grow_cleared': ([], 18393), 'ipa_count_arguments': ([6], 18386), 'ipa_edge_args_info_available_for_edge_p': ([], 18393), 'ipa_print_node_jump_functions': ([], 18393), 'gimple_ops': ([], 18393), 'gimple_op': ([], 18393), 'gimple_call_arg': ([], 18393), 'gimple_assign_rhs1': ([], 18393), 'gimple_assign_rhs2': ([], 18393), 'gimple_assign_rhs_code': ([], 18393), 'compute_complex_pass_through': ([], 18393), 'compute_scalar_jump_functions': ([], 18393), 'type_like_member_ptr_p': ([], 18393), 'compute_pass_through_member_ptrs': ([], 18393), 'gimple_assign_lhs': ([], 18393), 'get_ssa_def_if_simple_copy': ([], 18393), 'fill_member_ptr_cst_jump_function': ([], 18393), 'determine_cst_member_ptr': ([], 18393), 'compute_cst_member_ptr_arguments': ([], 18393), 'ipa_compute_jump_functions': ([], 18393), 'gimple_call_fn': ([], 18393), 'ipa_note_param_call': ([], 18393), 'ipa_get_member_ptr_load_param': ([], 18393), 'ipa_get_stmt_member_ptr_load_param': ([], 18393), 'single_pred_edge': ([], 18393), 'single_succ_edge': ([], 18393), 'gimple_cond_rhs': ([], 18393), 'gimple_cond_lhs': ([], 18393), 'ipa_analyze_call_uses': ([], 18393), 'ipa_analyze_stmt_uses': ([], 18393), 'ipa_analyze_params_uses': ([136], 18357), 'print_edge_addition_message': ([], 18393), 'ipa_check_create_edge_args': ([], 18393), 'VEC_cgraph_edge_p_base_space': ([], 18393), 'VEC_cgraph_edge_p_heap_reserve': ([], 18393), 'VEC_cgraph_edge_p_base_quick_push': ([], 18393), 'VEC_cgraph_edge_p_heap_safe_push': ([], 18393), 'update_call_notes_after_inlining': ([], 18393), 'update_jump_functions_after_inlining': ([], 18393), 'propagate_info_to_inlined_callees': ([], 18393), 'ipa_free_all_edge_args': ([1], 18387), 'ipa_free_node_params_substructures': ([], 18393), 'VEC_ipa_node_params_t_base_space': ([], 18393), 'VEC_ipa_node_params_t_heap_reserve_exact': ([], 18393), 'VEC_ipa_node_params_t_heap_safe_grow': ([], 18393), 'VEC_ipa_node_params_t_heap_safe_grow_cleared': ([], 18393), 'ipa_check_create_node_params': ([], 18393), 'ipa_node_duplication_hook': ([], 18393), 'ipa_edge_duplication_hook': ([], 18393), 'ipa_edge_removal_hook': ([], 18393), 'ipa_print_node_params': ([], 18393), 'VEC_tree_base_quick_push': ([], 18393), 'ipa_get_vector_of_formal_parms': ([], 18393), 'get_vector_of_formal_parm_types': ([], 18393), 'ipa_modify_formal_parameters': ([], 18393), 'gimple_call_fndecl': ([], 18393), 'gimple_call_lhs': ([], 18393), 'gimple_set_op': ([], 18393), 'gimple_call_set_lhs': ([], 18393), 'gimple_call_chain': ([], 18393), 'gimple_call_set_chain': ([], 18393), 'ipa_modify_call_arguments': ([], 18393), 'VEC_ipa_parm_adjustment_t_base_quick_push': ([], 18393), 'ipa_combine_adjustments': ([], 18393), 'ipa_dump_param_adjustments': ([], 18393), 'ipa_write_jump_function': ([], 18393), 'ipa_write_param_call_note': ([], 18393), 'ipa_write_node_info': ([], 18393), 'ipa_prop_write_jump_functions': ([], 18393), 'ipa_read_param_call_note': ([], 18393), 'ipa_read_node_info': ([1], 18391), 'ipa_prop_read_section': ([], 18393), 'ipa_prop_read_jump_functions': ([], 18393), 'ipa_update_after_lto_read': ([], 18393), 'lto_ipa_fixup_call_notes': ([], 18393)}, "PosixPath('602/tree-vect-stmts.bc')": {'vect_mark_stmts_to_be_vectorized': ([4, 15, 33, 198], 44984), 'gsi_stmt': ([], 45081), 'gimple_vdef': ([], 45081), 'clear_and_done_ssa_iter': ([], 45081), 'op_iter_init_phidef': ([], 45081), 'gimple_def_ops': ([], 45081), 'gimple_use_ops': ([], 45081), 'gimple_vuse': ([], 45081), 'op_iter_init': ([], 45081), 'op_iter_next_def': ([], 45081), 'op_iter_init_def': ([], 45081), 'end_readonly_imm_use_p': ([], 45081), 'first_readonly_imm_use': ([], 45081), 'next_readonly_imm_use': ([], 45081), 'vect_stmt_relevant_p': ([1], 45079), 'VEC_gimple_base_space': ([], 45081), 'VEC_gimple_heap_reserve': ([], 45081), 'VEC_gimple_base_quick_push': ([], 45081), 'VEC_gimple_heap_safe_push': ([], 45081), 'vect_mark_relevant': ([15], 45079), 'bb_seq': ([], 45081), 'gsi_start_bb': ([], 45081), 'VEC_gimple_base_pop': ([], 45081), 'op_iter_next_use': ([], 45081), 'op_iter_init_phiuse': ([], 45081), 'op_iter_init_use': ([], 45081), 'gimple_ops': ([], 45081), 'gimple_op': ([], 45081), 'gimple_assign_lhs': ([], 45081), 'gimple_assign_rhs1': ([], 45081), 'exist_non_indexing_operands_for_use_p': ([], 45081), 'gimple_call_lhs': ([], 45081), 'vect_is_simple_use': ([0, 3], 45075), 'process_use': ([], 45081), 'vect_model_simple_cost': ([], 45081), 'vect_cost_strided_group_size': ([], 45081), 'vect_model_store_cost': ([], 45081), 'vect_model_load_cost': ([], 45081), 'gimple_set_op': ([], 45081), 'gimple_assign_set_lhs': ([], 45081), 'is_loop_header_bb_p': ([], 45081), 'new_stmt_vec_info': ([], 45081), 'VEC_vec_void_p_base_space': ([], 45081), 'VEC_vec_void_p_heap_reserve': ([], 45081), 'VEC_vec_void_p_base_quick_push': ([], 45081), 'VEC_vec_void_p_heap_safe_push': ([], 45081), 'set_vinfo_for_stmt': ([], 45081), 'vect_finish_stmt_generation': ([], 45081), 'gsi_after_labels': ([], 45081), 'vect_init_vector': ([], 45081), 'get_vectype_for_scalar_type': ([], 45081), 'vect_get_vec_def_for_operand': ([], 45081), 'vect_get_vec_def_for_stmt_copy': ([], 45081), 'gimple_call_fn': ([], 45081), 'gimple_call_fndecl': ([], 45081), 'vectorizable_function': ([], 45081), 'gimple_assign_rhs_code': ([], 45081), 'vect_is_simple_cond': ([], 45081), 'vectorizable_condition': ([], 45081), 'gimple_call_return_type': ([], 45081), 'gimple_expr_type': ([], 45081), 'gimple_assign_rhs2': ([], 45081), 'VEC_tree_base_quick_push': ([], 45081), 'supportable_widening_operation': ([], 45081), 'VEC_tree_base_iterate': ([], 45081), 'VEC_tree_heap_copy': ([], 45081), 'VEC_tree_base_pop': ([], 45081), 'gimple_call_set_lhs': ([], 45081), 'vect_gen_widened_results_half': ([], 45081), 'vect_create_vectorized_promotion_stmts': ([], 45081), 'vectorizable_type_promotion': ([8, 10, 12, 14, 16, 58, 82], 44903), 'supportable_narrowing_operation': ([], 45081), 'vect_get_loop_based_defs': ([], 45081), 'vect_create_vectorized_demotion_stmts': ([], 45081), 'vectorizable_type_demotion': ([12, 13, 18, 179], 45003), 'vect_get_vec_defs': ([], 45081), 'vect_get_vec_defs_for_stmt_copy': ([], 45081), 'vectorizable_conversion': ([0, 1, 2, 3, 8, 10, 12, 14], 44951), 'vectorizable_operation': ([], 45081), 'vectorizable_assignment': ([], 45081), 'vectorizable_load': ([4], 45032), 'gimple_call_arg': ([], 45081), 'vectorizable_call': ([], 45081), 'vectorizable_store': ([], 45081), 'vect_analyze_stmt': ([], 45081), 'vect_transform_stmt': ([], 45081), 'free_stmt_vec_info': ([], 45081)}, "PosixPath('602/tree-ssa-copyrename.bc')": {'bb_seq': ([], 2595), 'gsi_start_bb': ([], 2595), 'gsi_stmt': ([], 2595), 'gimple_ops': ([], 2595), 'gimple_op': ([], 2595), 'gimple_assign_lhs': ([], 2595), 'gimple_assign_rhs1': ([], 2595), 'partition_to_var': ([], 2595), 'copy_rename_partition_coalesce': ([], 2595), 'rename_ssa_copies': ([22, 39], 2587)}, "PosixPath('602/c-semantics.bc')": {'pop_stmt_list': ([], 756), 'build_stmt': ([], 756)}, "PosixPath('602/tree-ssa-math-opts.bc')": {'first_imm_use_on_stmt': ([], 10935), 'next_imm_use_on_stmt': ([], 10935), 'execute_cse_sincos_1': ([], 10935), 'find_bswap_1': ([54], 10932), 'bb_seq': ([], 10935), 'gsi_start_bb': ([], 10935), 'gsi_stmt': ([], 10935), 'gsi_after_labels': ([], 10935), 'gimple_ops': ([], 10935), 'gimple_op': ([], 10935), 'gimple_assign_rhs1': ([], 10935), 'gimple_assign_rhs_code': ([], 10935), 'gimple_call_fn': ([], 10935), 'gimple_call_return_type': ([], 10935), 'gimple_expr_type': ([], 10935), 'gimple_assign_rhs_class': ([], 10935), 'gimple_assign_rhs2': ([], 10935), 'do_shift_rotate': ([], 10935), 'verify_symbolic_number_p': ([], 10935), 'find_bswap': ([], 10935), 'gimple_assign_lhs': ([], 10935), 'gimple_set_op': ([], 10935), 'gimple_call_set_lhs': ([], 10935), 'execute_optimize_bswap': ([16, 28], 10902), 'gimple_call_lhs': ([], 10935), 'gimple_call_fndecl': ([], 10935), 'gimple_call_arg': ([], 10935), 'end_imm_use_stmt_p': ([], 10935), 'clear_and_done_ssa_iter': ([], 10935), 'op_iter_next_use': ([], 10935), 'op_iter_init_phiuse': ([], 10935), 'delink_imm_use': ([], 10935), 'link_imm_use_to_list': ([], 10935), 'move_use_after_head': ([2], 10921), 'gimple_def_ops': ([], 10935), 'gimple_vdef': ([], 10935), 'gimple_use_ops': ([], 10935), 'gimple_vuse': ([], 10935), 'op_iter_init': ([], 10935), 'op_iter_init_use': ([], 10935), 'gimple_vuse_op': ([], 10935), 'link_use_stmts_after': ([], 10935), 'first_imm_use_stmt': ([], 10935), 'VEC_gimple_base_space': ([], 10935), 'VEC_gimple_heap_reserve': ([], 10935), 'VEC_gimple_base_quick_push': ([], 10935), 'VEC_gimple_heap_safe_push': ([], 10935), 'maybe_record_sincos': ([], 10935), 'next_imm_use_stmt': ([], 10935), 'VEC_gimple_base_iterate': ([], 10935), 'execute_cse_sincos': ([], 10935), 'end_readonly_imm_use_p': ([], 10935), 'first_readonly_imm_use': ([], 10935), 'is_division_by': ([], 10935), 'occ_new': ([], 10935), 'insert_bb': ([], 10935), 'register_division_in': ([], 10935), 'next_readonly_imm_use': ([], 10935), 'compute_merit': ([], 10935), 'insert_reciprocals': ([8], 10920), 'link_imm_use': ([], 10935), 'set_ssa_use_from_ptr': ([], 10935), 'replace_reciprocal': ([], 10935), 'free_bb': ([], 10935), 'execute_cse_reciprocals_1': ([], 10935), 'gimple_has_lhs': ([], 10935), 'op_iter_next_tree': ([], 10935), 'op_iter_init_tree': ([], 10935), 'single_ssa_tree_operand': ([], 10935), 'gimple_call_set_fndecl': ([], 10935), 'execute_cse_reciprocals': ([33, 87], 10884)}, "PosixPath('602/pointer-set.bc')": {'pointer_map_create': ([], 1621), 'pointer_set_create': ([], 1621), 'pointer_set_contains': ([], 1621), 'pointer_set_insert': ([], 1621), 'pointer_set_traverse': ([4], 1616), 'pointer_map_contains': ([], 1621), 'pointer_map_insert': ([], 1621), 'pointer_map_traverse': ([7], 1616)}, "PosixPath('602/gimple.bc')": {'gsi_last': ([], 40347), 'gsi_start': ([], 40347), 'gimple_size': ([], 40347), 'gimple_alloc_stat': ([0], 40114), 'gimple_build_with_ops_stat': ([], 40347), 'gimple_ops': ([], 40347), 'gimple_set_op': ([], 40347), 'gimple_return_set_retval': ([], 40347), 'gimple_build_return': ([], 40347), 'gimple_build_call_1': ([], 40347), 'gimple_call_set_arg': ([], 40347), 'gimple_build_call_vec': ([0], 40345), 'is_gimple_reg': ([0], 40344), 'is_gimple_constant': ([], 40347), 'strip_invariant_refs': ([], 40347), 'is_gimple_invariant_address': ([], 40347), 'is_gimple_min_invariant': ([], 40347), 'is_gimple_val': ([0], 40343), 'gimple_build_call': ([0], 40345), 'gimple_call_set_chain': ([], 40347), 'gimple_build_call_from_tree': ([0], 40340), 'gimple_assign_set_lhs': ([], 40347), 'gimple_assign_set_rhs1': ([], 40347), 'gimple_assign_set_rhs2': ([], 40347), 'gimple_build_assign_with_ops_stat': ([], 40347), 'gimple_build_assign_stat': ([], 40347), 'gimple_cond_set_lhs': ([], 40347), 'gimple_cond_set_rhs': ([], 40347), 'gimple_cond_set_true_label': ([], 40347), 'gimple_cond_set_false_label': ([], 40347), 'gimple_build_cond': ([], 40347), 'gimple_cond_get_ops_from_tree': ([3], 40342), 'gimple_build_cond_from_tree': ([], 40347), 'gimple_cond_set_condition': ([], 40347), 'gimple_cond_set_condition_from_tree': ([], 40347), 'gimple_label_set_label': ([], 40347), 'gimple_build_label': ([], 40347), 'gimple_goto_set_dest': ([], 40347), 'gimple_build_goto': ([], 40347), 'gimple_build_nop': ([], 40347), 'gimple_build_bind': ([], 40347), 'gimple_build_asm_1': ([], 40347), 'gimple_asm_set_input_op': ([], 40347), 'gimple_asm_set_output_op': ([], 40347), 'gimple_asm_set_clobber_op': ([], 40347), 'gimple_asm_set_label_op': ([], 40347), 'gimple_build_asm_vec': ([], 40347), 'gimple_build_catch': ([], 40347), 'gimple_build_eh_filter': ([], 40347), 'gimple_build_eh_must_not_throw': ([], 40347), 'gimple_build_try': ([], 40347), 'gimple_build_wce': ([], 40347), 'gimple_build_resx': ([], 40347), 'gimple_switch_set_index': ([], 40347), 'gimple_switch_set_label': ([], 40347), 'gimple_switch_set_default_label': ([], 40347), 'gimple_build_switch_nlabels': ([0], 40336), 'gimple_build_switch': ([], 40347), 'gimple_build_switch_vec': ([], 40347), 'gimple_build_eh_dispatch': ([], 40347), 'gimple_debug_bind_set_var': ([], 40347), 'gimple_debug_bind_set_value': ([], 40347), 'gimple_build_debug_bind_stat': ([], 40347), 'gimple_build_omp_critical': ([], 40347), 'gimple_build_omp_for': ([], 40347), 'gimple_build_omp_parallel': ([], 40347), 'gimple_build_omp_task': ([], 40347), 'gimple_build_omp_section': ([], 40347), 'gimple_build_omp_master': ([], 40347), 'gimple_build_omp_continue': ([], 40347), 'gimple_build_omp_ordered': ([], 40347), 'gimple_build_omp_return': ([], 40347), 'gimple_build_omp_sections': ([], 40347), 'gimple_build_omp_sections_switch': ([], 40347), 'gimple_build_omp_single': ([], 40347), 'gimple_build_omp_atomic_load': ([], 40347), 'gimple_build_omp_atomic_store': ([], 40347), 'gimple_build_predict': ([], 40347), 'gimple_seq_alloc': ([], 40347), 'gimple_seq_free': ([], 40347), 'gimple_seq_add_stmt': ([], 40347), 'gimple_seq_add_seq': ([], 40347), 'gsi_stmt': ([], 40347), 'empty_body_p': ([], 40347), 'gimple_omp_for_cond': ([], 40347), 'gimple_omp_for_set_cond': ([], 40347), 'gimple_omp_for_index': ([], 40347), 'gimple_omp_for_set_index': ([], 40347), 'gimple_omp_for_initial': ([], 40347), 'gimple_omp_for_set_initial': ([], 40347), 'gimple_omp_for_final': ([], 40347), 'gimple_omp_for_set_final': ([], 40347), 'gimple_omp_for_incr': ([], 40347), 'gimple_omp_for_set_incr': ([], 40347), 'gimple_op': ([], 40347), 'gimple_vdef': ([], 40347), 'gimple_vuse': ([], 40347), 'gimple_call_fn': ([], 40347), 'gimple_call_fndecl': ([], 40347), 'gimple_call_flags': ([], 40347), 'VEC_gimple_base_space': ([], 40347), 'VEC_gimple_gc_reserve': ([], 40347), 'VEC_gimple_base_quick_push': ([], 40347), 'VEC_gimple_gc_safe_push': ([], 40347), 'gimple_set_modified': ([], 40347), 'gimple_seq_copy': ([], 40347), 'gimple_copy': ([0, 1], 40334), 'gimple_assign_lhs': ([], 40347), 'gimple_assign_rhs1': ([], 40347), 'gimple_assign_rhs_code': ([], 40347), 'gimple_assign_single_p': ([2], 40345), 'gimple_op_ptr': ([], 40347), 'is_gimple_lvalue': ([], 40347), 'is_gimple_mem_rhs': ([], 40347), 'gimple_call_chain_ptr': ([], 40347), 'gimple_call_fn_ptr': ([], 40347), 'gimple_call_arg_ptr': ([], 40347), 'gimple_call_lhs_ptr': ([], 40347), 'gimple_asm_output_op': ([], 40347), 'gimple_asm_input_op': ([], 40347), 'gimple_asm_label_op': ([], 40347), 'walk_gimple_asm': ([], 40347), 'gimple_omp_for_index_ptr': ([], 40347), 'gimple_omp_for_initial_ptr': ([], 40347), 'gimple_omp_for_final_ptr': ([], 40347), 'gimple_omp_for_incr_ptr': ([], 40347), 'walk_gimple_op': ([0], 40345), 'walk_gimple_seq': ([], 40347), 'walk_gimple_stmt': ([], 40347), 'gimple_has_body_p': ([], 40347), 'gimple_assign_copy_p': ([2], 40339), 'gimple_assign_ssa_name_copy_p': ([2], 40343), 'gimple_assign_unary_nop_p': ([], 40347), 'gimple_label_label': ([], 40347), 'VEC_basic_block_base_space': ([], 40347), 'VEC_basic_block_gc_reserve_exact': ([], 40347), 'VEC_basic_block_gc_safe_grow': ([], 40347), 'VEC_basic_block_gc_safe_grow_cleared': ([], 40347), 'gimple_set_bb': ([], 40347), 'gimple_assign_set_rhs_with_ops': ([3], 40340), 'gimple_assign_set_rhs_from_tree': ([], 40347), 'gimple_call_lhs': ([], 40347), 'gimple_get_lhs': ([], 40347), 'gimple_call_set_lhs': ([], 40347), 'gimple_set_lhs': ([], 40347), 'gimple_call_arg': ([], 40347), 'gimple_has_side_effects': ([], 40347), 'gimple_rhs_has_side_effects': ([], 40347), 'gimple_call_return_type': ([], 40347), 'gimple_expr_type': ([], 40347), 'gimple_assign_rhs2': ([], 40347), 'gimple_could_trap_p_1': ([0, 15], 40333), 'is_gimple_address': ([], 40347), 'is_gimple_ip_invariant_address': ([], 40347), 'is_gimple_ip_invariant': ([], 40347), 'is_gimple_stmt': ([], 40347), 'is_gimple_non_addressable': ([], 40347), 'is_gimple_asm_val': ([], 40347), 'get_call_expr_in': ([0, 1], 40340), 'get_base_address': ([], 40347), 'tree_operand_length': ([], 40347), 'recalculate_side_effects': ([], 40347), 'canonicalize_cond_expr_cond': ([0], 40340), 'VEC_tree_base_quick_push': ([], 40347), 'gimple_call_chain': ([], 40347), 'gimple_call_copy_skip_args': ([], 40347), 'compare_field_offset': ([], 40347), 'VEC_tree_base_space': ([], 40347), 'VEC_tree_heap_reserve': ([], 40347), 'VEC_tree_heap_safe_push': ([], 40347), 'iterative_hash_name': ([0], 40342), 'VEC_tree_base_pop': ([], 40347), 'iterative_hash_gimple_type': ([5, 49], 40338), 'visit': ([], 40347), 'gimple_type_hash': ([], 40347), 'type_pair_eq': ([2], 40346), 'type_pair_hash': ([], 40347), 'lookup_type_pair': ([], 40347), 'compare_type_names_p': ([0, 1], 40337), 'gimple_types_compatible_p': ([2], 40340), 'gimple_register_type': ([], 40347), 'print_gimple_types_stats': ([], 40347), 'gimple_signed_or_unsigned_type': ([21], 40345), 'gimple_get_alias_set': ([], 40347), 'gimple_use_ops': ([], 40347), 'op_iter_init': ([], 40347), 'op_iter_next_tree': ([], 40347), 'op_iter_init_tree': ([], 40347), 'count_ptr_derefs': ([], 40347), 'count_uses_and_derefs': ([4, 10], 40327), 'get_base_loadstore': ([], 40347), 'gimple_return_retval': ([], 40347), 'walk_stmt_load_store_addr_ops': ([], 40347), 'gimple_ior_addresses_taken_1': ([], 40347), 'gimple_decl_printable_name': ([], 40347)}, "PosixPath('602/stub-objc.bc')": {}, "PosixPath('602/tree-loop-distribution.bc')": {'rdg_flag_vertex_and_dependent': ([], 10924), 'gsi_start': ([], 10924), 'first_imm_use_on_stmt': ([], 10924), 'next_imm_use_on_stmt': ([], 10924), 'VEC_bitmap_base_iterate': ([], 10924), 'dump_rdg_partitions': ([], 10924), 'VEC_int_base_quick_push': ([], 10924), 'loop_outer': ([], 10924), 'VEC_int_base_iterate': ([], 10924), 'fel_next': ([], 10924), 'fel_init': ([], 10924), 'VEC_gimple_base_iterate': ([], 10924), 'VEC_int_base_space': ([], 10924), 'VEC_int_heap_reserve': ([], 10924), 'VEC_int_heap_safe_push': ([], 10924), 'predecessor_has_mem_write': ([], 10924), 'has_anti_dependence': ([], 10924), 'mark_nodes_having_upstream_mem_writes': ([], 10924), 'VEC_rdgc_base_space': ([], 10924), 'VEC_rdgc_heap_reserve': ([], 10924), 'VEC_rdgc_base_quick_push': ([], 10924), 'VEC_rdgc_heap_safe_push': ([], 10924), 'rdg_build_components': ([], 10924), 'VEC_rdgc_base_iterate': ([], 10924), 'gimple_vuse_op': ([], 10924), 'gimple_ops': ([], 10924), 'gimple_op': ([], 10924), 'gimple_assign_lhs': ([], 10924), 'end_readonly_imm_use_p': ([], 10924), 'first_readonly_imm_use': ([], 10924), 'next_readonly_imm_use': ([], 10924), 'rdg_flag_vertex': ([], 10924), 'bmp_iter_set_init': ([], 10924), 'bmp_iter_set': ([], 10924), 'rdg_has_similar_memory_accesses': ([], 10924), 'VEC_int_base_unordered_remove': ([], 10924), 'rdg_flag_similar_memory_accesses': ([], 10924), 'VEC_edge_base_iterate': ([], 10924), 'VEC_gimple_base_space': ([], 10924), 'VEC_gimple_heap_reserve': ([], 10924), 'VEC_gimple_base_quick_push': ([], 10924), 'VEC_gimple_heap_safe_push': ([], 10924), 'collect_condition_stmts': ([], 10924), 'VEC_gimple_base_pop': ([], 10924), 'rdg_flag_loop_exits': ([], 10924), 'build_rdg_partition_for_component': ([], 10924), 'VEC_bitmap_base_space': ([], 10924), 'VEC_bitmap_heap_reserve': ([], 10924), 'VEC_bitmap_base_quick_push': ([], 10924), 'VEC_bitmap_heap_safe_push': ([], 10924), 'free_rdg_components': ([], 10924), 'rdg_build_partitions': ([3], 10923), 'number_of_rw_in_rdg': ([], 10924), 'number_of_rw_in_partition': ([], 10924), 'partition_contains_all_rw': ([], 10924), 'bb_seq': ([], 10924), 'gsi_start_bb': ([], 10924), 'gsi_stmt': ([], 10924), 'gimple_assign_rhs1': ([], 10924), 'gsi_last_bb': ([], 10924), 'gimple_assign_rhs_code': ([], 10924), 'build_size_arg_loc': ([], 10924), 'generate_memset_zero': ([], 10924), 'phi_nodes': ([], 10924), 'end_imm_use_stmt_p': ([], 10924), 'clear_and_done_ssa_iter': ([], 10924), 'op_iter_next_use': ([], 10924), 'op_iter_init_phiuse': ([], 10924), 'delink_imm_use': ([], 10924), 'link_imm_use_to_list': ([], 10924), 'move_use_after_head': ([2], 10910), 'gimple_def_ops': ([], 10924), 'gimple_vdef': ([], 10924), 'gimple_use_ops': ([], 10924), 'gimple_vuse': ([], 10924), 'op_iter_init': ([], 10924), 'op_iter_init_use': ([], 10924), 'link_use_stmts_after': ([], 10924), 'first_imm_use_stmt': ([], 10924), 'link_imm_use': ([], 10924), 'set_ssa_use_from_ptr': ([], 10924), 'next_imm_use_stmt': ([], 10924), 'prop_phis': ([], 10924), 'generate_builtin': ([], 10924), 'gimple_phi_arg_location_from_edge': ([], 10924), 'update_phis_for_loop_copy': ([], 10924), 'copy_loop_before': ([], 10924), 'generate_loops_for_partition': ([], 10924), 'generate_code_for_partition': ([], 10924), 'ldist_gen': ([8, 97], 10895), 'distribute_loop': ([], 10924), 'tree_loop_distribution': ([], 10924)}, "PosixPath('602/cse.bc')": {'cse_extended_basic_block': ([], 45212), 'cse_insn': ([62, 67, 68, 85, 88, 94, 95, 113, 656, 663], 45071), 'make_new_qty': ([], 45212), 'dump_class': ([], 45212), 'get_cse_reg_info_1': ([], 45212), 'get_cse_reg_info': ([], 45212), 'hash_rtx_cb': ([0, 6], 45209), 'exp_equiv_p': ([], 45212), 'init_cse_reg_info': ([], 45212), 'single_succ_edge': ([], 45212), 'cse_find_path': ([], 45212), 'cse_prescan_path': ([], 45212), 'cse_dump_path': ([], 45212), 'new_basic_block': ([], 45212), 'ei_end_p': ([], 45212), 'ei_cond': ([], 45212), 'ei_next': ([], 45212), 'bb_has_eh_pred': ([], 45212), 'df_scan_get_bb_info': ([], 45212), 'df_get_artificial_defs': ([], 45212), 'delete_reg_equiv': ([5], 45203), 'lookup_for_remove': ([], 45212), 'remove_from_table': ([], 45212), 'remove_pseudo_from_table': ([], 45212), 'cse_rtx_varies_p': ([70, 73, 111, 154], 45178), 'check_dependence': ([], 45212), 'invalidate': ([30, 86, 95], 45194), 'canon_reg': ([], 45212), 'cse_process_notes': ([27], 45197), 'lookup': ([], 45212), 'lookup_as_function': ([1], 45209), 'equiv_constant': ([10], 45205), 'notreg_cost': ([], 45212), 'fold_rtx': ([3, 5, 6, 14, 37, 389], 45040), 'find_comparison_args': ([], 45212), 'make_regs_eqv': ([], 45212), 'remove_invalid_refs': ([], 45212), 'remove_invalid_subreg_refs': ([], 45212), 'rehash_using_reg': ([21, 23], 45206), 'insert_regs': ([132, 276, 285, 286], 45169), 'mention_regs': ([100, 101, 122, 160, 179, 209], 45193), 'approx_reg_cost_1': ([], 45212), 'approx_reg_cost': ([], 45212), 'add_to_hard_reg_set': ([], 45212), 'fixed_base_plus_p': ([], 45212), 'insert': ([], 45212), 'insert_with_costs': ([115, 115, 117, 139, 140, 165, 181], 45189), 'merge_equiv_classes': ([0, 1, 2, 11], 45194), 'use_related_value': ([], 45212), 'find_reg_offset_for_const': ([], 45212), 'try_const_anchors': ([], 45212), 'invalidate_from_clobbers': ([], 45212), 'invalidate_memory': ([], 45212), 'invalidate_for_call': ([], 45212), 'insert_const_anchor': ([3, 9], 45185), 'have_eh_succ_edges': ([], 45212), 'record_jump_cond': ([41, 61], 45192), 'record_jump_equiv': ([], 45212), 'check_for_label_ref': ([], 45212), 'cse_main': ([], 45212), 'count_reg_usage': ([1], 45200), 'is_dead_reg': ([], 45212), 'set_live_p': ([], 45212), 'insn_live_p': ([], 45212), 'delete_trivially_dead_insns': ([], 45212), 'cse_change_cc_mode': ([], 45212), 'cse_change_cc_mode_insn': ([], 45212), 'cse_change_cc_mode_insns': ([], 45212), 'cse_cc_succs': ([67], 45202), 'cse_condition_code_reg': ([], 45212), 'rest_of_handle_cse2': ([], 45212)}, "PosixPath('602/tree-outof-ssa.bc')": {'expand_phi_nodes': ([], 7544), 'phi_nodes': ([], 7544), 'ei_end_p': ([], 7544), 'ei_cond': ([], 7544), 'clear_elim_graph': ([], 7544), 'gsi_stmt': ([], 7544), 'var_to_partition': ([], 7544), 'gimple_phi_arg_location_from_edge': ([], 7544), 'VEC_int_base_space': ([], 7544), 'VEC_int_heap_reserve': ([], 7544), 'VEC_int_base_quick_push': ([], 7544), 'VEC_int_heap_safe_push': ([], 7544), 'VEC_tree_base_space': ([], 7544), 'VEC_tree_heap_reserve': ([], 7544), 'VEC_tree_base_quick_push': ([], 7544), 'VEC_tree_heap_safe_push': ([], 7544), 'VEC_source_location_base_space': ([], 7544), 'VEC_source_location_heap_reserve': ([], 7544), 'VEC_source_location_base_quick_push': ([], 7544), 'VEC_source_location_heap_safe_push': ([], 7544), 'VEC_int_base_iterate': ([], 7544), 'elim_graph_add_node': ([], 7544), 'eliminate_name': ([], 7544), 'elim_graph_add_edge': ([], 7544), 'eliminate_build': ([], 7544), 'elim_forward': ([], 7544), 'VEC_int_base_pop': ([], 7544), 'elim_unvisited_predecessor': ([], 7544), 'partition_to_var': ([], 7544), 'get_temp_reg': ([], 7544), 'bb_seq': ([], 7544), 'gsi_last_bb': ([], 7544), 'single_pred_edge': ([], 7544), 'set_location_for_edge': ([], 7544), 'emit_partition_copy': ([0], 7538), 'insert_part_to_rtx_on_edge': ([], 7544), 'insert_partition_copy_on_edge': ([], 7544), 'elim_backward': ([], 7544), 'insert_rtx_to_part_on_edge': ([], 7544), 'elim_graph_remove_succ_edge': ([], 7544), 'elim_create': ([], 7544), 'VEC_tree_base_pop': ([], 7544), 'VEC_source_location_base_pop': ([], 7544), 'insert_value_copy_on_edge': ([], 7544), 'eliminate_phi': ([], 7544), 'ei_next': ([], 7544), 'set_phi_nodes': ([], 7544), 'ei_safe_edge': ([], 7544), 'delete_elim_graph': ([], 7544), 'finish_out_of_ssa': ([], 7544), 'end_readonly_imm_use_p': ([], 7544), 'first_readonly_imm_use': ([], 7544), 'gsi_start_bb': ([], 7544), 'maybe_renumber_stmts_bb': ([], 7544), 'next_readonly_imm_use': ([], 7544), 'trivially_conflicts_p': ([], 7544), 'gimple_ops': ([], 7544), 'gimple_set_op': ([], 7544), 'gimple_assign_set_lhs': ([], 7544), 'delink_imm_use': ([], 7544), 'link_imm_use_to_list': ([], 7544), 'link_imm_use': ([], 7544), 'set_ssa_use_from_ptr': ([], 7544), 'insert_backedge_copies': ([], 7544), 'has_zero_uses': ([], 7544), 'clear_and_done_ssa_iter': ([], 7544), 'op_iter_next_use': ([], 7544), 'op_iter_init_phiuse': ([], 7544), 'remove_gimple_phi_args': ([], 7544), 'eliminate_useless_phis': ([], 7544), 'remove_ssa_form': ([], 7544), 'rewrite_out_of_ssa': ([62], 7539)}, "PosixPath('602/coverage.bc')": {'coverage_counter_alloc': ([], 10359), 'coverage_end_function': ([], 10359), 'build_ctr_info_value': ([], 10359), 'gcov_write_string': ([], 10359), 'gcov_write_tag': ([], 10359), 'gcov_read_words': ([], 10359), 'gcov_read_counter': ([], 10359), 'coverage_checksum_string': ([], 10359), 'compute_checksum': ([], 10359), 'get_coverage_counts': ([], 10359), 'tree_coverage_counter_ref': ([4], 10355), 'tree_coverage_counter_addr': ([4], 10355), 'coverage_begin_output': ([], 10359), 'htab_counts_entry_eq': ([], 10359), 'htab_counts_entry_hash': ([], 10359), 'read_counts_file': ([], 10359), 'coverage_init': ([], 10359), 'build_fn_info_value': ([], 10359), 'build_gcov_info': ([], 10359), 'create_coverage': ([], 10359), 'coverage_finish': ([], 10359), 'gcov_read_summary': ([], 10359)}, "PosixPath('602/sort.bc')": {'sort_pointers': ([], 274)}, "PosixPath('602/rtlanal.bc')": {'rtx_unstable_p': ([], 29939), 'rtx_varies_p': ([], 29939), 'rtx_addr_can_trap_p_1': ([], 29939), 'nonzero_address_p': ([], 29939), 'rtx_addr_varies_p': ([], 29939), 'get_integer_term': ([0], 29934), 'get_related_value': ([], 29939), 'offset_within_block_p': ([0], 29937), 'split_const': ([], 29939), 'count_occurrences': ([], 29939), 'reg_mentioned_p': ([], 29939), 'subreg_get_info': ([], 29939), 'subreg_regno_offset': ([], 29939), 'subreg_regno': ([], 29939), 'subreg_nregs_with_regno': ([], 29939), 'subreg_nregs': ([], 29939), 'refers_to_regno_p': ([2, 5], 29932), 'reg_overlap_mentioned_p': ([], 29939), 'find_regno_fusage': ([], 29939), 'find_reg_fusage': ([], 29939), 'reg_used_between_p': ([], 29939), 'reg_referenced_p': ([], 29939), 'note_stores': ([0], 29934), 'set_of': ([], 29939), 'reg_set_p': ([], 29939), 'reg_set_between_p': ([], 29939), 'modified_between_p': ([], 29939), 'modified_in_p': ([], 29939), 'find_reg_note': ([], 29939), 'side_effects_p': ([], 29939), 'single_set_2': ([], 29939), 'multiple_sets': ([], 29939), 'set_noop_p': ([7], 29934), 'noop_move_p': ([2, 3], 29928), 'find_last_value': ([], 29939), 'note_uses': ([], 29939), 'find_regno_note': ([], 29939), 'covers_regno_no_parallel_p': ([], 29939), 'covers_regno_p': ([], 29939), 'dead_or_set_regno_p': ([2, 5], 29929), 'dead_or_set_p': ([], 29939), 'find_reg_equal_equiv_note': ([], 29939), 'find_constant_src': ([], 29939), 'remove_reg_equal_equiv_notes': ([], 29939), 'in_expr_list_p': ([], 29939), 'remove_node_from_expr_list': ([], 29939), 'volatile_insn_p': ([], 29939), 'volatile_refs_p': ([], 29939), 'may_trap_p_1': ([101], 29931), 'inequality_comparisons_p': ([], 29939), 'replace_rtx': ([], 29939), 'for_each_rtx_1': ([], 29939), 'for_each_rtx': ([], 29939), 'rtx_referenced_p_1': ([], 29939), 'replace_label': ([0], 29937), 'tablejump_p': ([], 29939), 'computed_jump_p_1': ([], 29939), 'computed_jump_p': ([], 29939), 'regno_use_in': ([], 29939), 'commutative_operand_precedence': ([], 29939), 'auto_inc_p': ([], 29939), 'loc_mentioned_in_p': ([], 29939), 'subreg_lsb': ([], 29939), 'subreg_offset_representable_p': ([], 29939), 'simplify_subreg_regno': ([], 29939), 'parms_set': ([], 29939), 'find_first_parameter_load': ([24], 29937), 'keep_with_call_p': ([], 29939), 'label_is_jump_target_p': ([], 29939), 'rtx_cost': ([], 29939), 'cached_nonzero_bits': ([], 29939), 'nonzero_bits1': ([], 29939), 'cached_num_sign_bit_copies': ([], 29939), 'num_sign_bit_copies1': ([], 29939), 'insn_rtx_cost': ([], 29939), 'canonicalize_condition': ([23], 29931), 'get_condition': ([], 29939), 'truncated_to_mode': ([0], 29933), 'init_num_sign_bit_copies_in_rep': ([], 29939), 'init_rtlanal': ([], 29939), 'low_bitmask_len': ([], 29939)}, "PosixPath('602/cpp_line-map.bc')": {'linemap_init': ([], 1828), 'linemap_check_files_exited': ([], 1828), 'trace_include': ([], 1828), 'linemap_add': ([18, 28], 1823), 'linemap_line_start': ([28], 1824), 'linemap_position_for_column': ([], 1828), 'linemap_lookup': ([], 1828)}, "PosixPath('602/tree-ssa-live.bc')": {'init_var_map': ([], 9903), 'var_map_base_fini': ([0], 9898), 'delete_var_map': ([], 9903), 'var_union': ([], 9903), 'has_zero_uses': ([], 9903), 'partition_view_init': ([], 9903), 'bmp_iter_set_init': ([], 9903), 'bmp_iter_set': ([], 9903), 'partition_view_fini': ([], 9903), 'partition_to_var': ([], 9903), 'var_ann': ([], 9903), 'VEC_tree_base_space': ([], 9903), 'VEC_tree_heap_reserve': ([], 9903), 'VEC_tree_base_quick_push': ([], 9903), 'VEC_tree_heap_safe_push': ([], 9903), 'var_map_base_init': ([51], 9899), 'partition_view_bitmap': ([], 9903), 'dump_scope_block': ([], 9903), 'mark_scope_block_unused': ([], 9903), 'first_htab_element': ([], 9903), 'first_referenced_var': ([], 9903), 'end_htab_p': ([], 9903), 'end_referenced_vars_p': ([], 9903), 'next_htab_element': ([], 9903), 'next_referenced_var': ([], 9903), 'bb_seq': ([], 9903), 'gsi_start_bb': ([], 9903), 'gsi_stmt': ([], 9903), 'gimple_ops': ([], 9903), 'gimple_op_ptr': ([], 9903), 'get_var_ann': ([], 9903), 'set_is_used': ([], 9903), 'mark_all_vars_used_1': ([2], 9900), 'is_global_var': ([], 9903), 'clear_and_done_ssa_iter': ([], 9903), 'op_iter_next_use': ([], 9903), 'op_iter_init_phiuse': ([], 9903), 'ei_end_p': ([], 9903), 'ei_cond': ([], 9903), 'ei_next': ([], 9903), 'remove_unused_scope_block_p': ([6], 9887), 'remove_unused_locals': ([156], 9900), 'delete_tree_live_info': ([], 9903), 'var_to_partition': ([], 9903), 'live_on_entry': ([], 9903), 'calculate_live_on_exit': ([22], 9895), 'new_tree_live_info': ([], 9903), 'end_readonly_imm_use_p': ([], 9903), 'first_readonly_imm_use': ([], 9903), 'next_readonly_imm_use': ([], 9903), 'set_var_live_on_entry': ([], 9903), 'loe_visit_block': ([22], 9895), 'live_worklist': ([], 9903), 'calculate_live_ranges': ([], 9903), 'dump_var_map': ([], 9903), 'dump_live_info': ([], 9903)}, "PosixPath('602/lcm.bc')": {'ei_end_p': ([], 4797), 'ei_cond': ([], 4797), 'ei_next': ([], 4797), 'compute_available': ([], 4797), 'compute_antinout_edge': ([], 4797), 'compute_earliest': ([], 4797), 'compute_laterin': ([], 4797), 'compute_insert_delete': ([], 4797), 'pre_edge_lcm': ([], 4797), 'compute_farthest': ([], 4797), 'compute_nearerout': ([], 4797), 'compute_rev_insert_delete': ([], 4797), 'pre_edge_rev_lcm': ([], 4797)}, "PosixPath('602/tree-loop-linear.bc')": {'VEC_int_base_quick_push': ([], 3097), 'loop_outer': ([], 3097), 'VEC_int_base_iterate': ([], 3097), 'fel_next': ([], 3097), 'fel_init': ([], 3097), 'VEC_loop_p_base_space': ([], 3097), 'VEC_loop_p_heap_reserve': ([], 3097), 'VEC_loop_p_base_quick_push': ([], 3097), 'VEC_loop_p_heap_safe_push': ([], 3097), 'VEC_ddr_p_base_iterate': ([], 3097), 'VEC_data_reference_p_base_iterate': ([], 3097), 'VEC_loop_p_base_iterate': ([], 3097), 'gather_interchange_stats': ([31], 3095), 'try_interchange_loops': ([], 3097), 'VEC_gimple_base_iterate': ([], 3097), 'linear_transform_loops': ([], 3097)}, "PosixPath('602/filename_cmp.bc')": {}, "PosixPath('602/tree-iterator.bc')": {'alloc_stmt_list': ([], 1499), 'free_stmt_list': ([], 1499), 'tsi_link_before': ([], 1499), 'tsi_link_after': ([], 1499), 'tsi_delink': ([], 1499), 'expr_first': ([0], 1495), 'expr_last': ([0], 1495)}, "PosixPath('602/hashtab.bc')": {'htab_elements': ([], 4904), 'higher_prime_index': ([], 4904), 'htab_create_alloc': ([], 4904), 'htab_create_alloc_ex': ([], 4904), 'htab_set_functions_ex': ([], 4904), 'htab_create': ([], 4904), 'htab_try_create': ([], 4904), 'htab_delete': ([], 4904), 'htab_empty': ([], 4904), 'htab_mod': ([], 4904), 'htab_mod_m2': ([], 4904), 'htab_find_with_hash': ([22], 4902), 'find_empty_slot_for_expand': ([], 4904), 'htab_expand': ([], 4904), 'htab_find_slot_with_hash': ([32], 4902), 'htab_remove_elt_with_hash': ([], 4904), 'htab_clear_slot': ([], 4904), 'htab_traverse_noresize': ([], 4904), 'htab_traverse': ([], 4904), 'htab_collisions': ([], 4904), 'iterative_hash': ([], 4904)}, "PosixPath('602/getopt.bc')": {}, "PosixPath('602/ifcvt.bc')": {'single_succ_edge': ([], 24757), 'noce_get_condition': ([], 24757), 'first_active_insn': ([], 24757), 'last_active_insn': ([], 24757), 'noce_operand_ok': ([], 24757), 'noce_mem_write_may_trap_or_fault_p': ([], 24757), 'noce_can_store_speculate_p': ([], 24757), 'recog_memoized': ([], 24757), 'noce_emit_move_insn': ([9], 24751), 'end_ifcvt_sequence': ([], 24757), 'noce_try_move': ([], 24757), 'noce_emit_store_flag': ([], 24757), 'noce_try_store_flag': ([], 24757), 'noce_try_bitop': ([], 24757), 'noce_get_alt_condition': ([33, 40], 24728), 'noce_try_minmax': ([], 24757), 'noce_try_abs': ([], 24757), 'noce_emit_cmove': ([], 24757), 'noce_try_cmove': ([], 24757), 'noce_try_store_flag_constants': ([], 24757), 'noce_try_addcc': ([], 24757), 'noce_try_store_flag_mask': ([], 24757), 'noce_try_cmove_arith': ([], 24757), 'noce_try_sign_mask': ([], 24757), 'noce_process_if_block': ([], 24757), 'VEC_int_base_space': ([], 24757), 'VEC_int_heap_reserve': ([], 24757), 'VEC_int_base_quick_push': ([], 24757), 'VEC_int_heap_safe_push': ([1], 24755), 'check_cond_move_block': ([], 24757), 'VEC_int_base_iterate': ([], 24757), 'cond_move_convert_if_block': ([], 24757), 'cond_move_process_if_block': ([6], 24749), 'noce_find_if_block': ([], 24757), 'single_pred_edge': ([], 24757), 'ei_end_p': ([], 24757), 'ei_cond': ([], 24757), 'ei_next': ([], 24757), 'block_jumps_and_fallthru_p': ([], 24757), 'cond_exec_get_condition': ([], 24757), 'count_bb_insns': ([], 24757), 'block_fallthru': ([], 24757), 'cond_exec_process_insns': ([], 24757), 'merge_if_block': ([], 24757), 'cond_exec_process_if_block': ([], 24757), 'cond_exec_find_if_block': ([], 24757), 'block_has_only_trap': ([], 24757), 'find_cond_trap': ([], 24757), 'cheap_bb_rtx_cost_p': ([], 24757), 'bmp_iter_set_init': ([], 24757), 'bmp_iter_set': ([], 24757), 'dead_or_predicable': ([20], 24755), 'find_if_case_1': ([], 24757), 'find_if_case_2': ([], 24757), 'find_if_header': ([], 24757), 'if_convert': ([87, 170, 209], 24722)}, "PosixPath('602/make-temp-file.bc')": {'choose_tmpdir': ([], 767), 'make_temp_file': ([], 767)}, "PosixPath('602/reorg.bc')": {}, "PosixPath('602/cgraph.bc')": {'cgraph_node': ([], 16258), 'cgraph_make_decl_local': ([2], 16250), 'cgraph_add_edge_removal_hook': ([], 16258), 'cgraph_add_node_removal_hook': ([], 16258), 'cgraph_add_function_insertion_hook': ([], 16258), 'cgraph_call_function_insertion_hooks': ([], 16258), 'cgraph_add_edge_duplication_hook': ([], 16258), 'cgraph_add_node_duplication_hook': ([], 16258), 'cgraph_allocate_node': ([], 16258), 'cgraph_create_node': ([], 16258), 'cgraph_same_body_alias_1': ([], 16258), 'cgraph_get_node': ([], 16258), 'cgraph_call_node_removal_hooks': ([], 16258), 'cgraph_call_edge_removal_hooks': ([], 16258), 'cgraph_edge_remove_caller': ([], 16258), 'cgraph_free_edge': ([], 16258), 'cgraph_node_remove_callers': ([], 16258), 'cgraph_edge_remove_callee': ([], 16258), 'cgraph_node_remove_callees': ([], 16258), 'cgraph_remove_same_body_alias': ([], 16258), 'cgraph_release_function_body': ([], 16258), 'cgraph_remove_node': ([147, 149], 16253), 'cgraph_add_thunk': ([], 16258), 'cgraph_node_for_asm': ([], 16258), 'cgraph_edge': ([], 16258), 'cgraph_set_call_stmt': ([], 16258), 'cgraph_set_call_stmt_including_clones': ([], 16258), 'initialize_inline_failed': ([], 16258), 'cgraph_create_edge': ([], 16258), 'cgraph_create_edge_including_clones': ([], 16258), 'cgraph_remove_edge': ([], 16258), 'cgraph_redirect_edge_callee': ([], 16258), 'gimple_ops': ([], 16258), 'gimple_op': ([], 16258), 'gimple_call_fn': ([], 16258), 'gimple_call_fndecl': ([], 16258), 'cgraph_update_edges_for_call_stmt_node': ([], 16258), 'cgraph_update_edges_for_call_stmt': ([], 16258), 'cgraph_remove_node_and_inline_clones': ([], 16258), 'cgraph_mark_reachable_node': ([], 16258), 'cgraph_mark_needed_node': ([], 16258), 'cgraph_global_info': ([], 16258), 'cgraph_function_body_availability': ([], 16258), 'dump_cgraph_node': ([56, 80, 93, 102], 16244), 'change_decl_assembler_name': ([], 16258), 'cgraph_add_asm_node': ([], 16258), 'cgraph_call_edge_duplication_hooks': ([], 16258), 'cgraph_clone_edge': ([], 16258), 'VEC_cgraph_edge_p_base_iterate': ([], 16258), 'cgraph_call_node_duplication_hooks': ([], 16258), 'cgraph_clone_node': ([], 16258), 'clone_function_name': ([], 16258), 'cgraph_create_virtual_clone': ([], 16258), 'cgraph_unnest_node': ([], 16258), 'cgraph_add_new_function': ([], 16258), 'cgraph_node_can_be_local_p': ([], 16258), 'cgraph_make_node_local': ([0], 16252), 'cgraph_set_nothrow_flag': ([], 16258), 'cgraph_set_readonly_flag': ([], 16258), 'cgraph_set_pure_flag': ([], 16258), 'cgraph_set_looping_const_or_pure_flag': ([], 16258)}, "PosixPath('602/c-cppbuiltin.bc')": {'c_cpp_builtins_optimize_pragma': ([], 12751), 'define__GNUC__': ([], 12751), 'type_suffix': ([], 12751), 'builtin_define_type_minmax': ([], 12751), 'builtin_define_with_hex_fp_value': ([], 12751), 'builtin_define_float_constants': ([], 12751), 'builtin_define_decimal_float_constants': ([], 12751), 'builtin_define_fixed_point_constants': ([8], 12733), 'builtin_define_std': ([], 12751), 'c_cpp_builtins': ([], 12751)}, "PosixPath('602/modulo-sched.bc')": {'sbitmap_iter_init': ([], 18081), 'ps_insn_find_column': ([], 18081), 'print_partial_schedule': ([], 18081), 'VEC_int_base_quick_push': ([], 18081), 'loop_outer': ([], 18081), 'VEC_int_base_iterate': ([], 18081), 'fel_next': ([], 18081), 'fel_init': ([], 18081), 'loop_single_full_bb_p': ([5], 18078), 'loop_canon_p': ([], 18081), 'calculate_order_params': ([], 18081), 'sbitmap_iter_cond': ([], 18081), 'sbitmap_iter_next': ([], 18081), 'find_max_asap': ([], 18081), 'find_max_hv_min_mob': ([], 18081), 'find_max_dv_min_mob': ([], 18081), 'order_nodes_in_scc': ([], 18081), 'order_nodes_of_sccs': ([], 18081), 'check_nodes_order': ([], 18081), 'sms_order_nodes': ([7], 18070), 'res_MII': ([], 18081), 'set_node_sched_params': ([], 18081), 'create_partial_schedule': ([], 18081), 'get_sched_window': ([], 18081), 'calculate_must_precede_follow': ([], 18081), 'verify_partial_schedule': ([0], 18077), 'create_ps_insn': ([], 18081), 'add_node_to_ps': ([], 18081), 'ps_has_conflicts': ([], 18081), 'ps_insn_advance_column': ([], 18081), 'remove_node_from_ps': ([], 18081), 'ps_add_node_check_conflicts': ([], 18081), 'try_scheduling_node_in_cycle': ([], 18081), 'free_ps_insns': ([0], 18067), 'reset_partial_schedule': ([], 18081), 'compute_split_row': ([], 18081), 'normalize_sched_times': ([21], 18079), 'rotate_partial_schedule': ([], 18081), 'ps_insert_empty_row': ([], 18081), 'sms_schedule_by_order': ([], 18081), 'set_columns_for_ps': ([], 18081), 'ei_end_p': ([], 18081), 'ei_cond': ([], 18081), 'ei_next': ([], 18081), 'canon_loop': ([], 18081), 'permute_partial_schedule': ([], 18081), 'generate_reg_moves': ([], 18081), 'print_node_sched_params': ([], 18081), 'duplicate_insns_of_cycles': ([0], 18074), 'generate_prolog_epilog': ([], 18081), 'sms_schedule': ([], 18081), 'rest_of_handle_sms': ([6], 18074)}, "PosixPath('602/tree-vect-data-refs.bc')": {'vect_analyze_data_refs': ([], 29405), 'gimple_ops': ([], 29405), 'gimple_op': ([], 29405), 'gimple_call_fn': ([], 29405), 'gimple_call_return_type': ([], 29405), 'gimple_assign_rhs1': ([], 29405), 'gimple_assign_rhs_code': ([], 29405), 'gimple_expr_type': ([], 29405), 'gimple_assign_cast_p': ([], 29405), 'vect_get_smallest_scalar_type': ([], 29405), 'vect_get_place_in_interleaving_chain': ([], 29405), 'VEC_ddr_p_base_iterate': ([], 29405), 'vect_equal_offsets': ([], 29405), 'vect_insert_into_interleaving_chain': ([], 29405), 'vect_update_interleaving_chain': ([23], 29391), 'vect_check_interleaving': ([], 29405), 'VEC_ddr_p_base_space': ([], 29405), 'VEC_ddr_p_heap_reserve': ([], 29405), 'VEC_ddr_p_base_quick_push': ([], 29405), 'VEC_ddr_p_heap_safe_push': ([], 29405), 'vect_mark_for_runtime_alias_test': ([], 29405), 'VEC_loop_p_base_iterate': ([], 29405), 'VEC_lambda_vector_base_iterate': ([], 29405), 'VEC_dr_p_base_space': ([], 29405), 'VEC_dr_p_heap_reserve': ([], 29405), 'VEC_dr_p_base_quick_push': ([], 29405), 'VEC_dr_p_heap_safe_push': ([], 29405), 'vect_analyze_data_ref_dependence': ([], 29405), 'vect_analyze_data_ref_dependences': ([], 29405), 'VEC_data_reference_p_base_iterate': ([], 29405), 'vect_supportable_dr_alignment': ([24], 29388), 'vect_verify_datarefs_alignment': ([], 29405), 'vector_alignment_reachable_p': ([2], 29401), 'VEC_dr_p_base_iterate': ([], 29405), 'vect_update_misalignment_for_peel': ([], 29405), 'VEC_gimple_base_space': ([], 29405), 'VEC_gimple_heap_reserve': ([], 29405), 'VEC_gimple_base_quick_push': ([], 29405), 'VEC_gimple_heap_safe_push': ([], 29405), 'VEC_gimple_base_iterate': ([], 29405), 'vect_enhance_data_refs_alignment': ([], 29405), 'vect_can_force_dr_alignment_p': ([], 29405), 'vect_compute_data_ref_alignment': ([], 29405), 'vect_compute_data_refs_alignment': ([], 29405), 'vect_analyze_data_refs_alignment': ([], 29405), 'vect_analyze_group_access': ([], 29405), 'vect_analyze_data_ref_access': ([], 29405), 'vect_analyze_data_ref_accesses': ([], 29405), 'vect_same_range_drs': ([], 29405), 'VEC_ddr_p_base_ordered_remove': ([], 29405), 'vect_prune_runtime_alias_test_list': ([4], 29404), 'vect_create_addr_base_for_vector_ref': ([], 29405), 'gimple_assign_lhs': ([], 29405), 'gimple_set_op': ([], 29405), 'gimple_assign_set_lhs': ([], 29405), 'gsi_stmt': ([], 29405), 'VEC_vec_void_p_base_space': ([], 29405), 'VEC_vec_void_p_heap_reserve': ([], 29405), 'VEC_vec_void_p_base_quick_push': ([], 29405), 'VEC_vec_void_p_heap_safe_push': ([], 29405), 'set_vinfo_for_stmt': ([], 29405), 'vect_create_data_ref_ptr': ([], 29405), 'gimple_use_ops': ([], 29405), 'gimple_vuse': ([], 29405), 'op_iter_init': ([], 29405), 'op_iter_next_use': ([], 29405), 'op_iter_init_use': ([], 29405), 'delink_imm_use': ([], 29405), 'link_imm_use_to_list': ([], 29405), 'link_imm_use': ([], 29405), 'set_ssa_use_from_ptr': ([], 29405), 'bump_vector_ptr': ([], 29405), 'vect_create_destination_var': ([], 29405), 'vect_strided_store_supported': ([], 29405), 'VEC_tree_heap_copy': ([], 29405), 'vect_permute_store_chain': ([], 29405), 'gimple_call_set_lhs': ([], 29405), 'gimple_call_lhs': ([], 29405), 'vect_setup_realignment': ([3, 25], 29387), 'vect_strided_load_supported': ([], 29405), 'vect_permute_load_chain': ([], 29405), 'VEC_tree_base_iterate': ([], 29405), 'vect_transform_strided_load': ([0], 29375)}, "PosixPath('602/lto-symtab.bc')": {'lto_symtab_register_decl': ([0], 4402), 'lto_symtab_get': ([], 4409), 'lto_symtab_get_resolution': ([], 4409), 'lto_symtab_resolve_can_prevail_p': ([], 4409), 'lto_symtab_resolve_replaceable_p': ([], 4409), 'lto_symtab_resolve_symbols': ([8], 4408), 'VEC_tree_base_space': ([], 4409), 'VEC_tree_gc_reserve': ([], 4409), 'VEC_tree_base_quick_push': ([], 4409), 'VEC_tree_gc_safe_push': ([], 4409), 'lto_symtab_merge': ([], 4409), 'VEC_tree_heap_reserve': ([], 4409), 'VEC_tree_heap_safe_push': ([], 4409), 'VEC_tree_base_iterate': ([], 4409), 'lto_symtab_merge_decls_2': ([], 4409), 'lto_symtab_merge_decls_1': ([8, 53, 97, 126], 4378), 'lto_cgraph_replace_node': ([], 4409), 'lto_symtab_merge_cgraph_nodes_1': ([3], 4407), 'lto_symtab_prevailing_decl': ([], 4409), 'gt_ggc_mx_lto_symtab_entry_def': ([], 4409), 'gt_ggc_m_P20lto_symtab_entry_def4htab': ([3, 4], 4402), 'gt_pch_nx_lto_symtab_entry_def': ([], 4409), 'gt_pch_p_P20lto_symtab_entry_def4htab': ([4], 4404), 'gt_pch_n_P20lto_symtab_entry_def4htab': ([3, 4], 4402)}, "PosixPath('602/tree-ssa-loop-niter.bc')": {'tree_operand_length': ([], 25975), 'single_pred_edge': ([], 25975), 'gimple_ops': ([], 25975), 'gimple_op': ([], 25975), 'gimple_assign_rhs1': ([], 25975), 'gimple_assign_rhs_code': ([], 25975), 'gimple_assign_rhs2': ([], 25975), 'expand_simple_operations': ([], 25975), 'bb_seq': ([], 25975), 'gsi_start_bb': ([], 25975), 'gsi_stmt': ([], 25975), 'loop_only_exit_p': ([9], 25969), 'gimple_cond_lhs': ([], 25975), 'gimple_cond_rhs': ([], 25975), 'split_to_var_and_offset': ([], 25975), 'refine_bounds_using_guard': ([], 25975), 'bound_difference': ([], 25975), 'number_of_iterations_ne_max': ([], 25975), 'number_of_iterations_ne': ([], 25975), 'number_of_iterations_lt_to_ne': ([], 25975), 'assert_no_overflow_lt': ([], 25975), 'assert_loop_rolls_lt': ([], 25975), 'number_of_iterations_lt': ([], 25975), 'number_of_iterations_cond': ([], 25975), 'simplify_using_outer_evolutions': ([], 25975), 'simplify_replace_tree': ([], 25975), 'tree_simplify_using_condition_1': ([0], 25954), 'simplify_using_initial_conditions': ([6], 25970), 'number_of_iterations_exit': ([], 25975), 'VEC_edge_base_iterate': ([], 25975), 'find_loop_niter': ([], 25975), 'finite_loop_p': ([9], 25962), 'gimple_vuse': ([], 25975), 'gimple_references_memory_p': ([], 25975), 'gimple_use_ops': ([], 25975), 'op_iter_init': ([], 25975), 'op_iter_next_tree': ([], 25975), 'op_iter_init_tree': ([], 25975), 'single_ssa_tree_operand': ([], 25975), 'chain_of_csts_start': ([], 25975), 'get_base_for': ([], 25975), 'gimple_assign_rhs_class': ([], 25975), 'gimple_call_fn': ([], 25975), 'gimple_call_return_type': ([], 25975), 'gimple_expr_type': ([], 25975), 'get_val_for': ([], 25975), 'loop_niter_by_eval': ([0, 37, 112], 25945), 'find_loop_niter_by_eval': ([], 25975), 'array_at_struct_end_p': ([], 25975), 'record_niter_bound': ([], 25975), 'record_estimate': ([], 25975), 'gimple_assign_lhs': ([], 25975), 'derive_constant_upper_bound': ([], 25975), 'derive_constant_upper_bound_ops': ([], 25975), 'derive_constant_upper_bound_assign': ([], 25975), 'idx_infer_loop_bounds': ([], 25975), 'infer_loop_bounds_from_ref': ([], 25975), 'gimple_call_lhs': ([], 25975), 'gimple_call_arg': ([], 25975), 'infer_loop_bounds_from_array': ([], 25975), 'infer_loop_bounds_from_signedness': ([], 25975), 'infer_loop_bounds_from_undefined': ([], 25975), 'estimate_numbers_of_iterations_loop': ([], 25975), 'VEC_int_base_quick_push': ([], 25975), 'loop_outer': ([], 25975), 'VEC_int_base_iterate': ([], 25975), 'fel_next': ([], 25975), 'fel_init': ([], 25975), 'estimate_numbers_of_iterations': ([], 25975), 'stmt_dominates_stmt_p': ([], 25975), 'n_of_executions_at_most': ([], 25975), 'scev_probably_wraps_p': ([], 25975), 'free_numbers_of_iterations_estimates_loop': ([], 25975), 'free_numbers_of_iterations_estimates': ([], 25975)}, "PosixPath('602/tree-ssa-loop.bc')": {'tree_complete_unroll': ([], 1855)}, "PosixPath('602/reg-stack.bc')": {'VEC_char_base_space': ([], 21138), 'VEC_char_heap_reserve_exact': ([], 21138), 'VEC_char_heap_safe_grow': ([], 21138), 'VEC_char_heap_safe_grow_cleared': ([], 21138), 'stack_regs_mentioned_p': ([], 21138), 'stack_regs_mentioned': ([], 21138), 'ei_end_p': ([], 21138), 'ei_cond': ([], 21138), 'ei_next': ([], 21138), 'df_lr_get_bb_info': ([], 21138), 'convert_regs_entry': ([], 21138), 'stack_result': ([], 21138), 'convert_regs_exit': ([], 21138), 'better_edge': ([], 21138), 'propagate_stack': ([], 21138), 'get_hard_regnum': ([], 21138), 'emit_pop_insn': ([], 21138), 'get_true_reg': ([], 21138), 'emit_swap_insn': ([9], 21137), 'change_stack': ([14, 83], 21075), 'straighten_stack': ([2], 20125), 'get_asm_operands_in_out': ([], 21138), 'check_asm_stack_operands': ([], 21138), 'replace_reg': ([0], 21132), 'subst_asm_stack_regs': ([232], 21106), 'move_nan_for_stack_reg': ([], 21138), 'move_for_stack_reg': ([0], 21125), 'next_flags_user': ([6], 21136), 'swap_rtx_condition_1': ([], 21138), 'recog_memoized': ([], 21138), 'swap_rtx_condition': ([3, 24, 25], 21126), 'pop_stack': ([], 21138), 'remove_regno_note': ([], 21138), 'compare_for_stack_reg': ([], 21138), 'swap_to_top': ([], 21138), 'subst_stack_regs_pat': ([68], 21136), 'subst_stack_regs': ([0, 9], 21123), 'subst_stack_regs_in_debug_insn': ([], 21138), 'convert_regs_1': ([], 21138), 'convert_regs_2': ([], 21138), 'compensate_edge': ([], 21138), 'compensate_edges': ([], 21138), 'convert_regs': ([], 21138), 'reg_to_stack': ([], 21138), 'rest_of_handle_stack_regs': ([], 21138)}, "PosixPath('602/loop-init.bc')": {'loop_optimizer_finalize': ([8], 1495), 'loop_optimizer_init': ([0], 1496), 'VEC_int_base_quick_push': ([], 1497), 'loop_outer': ([], 1497), 'VEC_int_base_iterate': ([], 1497), 'fel_next': ([], 1497), 'fel_init': ([], 1497), 'rtl_unroll_and_peel_loops': ([], 1497)}, "PosixPath('602/dse.bc')": {'dse_step2_init': ([], 21186), 'dse_step7': ([], 21186), 'record_store': ([5, 64, 205, 208], 21157), 'check_mem_read_rtx': ([26, 57, 80], 21130), 'sbitmap_iter_init': ([], 21186), 'dse_record_singleton_alias_set': ([], 21186), 'VEC_group_info_t_base_space': ([], 21186), 'VEC_group_info_t_heap_reserve': ([], 21186), 'VEC_group_info_t_base_quick_push': ([], 21186), 'VEC_group_info_t_heap_safe_push': ([], 21186), 'get_group_info': ([], 21186), 'invariant_group_base_hash': ([], 21186), 'df_lr_get_bb_info': ([], 21186), 'add_wild_read': ([], 21186), 'dump_insn_info': ([], 21186), 'get_call_args': ([], 21186), 'clear_rhs_from_active_local_stores': ([], 21186), 'clear_alias_set_lookup': ([1], 21184), 'canon_address': ([17], 21181), 'set_usage_bits': ([], 21186), 'set_all_positions_unneeded': ([], 21186), 'all_positions_needed_p': ([], 21186), 'find_shift_sequence': ([], 21186), 'get_stored_val': ([], 21186), 'set_position_unneeded': ([], 21186), 'any_positions_needed_p': ([], 21186), 'replace_inc_dec': ([], 21186), 'replace_inc_dec_mem': ([1], 21182), 'check_for_inc_dec': ([], 21186), 'free_store_info': ([], 21186), 'delete_dead_store_insn': ([], 21186), 'look_for_hardregs': ([], 21186), 'replace_read': ([], 21186), 'scan_insn': ([], 21186), 'single_succ_edge': ([], 21186), 'remove_useless_values': ([], 21186), 'dse_step1': ([], 21186), 'VEC_group_info_t_base_iterate': ([], 21186), 'bmp_iter_set_init': ([], 21186), 'bmp_iter_set': ([], 21186), 'dse_step2_nospill': ([], 21186), 'dse_step3_exit_block_scan': ([], 21186), 'find_insn_before_first_wild_read': ([], 21186), 'get_bitmap_index': ([], 21186), 'scan_stores_spill': ([], 21186), 'scan_reads_spill': ([], 21186), 'scan_stores_nospill': ([], 21186), 'scan_reads_nospill': ([39], 21180), 'dse_step3_scan': ([], 21186), 'ei_end_p': ([], 21186), 'ei_cond': ([], 21186), 'ei_next': ([], 21186), 'mark_reachable_blocks': ([3], 21178), 'sbitmap_iter_cond': ([], 21186), 'sbitmap_iter_next': ([], 21186), 'dse_step3': ([], 21186), 'dse_transfer_function': ([], 21186), 'dse_confluence_n': ([], 21186), 'dse_confluence_0': ([], 21186), 'dse_step4': ([], 21186), 'dse_step5_nospill': ([], 21186), 'dse_step2_spill': ([], 21186), 'dse_step5_spill': ([], 21186), 'dse_step6': ([], 21186), 'rest_of_handle_dse': ([], 21186)}, "PosixPath('602/rtlhooks.bc')": {'gen_lowpart_general': ([0], 811)}, "PosixPath('602/cpp_traditional.bc')": {'check_output_buffer': ([], 7116), '_cpp_copy_replacement_text': ([], 7116), '_cpp_create_trad_definition': ([], 7116), '_cpp_overlay_buffer': ([], 7116), '_cpp_remove_overlay': ([], 7116), 'skip_macro_block_comment': ([], 7116), 'copy_comment': ([], 7116), 'lex_identifier': ([], 7116), 'maybe_start_funlike': ([], 7116), 'recursive_macro': ([], 7116), 'push_replacement_text': ([], 7116), 'save_replacement_text': ([8, 9], 7112), 'save_argument': ([], 7116), 'replace_args_and_push': ([], 7116), '_cpp_scan_out_logical_line': ([], 7116), '_cpp_read_logical_line_trad': ([], 7116), '_cpp_replacement_text_len': ([], 7116), 'scan_parameters': ([], 7116), '_cpp_expansions_different_trad': ([], 7116)}, "PosixPath('602/tree-mudflap.bc')": {'gsi_start': ([], 10468), 'mf_build_check_statement_for': ([], 10468), 'mf_make_mf_cache_struct_type': ([], 10468), 'mf_make_builtin': ([], 10468), 'mudflap_init': ([], 10468), 'VEC_tree_base_space': ([], 10468), 'VEC_tree_gc_reserve': ([], 10468), 'VEC_tree_base_quick_push': ([], 10468), 'VEC_tree_gc_safe_push': ([], 10468), 'mudflap_enqueue_decl': ([], 10468), 'mf_build_string': ([], 10468), 'mudflap_enqueue_constant': ([], 10468), 'VEC_tree_base_iterate': ([], 10468), 'mf_varname_tree': ([], 10468), 'mudflap_finish_file': ([], 10468), 'ei_end_p': ([], 10468), 'ei_cond': ([], 10468), 'ei_next': ([], 10468), 'insert_edge_copies_seq': ([], 10468), 'mf_decl_cache_locals': ([], 10468), 'bb_seq': ([], 10468), 'gsi_start_bb': ([], 10468), 'gsi_stmt': ([], 10468), 'gimple_ops': ([], 10468), 'gimple_op_ptr': ([], 10468), 'gimple_assign_lhs_ptr': ([], 10468), 'mf_decl_eligible_p': ([], 10468), 'gsi_last_bb': ([], 10468), 'mf_file_function_line_tree': ([], 10468), 'mf_xform_derefs_1': ([55], 10454), 'gimple_assign_rhs1_ptr': ([], 10468), 'gimple_op': ([], 10468), 'gimple_assign_rhs1': ([], 10468), 'gimple_assign_rhs_code': ([], 10468), 'gimple_return_retval': ([], 10468), 'gimple_return_retval_ptr': ([], 10468), 'gimple_call_fn': ([], 10468), 'gimple_call_fndecl': ([], 10468), 'mf_xform_statements': ([], 10468), 'execute_mudflap_function_ops': ([], 10468), 'mx_register_decls': ([36], 10461), 'mx_xfn_xform_decls': ([], 10468), 'mf_xform_decls': ([], 10468), 'execute_mudflap_function_decls': ([], 10468)}, "PosixPath('602/sched-vis.bc')": {'print_exp': ([1368], 8720), 'safe_concat': ([], 8722), 'print_value': ([], 8722), 'print_pattern': ([], 8722), 'print_insn': ([], 8722), 'dump_insn_slim': ([], 8722), 'print_rtl_slim': ([], 8722), 'debug_bb_slim': ([], 8722), 'debug_bb_n_slim': ([], 8722)}, "PosixPath('602/params.bc')": {'add_params': ([], 625), 'set_param_value': ([], 625)}, "PosixPath('602/host-linux.bc')": {}, "PosixPath('602/gimplify.bc')": {'create_tmp_var_raw': ([0], 50101), 'gsi_start': ([], 50115), 'gsi_last': ([], 50115), 'gimplify_cond_expr': ([], 50115), 'gimplify_switch_expr': ([], 50115), 'gimplify_asm_expr': ([20], 50112), 'gimplify_cleanup_point_expr': ([], 50115), 'gimplify_statement_list': ([], 50115), 'gimplify_omp_atomic': ([], 50115), 'force_gimple_operand': ([1], 50113), 'mark_addressable': ([], 50115), 'push_gimplify_context': ([], 50115), 'declare_vars': ([], 50115), 'pop_gimplify_context': ([], 50115), 'VEC_gimple_base_last': ([], 50115), 'gimple_current_bind_expr': ([], 50115), 'append_to_statement_list_1': ([], 50115), 'gimplify_seq_add_seq': ([], 50115), 'is_global_var': ([], 50115), 'omp_notice_variable': ([15], 50113), 'omp_add_variable': ([2], 50105), 'omp_firstprivatize_type_sizes': ([], 50115), 'omp_firstprivatize_variable': ([], 50115), 'gimplify_var_or_parm_decl': ([], 50115), 'VEC_tree_base_space': ([], 50115), 'VEC_tree_heap_reserve': ([], 50115), 'VEC_tree_base_quick_push': ([], 50115), 'VEC_tree_heap_safe_push': ([], 50115), 'VEC_tree_base_pop': ([], 50115), 'canonicalize_component_ref': ([5], 50112), 'tree_operand_length': ([], 50115), 'generic_expr_could_trap_p': ([], 50115), 'gimple_boolify': ([13], 50106), 'create_tmp_var_name': ([], 50115), 'force_constant_size': ([], 50115), 'gimple_add_tmp_var': ([], 50115), 'create_tmp_var': ([], 50115), 'build_and_jump': ([], 50115), 'shortcut_cond_r': ([], 50115), 'shortcut_cond_expr': ([0, 114, 133], 49991), 'gimple_pop_condition': ([], 50115), 'gimplify_seq_add_stmt': ([], 50115), 'gimple_tree_eq': ([], 50115), 'lookup_tmp_var': ([], 50115), 'maybe_with_size_expr': ([], 50115), 'VEC_constructor_elt_gc_copy': ([], 50115), 'optimize_compound_literals_in_ctor': ([], 50115), 'gimplify_init_ctor_preeval_1': ([3], 50092), 'zero_sized_field_decl': ([], 50115), 'force_labels_r': ([0], 50112), 'gimple_fold_indirect_ref': ([4], 50102), 'voidify_wrapper_expr': ([10], 50106), 'zero_sized_type': ([], 50115), 'gimple_ops': ([], 50115), 'gimple_set_op': ([], 50115), 'gimple_call_set_lhs': ([], 50115), 'canonicalize_addr_expr': ([], 50115), 'gimplify_conversion': ([], 50115), 'VEC_gimple_base_space': ([], 50115), 'VEC_gimple_heap_reserve': ([], 50115), 'VEC_gimple_base_quick_push': ([], 50115), 'VEC_gimple_heap_safe_push': ([], 50115), 'gimple_push_bind_expr': ([], 50115), 'build_stack_save_restore': ([], 50115), 'VEC_gimple_base_pop': ([], 50115), 'VEC_tree_base_ordered_remove': ([], 50115), 'gimplify_exit_expr': ([], 50115), 'gimplify_case_label_expr': ([], 50115), 'VEC_tree_gc_reserve': ([], 50115), 'VEC_tree_gc_safe_push': ([], 50115), 'gimple_try_set_catch_is_cleanup': ([], 50115), 'gsi_stmt': ([], 50115), 'gsi_one_before_end_p': ([], 50115), 'new_omp_context': ([], 50115), 'omp_check_private': ([], 50115), 'gimplify_adjust_omp_clauses_1': ([], 50115), 'gimplify_adjust_omp_clauses': ([8], 50102), 'omp_is_private': ([], 50115), 'gimple_omp_for_set_index': ([], 50115), 'gimple_omp_for_set_initial': ([], 50115), 'gimple_omp_for_set_cond': ([], 50115), 'gimple_omp_for_set_final': ([], 50115), 'gimple_omp_for_set_incr': ([], 50115), 'goa_lhs_expr_p': ([], 50115), 'gimplify_scalar_mode_aggregate_compare': ([], 50115), 'gimplify_variable_sized_compare': ([], 50115), 'annotate_one_with_location': ([], 50115), 'annotate_all_with_location_after': ([], 50115), 'annotate_all_with_location': ([], 50115), 'gimplify_stmt': ([], 50115), 'gimplify_expr': ([0, 8, 229, 437, 655, 668, 742, 899, 930], 49936), 'goa_stabilize_expr': ([], 50115), 'gimplify_and_return_first': ([], 50115), 'gimplify_scan_omp_clauses': ([], 50115), 'gimple_push_cleanup': ([], 50115), 'gimplify_vla_decl': ([], 50115), 'gimplify_type_sizes': ([], 50115), 'gimplify_one_sizepos': ([], 50115), 'gimplify_modify_expr_complex_part': ([], 50115), 'gimplify_modify_expr_to_memcpy': ([], 50115), 'prepare_gimple_addressable': ([], 50115), 'gimplify_modify_expr_to_memset': ([7], 50108), 'gimplify_modify_expr_rhs': ([33], 50114), 'gimplify_init_constructor': ([0, 5, 7], 50078), 'gimplify_init_ctor_eval': ([], 50115), 'gimplify_init_ctor_preeval': ([], 50115), 'internal_get_tmp_var': ([8], 50112), 'gimplify_pure_cond_expr': ([], 50115), 'gimplify_body': ([0, 1], 50105), 'gimplify_function_tree': ([], 50115), 'gimple_op_ptr': ([], 50115), 'gimple_cond_lhs_ptr': ([], 50115), 'gimple_cond_rhs_ptr': ([], 50115), 'gimple_switch_index_ptr': ([], 50115), 'gimple_op': ([], 50115), 'gimple_asm_output_op': ([], 50115), 'gimple_asm_input_op': ([], 50115), 'gimple_assign_lhs': ([], 50115), 'gimple_assign_rhs1_ptr': ([], 50115), 'gimple_call_fn': ([], 50115), 'gimple_call_fndecl': ([], 50115), 'gimple_regimplify_operands': ([], 50115), 'force_gimple_operand_gsi': ([], 50115)}, "PosixPath('602/postreload-gcse.bc')": {'alloc_mem': ([], 8222), 'reset_opr_set_tables': ([], 8222), 'record_last_reg_set_info': ([], 8222), 'record_last_reg_set_info_regno': ([], 8222), 'record_last_mem_set_info': ([], 8222), 'record_last_set_info': ([0], 8220), 'record_opr_changes': ([38, 39], 8207), 'reg_changed_after_insn_p': ([], 8222), 'find_mem_conflicts': ([], 8222), 'load_killed_in_block_p': ([], 8222), 'oprs_unchanged_p': ([], 8222), 'insert_expr_in_table': ([], 8222), 'hash_scan_set': ([], 8222), 'compute_hash_table': ([], 8222), 'ei_end_p': ([], 8222), 'ei_cond': ([], 8222), 'ei_next': ([], 8222), 'bb_has_well_behaved_predecessors': ([], 8222), 'lookup_expr_in_table': ([], 8222), 'get_bb_avail_insn': ([], 8222), 'get_avail_load_store_reg': ([], 8222), 'reg_killed_on_edge': ([], 8222), 'reg_used_on_edge': ([], 8222), 'eliminate_partially_redundant_load': ([24], 8216), 'eliminate_partially_redundant_loads': ([], 8222), 'delete_redundant_insns_1': ([], 8222), 'gcse_after_reload_main': ([], 8222), 'rest_of_handle_gcse2': ([], 8222)}, "PosixPath('602/crc32.bc')": {'xcrc32': ([], 1117)}, "PosixPath('602/gimple-low.bc')": {'lower_function_body': ([11, 24], 5469), 'try_catch_may_fallthru': ([], 5492), 'gsi_start': ([], 5492), 'gsi_last': ([], 5492), 'gimple_ops': ([], 5492), 'gimple_op': ([], 5492), 'gimple_call_fn': ([], 5492), 'gimple_call_fndecl': ([], 5492), 'gimple_call_arg': ([], 5492), 'gimple_check_call_args': ([], 5492), 'block_may_fallthru': ([], 5492), 'gsi_stmt': ([], 5492), 'gimple_stmt_may_fallthru': ([], 5492), 'record_vars_into': ([], 5492), 'gimple_return_retval': ([], 5492), 'VEC_return_statements_t_base_space': ([], 5492), 'VEC_return_statements_t_heap_reserve': ([], 5492), 'VEC_return_statements_t_base_quick_push': ([], 5492), 'VEC_return_statements_t_heap_safe_push': ([], 5492), 'lower_gimple_return': ([], 5492), 'gimple_call_lhs': ([], 5492), 'lower_builtin_setjmp': ([], 5492), 'lower_gimple_bind': ([0], 5480), 'lower_sequence': ([], 5492), 'gimple_set_op': ([], 5492), 'gimple_call_set_lhs': ([], 5492)}, "PosixPath('602/sbitmap.bc')": {'sbitmap_iter_init': ([], 7906), 'sbitmap_alloc': ([], 7906), 'sbitmap_alloc_with_popcount': ([], 7906), 'sbitmap_resize': ([], 7906), 'sbitmap_realloc': ([], 7906), 'sbitmap_vector_alloc': ([], 7906), 'sbitmap_copy': ([0], 7896), 'sbitmap_copy_n': ([], 7906), 'sbitmap_range_empty_p': ([], 7906), 'sbitmap_zero': ([0], 7862), 'sbitmap_ones': ([0], 7876), 'sbitmap_vector_zero': ([], 7906), 'sbitmap_union_of_diff_cg': ([], 7906), 'sbitmap_union_of_diff': ([], 7906), 'sbitmap_not': ([], 7906), 'sbitmap_difference': ([], 7906), 'sbitmap_any_common_bits': ([], 7906), 'sbitmap_a_and_b_cg': ([], 7906), 'sbitmap_a_and_b': ([], 7906), 'sbitmap_a_xor_b_cg': ([], 7906), 'sbitmap_a_xor_b': ([], 7906), 'sbitmap_a_or_b_cg': ([], 7906), 'sbitmap_a_or_b': ([], 7906), 'sbitmap_a_subset_b_p': ([], 7906), 'sbitmap_a_or_b_and_c_cg': ([], 7906), 'sbitmap_a_or_b_and_c': ([], 7906), 'sbitmap_a_and_b_or_c_cg': ([], 7906), 'sbitmap_a_and_b_or_c': ([], 7906), 'sbitmap_intersection_of_succs': ([], 7906), 'sbitmap_intersection_of_preds': ([], 7906), 'sbitmap_union_of_succs': ([], 7906), 'sbitmap_union_of_preds': ([], 7906), 'sbitmap_iter_cond': ([], 7906), 'sbitmap_first_set_bit': ([], 7906), 'dump_sbitmap': ([], 7906), 'dump_sbitmap_file': ([2], 7902), 'sbitmap_popcount': ([], 7906)}, "PosixPath('602/regmove.bc')": {'optimize_reg_copy_3': ([], 7991), 'optimize_reg_copy_1': ([], 7991), 'optimize_reg_copy_2': ([], 7991), 'regmove_forward_pass': ([], 7991), 'find_matches': ([], 7991), 'fixup_match_2': ([], 7991), 'reg_is_remote_constant_p': ([], 7991), 'copy_src_to_dest': ([], 7991), 'regmove_backward_pass': ([], 7991), 'regmove_optimize': ([], 7991)}, "PosixPath('602/insn-attrtab.bc')": {'recog_memoized': ([], 863321), 'insn_current_length': ([], 863321), 'insn_variable_length_p': ([], 863321), 'get_attr_type': ([], 863321), 'get_attr_unit': ([], 863321), 'get_attr_prefix_0f': ([], 863321), 'get_attr_prefix_extra': ([], 863321), 'get_attr_prefix_vex_w': ([], 863321), 'get_attr_length_vex': ([], 863321), 'get_attr_length_immediate': ([], 863321), 'get_attr_mode': ([], 863321), 'get_attr_modrm': ([], 863321), 'get_attr_length_address': ([], 863321), 'get_attr_prefix_rex': ([], 863321), 'get_attr_prefix_rep': ([], 863321), 'get_attr_prefix_data16': ([], 863321), 'insn_min_length': ([], 863321), 'insn_default_length': ([], 863321), 'get_attr_memory': ([], 863321), 'get_attr_use_carry': ([], 863321), 'bypass_p': ([], 863321), 'get_attr_imm_disp': ([], 863321), 'get_attr_pent_prefix': ([], 863321), 'get_attr_pent_pair': ([], 863321), 'get_attr_athlon_decode': ([], 863321), 'get_attr_amdfam10_decode': ([], 863321), 'get_attr_atom_unit': ([], 863321), 'get_attr_atom_sse_attr': ([], 863321), 'get_attr_movu': ([], 863321), 'insn_default_latency': ([], 863321), 'internal_dfa_insn_code': ([], 863321), 'get_attr_fp_int_src': ([], 863321), 'get_attr_i387_cw': ([], 863321), 'get_attr_prefix': ([], 863321)}, "PosixPath('602/splay-tree.bc')": {'splay_tree_insert': ([], 2065), 'splay_tree_new_with_allocator': ([], 2065), 'splay_tree_new': ([], 2065), 'splay_tree_delete_helper': ([], 2065), 'splay_tree_delete': ([], 2065), 'splay_tree_splay': ([], 2065), 'splay_tree_remove': ([], 2065), 'splay_tree_lookup': ([], 2065), 'splay_tree_predecessor': ([], 2065), 'splay_tree_successor': ([], 2065)}, "PosixPath('602/ipa-reference.bc')": {'get_reference_vars_info': ([], 11647), 'get_global_reference_vars_info': ([], 11647), 'ipa_reference_get_read_global': ([], 11647), 'ipa_reference_get_written_global': ([], 11647), 'ipa_reference_get_not_read_global': ([], 11647), 'ipa_reference_get_not_written_global': ([], 11647), 'get_local_reference_vars_info': ([], 11647), 'VEC_ipa_reference_vars_info_t_base_space': ([], 11647), 'VEC_ipa_reference_vars_info_t_heap_reserve_exact': ([], 11647), 'VEC_ipa_reference_vars_info_t_heap_safe_grow': ([], 11647), 'VEC_ipa_reference_vars_info_t_heap_safe_grow_cleared': ([], 11647), 'set_reference_vars_info': ([], 11647), 'init_function_info': ([], 11647), 'duplicate_node_data': ([0, 1], 11636), 'clean_function_local_data': ([], 11647), 'clean_function': ([], 11647), 'remove_node_data': ([], 11647), 'gsi_stmt': ([], 11647), 'clear_and_done_ssa_iter': ([], 11647), 'op_iter_next_use': ([], 11647), 'op_iter_init_phiuse': ([], 11647), 'add_static_var': ([], 11647), 'has_proper_scope_for_analysis': ([], 11647), 'mark_address_taken': ([], 11647), 'bb_seq': ([], 11647), 'gsi_start_bb': ([], 11647), 'gimple_ops': ([], 11647), 'gimple_op': ([], 11647), 'gimple_call_fn': ([], 11647), 'gimple_call_fndecl': ([], 11647), 'check_call': ([], 11647), 'gimple_asm_clobber_op': ([], 11647), 'check_asm_memory_clobber': ([], 11647), 'mark_address': ([], 11647), 'mark_store': ([], 11647), 'mark_load': ([], 11647), 'scan_stmt_for_static_refs': ([], 11647), 'analyze_function': ([], 11647), 'lto_file_decl_data_get_var_decl': ([], 11647), 'ipa_reference_read_summary': ([], 11647), 'write_node_summary_p': ([], 11647), 'bmp_iter_set_init': ([], 11647), 'bmp_iter_set': ([], 11647), 'ipa_reference_write_summary': ([], 11647), 'varpool_first_static_initializer': ([], 11647), 'analyze_variable': ([], 11647), 'varpool_next_static_initializer': ([], 11647), 'generate_summary': ([], 11647), 'propagate_bits': ([], 11647), 'propagate': ([52], 11614), 'gate_reference': ([], 11647)}, "PosixPath('602/tree-ssa-loop-manip.bc')": {'tree_transform_and_unroll_loop': ([8], 9926), 'create_iv': ([], 9931), 'ei_end_p': ([], 9931), 'ei_cond': ([], 9931), 'ei_next': ([], 9931), 'get_loops_exits': ([], 9931), 'bmp_iter_set_init': ([], 9931), 'bmp_iter_set': ([], 9931), 'gsi_stmt': ([], 9931), 'loop_outer': ([], 9931), 'find_uses_to_rename_use': ([], 9931), 'bb_seq': ([], 9931), 'gsi_start_bb': ([], 9931), 'gimple_use_ops': ([], 9931), 'op_iter_init': ([], 9931), 'op_iter_next_tree': ([], 9931), 'op_iter_init_tree': ([], 9931), 'find_uses_to_rename_stmt': ([], 9931), 'find_uses_to_rename_bb': ([], 9931), 'find_uses_to_rename': ([], 9931), 'bmp_iter_and_init': ([], 9931), 'bmp_iter_and': ([], 9931), 'add_exit_phis_edge': ([], 9931), 'add_exit_phis_var': ([], 9931), 'add_exit_phis': ([], 9931), 'rewrite_into_loop_closed_ssa': ([], 9931), 'check_loop_closed_ssa_stmt': ([], 9931), 'verify_loop_closed_ssa': ([], 9931), 'single_succ_edge': ([], 9931), 'gimple_phi_arg_location_from_edge': ([], 9931), 'delink_imm_use': ([], 9931), 'link_imm_use_to_list': ([], 9931), 'link_imm_use': ([], 9931), 'set_ssa_use_from_ptr': ([], 9931), 'split_loop_exit_edge': ([2], 9912), 'single_pred_edge': ([], 9931), 'ip_normal_pos': ([], 9931), 'gsi_last_bb': ([], 9931), 'standard_iv_increment_position': ([], 9931), 'copy_phi_node_args': ([], 9931), 'gimple_duplicate_loop_to_header_edge': ([], 9931), 'can_unroll_loop_p': ([], 9931), 'determine_exit_conditions': ([], 9931), 'VEC_edge_base_iterate': ([], 9931), 'gimple_ops': ([], 9931), 'gimple_set_op': ([], 9931), 'gimple_cond_set_lhs': ([], 9931), 'gimple_cond_set_rhs': ([], 9931), 'gsi_after_labels': ([], 9931), 'rewrite_phi_with_iv': ([], 9931), 'rewrite_all_phi_nodes_with_iv': ([], 9931), 'canonicalize_loop_ivs': ([], 9931)}, "PosixPath('602/cfgcleanup.bc')": {'try_crossjump_to_edge': ([170, 303, 361, 389], 14522), 'VEC_basic_block_base_pop': ([], 14593), 'delete_unreachable_blocks': ([], 14593), 'delete_dead_jumptables': ([], 14593), 'update_forwarder_flag': ([], 14593), 'trivially_empty_bb_p': ([], 14593), 'single_succ_edge': ([0], 14590), 'single_pred_edge': ([], 14593), 'ei_end_p': ([], 14593), 'ei_cond': ([], 14593), 'ei_next': ([], 14593), 'merge_blocks_move_successor_nojumps': ([], 14593), 'merge_blocks_move_predecessor_nojumps': ([], 14593), 'merge_blocks_move': ([], 14593), 'try_simplify_condjump': ([], 14593), 'ei_safe_edge': ([], 14593), 'mark_effect': ([], 14593), 'bmp_iter_set_init': ([], 14593), 'bmp_iter_set': ([], 14593), 'mentions_nonequal_regs': ([], 14593), 'thread_jump': ([], 14593), 'try_forward_edges': ([], 14593), 'old_insns_match_p': ([], 14593), 'outgoing_edges_match': ([45], 14592), 'merge_memattrs': ([4, 9], 14589), 'flow_find_cross_jump': ([], 14593), 'try_crossjump_bb': ([], 14593), 'try_optimize_cfg': ([125], 14590), 'cleanup_cfg': ([132], 14590)}, "PosixPath('602/stringpool.bc')": {'init_stringpool': ([], 1675), 'gt_pch_save_stringpool': ([], 1675), 'ggc_alloc_string': ([], 1675), 'gt_pch_restore_stringpool': ([], 1675), 'gt_ggc_mx_string_pool_data': ([0, 1], 1670), 'gt_pch_p_16string_pool_data': ([1], 1672), 'gt_pch_nx_string_pool_data': ([0, 1], 1670)}, "PosixPath('602/cpp_lex.bc')": {'_cpp_clean_line': ([], 17847), 'cpp_ideq': ([], 17847), 'add_line_note': ([], 17847), 'warn_in_comment': ([], 17847), '_cpp_process_line_notes': ([58], 17831), '_cpp_skip_block_comment': ([], 17847), 'lex_identifier_intern': ([], 17847), '_cpp_lex_identifier': ([], 17847), '_cpp_init_tokenrun': ([], 17847), 'next_tokenrun': ([0], 17845), '_cpp_get_fresh_line': ([1, 14], 17843), 'skip_whitespace': ([], 17847), 'forms_identifier_p': ([], 17847), 'new_buff': ([], 17847), '_cpp_get_buff': ([7], 17829), '_cpp_unaligned_alloc': ([], 17847), 'lex_number': ([], 17847), 'cpp_token_len': ([], 17847), 'utf8_to_ucn': ([], 17847), 'cpp_spell_token': ([], 17847), 'warn_about_normalization': ([], 17847), 'create_literal': ([], 17847), '_cpp_append_extend_buff': ([], 17847), 'bufring_append': ([], 17847), 'lex_raw_string': ([], 17847), 'lex_string': ([], 17847), 'lex_identifier': ([], 17847), 'skip_line_comment': ([], 17847), 'store_comment': ([], 17847), 'save_comment': ([], 17847), '_cpp_lex_direct': ([15], 17845), '_cpp_lex_token': ([92], 17846), 'cpp_peek_token': ([], 17847), '_cpp_temp_token': ([], 17847), 'cpp_token_as_text': ([], 17847), 'cpp_output_token': ([], 17847), '_cpp_equiv_tokens': ([], 17847), 'name_p': ([], 17847), 'cpp_avoid_paste': ([], 17847), 'cpp_output_line': ([], 17847), 'cpp_output_line_to_string': ([], 17847), '_cpp_extend_buff': ([], 17847), '_cpp_free_buff': ([], 17847), '_cpp_aligned_alloc': ([], 17847), 'cpp_token_val_index': ([], 17847)}, "PosixPath('602/tree-ssa-loop-ivopts.bc')": {'constant_multiple_of': ([], 40061), 'get_computation_aff': ([], 40061), 'rewrite_use_nonlinear_expr': ([], 40061), 'dump_iv': ([], 40061), 'dump_uses': ([], 40061), 'dump_cand': ([], 40061), 'idx_contains_abnormal_ssa_name_p': ([], 40061), 'tree_operand_length': ([], 40061), 'expr_invariant_in_loop_p': ([], 40061), 'gimple_ops': ([], 40061), 'gimple_op': ([], 40061), 'stmt_invariant_in_loop_p': ([], 40061), 'tree_int_cst_sign_bit': ([], 40061), 'seq_cost': ([], 40061), 'mbc_entry_eq': ([], 40061), 'mbc_entry_hash': ([], 40061), 'multiply_by_cost': ([], 40061), 'VEC_sbitmap_base_space': ([], 40061), 'VEC_sbitmap_heap_reserve_exact': ([], 40061), 'VEC_sbitmap_heap_safe_grow': ([], 40061), 'VEC_sbitmap_heap_safe_grow_cleared': ([], 40061), 'multiplier_allowed_in_address_p': ([0], 40060), 'tree_ssa_iv_optimize_init': ([], 40061), 'VEC_int_base_quick_push': ([], 40061), 'loop_outer': ([], 40061), 'VEC_int_base_iterate': ([], 40061), 'fel_next': ([], 40061), 'fel_init': ([], 40061), 'gsi_stmt': ([], 40061), 'determine_biv_step': ([], 40061), 'determine_base_object': ([], 40061), 'alloc_iv': ([], 40061), 'set_iv': ([2], 40058), 'find_bivs': ([], 40061), 'bb_seq': ([], 40061), 'gsi_start_bb': ([], 40061), 'gimple_assign_lhs': ([], 40061), 'find_givs_in_stmt_scev': ([], 40061), 'find_givs_in_stmt': ([], 40061), 'find_givs_in_bb': ([], 40061), 'find_givs': ([], 40061), 'get_iv': ([], 40061), 'mark_bivs': ([], 40061), 'niter_for_exit': ([], 40061), 'bmp_iter_set_init': ([], 40061), 'bmp_iter_set': ([], 40061), 'find_induction_variables': ([], 40061), 'ei_end_p': ([], 40061), 'ei_cond': ([], 40061), 'record_invariant': ([], 40061), 'VEC_iv_use_p_base_space': ([], 40061), 'VEC_iv_use_p_heap_reserve': ([], 40061), 'VEC_iv_use_p_base_quick_push': ([], 40061), 'VEC_iv_use_p_heap_safe_push': ([], 40061), 'record_use': ([], 40061), 'find_interesting_uses_op': ([], 40061), 'find_interesting_uses_outside': ([], 40061), 'ei_next': ([], 40061), 'clear_and_done_ssa_iter': ([], 40061), 'op_iter_next_use': ([], 40061), 'op_iter_init_phiuse': ([], 40061), 'gimple_use_ops': ([], 40061), 'gimple_vuse': ([], 40061), 'op_iter_init': ([], 40061), 'op_iter_init_use': ([], 40061), 'find_invariants_stmt': ([], 40061), 'gimple_op_ptr': ([], 40061), 'gimple_cond_lhs_ptr': ([], 40061), 'gimple_cond_rhs_ptr': ([], 40061), 'gimple_assign_rhs1_ptr': ([], 40061), 'gimple_assign_rhs2_ptr': ([], 40061), 'extract_cond_operands': ([1], 40043), 'gimple_assign_lhs_ptr': ([], 40061), 'gimple_assign_rhs1': ([], 40061), 'gimple_assign_rhs_code': ([], 40061), 'may_be_nonaddressable_p': ([], 40061), 'idx_find_step': ([], 40061), 'find_interesting_uses_address': ([10], 40055), 'find_interesting_uses_stmt': ([0, 13], 40054), 'find_interesting_uses': ([], 40061), 'VEC_iv_cand_p_base_space': ([], 40061), 'VEC_iv_cand_p_heap_reserve': ([], 40061), 'VEC_iv_cand_p_base_quick_push': ([], 40061), 'VEC_iv_cand_p_heap_safe_push': ([], 40061), 'find_depends': ([6], 40060), 'add_candidate_1': ([18], 40052), 'add_candidate': ([], 40061), 'add_old_iv_candidates': ([], 40061), 'add_old_ivs_candidates': ([], 40061), 'strip_offset_1': ([], 40061), 'add_iv_value_candidates': ([], 40061), 'add_derived_ivs_candidates': ([], 40061), 'split_address_cost': ([], 40061), 'produce_memory_decl_rtl': ([], 40061), 'VEC_tree_base_space': ([], 40061), 'VEC_tree_heap_reserve': ([], 40061), 'VEC_tree_base_quick_push': ([], 40061), 'VEC_tree_heap_safe_push': ([], 40061), 'prepare_decl_rtl': ([], 40061), 'computation_cost': ([8], 40055), 'add_cost': ([], 40061), 'force_expr_to_var_cost': ([], 40061), 'force_var_cost': ([], 40061), 'ptr_difference_cost': ([], 40061), 'difference_cost': ([], 40061), 'stmt_after_inc_pos': ([3], 40060), 'VEC_address_cost_data_base_space': ([], 40061), 'VEC_address_cost_data_heap_reserve_exact': ([], 40061), 'VEC_address_cost_data_heap_safe_grow': ([], 40061), 'VEC_address_cost_data_heap_safe_grow_cleared': ([], 40061), 'get_address_cost': ([], 40061), 'determine_common_wider_type': ([], 40061), 'get_computation_at': ([], 40061), 'get_computation_cost_at': ([45], 40058), 'get_computation_cost': ([], 40061), 'autoinc_possible_for_pair': ([], 40061), 'set_autoinc_for_original_candidates': ([], 40061), 'record_important_candidates': ([], 40061), 'find_iv_candidates': ([], 40061), 'determine_iv_cost': ([], 40061), 'determine_iv_costs': ([], 40061), 'alloc_use_cost_map': ([], 40061), 'set_use_iv_cost': ([0], 40052), 'determine_use_iv_cost_generic': ([], 40061), 'determine_use_iv_cost_address': ([], 40061), 'cand_value_at': ([], 40061), 'may_eliminate_iv': ([], 40061), 'determine_use_iv_cost_condition': ([], 40061), 'determine_use_iv_cost': ([], 40061), 'determine_use_iv_costs': ([], 40061), 'ivopts_global_cost_for_size': ([], 40061), 'determine_set_costs': ([], 40061), 'iv_ca_new': ([], 40061), 'get_use_iv_cost': ([], 40061), 'cheaper_cost_pair': ([], 40061), 'iv_ca_set_remove_invariants': ([], 40061), 'iv_ca_recount_cost': ([], 40061), 'iv_ca_set_no_cp': ([], 40061), 'iv_ca_set_add_invariants': ([], 40061), 'iv_ca_set_cp': ([], 40061), 'iv_ca_add_use': ([], 40061), 'iv_ca_cost': ([], 40061), 'iv_ca_delta_add': ([], 40061), 'iv_ca_has_deps': ([], 40061), 'iv_ca_delta_reverse': ([], 40061), 'iv_ca_delta_commit': ([], 40061), 'iv_ca_extend': ([1], 40047), 'try_add_cand_for': ([], 40061), 'get_initial_solution': ([], 40061), 'iv_ca_dump': ([3], 40058), 'bmp_iter_and_init': ([], 40061), 'bmp_iter_and': ([], 40061), 'iv_ca_narrow': ([], 40061), 'iv_ca_prune': ([], 40061), 'try_improve_iv_set': ([1], 40021), 'find_optimal_iv_set': ([], 40061), 'gsi_last_bb': ([], 40061), 'create_new_iv': ([], 40061), 'create_new_ivs': ([], 40061), 'gimple_assign_rhs2': ([], 40061), 'gsi_after_labels': ([], 40061), 'idx_remove_ssa_names': ([], 40061), 'copy_ref_info': ([], 40061), 'rewrite_use_address': ([], 40061), 'gimple_set_op': ([], 40061), 'gimple_cond_set_lhs': ([], 40061), 'gimple_cond_set_rhs': ([], 40061), 'rewrite_use_compare': ([], 40061), 'rewrite_use': ([], 40061), 'rewrite_uses': ([], 40061), 'remove_unused_ivs': ([], 40061), 'VEC_tree_base_iterate': ([], 40061), 'free_loop_data': ([27], 40050), 'tree_ssa_iv_optimize_loop': ([], 40061), 'tree_ssa_iv_optimize_finalize': ([], 40061), 'tree_ssa_iv_optimize': ([], 40061)}, "PosixPath('602/omega.bc')": {'omega_solve_geq': ([], 48143), 'omega_unprotect_variable': ([179], 48138), 'omega_alloc_problem': ([], 48143), 'omega_print_eqn': ([], 48143), 'omega_initialize_variables': ([], 48143), 'omega_print_vars': ([], 48143), 'omega_print_term': ([5], 48141), 'omega_print_problem': ([], 48143), 'omega_count_red_equations': ([], 48143), 'omega_print_red_equations': ([12, 19, 30], 48134), 'omega_copy_eqn': ([], 48143), 'omega_init_eqn_zero': ([], 48143), 'adding_equality_constraint': ([14], 48134), 'omega_delete_geq': ([14], 48138), 'omega_copy_problem': ([], 48143), 'omega_negate_geq': ([], 48143), 'omega_alloc_eqns': ([], 48143), 'setup_packing': ([], 48143), 'omega_substitute_red_1': ([], 48143), 'omega_substitute_red': ([55], 48094), 'omega_convert_eq_to_geqs': ([36], 48138), 'omega_delete_variable': ([], 48143), 'omega_substitute': ([], 48143), 'omega_do_elimination': ([40, 105], 48120), 'omega_name_wild_card': ([], 48143), 'omega_add_new_wild_card': ([34], 48138), 'omega_do_mod': ([], 48143), 'omega_solve_eq': ([180], 48124), 'coalesce': ([], 48143), 'omega_unprotect_1': ([], 48143), 'chain_unprotect': ([62], 48135), 'omega_free_eliminations': ([], 48143), 'normalize_omega_problem': ([4], 48064), 'omega_delete_geq_extra': ([21], 48138), 'omega_eliminate_redundant': ([49], 48095), 'omega_solve_problem': ([305, 1362, 1826], 48103), 'omega_problem_reduced': ([], 48143), 'omega_pretty_print_problem': ([0, 1, 11], 48101), 'omega_simplify_problem': ([], 48143), 'verify_omega_pb': ([], 48143), 'omega_eliminate_red': ([], 48143), 'free_red_eliminations': ([], 48143), 'omega_problem_has_red_equations': ([33], 48142), 'omega_simplify_approximate': ([], 48143), 'omega_constrain_variable_sign': ([0, 28], 48117), 'omega_constrain_variable_value': ([], 48143), 'omega_query_variable': ([], 48143), 'query_coupled_variable': ([10, 45], 48136), 'omega_query_variable_bounds': ([12], 48134), 'omega_query_variable_signs': ([], 48143), 'omega_initialize': ([], 48143)}, "PosixPath('602/objalloc.bc')": {'_objalloc_alloc': ([], 778), 'objalloc_create': ([], 778), 'objalloc_free_block': ([], 778)}, "PosixPath('602/targhooks.bc')": {'default_stack_protect_guard': ([], 3945), 'default_external_stack_protect_fail': ([], 3945), 'default_hidden_stack_protect_fail': ([], 3945), 'default_unspec_may_trap_p': ([], 3945), 'default_return_in_memory': ([], 3945), 'default_cxx_get_cookie_size': ([], 3945), 'default_scalar_mode_supported_p': ([], 3945), 'default_invalid_within_doloop': ([], 3945), 'default_static_chain': ([], 3945)}, "PosixPath('602/ira-build.bc')": {'ira_create_allocno': ([], 19593), 'ira_flattening': ([55], 19588), 'ira_build': ([0], 19581), 'create_loop_tree_nodes': ([], 19593), 'remove_low_level_allocnos': ([], 19593), 'VEC_ira_allocno_t_base_space': ([], 19593), 'VEC_ira_allocno_t_heap_reserve': ([], 19593), 'VEC_ira_allocno_t_base_quick_push': ([], 19593), 'VEC_ira_allocno_t_heap_safe_push': ([], 19593), 'ira_set_allocno_cover_class': ([], 19593), 'ira_conflict_vector_profitable_p': ([], 19593), 'ira_allocate_allocno_conflict_vec': ([], 19593), 'allocate_allocno_conflict_bit_vec': ([], 19593), 'ira_allocate_allocno_conflicts': ([], 19593), 'add_to_allocno_conflicts': ([13, 31], 19576), 'ira_print_expanded_allocno': ([], 19593), 'ira_create_allocno_live_range': ([], 19593), 'ira_copy_allocno_live_range_list': ([], 19593), 'ira_merge_allocno_live_ranges': ([], 19593), 'ira_allocno_live_ranges_intersect_p': ([], 19593), 'ira_finish_allocno_live_range_list': ([], 19593), 'ira_free_allocno_updated_costs': ([], 19593), 'VEC_ira_copy_t_base_space': ([], 19593), 'VEC_ira_copy_t_heap_reserve': ([], 19593), 'VEC_ira_copy_t_base_quick_push': ([], 19593), 'VEC_ira_copy_t_heap_safe_push': ([], 19593), 'ira_create_copy': ([], 19593), 'ira_add_allocno_copy_to_list': ([], 19593), 'ira_remove_allocno_copy_from_list': ([], 19593), 'ira_swap_allocno_copy_ends_if_necessary': ([], 19593), 'find_allocno_copy': ([], 19593), 'ira_add_allocno_copy': ([], 19593), 'print_copy': ([], 19593), 'print_allocno_copies': ([], 19593), 'ira_debug_allocno_copies': ([], 19593), 'ira_traverse_loop_tree': ([], 19593), 'change_allocno_in_range_list': ([], 19593), 'copy_info_to_removed_store_destinations': ([], 19593), 'clear_allocno_conflicts': ([], 19593), 'sparseset_bit_p': ([], 19593), 'sparseset_insert_bit': ([], 19593), 'sparseset_set_bit': ([], 19593), 'sparseset_iter_init': ([], 19593), 'sparseset_iter_p': ([], 19593), 'sparseset_iter_elm': ([], 19593), 'sparseset_iter_next': ([], 19593), 'compress_allocno_conflict_vec': ([], 19593), 'compress_conflict_vecs': ([], 19593), 'finish_allocno': ([], 19593), 'VEC_loop_p_base_iterate': ([], 19593), 'rebuild_regno_allocno_maps': ([], 19593), 'initiate_cost_vectors': ([], 19593), 'ei_end_p': ([], 19593), 'ei_cond': ([], 19593), 'ei_next': ([], 19593), 'VEC_edge_base_iterate': ([], 19593), 'loop_outer': ([], 19593), 'add_loop_to_tree': ([], 19593), 'setup_loop_tree_level': ([], 19593), 'form_loop_tree': ([], 19593), 'propagate_modified_regnos': ([], 19593), 'create_insn_allocnos': ([], 19593), 'df_lr_get_bb_info': ([], 19593), 'bmp_iter_set_init': ([], 19593), 'bmp_iter_set': ([], 19593), 'create_bb_allocnos': ([], 19593), 'create_loop_allocnos': ([18], 19591), 'create_loop_tree_node_allocnos': ([], 19593), 'mark_all_loops_for_removal': ([], 19593), 'low_pressure_loop_node_p': ([], 19593), 'loop_compare_func': ([], 19593), 'mark_loops_for_removal': ([], 19593), 'VEC_ira_loop_tree_node_t_base_space': ([], 19593), 'VEC_ira_loop_tree_node_t_heap_reserve': ([], 19593), 'VEC_ira_loop_tree_node_t_base_quick_push': ([], 19593), 'VEC_ira_loop_tree_node_t_heap_safe_push': ([], 19593), 'VEC_ira_loop_tree_node_t_base_pop': ([], 19593), 'remove_uneccesary_loop_nodes_from_loop_tree': ([1], 19591), 'ira_allocate_and_accumulate_costs': ([], 19593), 'propagate_some_info_from_allocno': ([91], 19589), 'regno_allocno_order_compare_func': ([], 19593), 'ira_rebuild_regno_allocno_list': ([], 19593), 'remove_unnecessary_allocnos': ([], 19593), 'finish_loop_tree_node': ([], 19593), 'remove_unnecessary_regions': ([], 19593), 'bitmap_initialize_stat': ([], 19593), 'update_bad_spill_attribute': ([], 19593), 'propagate_allocno_info': ([], 19593), 'ira_allocate_and_copy_costs': ([], 19593), 'create_cap_allocno': ([], 19593), 'create_caps': ([], 19593), 'setup_min_max_allocno_live_range_point': ([], 19593), 'allocno_range_compare_func': ([], 19593), 'sort_conflict_id_allocno_map': ([], 19593), 'setup_min_max_conflict_allocno_ids': ([], 19593), 'finish_loop_tree_nodes': ([], 19593), 'finish_copies': ([], 19593), 'finish_cost_vectors': ([], 19593), 'ira_destroy': ([], 19593)}, "PosixPath('602/gimple-pretty-print.bc')": {'gsi_start': ([], 23657), 'maybe_init_pretty_print': ([], 23657), 'gimple_vdef': ([], 23657), 'gimple_vuse': ([], 23657), 'gimple_references_memory_p': ([], 23657), 'dump_gimple_mem_ops': ([], 23657), 'gsi_stmt': ([], 23657), 'gsi_one_before_end_p': ([], 23657), 'gimple_ops': ([], 23657), 'gimple_op': ([], 23657), 'gimple_asm_output_op': ([], 23657), 'gimple_asm_input_op': ([], 23657), 'gimple_asm_clobber_op': ([], 23657), 'gimple_asm_label_op': ([], 23657), 'gimple_assign_rhs2': ([], 23657), 'gimple_assign_rhs1': ([], 23657), 'gimple_assign_rhs_code': ([], 23657), 'gimple_assign_lhs': ([], 23657), 'dump_unary_rhs': ([], 23657), 'dump_binary_rhs': ([], 23657), 'gimple_call_lhs': ([], 23657), 'gimple_call_fn': ([], 23657), 'gimple_call_arg': ([], 23657), 'dump_gimple_call_args': ([], 23657), 'gimple_cond_lhs': ([], 23657), 'gimple_cond_rhs': ([], 23657), 'gimple_cond_true_label': ([], 23657), 'gimple_cond_false_label': ([], 23657), 'gimple_label_label': ([], 23657), 'gimple_goto_dest': ([], 23657), 'gimple_return_retval': ([], 23657), 'gimple_switch_index': ([], 23657), 'gimple_switch_label': ([], 23657), 'gimple_omp_for_index': ([], 23657), 'gimple_omp_for_initial': ([], 23657), 'gimple_omp_for_final': ([], 23657), 'gimple_omp_for_cond': ([], 23657), 'gimple_omp_for_incr': ([], 23657), 'gimple_omp_subcode': ([], 23657), 'gimple_debug_bind_get_var': ([], 23657), 'gimple_debug_bind_get_value': ([], 23657), 'dump_gimple_stmt': ([], 23657), 'dump_gimple_debug': ([1], 23653), 'dump_gimple_eh_filter': ([], 23657), 'dump_gimple_catch': ([], 23657), 'dump_gimple_omp_critical': ([], 23657), 'dump_gimple_omp_sections': ([], 23657), 'dump_gimple_omp_continue': ([], 23657), 'dump_gimple_omp_for': ([4, 5], 23643), 'dump_gimple_omp_atomic_load': ([], 23657), 'dump_gimple_omp_task': ([], 23657), 'dump_gimple_omp_parallel': ([], 23657), 'dump_gimple_phi': ([29], 23656), 'dump_gimple_try': ([], 23657), 'dump_gimple_switch': ([], 23657), 'dump_gimple_return': ([], 23657), 'dump_gimple_goto': ([], 23657), 'dump_gimple_label': ([], 23657), 'dump_gimple_cond': ([2], 23651), 'dump_gimple_call': ([1], 23653), 'dump_gimple_bind': ([], 23657), 'dump_gimple_assign': ([0], 23653), 'dump_gimple_asm': ([], 23657), 'dump_gimple_fmt': ([], 23657), 'dump_gimple_seq': ([], 23657), 'print_gimple_stmt': ([], 23657), 'print_gimple_expr': ([], 23657), 'print_gimple_seq': ([], 23657), 'bb_seq': ([], 23657), 'gsi_start_bb': ([], 23657), 'get_lineno': ([], 23657), 'ei_end_p': ([], 23657), 'ei_cond': ([], 23657), 'ei_next': ([], 23657), 'dump_bb_header': ([], 23657), 'pp_cfg_jump': ([], 23657), 'dump_implicit_edges': ([], 23657), 'dump_bb_end': ([], 23657), 'gimple_dump_bb_buff': ([], 23657), 'gimple_dump_bb': ([], 23657)}, "PosixPath('602/optabs.bc')": {'gen_cond_trap': ([], 57921), 'convert_optab_libfunc': ([], 57921), 'optab_libfunc': ([], 57921), 'optab_for_tree_code': ([], 57921), 'expand_widen_pattern_expr': ([], 57921), 'expand_ternary_op': ([], 57921), 'avoid_expensive_constant': ([], 57921), 'add_equal_note': ([], 57921), 'can_compare_p': ([], 57921), 'prepare_operand': ([], 57921), 'no_conflict_move_test': ([2], 57918), 'emit_libcall_block': ([], 57921), 'prepare_float_lib_cmp': ([], 57921), 'prepare_cmp_insn': ([59], 57914), 'emit_conditional_move': ([], 57921), 'expand_binop': ([113], 57916), 'expand_subword_shift': ([], 57921), 'expand_binop_directly': ([], 57921), 'expand_vec_shift_expr': ([], 57921), 'sign_expand_binop': ([], 57921), 'expand_twoval_unop': ([], 57921), 'expand_twoval_binop': ([], 57921), 'emit_cmp_and_jump_insn_1': ([], 57921), 'emit_cmp_and_jump_insns': ([], 57921), 'expand_absneg_bit': ([], 57921), 'expand_unop': ([], 57921), 'expand_ffs': ([], 57921), 'expand_unop_direct': ([], 57921), 'expand_abs_nojump': ([], 57921), 'expand_abs': ([], 57921), 'expand_one_cmpl_abs_nojump': ([], 57921), 'maybe_emit_unop_insn': ([], 57921), 'expand_copysign_absneg': ([], 57921), 'expand_copysign_bit': ([], 57921), 'expand_copysign': ([], 57921), 'emit_conditional_add': ([], 57921), 'gen_add2_insn': ([], 57921), 'gen_add3_insn': ([], 57921), 'have_add2_insn': ([0], 57920), 'gen_sub2_insn': ([], 57921), 'gen_sub3_insn': ([], 57921), 'have_sub2_insn': ([0], 57920), 'gen_extend_insn': ([], 57921), 'expand_float': ([5, 6], 57847), 'can_fix_p': ([], 57921), 'expand_fix': ([], 57921), 'expand_sfix_optab': ([], 57921), 'build_libfunc_function': ([], 57921), 'set_optab_libfunc': ([], 57921), 'set_conv_libfunc': ([], 57921), 'gen_interclass_conv_libfunc': ([], 57921), 'gen_fractuns_conv_libfunc': ([0], 57915), 'gen_intraclass_conv_libfunc': ([], 57921), 'gen_fract_conv_libfunc': ([], 57921), 'gen_trunc_conv_libfunc': ([], 57921), 'gen_extend_conv_libfunc': ([], 57921), 'gen_libfunc': ([], 57921), 'gen_fp_libfunc': ([], 57921), 'gen_int_libfunc': ([], 57921), 'gen_intv_fp_libfunc': ([], 57921), 'eq_libfunc': ([], 57921), 'hash_libfunc': ([], 57921), 'init_optabs': ([], 57921), 'debug_optab_libfuncs': ([], 57921), 'vector_compare_rtx': ([], 57921), 'expand_vec_cond_expr': ([0], 57920), 'expand_val_compare_and_swap_1': ([], 57921), 'expand_bool_compare_and_swap': ([], 57921), 'expand_compare_and_swap_loop': ([], 57921), 'expand_sync_operation': ([], 57921), 'expand_sync_fetch_operation': ([], 57921), 'expand_sync_lock_test_and_set': ([], 57921), 'gt_ggc_m_P13libfunc_entry4htab': ([3, 4], 57914), 'gt_pch_p_P13libfunc_entry4htab': ([4], 57916), 'gt_pch_n_P13libfunc_entry4htab': ([3, 4], 57914)}, "PosixPath('602/auto-inc-dec.bc')": {}, "PosixPath('602/attribs.bc')": {'register_attribute': ([], 2652), 'decl_attributes': ([50, 90], 2632), 'substring_hash': ([], 2652), 'extract_attribute_substring': ([], 2652), 'lookup_attribute_spec': ([], 2652), 'eq_attr': ([], 2652), 'hash_attr': ([], 2652), 'init_attributes': ([], 2652)}, "PosixPath('602/dominance.bc')": {'init_dom_info': ([], 11862), 'ei_end_p': ([], 11862), 'ei_next': ([], 11862), 'calc_dfs_tree_nonrec': ([], 11862), 'calc_dfs_tree': ([32], 11853), 'compress': ([], 11862), 'eval': ([], 11862), 'link_roots': ([], 11862), 'calc_idoms': ([215, 225, 295], 11841), 'assign_dfs_numbers': ([], 11862), 'compute_dom_fast_query': ([], 11862), 'calculate_dominance_info': ([], 11862), 'free_dominance_info': ([], 11862), 'set_immediate_dominator': ([], 11862), 'VEC_basic_block_base_space': ([], 11862), 'VEC_basic_block_heap_reserve': ([], 11862), 'VEC_basic_block_base_quick_push': ([], 11862), 'VEC_basic_block_heap_safe_push': ([], 11862), 'get_dominated_by': ([], 11862), 'next_dom_son': ([], 11862), 'get_dominated_by_region': ([], 11862), 'get_all_dominated_blocks': ([], 11862), 'redirect_immediate_dominators': ([], 11862), 'bmp_iter_set_init': ([], 11862), 'bmp_iter_set': ([], 11862), 'nearest_common_dominator_for_set': ([], 11862), 'dominated_by_p': ([1], 11859), 'verify_dominators': ([], 11862), 'ei_cond': ([], 11862), 'recompute_dominator': ([], 11862), 'VEC_basic_block_base_iterate': ([], 11862), 'single_pred_edge': ([], 11862), 'VEC_basic_block_base_unordered_remove': ([], 11862), 'prune_bbs_to_update_dominators': ([], 11862), 'VEC_int_base_space': ([], 11862), 'VEC_int_heap_reserve': ([], 11862), 'VEC_int_base_quick_push': ([], 11862), 'VEC_int_heap_safe_push': ([], 11862), 'VEC_int_base_iterate': ([], 11862), 'determine_dominators_for_sons': ([], 11862), 'iterate_fix_dominators': ([1, 4], 11802), 'add_to_dominance_info': ([], 11862), 'delete_from_dominance_info': ([], 11862), 'debug_dominance_info': ([], 11862), 'debug_dominance_tree_1': ([], 11862)}, "PosixPath('602/tree-vect-slp.bc')": {'vect_analyze_slp_instance': ([], 20009), 'vect_schedule_slp_instance': ([], 20009), 'vect_build_slp_tree': ([2, 101, 223], 19998), 'bb_seq': ([], 20009), 'gsi_start_bb': ([], 20009), 'gsi_stmt': ([], 20009), 'find_bb_location': ([], 20009), 'vect_free_slp_tree': ([], 20009), 'vect_free_slp_instance': ([], 20009), 'VEC_gimple_base_iterate': ([], 20009), 'VEC_gimple_base_space': ([], 20009), 'VEC_gimple_heap_reserve': ([], 20009), 'VEC_gimple_base_quick_push': ([], 20009), 'VEC_gimple_heap_safe_push': ([], 20009), 'gimple_ops': ([], 20009), 'gimple_op': ([], 20009), 'gimple_assign_rhs1': ([], 20009), 'gimple_assign_rhs_code': ([], 20009), 'gimple_assign_rhs2': ([], 20009), 'gimple_assign_lhs': ([], 20009), 'vect_get_and_check_slp_defs': ([], 20009), 'VEC_int_base_space': ([], 20009), 'VEC_int_heap_reserve': ([], 20009), 'VEC_int_base_quick_push': ([], 20009), 'VEC_int_heap_safe_push': ([], 20009), 'VEC_slp_tree_base_space': ([], 20009), 'VEC_slp_tree_heap_reserve': ([], 20009), 'VEC_slp_tree_base_quick_push': ([], 20009), 'VEC_slp_tree_heap_safe_push': ([], 20009), 'VEC_int_base_iterate': ([], 20009), 'VEC_slp_tree_base_iterate': ([], 20009), 'vect_get_mask_element': ([], 20009), 'VEC_tree_base_quick_push': ([], 20009), 'gimple_set_op': ([], 20009), 'gimple_call_set_lhs': ([], 20009), 'vect_create_mask_and_perm': ([], 20009), 'vect_transform_slp_perm_load': ([73], 19987), 'vect_supported_slp_permutation_p': ([], 20009), 'vect_supported_load_permutation_p': ([], 20009), 'get_earlier_stmt': ([], 20009), 'vect_find_first_load_in_slp_instance': ([], 20009), 'VEC_slp_instance_base_space': ([], 20009), 'VEC_slp_instance_heap_reserve': ([], 20009), 'VEC_slp_instance_base_quick_push': ([], 20009), 'VEC_slp_instance_heap_safe_push': ([], 20009), 'vect_print_slp_tree': ([], 20009), 'vect_analyze_slp': ([], 20009), 'VEC_slp_instance_base_iterate': ([], 20009), 'vect_mark_slp_stmts': ([], 20009), 'vect_make_slp_decision': ([], 20009), 'end_imm_use_stmt_p': ([], 20009), 'clear_and_done_ssa_iter': ([], 20009), 'op_iter_next_use': ([], 20009), 'op_iter_init_phiuse': ([], 20009), 'delink_imm_use': ([], 20009), 'link_imm_use_to_list': ([], 20009), 'move_use_after_head': ([2], 19995), 'gimple_def_ops': ([], 20009), 'gimple_vdef': ([], 20009), 'gimple_use_ops': ([], 20009), 'gimple_vuse': ([], 20009), 'op_iter_init': ([], 20009), 'op_iter_init_use': ([], 20009), 'gimple_vuse_op': ([], 20009), 'link_use_stmts_after': ([], 20009), 'first_imm_use_stmt': ([], 20009), 'next_imm_use_stmt': ([], 20009), 'vect_detect_hybrid_slp_stmts': ([], 20009), 'vect_detect_hybrid_slp': ([], 20009), 'VEC_vec_void_p_base_space': ([], 20009), 'VEC_vec_void_p_heap_reserve': ([], 20009), 'VEC_vec_void_p_base_quick_push': ([], 20009), 'VEC_vec_void_p_heap_safe_push': ([], 20009), 'set_vinfo_for_stmt': ([], 20009), 'new_bb_vec_info': ([], 20009), 'destroy_bb_vec_info': ([], 20009), 'vect_mark_slp_stmts_relevant': ([], 20009), 'vect_slp_analyze_node_operations': ([], 20009), 'VEC_slp_instance_base_ordered_remove': ([], 20009), 'vect_slp_analyze_operations': ([0], 20008), 'vect_slp_analyze_bb': ([], 20009), 'vect_update_slp_costs_according_to_vf': ([], 20009), 'vect_get_slp_vect_defs': ([], 20009), 'VEC_tree_base_iterate': ([], 20009), 'vect_get_constant_vectors': ([5], 20002), 'vect_get_slp_defs': ([18], 20007), 'vect_schedule_slp': ([], 20009), 'gimple_vop': ([], 20009), 'vect_slp_transform_bb': ([], 20009)}, "PosixPath('602/mcf.bc')": {'create_fixup_graph': ([], 8994), 'adjust_cfg_counts': ([11], 8985), 'ei_end_p': ([], 8994), 'ei_cond': ([], 8994), 'ei_next': ([], 8994), 'sum_edge_counts': ([], 8994), 'print_basic_block': ([], 8994), 'dump_fixup_edge': ([], 8994), 'VEC_fixup_edge_p_base_space': ([], 8994), 'VEC_fixup_edge_p_heap_reserve': ([], 8994), 'VEC_fixup_edge_p_base_quick_push': ([], 8994), 'VEC_fixup_edge_p_heap_safe_push': ([], 8994), 'add_edge': ([], 8994), 'add_fixup_edge': ([], 8994), 'VEC_fixup_edge_p_base_iterate': ([], 8994), 'find_fixup_edge': ([], 8994), 'dump_fixup_graph': ([], 8994), 'add_rfixup_edge': ([], 8994), 'compute_residual_flow': ([], 8994), 'init_augmenting_path': ([], 8994), 'init_queue': ([], 8994), 'enqueue': ([], 8994), 'is_empty': ([], 8994), 'dequeue': ([], 8994), 'find_augmenting_path': ([], 8994), 'find_max_flow': ([], 8994), 'cancel_negative_cycle': ([], 8994), 'find_minimum_cost_flow': ([], 8994), 'delete_fixup_graph': ([5], 8989), 'mcf_smooth_cfg': ([], 8994)}, "PosixPath('602/sparseset.bc')": {'sparseset_clear': ([], 2051), 'sparseset_alloc': ([], 2051), 'sparseset_bit_p': ([], 2051), 'sparseset_insert_bit': ([], 2051), 'sparseset_swap': ([], 2051), 'sparseset_clear_bit': ([], 2051), 'sparseset_copy': ([], 2051), 'sparseset_iter_init': ([], 2051), 'sparseset_iter_p': ([], 2051), 'sparseset_iter_elm': ([], 2051), 'sparseset_iter_next': ([], 2051), 'sparseset_set_bit': ([], 2051), 'sparseset_and': ([], 2051), 'sparseset_and_compl': ([], 2051), 'sparseset_ior': ([], 2051), 'sparseset_equal_p': ([36], 2049)}, "PosixPath('602/cpp_init.bc')": {'cpp_set_lang': ([], 3825), 'cpp_create_reader': ([], 3825), 'cpp_destroy': ([29], 3823), 'cpp_named_operator2name': ([], 3825), 'cpp_init_special_builtins': ([], 3825), 'cpp_init_builtins': ([], 3825), 'post_options': ([], 3825), 'mark_named_operators': ([], 3825), 'cpp_post_options': ([], 3825), 'read_original_directory': ([0], 3821), 'cpp_read_main_file': ([], 3825), 'cpp_finish': ([], 3825)}, "PosixPath('602/tree-sra.bc')": {'sra_modify_assign': ([6, 16, 57, 86], 30651), 'make_fancy_name_1': ([], 30666), 'make_fancy_decl_name': ([], 30666), 'load_assign_lhs_subreplacements': ([38], 30661), 'gsi_start': ([], 30666), 'first_imm_use_on_stmt': ([], 30666), 'next_imm_use_on_stmt': ([], 30666), 'build_ref_for_offset_1': ([], 30666), 'build_ref_for_offset': ([], 30666), 'ipa_sra_preliminary_function_checks': ([], 30666), 'has_zero_uses': ([], 30666), 'is_unused_scalar_param': ([], 30666), 'end_imm_use_stmt_p': ([], 30666), 'clear_and_done_ssa_iter': ([], 30666), 'op_iter_next_use': ([], 30666), 'op_iter_init_phiuse': ([], 30666), 'delink_imm_use': ([], 30666), 'link_imm_use_to_list': ([], 30666), 'move_use_after_head': ([2], 30652), 'gimple_def_ops': ([], 30666), 'gimple_vdef': ([], 30666), 'gimple_use_ops': ([], 30666), 'gimple_vuse': ([], 30666), 'op_iter_init': ([], 30666), 'op_iter_init_use': ([], 30666), 'gimple_vuse_op': ([], 30666), 'link_use_stmts_after': ([], 30666), 'first_imm_use_stmt': ([], 30666), 'gimple_ops': ([], 30666), 'gimple_op': ([], 30666), 'gimple_call_lhs': ([], 30666), 'gimple_has_lhs': ([], 30666), 'gimple_assign_rhs1': ([], 30666), 'gimple_call_arg': ([], 30666), 'end_imm_use_stmt_traverse': ([], 30666), 'next_imm_use_stmt': ([], 30666), 'ptr_parm_has_direct_uses': ([], 30666), 'type_internals_preclude_sra_p': ([0], 30659), 'find_param_candidates': ([], 30666), 'callsite_has_enough_arguments_p': ([], 30666), 'all_callers_have_enough_arguments_p': ([], 30666), 'gsi_stmt': ([], 30666), 'bb_seq': ([], 30666), 'gsi_start_bb': ([], 30666), 'gimple_op_ptr': ([], 30666), 'gimple_return_retval_ptr': ([], 30666), 'gimple_call_arg_ptr': ([], 30666), 'gimple_call_fn': ([], 30666), 'gimple_call_fndecl': ([], 30666), 'gimple_call_lhs_ptr': ([], 30666), 'get_ssa_base_param': ([], 30666), 'disqualify_base_of_expr': ([0], 30663), 'gimple_asm_input_op': ([], 30666), 'gimple_asm_output_op': ([], 30666), 'scan_function': ([0, 41], 30592), 'VEC_access_p_base_quick_push': ([], 30666), 'unmodified_by_ref_scalar_representative': ([], 30666), 'access_precludes_ipa_sra_p': ([], 30666), 'compare_access_positions': ([], 30666), 'splice_param_accesses': ([], 30666), 'splice_all_param_accesses': ([], 30666), 'dump_dereferences_table': ([], 30666), 'VEC_basic_block_base_quick_push': ([], 30666), 'VEC_basic_block_base_pop': ([], 30666), 'ei_end_p': ([], 30666), 'ei_cond': ([], 30666), 'ei_next': ([], 30666), 'propagate_dereference_distances': ([], 30666), 'analyze_caller_dereference_legality': ([], 30666), 'analyze_modified_params': ([], 30666), 'decide_one_param_reduction': ([], 30666), 'turn_representatives_into_adjustments': ([], 30666), 'analyze_all_param_acesses': ([], 30666), 'create_abstract_origin': ([], 30666), 'gimple_set_op': ([], 30666), 'gimple_debug_bind_reset_value': ([], 30666), 'sra_ipa_reset_debug_stmts': ([], 30666), 'convert_callers': ([], 30666), 'gimple_assign_lhs': ([], 30666), 'get_adjustment_for_base': ([], 30666), 'get_var_ann': ([], 30666), 'get_replaced_param_substitute': ([], 30666), 'gimple_assign_set_lhs': ([], 30666), 'gimple_call_set_lhs': ([], 30666), 'replace_removed_params_ssa_names': ([], 30666), 'gimple_assign_rhs1_ptr': ([], 30666), 'gimple_assign_lhs_ptr': ([], 30666), 'sra_ipa_modify_expr': ([18, 21], 30656), 'sra_ipa_modify_assign': ([1], 30664), 'modify_function': ([], 30666), 'contains_view_convert_expr_p': ([], 30666), 'mark_parm_dereference': ([], 30666), 'VEC_access_p_base_space': ([], 30666), 'VEC_access_p_heap_reserve': ([], 30666), 'VEC_access_p_heap_safe_push': ([], 30666), 'create_access_1': ([], 30666), 'create_access': ([], 30666), 'build_access_from_expr_1': ([1, 8], 30655), 'add_link_to_rhs': ([], 30666), 'build_accesses_from_assign': ([1], 30664), 'ipa_early_sra': ([], 30666), 'first_htab_element': ([], 30666), 'first_referenced_var': ([], 30666), 'end_htab_p': ([], 30666), 'end_referenced_vars_p': ([], 30666), 'next_htab_element': ([], 30666), 'next_referenced_var': ([], 30666), 'find_var_candidates': ([], 30666), 'bmp_iter_set_init': ([], 30666), 'bmp_iter_set': ([], 30666), 'type_consists_of_records_p': ([], 30666), 'completely_scalarize_record': ([], 30666), 'relink_to_new_repr': ([7], 30658), 'add_access_to_work_queue': ([0], 30657), 'sort_and_splice_var_accesses': ([], 30666), 'build_access_subtree': ([], 30666), 'build_access_trees': ([], 30666), 'pop_access_from_work_queue': ([], 30666), 'child_would_conflict_in_lacc': ([], 30666), 'create_artificial_child_access': ([], 30666), 'propagate_subaccesses_across_link': ([3], 30660), 'propagate_all_subaccesses': ([], 30666), 'expr_with_var_bounded_array_refs_p': ([], 30666), 'analyze_access_subtree': ([], 30666), 'dump_access_tree_1': ([], 30666), 'analyze_all_variable_accesses': ([], 30666), 'create_access_replacement': ([], 30666), 'get_access_replacement': ([], 30666), 'generate_subtree_copies': ([], 30666), 'single_succ_edge': ([], 30666), 'initialize_parameter_reductions': ([], 30666), 'find_access_in_subtree': ([], 30666), 'get_var_base_offset_size_access': ([], 30666), 'get_access_for_expr': ([], 30666), 'init_subtree_with_zero': ([], 30666), 'sra_modify_constructor_assign': ([], 30666), 'sra_modify_expr': ([], 30666), 'ref_expr_for_all_replacements_p': ([], 30666), 'handle_unscalarized_data_in_subtree': ([], 30666), 'perform_intra_sra': ([], 30666)}, "PosixPath('602/tree-ssa-sink.bc')": {'gimple_vdef': ([], 2902), 'is_global_var': ([], 2902), 'is_hidden_global_store': ([2], 2895), 'ei_end_p': ([], 2902), 'ei_cond': ([], 2902), 'ei_next': ([], 2902), 'bb_seq': ([], 2902), 'gsi_last_bb': ([], 2902), 'gsi_stmt': ([], 2902), 'gimple_def_ops': ([], 2902), 'gimple_use_ops': ([], 2902), 'gimple_vuse': ([], 2902), 'op_iter_init': ([], 2902), 'op_iter_next_tree': ([], 2902), 'op_iter_init_tree': ([], 2902), 'end_readonly_imm_use_p': ([], 2902), 'first_readonly_imm_use': ([], 2902), 'next_readonly_imm_use': ([], 2902), 'gimple_ops': ([], 2902), 'gimple_op': ([], 2902), 'gimple_assign_lhs': ([], 2902), 'op_iter_next_def': ([], 2902), 'op_iter_init_def': ([], 2902), 'op_iter_next_use': ([], 2902), 'op_iter_init_use': ([], 2902), 'all_immediate_uses_same_place': ([], 2902), 'bmp_iter_set_init': ([], 2902), 'bmp_iter_set': ([], 2902), 'nearest_common_dominator_of_uses': ([], 2902), 'gsi_start_bb': ([], 2902), 'gsi_after_labels': ([], 2902), 'find_bb_for_arg': ([], 2902), 'statement_sink_location': ([], 2902), 'sink_code_in_bb': ([4, 177], 2879)}, "PosixPath('602/insn-peep.bc')": {}, "PosixPath('602/c-convert.bc')": {'convert': ([], 842)}, "PosixPath('602/mode-switching.bc')": {'ei_end_p': ([], 3378), 'ei_cond': ([], 3378), 'ei_next': ([], 3378), 'new_seginfo': ([], 3378), 'remove_from_hard_reg_set': ([], 3378), 'reg_dies': ([], 3378), 'make_preds_opaque': ([13], 3367), 'add_to_hard_reg_set': ([], 3378), 'reg_becomes_live': ([0], 3376), 'optimize_mode_switching': ([], 3378), 'rest_of_handle_mode_switching': ([], 3378)}, "PosixPath('602/lrealpath.bc')": {}, "PosixPath('602/dojump.bc')": {'clear_pending_stack_adjust': ([], 10336), 'split_comparison': ([], 10336), 'do_jump_by_parts_equality_rtx': ([], 10336), 'do_jump_by_parts_zero_rtx': ([], 10336), 'do_compare_rtx_and_jump': ([2, 43], 10274), 'do_jump_by_parts_equality': ([], 10336), 'do_compare_and_jump': ([], 10336), 'do_jump_by_parts_greater': ([0, 1], 10330), 'prefer_and_bit_test': ([], 10336), 'do_jump': ([6, 34], 10328), 'do_jump_1': ([], 10336)}, "PosixPath('602/lambda-mat.bc')": {'lambda_matrix_copy': ([], 7654), 'lambda_matrix_id_p': ([], 7654), 'lambda_matrix_mult': ([], 7654), 'lambda_matrix_delete_rows': ([], 7654), 'lambda_matrix_row_exchange': ([], 7654), 'lambda_matrix_row_add': ([], 7654), 'lambda_matrix_row_negate': ([], 7654), 'lambda_matrix_row_mc': ([], 7654), 'lambda_matrix_col_exchange': ([], 7654), 'lambda_matrix_col_add': ([], 7654), 'lambda_matrix_col_negate': ([], 7654), 'lambda_matrix_col_mc': ([], 7654), 'lambda_vector_min_nz': ([], 7654), 'lambda_matrix_inverse_hard': ([], 7654), 'lambda_matrix_inverse': ([], 7654), 'lambda_matrix_hermite': ([], 7654), 'lambda_matrix_right_hermite': ([], 7654), 'lambda_matrix_left_hermite': ([0, 5], 7650), 'lambda_matrix_project_to_null': ([], 7654), 'lambda_matrix_vector_mult': ([], 7654)}, "PosixPath('602/insn-opinit.bc')": {}, "PosixPath('602/fold-const.bc')": {'div_and_round_double': ([], 150981), 'make_range': ([105, 109], 150963), 'fold_binary_loc': ([6, 7, 8, 18, 79, 171, 615, 778, 779, 780, 969], 150821), 'fold_truthop': ([4], 150917), 'fold_convert_const_int_from_fixed': ([], 150981), 'fit_double_type': ([], 150981), 'force_fit_type_double': ([], 150981), 'neg_double': ([], 150981), 'encode': ([], 150981), 'decode': ([], 150981), 'mul_double_with_sign': ([16], 150960), 'rshift_double': ([], 150981), 'lshift_double': ([1], 150978), 'lrotate_double': ([], 150981), 'rrotate_double': ([], 150981), 'div_if_zero_remainder': ([], 150981), 'fold_undefer_overflow_warnings': ([], 150981), 'may_negate_without_overflow_p': ([], 150981), 'int_const_binop': ([], 150981), 'int_binop_types_match_p': ([2], 150976), 'fold_abs_const': ([], 150981), 'fold_convert_const_int_from_int': ([], 150981), 'fold_convert_const_int_from_real': ([], 150981), 'fold_convert_const_real_from_real': ([], 150981), 'fold_convert_const_real_from_fixed': ([], 150981), 'fold_convert_const_fixed_from_fixed': ([1], 150978), 'fold_convert_const_fixed_from_int': ([1], 150977), 'fold_convert_const_fixed_from_real': ([1], 150978), 'fold_convert_const': ([], 150981), 'init_const_call_expr_arg_iterator': ([], 150981), 'next_const_call_expr_arg': ([], 150981), 'first_const_call_expr_arg': ([], 150981), 'operand_equal_p': ([29, 154, 169], 150959), 'fold_ignored_result': ([0], 150967), 'fold_negate_const': ([], 150981), 'negate_expr_p': ([0, 490], 150969), 'fold_truth_not_expr': ([], 150981), 'tree_swap_operands_p': ([0], 150980), 'sign_bit_p': ([4], 150979), 'native_encode_int': ([], 150981), 'native_encode_real': ([], 150981), 'native_encode_string': ([], 150981), 'native_encode_expr': ([], 150981), 'native_interpret_int': ([], 150981), 'native_interpret_real': ([], 150981), 'native_interpret_expr': ([], 150981), 'tree_simple_nonnegative_warnv_p': ([], 150981), 'tree_expr_nonnegative_warnv_p': ([], 150981), 'tree_invalid_nonnegative_warnv_p': ([], 150981), 'tree_call_nonnegative_warnv_p': ([], 150981), 'tree_single_nonnegative_warnv_p': ([], 150981), 'tree_unary_nonnegative_warnv_p': ([], 150981), 'tree_binary_nonnegative_warnv_p': ([4], 150978), 'tree_expr_nonnegative_p': ([], 150981), 'fold_not_const': ([0], 150977), 'fold_real_zero_addition_p': ([], 150981), 'get_pointer_modulus_and_residue': ([13], 150976), 'tree_operand_length': ([], 150981), 'simple_operand_p': ([], 150981), 'pointer_may_wrap_p': ([], 150981), 'twoval_comparison_p': ([], 150981), 'tree_expr_nonzero_warnv_p': ([], 150981), 'tree_single_nonzero_warnv_p': ([], 150981), 'tree_binary_nonzero_warnv_p': ([], 150981), 'tree_expr_nonzero_p': ([], 150981), 'build_fold_addr_expr_with_type_loc': ([0], 150976), 'fold_convert_loc': ([8, 10], 150965), 'fold_unary_loc': ([77], 150972), 'fold_ternary_loc': ([169], 150957), 'fold_cond_expr_with_comparison': ([95, 96], 150975), 'negate_expr': ([], 150981), 'fold_negate_expr': ([8, 253], 150972), 'extract_muldiv_1': ([65, 68], 150950), 'fold_indirect_ref_1': ([], 150981), 'fold_read_from_constant_string': ([], 150981), 'size_binop_loc': ([], 150981), 'optimize_bit_field_compare': ([103], 150980), 'fold_single_bit_test_into_sign_test': ([], 150981), 'fold_comparison': ([17, 111], 150923), 'maybe_canonicalize_comparison_1': ([], 150981), 'fold_div_compare': ([], 150981), 'eval_subst': ([], 150981), 'optimize_minmax_comparison': ([], 150981), 'fold_sign_changed_comparison': ([], 150981), 'fold_widened_comparison': ([], 150981), 'fold_mathfn_compare': ([], 150981), 'fold_inf_compare': ([], 150981), 'make_bit_field_ref': ([], 150981), 'unextend': ([], 150981), 'decode_field_reference': ([], 150981), 'combine_comparisons': ([], 150981), 'fold_range_test': ([], 150981), 'build_range_check': ([], 150981), 'merge_ranges': ([], 150981), 'range_predecessor': ([], 150981), 'range_successor': ([], 150981), 'range_binop': ([], 150981), 'fold_to_nonsharp_ineq_using_bound': ([], 150981), 'fold_minmax': ([], 150981), 'multiple_of_p': ([], 150981), 'omit_two_operands_loc': ([], 150981), 'distribute_bit_expr': ([], 150981), 'fold_strip_sign_ops': ([], 150981), 'fold_mult_zconjz': ([], 150981), 'ptr_difference_const': ([], 150981), 'split_address_to_core_and_offset': ([], 150981), 'associate_trees': ([], 150981), 'split_tree': ([11], 150973), 'distribute_real_division': ([], 150981), 'fold_plusminus_mult_expr': ([], 150981), 'omit_one_operand_loc': ([], 150981), 'try_move_mult_to_index': ([], 150981), 'fold_binary_op_with_conditional_arg': ([], 150981), 'fold_relational_const': ([], 150981), 'const_binop': ([16], 150971), 'operand_equal_for_comparison_p': ([], 150981), 'fold_convertible_p': ([], 150981), 'fold_single_bit_test': ([], 150981), 'fold': ([40], 150950), 'fold_build_cleanup_point_expr': ([], 150981), 'fold_indirect_ref_loc': ([], 150981), 'round_up_loc': ([0], 150976), 'round_down_loc': ([], 150981)}, "PosixPath('602/tree-vrp.bc')": {'vrp_finalize': ([], 66176), 'first_imm_use_on_stmt': ([], 66176), 'next_imm_use_on_stmt': ([], 66176), 'nonnull_arg_p': ([], 66176), 'set_value_range': ([], 66176), 'set_value_range_to_varying': ([], 66176), 'get_value_range': ([], 66176), 'vrp_val_min': ([], 66176), 'vrp_val_is_min': ([], 66176), 'is_negative_overflow_infinity': ([], 66176), 'vrp_val_max': ([], 66176), 'vrp_val_is_max': ([], 66176), 'is_positive_overflow_infinity': ([], 66176), 'operand_less_p': ([0], 66173), 'compare_values_warnv': ([0, 11], 66162), 'ssa_name_nonnegative_p': ([], 66176), 'bmp_iter_set_init': ([], 66176), 'bmp_iter_set': ([], 66176), 'dump_value_range': ([], 66176), 'dump_all_value_ranges': ([], 66176), 'gsi_stmt': ([], 66176), 'dump_asserts_for': ([], 66176), 'dump_all_asserts': ([], 66176), 'gimple_ops': ([], 66176), 'gimple_op': ([], 66176), 'gimple_cond_lhs': ([], 66176), 'fp_predicate': ([], 66176), 'gimple_def_ops': ([], 66176), 'gimple_vdef': ([], 66176), 'gimple_use_ops': ([], 66176), 'gimple_vuse': ([], 66176), 'op_iter_init': ([], 66176), 'op_iter_next_tree': ([], 66176), 'op_iter_init_tree': ([], 66176), 'zero_ssa_operands': ([], 66176), 'ei_end_p': ([], 66176), 'ei_cond': ([], 66176), 'gimple_cond_rhs': ([], 66176), 'extract_code_and_val_from_cond_with_ops': ([], 66176), 'has_single_use': ([], 66176), 'register_new_assert_for': ([], 66176), 'gimple_assign_rhs1': ([], 66176), 'gimple_assign_rhs_code': ([], 66176), 'gimple_assign_rhs2': ([], 66176), 'gimple_assign_cast_p': ([], 66176), 'gimple_call_fn': ([], 66176), 'gimple_call_return_type': ([], 66176), 'gimple_expr_type': ([], 66176), 'register_edge_assert_for_2': ([185], 66167), 'register_edge_assert_for_1': ([], 66176), 'register_edge_assert_for': ([10, 11], 66161), 'ei_next': ([], 66176), 'find_conditional_asserts': ([], 66176), 'gimple_switch_index': ([], 66176), 'gimple_switch_label': ([], 66176), 'compare_case_labels': ([], 66176), 'find_switch_asserts': ([], 66176), 'bb_seq': ([], 66176), 'gsi_start_bb': ([], 66176), 'infer_value_range': ([], 66176), 'clear_and_done_ssa_iter': ([], 66176), 'op_iter_next_use': ([], 66176), 'op_iter_init_phiuse': ([], 66176), 'find_assert_locations_1': ([], 66176), 'find_assert_locations': ([], 66176), 'build_assert_expr_for': ([], 66176), 'process_assert_insertions_for': ([], 66176), 'process_assert_insertions': ([], 66176), 'insert_range_assertions': ([], 66176), 'gimple_call_fndecl': ([], 66176), 'stmt_interesting_for_vrp': ([], 66176), 'vrp_initialize': ([], 66176), 'gimple_call_arg': ([], 66176), 'check_array_ref': ([], 66176), 'search_for_addr_array': ([9, 10, 19], 66162), 'check_array_bounds': ([0], 66166), 'check_all_array_refs': ([], 66176), 'VEC_edge_base_iterate': ([], 66176), 'gsi_last_bb': ([], 66176), 'is_overflow_infinity': ([], 66176), 'usable_range_p': ([], 66176), 'overflow_infinity_range_p': ([], 66176), 'compare_ranges': ([], 66176), 'compare_range_with_value': ([], 66176), 'get_vr_for_comparison': ([], 66176), 'compare_names': ([], 66176), 'compare_name_with_value': ([], 66176), 'vrp_evaluate_conditional_warnv_with_ops': ([], 66176), 'vrp_evaluate_conditional': ([], 66176), 'simplify_stmt_for_jump_threading': ([0], 66163), 'identify_jump_threads': ([], 66176), 'gimple_set_op': ([], 66176), 'gimple_cond_set_lhs': ([], 66176), 'gimple_cond_set_rhs': ([], 66176), 'gimple_cond_make_false': ([], 66176), 'gimple_cond_make_true': ([], 66176), 'fold_predicate_in': ([], 66176), 'gimple_assign_lhs': ([], 66176), 'simplify_truth_ops_using_ranges': ([], 66176), 'gimple_assign_set_rhs1': ([], 66176), 'gimple_assign_set_rhs2': ([], 66176), 'simplify_div_or_mod_using_ranges': ([], 66176), 'simplify_abs_using_ranges': ([], 66176), 'test_for_singularity': ([], 66176), 'simplify_cond_using_ranges': ([0], 66166), 'find_case_label_index': ([], 66176), 'find_case_label_range': ([1, 2, 4], 66150), 'gimple_switch_default_label': ([], 66176), 'VEC_edge_base_space': ([], 66176), 'VEC_edge_heap_reserve': ([], 66176), 'VEC_edge_base_quick_push': ([], 66176), 'VEC_edge_heap_safe_push': ([], 66176), 'VEC_switch_update_base_space': ([], 66176), 'VEC_switch_update_heap_reserve': ([], 66176), 'VEC_switch_update_base_quick_push': ([], 66176), 'VEC_switch_update_heap_safe_push': ([], 66176), 'simplify_switch_using_ranges': ([], 66176), 'simplify_stmt_using_ranges': ([], 66176), 'vrp_fold_stmt': ([50], 66172), 'end_imm_use_stmt_p': ([], 66176), 'delink_imm_use': ([], 66176), 'link_imm_use_to_list': ([], 66176), 'move_use_after_head': ([2], 66162), 'op_iter_init_use': ([], 66176), 'gimple_vuse_op': ([], 66176), 'link_use_stmts_after': ([], 66176), 'first_imm_use_stmt': ([], 66176), 'link_imm_use': ([], 66176), 'set_ssa_use_from_ptr': ([], 66176), 'next_imm_use_stmt': ([], 66176), 'remove_range_assertions': ([], 66176), 'gimple_switch_set_label': ([], 66176), 'copy_value_range': ([], 66176), 'range_includes_zero_p': ([], 66176), 'vrp_meet': ([], 66176), 'avoid_overflow_infinity': ([], 66176), 'valid_value_p': ([], 66176), 'get_chrec_loop': ([], 66176), 'adjust_range_with_scev': ([], 66176), 'loop_outer': ([], 66176), 'vrp_var_may_overflow': ([], 66176), 'supports_overflow_infinity': ([], 66176), 'negative_overflow_infinity': ([], 66176), 'positive_overflow_infinity': ([], 66176), 'vrp_operand_equal_p': ([], 66176), 'update_value_range': ([], 66176), 'vrp_visit_phi_node': ([7, 13, 14, 405], 66114), 'gimple_assign_nonnegative_warnv_p': ([], 66176), 'gimple_call_nonnegative_warnv_p': ([], 66176), 'gimple_stmt_nonnegative_warnv_p': ([], 66176), 'stmt_overflow_infinity': ([], 66176), 'set_value_range_to_nonnegative': ([], 66176), 'gimple_assign_nonzero_warnv_p': ([], 66176), 'gimple_stmt_nonzero_warnv_p': ([], 66176), 'range_is_nonnull': ([], 66176), 'vrp_stmt_computes_nonzero': ([], 66176), 'extract_range_basic': ([], 66176), 'add_equivalence': ([], 66176), 'set_and_canonicalize_value_range': ([], 66176), 'extract_range_from_assert': ([], 66176), 'extract_range_from_ssa_name': ([], 66176), 'op_with_constant_singleton_value_range': ([], 66176), 'set_value_range_to_undefined': ([], 66176), 'range_is_null': ([], 66176), 'set_value_range_to_truthvalue': ([], 66176), 'vrp_int_const_binop': ([], 66176), 'abs_extent_range': ([2], 66170), 'extract_range_from_binary_expr': ([], 66176), 'extract_range_from_unary_expr': ([2], 66154), 'extract_range_from_cond_expr': ([], 66176), 'extract_range_from_comparison': ([], 66176), 'extract_range_from_assignment': ([9, 14, 16, 26, 30], 66083), 'vrp_visit_assignment_or_call': ([], 66176), 'vrp_visit_cond_stmt': ([], 66176), 'vrp_visit_switch_stmt': ([], 66176), 'vrp_visit_stmt': ([16], 66171), 'execute_vrp': ([], 66176)}, "PosixPath('602/loop-doloop.bc')": {}, "PosixPath('602/tree-ssa-propagate.bc')": {'valid_gimple_rhs_p': ([], 7339), 'valid_gimple_call_p': ([], 7339), 'gimple_def_ops': ([], 7339), 'gimple_vdef': ([], 7339), 'gimple_use_ops': ([], 7339), 'gimple_vuse': ([], 7339), 'op_iter_init': ([], 7339), 'op_iter_next_tree': ([], 7339), 'op_iter_init_tree': ([], 7339), 'move_ssa_defining_stmt_for_defs': ([], 7339), 'gsi_stmt': ([], 7339), 'gimple_ops': ([], 7339), 'gimple_op': ([], 7339), 'gimple_call_lhs': ([], 7339), 'VEC_tree_base_space': ([], 7339), 'VEC_tree_heap_reserve_exact': ([], 7339), 'VEC_tree_heap_safe_grow': ([], 7339), 'gimple_set_op': ([], 7339), 'gimple_call_set_lhs': ([], 7339), 'gimple_assign_set_lhs': ([], 7339), 'update_call_from_tree': ([6], 7332), 'VEC_basic_block_base_space': ([], 7339), 'VEC_basic_block_heap_reserve_exact': ([], 7339), 'VEC_basic_block_heap_safe_grow': ([], 7339), 'bb_seq': ([], 7339), 'gsi_start_bb': ([], 7339), 'ei_end_p': ([], 7339), 'ei_cond': ([], 7339), 'ei_next': ([], 7339), 'cfg_blocks_add': ([], 7339), 'add_control_edge': ([], 7339), 'ssa_prop_init': ([], 7339), 'cfg_blocks_get': ([], 7339), 'end_readonly_imm_use_p': ([], 7339), 'first_readonly_imm_use': ([], 7339), 'VEC_gimple_base_space': ([], 7339), 'VEC_gimple_gc_reserve': ([], 7339), 'VEC_gimple_base_quick_push': ([], 7339), 'VEC_gimple_gc_safe_push': ([], 7339), 'next_readonly_imm_use': ([], 7339), 'add_ssa_edge': ([], 7339), 'simulate_stmt': ([], 7339), 'simulate_block': ([], 7339), 'VEC_gimple_base_pop': ([], 7339), 'process_ssa_edge_worklist': ([], 7339), 'ssa_propagate': ([], 7339), 'stmt_makes_single_store': ([], 7339), 'replace_phi_args_in': ([], 7339), 'gsi_last_bb': ([], 7339), 'gimple_assign_rhs1': ([], 7339), 'has_zero_uses': ([], 7339), 'op_iter_next_use': ([], 7339), 'op_iter_init_use': ([], 7339), 'replace_uses_in': ([], 7339), 'gimple_assign_rhs_code': ([], 7339), 'substitute_and_fold': ([150, 156], 7327)}, "PosixPath('602/cfghooks.bc')": {'ei_end_p': ([], 10338), 'ei_cond': ([], 10338), 'ei_next': ([], 10338), 'verify_flow_info': ([26], 10327), 'dump_bb': ([], 10338), 'redirect_edge_and_branch': ([3], 10333), 'can_remove_branch_p': ([], 10338), 'remove_branch': ([], 10338), 'single_pred_edge': ([], 10338), 'single_succ_edge': ([], 10338), 'redirect_edge_and_branch_force': ([], 10338), 'split_block': ([3], 10333), 'move_block_after': ([3], 10336), 'delete_basic_block': ([3], 10333), 'split_edge': ([30, 41], 10318), 'create_basic_block': ([3], 10333), 'can_merge_blocks_p': ([3], 10336), 'predict_edge': ([3], 10336), 'predicted_by_p': ([], 10338), 'merge_blocks': ([7], 10333), 'ei_safe_edge': ([], 10338), 'VEC_basic_block_base_quick_push': ([], 10338), 'loop_outer': ([], 10338), 'make_forwarder_block': ([], 10338), 'tidy_fallthru_edges': ([6], 10335), 'can_duplicate_block_p': ([], 10338), 'duplicate_block': ([9], 10333), 'block_ends_with_call_p': ([3], 10333), 'block_ends_with_condjump_p': ([3], 10333), 'flow_call_edges_add': ([3], 10333), 'cfg_hook_duplicate_loop_to_header_edge': ([1], 10336), 'extract_cond_bb_edges': ([1], 10336), 'lv_add_condition_to_bb': ([1], 10336)}, "PosixPath('602/decimal64.bc')": {'__dpd64FromNumber': ([1, 49], 12143), 'decDigitsToDPD': ([], 12159), 'decDigitsFromDPD': ([1], 12144), '__dpd64ToNumber': ([5], 12143), '__dpd64ToString': ([], 12159), 'decimal64FromNumber': ([], 12159), 'decimal64ToNumber': ([], 12159)}, "PosixPath('602/pretty-print.bc')": {'pp_base_formatted_text': ([2], 9740), 'pp_base_clear_output_area': ([], 9741), 'pp_base_remaining_character_count_for_line': ([], 9741), 'pp_base_newline': ([2], 9740), 'pp_base_character': ([0], 9740), 'pp_set_verbatim_wrapping_': ([], 9741), 'pp_append_r': ([], 9741), 'pp_base_emit_prefix': ([], 9741), 'pp_base_append_text': ([], 9741), 'pp_wrap_text': ([], 9741), 'pp_maybe_wrap_text': ([], 9741), 'pp_base_string': ([], 9741), 'pp_clear_state': ([], 9741), 'pp_base_format': ([3, 17, 450], 9479), 'pp_base_output_formatted_text': ([], 9741), 'pp_base_format_verbatim': ([], 9741), 'pp_base_flush': ([], 9741), 'pp_set_real_maximum_length': ([], 9741), 'pp_base_set_prefix': ([], 9741), 'pp_construct': ([], 9741), 'pp_base_last_position_in_text': ([], 9741), 'pp_printf': ([], 9741), 'pp_verbatim': ([], 9741), 'decode_utf8_char': ([], 9741), 'identifier_to_locale': ([], 9741), 'pp_base_tree_identifier': ([], 9741)}, "PosixPath('602/insn-modes.bc')": {}, "PosixPath('602/cppdefault.bc')": {}, "PosixPath('602/tree-ssa-dse.bc')": {'gsi_last': ([], 3494), 'VEC_void_p_base_last': ([], 3494), 'bmp_iter_set_init': ([], 3494), 'bmp_iter_set': ([], 3494), 'dse_leave_block': ([], 3494), 'bb_seq': ([], 3494), 'gsi_stmt': ([], 3494), 'gimple_vdef': ([], 3494), 'gimple_ops': ([], 3494), 'gimple_op': ([], 3494), 'gimple_call_fn': ([], 3494), 'gimple_call_fndecl': ([], 3494), 'record_voperand_set': ([], 3494), 'end_imm_use_stmt_p': ([], 3494), 'clear_and_done_ssa_iter': ([], 3494), 'op_iter_next_use': ([], 3494), 'op_iter_init_phiuse': ([], 3494), 'delink_imm_use': ([], 3494), 'link_imm_use_to_list': ([], 3494), 'move_use_after_head': ([2], 3480), 'gimple_def_ops': ([], 3494), 'gimple_use_ops': ([], 3494), 'gimple_vuse': ([], 3494), 'op_iter_init': ([], 3494), 'op_iter_init_use': ([], 3494), 'gimple_vuse_op': ([], 3494), 'link_use_stmts_after': ([], 3494), 'first_imm_use_stmt': ([], 3494), 'end_imm_use_stmt_traverse': ([], 3494), 'gimple_assign_lhs': ([], 3494), 'next_imm_use_stmt': ([], 3494), 'dse_possible_dead_store_p': ([], 3494), 'get_stmt_uid': ([], 3494), 'gimple_assign_rhs1': ([], 3494), 'gimple_assign_rhs_code': ([], 3494), 'dse_optimize_stmt': ([], 3494), 'dse_record_phi': ([], 3494), 'dse_enter_block': ([120], 3492), 'dse_initialize_block_local_data': ([], 3494), 'tree_ssa_dse': ([], 3494)}, "PosixPath('602/lto-section-out.bc')": {'lto_write_stream': ([], 3059), 'append_block': ([], 3059), 'lto_output_1_stream': ([], 3059), 'lto_output_data_stream': ([3], 3056), 'VEC_tree_base_space': ([], 3059), 'VEC_tree_heap_reserve': ([], 3059), 'VEC_tree_base_quick_push': ([], 3059), 'VEC_tree_heap_safe_push': ([], 3059), 'lto_output_decl_index': ([], 3059), 'lto_output_field_decl_index': ([], 3059), 'lto_output_fn_decl_index': ([], 3059), 'lto_output_namespace_decl_index': ([], 3059), 'lto_output_var_decl_index': ([], 3059), 'lto_output_type_decl_index': ([], 3059), 'lto_output_type_ref_index': ([], 3059), 'VEC_lto_out_decl_state_ptr_base_last': ([], 3059), 'lto_get_out_decl_state': ([], 3059), 'lto_create_simple_output_block': ([], 3059), 'lto_destroy_simple_output_block': ([], 3059), 'lto_init_tree_ref_encoder': ([], 3059), 'lto_new_out_decl_state': ([], 3059), 'lto_destroy_tree_ref_encoder': ([], 3059), 'lto_delete_out_decl_state': ([], 3059), 'VEC_lto_out_decl_state_ptr_base_space': ([], 3059), 'VEC_lto_out_decl_state_ptr_heap_reserve': ([], 3059), 'VEC_lto_out_decl_state_ptr_base_quick_push': ([], 3059), 'VEC_lto_out_decl_state_ptr_heap_safe_push': ([], 3059), 'lto_push_out_decl_state': ([], 3059), 'VEC_lto_out_decl_state_ptr_base_pop': ([], 3059), 'lto_pop_out_decl_state': ([], 3059), 'lto_record_function_out_decl_state': ([], 3059)}, "PosixPath('602/graphite-ppl.bc')": {}, "PosixPath('602/fopen_unlocked.bc')": {}, "PosixPath('602/tree-tailcall.bc')": {'single_succ_edge': ([], 9157), 'first_htab_element': ([], 9157), 'first_referenced_var': ([], 9157), 'end_htab_p': ([], 9157), 'end_referenced_vars_p': ([], 9157), 'is_global_var': ([], 9157), 'may_be_aliased': ([], 9157), 'is_call_clobbered': ([], 9157), 'is_call_used': ([], 9157), 'next_htab_element': ([], 9157), 'next_referenced_var': ([], 9157), 'suitable_for_tail_opt_p': ([], 9157), 'suitable_for_tail_call_opt_p': ([], 9157), 'ei_end_p': ([], 9157), 'ei_cond': ([], 9157), 'bb_seq': ([], 9157), 'gsi_last_bb': ([], 9157), 'gsi_stmt': ([], 9157), 'gimple_ops': ([], 9157), 'gimple_op': ([], 9157), 'gimple_call_lhs': ([], 9157), 'gimple_vuse': ([], 9157), 'gimple_references_memory_p': ([], 9157), 'ei_next': ([], 9157), 'gimple_call_fn': ([], 9157), 'gimple_call_fndecl': ([], 9157), 'gimple_call_arg': ([], 9157), 'propagate_through_phis': ([], 9157), 'gsi_start_bb': ([], 9157), 'gimple_assign_lhs': ([], 9157), 'gimple_assign_rhs1': ([], 9157), 'gimple_assign_rhs_code': ([], 9157), 'gimple_assign_cast_p': ([], 9157), 'gimple_assign_rhs2': ([], 9157), 'independent_of_stmt_p': ([0], 9155), 'process_assignment': ([], 9157), 'gimple_return_retval': ([], 9157), 'find_tail_calls': ([0, 1, 2], 9121), 'phi_nodes': ([], 9157), 'var_ann': ([], 9157), 'arg_needs_copy_p': ([], 9157), 'single_pred_edge': ([], 9157), 'decrease_profile': ([], 9157), 'gimple_set_op': ([], 9157), 'gimple_assign_set_lhs': ([], 9157), 'adjust_return_value_with_ops': ([], 9157), 'update_accumulator_with_ops': ([], 9157), 'add_successor_phi_arg': ([], 9157), 'eliminate_tail_call': ([], 9157), 'optimize_tail_call': ([], 9157), 'gimple_return_set_retval': ([], 9157), 'adjust_return_value': ([], 9157), 'add_virtual_phis': ([], 9157), 'tree_optimize_tail_calls_1': ([0, 2], 9130)}, "PosixPath('602/tree-vect-loop.bc')": {'vect_analyze_loop_form': ([], 43295), 'new_loop_vec_info': ([], 43295), 'first_imm_use_on_stmt': ([], 43295), 'next_imm_use_on_stmt': ([], 43295), 'gsi_stmt': ([], 43295), 'bb_seq': ([], 43295), 'gsi_start_bb': ([], 43295), 'VEC_slp_instance_base_iterate': ([], 43295), 'destroy_loop_vec_info': ([10], 43264), 'phi_nodes': ([], 43295), 'VEC_vec_void_p_base_space': ([], 43295), 'VEC_vec_void_p_heap_reserve': ([], 43295), 'VEC_vec_void_p_base_quick_push': ([], 43295), 'VEC_vec_void_p_heap_safe_push': ([], 43295), 'set_vinfo_for_stmt': ([], 43295), 'loop_outer': ([], 43295), 'VEC_gimple_base_space': ([], 43295), 'VEC_gimple_heap_reserve': ([], 43295), 'VEC_gimple_base_quick_push': ([], 43295), 'VEC_gimple_heap_safe_push': ([], 43295), 'VEC_gimple_base_pop': ([], 43295), 'end_readonly_imm_use_p': ([], 43295), 'first_readonly_imm_use': ([], 43295), 'is_pattern_stmt_p': ([], 43295), 'next_readonly_imm_use': ([], 43295), 'gimple_ops': ([], 43295), 'gimple_op': ([], 43295), 'gimple_assign_lhs': ([], 43295), 'gimple_assign_rhs1': ([], 43295), 'gimple_assign_rhs_code': ([], 43295), 'gimple_assign_rhs2': ([], 43295), 'is_loop_header_bb_p': ([], 43295), 'gimple_op_ptr': ([], 43295), 'gimple_assign_rhs1_ptr': ([], 43295), 'gimple_assign_rhs2_ptr': ([], 43295), 'vect_is_simple_reduction': ([], 43295), 'vect_analyze_scalar_cycles_1': ([], 43295), 'gimple_call_fn': ([], 43295), 'gimple_call_return_type': ([], 43295), 'gimple_expr_type': ([], 43295), 'vect_determine_vectorization_factor': ([], 43295), 'vect_model_induction_cost': ([], 43295), 'gsi_after_labels': ([], 43295), 'gimple_set_op': ([], 43295), 'gimple_assign_set_lhs': ([], 43295), 'get_initial_def_for_induction': ([], 43295), 'vectorizable_induction': ([], 43295), 'vect_estimate_min_profitable_iters': ([], 43295), 'vect_analyze_loop_operations': ([2, 22], 43245), 'vect_analyze_loop': ([], 43295), 'get_initial_def_for_reduction': ([], 43295), 'tree_operand_length': ([], 43295), 'vect_model_reduction_cost': ([9], 43293), 'delink_imm_use': ([], 43295), 'link_imm_use_to_list': ([], 43295), 'link_imm_use': ([], 43295), 'set_ssa_use_from_ptr': ([], 43295), 'VEC_gimple_base_iterate': ([], 43295), 'end_imm_use_stmt_p': ([], 43295), 'clear_and_done_ssa_iter': ([], 43295), 'op_iter_next_use': ([], 43295), 'op_iter_init_phiuse': ([], 43295), 'move_use_after_head': ([2], 43281), 'gimple_def_ops': ([], 43295), 'gimple_vdef': ([], 43295), 'gimple_use_ops': ([], 43295), 'gimple_vuse': ([], 43295), 'op_iter_init': ([], 43295), 'op_iter_init_use': ([], 43295), 'gimple_vuse_op': ([], 43295), 'link_use_stmts_after': ([], 43295), 'first_imm_use_stmt': ([], 43295), 'next_imm_use_stmt': ([], 43295), 'vect_create_epilog_for_reduction': ([115, 327], 43177), 'vectorizable_reduction': ([32, 33, 103, 222], 43256), 'vectorizable_live_operation': ([50], 43287), 'op_iter_init_phidef': ([], 43295), 'op_iter_next_def': ([], 43295), 'op_iter_init_def': ([], 43295), 'gimple_debug_bind_reset_value': ([], 43295), 'vect_loop_kill_debug_uses': ([], 43295), 'vect_transform_loop': ([11], 43274)}, "PosixPath('602/tree-vect-patterns.bc')": {'bb_seq': ([], 7616), 'gsi_start_bb': ([], 7616), 'gsi_stmt': ([], 7616), 'gimple_ops': ([], 7616), 'gimple_op': ([], 7616), 'gimple_assign_rhs1': ([], 7616), 'gimple_assign_rhs_code': ([], 7616), 'VEC_vec_void_p_base_space': ([], 7616), 'VEC_vec_void_p_heap_reserve': ([], 7616), 'VEC_vec_void_p_base_quick_push': ([], 7616), 'VEC_vec_void_p_heap_safe_push': ([], 7616), 'set_vinfo_for_stmt': ([], 7616), 'vect_pattern_recog_1': ([], 7616), 'gimple_call_lhs': ([], 7616), 'gimple_call_fn': ([], 7616), 'gimple_call_fndecl': ([], 7616), 'gimple_call_arg': ([], 7616), 'gimple_set_op': ([], 7616), 'gimple_call_set_lhs': ([], 7616), 'vect_recog_pow_pattern': ([0, 6], 7608), 'gimple_call_return_type': ([], 7616), 'gimple_expr_type': ([], 7616), 'gimple_assign_rhs2': ([], 7616), 'widened_name_p': ([], 7616), 'vect_recog_dot_prod_pattern': ([49], 7567), 'vect_recog_widen_sum_pattern': ([], 7616), 'vect_recog_widen_mult_pattern': ([], 7616), 'vect_pattern_recog': ([], 7616)}, "PosixPath('602/reload1.bc')": {'init_elim_table': ([], 58487), 'finish_spills': ([235], 58449), 'eliminate_regs_in_insn': ([161], 58481), 'copy_reloads': ([], 58487), 'find_reload_regs': ([], 58487), 'find_reg': ([], 58487), 'bitmap_initialize_stat': ([], 58487), 'new_insn_chain': ([], 58487), 'bmp_iter_set_init': ([], 58487), 'bmp_iter_set': ([], 58487), 'add_to_hard_reg_set': ([], 58487), 'compute_use_by_pseudos': ([], 58487), 'ei_end_p': ([], 58487), 'ei_cond': ([], 58487), 'ei_next': ([], 58487), 'has_nonexceptional_receiver': ([], 58487), 'scan_paradoxical_subregs': ([], 58487), 'function_invariant_p': ([], 58487), 'alter_reg': ([], 58487), 'maybe_fix_stack_asms': ([], 58487), 'spill_hard_reg': ([], 58487), 'set_initial_elim_offsets': ([], 58487), 'set_offsets_for_label': ([], 58487), 'set_label_offsets': ([23], 58467), 'set_initial_label_offsets': ([], 58487), 'eliminate_regs_1': ([2, 48], 58475), 'recog_memoized': ([], 58487), 'delete_dead_insn': ([], 58487), 'elimination_effects': ([], 58487), 'check_eliminable_occurrences': ([], 58487), 'update_eliminable_offsets': ([], 58487), 'calculate_needs_all_insns': ([], 58487), 'verify_initial_elim_offsets': ([], 58487), 'update_eliminables': ([], 58487), 'count_pseudo': ([], 58487), 'order_regs_for_reload': ([], 58487), 'reloads_unique_chain_p': ([], 58487), 'VEC_rtx_p_base_space': ([], 58487), 'VEC_rtx_p_heap_reserve': ([], 58487), 'VEC_rtx_p_base_quick_push': ([], 58487), 'VEC_rtx_p_heap_safe_push': ([], 58487), 'substitute': ([], 58487), 'VEC_rtx_p_base_pop': ([], 58487), 'gen_reload_chain_without_interm_reg_p': ([], 58487), 'reloads_conflict': ([], 58487), 'count_spilled_pseudo': ([], 58487), 'reload_reg_class_lower': ([], 58487), 'select_reload_regs': ([], 58487), 'delete_caller_save_insns': ([], 58487), 'mark_reload_reg_in_use': ([6, 26], 58432), 'choose_reload_regs_init': ([], 58487), 'reload_reg_free_for_value_p': ([28], 58468), 'free_for_value_p': ([], 58487), 'reload_reg_free_p': ([], 58487), 'set_reload_reg': ([3], 58485), 'allocate_reload_reg': ([], 58487), 'failed_reload': ([], 58487), 'clear_reload_reg_in_use': ([], 58487), 'choose_reload_regs': ([], 58487), 'merge_assigned_reloads': ([], 58487), 'delete_address_reloads_1': ([], 58487), 'delete_address_reloads': ([], 58487), 'delete_output_reload': ([29], 58474), 'inc_for_reload': ([], 58487), 'conflicts_with_override': ([], 58487), 'reload_adjust_reg_for_temp': ([], 58487), 'emit_insn_if_valid_for_reload': ([], 58487), 'gen_reload': ([], 58487), 'emit_input_reload_insns': ([], 58487), 'do_input_reload': ([], 58487), 'forget_old_reloads_1': ([], 58487), 'emit_output_reload_insns': ([], 58487), 'do_output_reload': ([], 58487), 'reload_reg_reaches_end_p': ([], 58487), 'inherit_piecemeal_p': ([], 58487), 'emit_reload_insns': ([14, 320], 58465), 'forget_marked_reloads': ([], 58487), 'reload_as_needed': ([], 58487), 'replace_pseudos_in': ([], 58487), 'fixup_abnormal_edges': ([], 58487), 'mark_not_eliminable': ([], 58487), 'reload': ([247, 1647], 58479), 'elimination_target_reg_p': ([], 58487), 'deallocate_reload_reg': ([], 58487)}, "PosixPath('602/graphite-dependences.bc')": {}, "PosixPath('602/graphite-clast-to-gimple.bc')": {}, "PosixPath('602/intl.bc')": {}, "PosixPath('602/tree-if-conv.bc')": {'VEC_int_base_quick_push': ([], 7750), 'loop_outer': ([], 7750), 'VEC_int_base_iterate': ([], 7750), 'fel_next': ([], 7750), 'fel_init': ([], 7750), 'ei_end_p': ([], 7750), 'ei_cond': ([], 7750), 'ei_next': ([], 7750), 'pred_blocks_visited_p': ([], 7750), 'get_loop_body_in_if_conv_order': ([], 7750), 'if_convertible_bb_p': ([], 7750), 'bb_seq': ([], 7750), 'gsi_start_bb': ([], 7750), 'gsi_stmt': ([], 7750), 'gimple_ops': ([], 7750), 'gimple_op': ([], 7750), 'gimple_assign_lhs': ([], 7750), 'bb_with_exit_edge_p': ([], 7750), 'if_convertible_gimple_assign_stmt_p': ([], 7750), 'if_convertible_stmt_p': ([], 7750), 'end_readonly_imm_use_p': ([], 7750), 'first_readonly_imm_use': ([], 7750), 'next_readonly_imm_use': ([], 7750), 'if_convertible_phi_p': ([], 7750), 'if_convertible_loop_p': ([], 7750), 'gimple_set_op': ([], 7750), 'gimple_debug_bind_reset_value': ([], 7750), 'gimple_cond_lhs': ([], 7750), 'gimple_cond_rhs': ([], 7750), 'gimple_assign_set_lhs': ([], 7750), 'ifc_temp_var': ([], 7750), 'add_to_predicate_list': ([], 7750), 'add_to_dst_predicate_list': ([], 7750), 'tree_if_convert_cond_stmt': ([], 7750), 'tree_if_convert_stmt': ([], 7750), 'single_succ_edge': ([], 7750), 'gsi_after_labels': ([], 7750), 'find_phi_replacement_condition': ([], 7750), 'replace_phi_with_cond_gimple_assign_stmt': ([], 7750), 'set_phi_nodes': ([], 7750), 'process_phi_nodes': ([], 7750), 'ei_safe_edge': ([], 7750), 'gsi_last_bb': ([], 7750), 'set_bb_seq': ([], 7750), 'combine_blocks': ([], 7750), 'clean_predicate_lists': ([], 7750), 'tree_if_conversion': ([], 7750), 'main_tree_if_conversion': ([], 7750)}, "PosixPath('602/value-prof.bc')": {'gimple_mod_subtract_transform': ([5], 16194), 'gimple_divmod_fixed_value_transform': ([], 16201), 'gimple_stringops_transform': ([], 16201), 'gimple_ic_transform': ([], 16201), 'gimple_histogram_value': ([], 16201), 'set_histogram_value': ([1], 16195), 'gimple_remove_histogram_value': ([], 16201), 'gimple_histogram_value_of_type': ([], 16201), 'dump_histogram_value': ([], 16201), 'dump_histograms_for_stmt': ([], 16201), 'gimple_remove_stmt_histograms': ([], 16201), 'gimple_alloc_histogram_value': ([], 16201), 'gimple_duplicate_stmt_histograms': ([], 16201), 'gimple_move_stmt_histograms': ([], 16201), 'bb_seq': ([], 16201), 'gsi_start_bb': ([], 16201), 'gsi_stmt': ([], 16201), 'verify_histograms': ([], 16201), 'stringop_block_profile': ([], 16201), 'gimple_ops': ([], 16201), 'gimple_op': ([], 16201), 'gimple_assign_lhs': ([], 16201), 'gimple_assign_rhs1': ([], 16201), 'gimple_assign_rhs_code': ([], 16201), 'gimple_assign_rhs2': ([], 16201), 'VEC_histogram_value_base_space': ([], 16201), 'VEC_histogram_value_heap_reserve': ([], 16201), 'VEC_histogram_value_base_quick_push': ([], 16201), 'gimple_divmod_values_to_profile': ([], 16201), 'gimple_call_fn': ([], 16201), 'gimple_call_fndecl': ([], 16201), 'gimple_call_arg': ([], 16201), 'VEC_histogram_value_heap_safe_push': ([], 16201), 'gimple_stringops_values_to_profile': ([], 16201), 'gimple_indirect_call_to_profile': ([], 16201), 'gimple_values_to_profile': ([], 16201), 'VEC_histogram_value_base_iterate': ([], 16201), 'gimple_find_values_to_profile': ([], 16201), 'find_values_to_profile': ([], 16201), 'check_counter': ([], 16201), 'gimple_mod_subtract': ([], 16201), 'gimple_divmod_fixed_value': ([], 16201), 'gimple_mod_pow2': ([], 16201), 'gimple_mod_pow2_value_transform': ([], 16201), 'gimple_set_op': ([], 16201), 'gimple_call_set_arg': ([], 16201), 'gimple_stringop_fixed_value': ([], 16201), 'init_pid_map': ([], 16201), 'find_func_by_pid': ([], 16201), 'gimple_call_set_fndecl': ([], 16201), 'gimple_ic': ([], 16201), 'gimple_value_profile_transformations': ([0, 95], 16087)}, "PosixPath('602/stmt.bc')": {'label_rtx': ([0], 22602), 'expand_nl_goto_receiver': ([], 22607), 'expand_label': ([], 22607), 'parse_output_constraint': ([], 22607), 'parse_input_constraint': ([], 22607), 'decl_overlaps_hard_reg_set_p': ([5], 22603), 'gimple_ops': ([], 22607), 'gimple_op': ([], 22607), 'gimple_asm_output_op': ([], 22607), 'gimple_asm_input_op': ([], 22607), 'gimple_asm_clobber_op': ([], 22607), 'gimple_asm_label_op': ([], 22607), 'expand_asm_loc': ([], 22607), 'check_operand_nalternatives': ([], 22607), 'check_unique_operand_names': ([], 22607), 'resolve_operand_name_1': ([], 22607), 'resolve_asm_operand_names': ([], 22607), 'tree_conflicts_with_clobbers_p': ([], 22607), 'expand_asm_operands': ([9, 17, 228, 259, 367], 22448), 'expand_asm_stmt': ([0], 22602), 'expand_expr_stmt': ([], 22607), 'tree_operand_length': ([], 22607), 'warn_if_unused_value': ([], 22607), 'expand_value_return': ([], 22607), 'expand_return': ([20], 22588), 'expand_decl': ([], 22607), 'gimple_switch_index': ([], 22607), 'gimple_switch_label': ([], 22607), 'add_case_node': ([], 22607), 'case_bit_test_cmp': ([], 22607), 'emit_case_bit_tests': ([], 22607), 'estimate_case_costs': ([], 22607), 'balance_case_nodes': ([19], 22605), 'node_has_low_bound': ([], 22607), 'node_has_high_bound': ([], 22607), 'emit_case_nodes': ([], 22607), 'expand_case': ([], 22607)}, "PosixPath('602/domwalk.bc')": {'VEC_void_p_base_pop': ([], 705), 'VEC_void_p_base_space': ([], 705), 'VEC_void_p_heap_reserve': ([], 705), 'VEC_void_p_base_quick_push': ([], 705), 'VEC_void_p_heap_safe_push': ([], 705), 'walk_dominator_tree': ([], 705), 'init_walk_dominator_tree': ([], 705), 'fini_walk_dominator_tree': ([], 705)}, "PosixPath('602/alias.bc')": {'alias_set_subset_of': ([], 16613), 'alias_sets_conflict_p': ([], 16613), 'walk_mems_2': ([], 16613), 'get_deref_alias_set_1': ([], 16613), 'VEC_alias_set_entry_base_space': ([], 16613), 'VEC_alias_set_entry_gc_reserve': ([], 16613), 'VEC_alias_set_entry_base_quick_push': ([], 16613), 'VEC_alias_set_entry_gc_safe_push': ([], 16613), 'new_alias_set': ([], 16613), 'VEC_tree_base_iterate': ([], 16613), 'insert_subset_children': ([], 16613), 'record_alias_subset': ([], 16613), 'get_alias_set': ([], 16613), 'record_component_aliases': ([], 16613), 'component_uses_parent_alias_set': ([], 16613), 'get_deref_alias_set': ([], 16613), 'canon_rtx': ([], 16613), 'find_base_term': ([], 16613), 'get_addr': ([], 16613), 'nonoverlapping_component_refs_p': ([], 16613), 'nonoverlapping_memrefs_p': ([25, 39, 40, 53], 16553), 'base_alias_check': ([11], 16611), 'addr_side_effect_eval': ([], 16613), 'rtx_equal_for_memref_p': ([], 16613), 'memrefs_conflict_p': ([0, 1], 16585), 'mems_in_disjoint_alias_sets_p': ([], 16613), 'fixed_scalar_and_varying_struct_p': ([], 16613), 'ao_ref_from_mem': ([], 16613), 'rtx_refs_may_alias_p': ([], 16613), 'true_dependence': ([], 16613), 'canon_true_dependence': ([], 16613), 'write_dependence_p': ([], 16613), 'init_alias_target': ([], 16613), 'memory_modified_in_insn_p': ([], 16613), 'VEC_rtx_base_space': ([], 16613), 'VEC_rtx_gc_reserve_exact': ([], 16613), 'VEC_rtx_gc_safe_grow': ([], 16613), 'VEC_rtx_gc_safe_grow_cleared': ([], 16613), 'find_base_value': ([], 16613), 'record_set': ([], 16613), 'init_alias_analysis': ([], 16613), 'gt_pch_na_reg_known_value': ([], 16613), 'gt_ggc_ma_reg_known_value': ([], 16613)}, "PosixPath('602/tree-data-ref.bc')": {'split_constant_offset_1': ([0, 5], 43510), 'initialize_data_dependence_relation': ([], 43530), 'compute_self_dependence': ([], 43530), 'build_rdg': ([], 43530), 'subscript_dependence_tester_1': ([25], 43418), 'VEC_data_reference_p_base_iterate': ([], 43530), 'dump_data_references': ([], 43530), 'VEC_ddr_p_base_iterate': ([], 43530), 'VEC_tree_base_iterate': ([], 43530), 'dump_conflict_function': ([], 43530), 'VEC_loop_p_base_iterate': ([], 43530), 'dump_data_dependence_relation': ([], 43530), 'dump_data_dependence_relations': ([], 43530), 'VEC_lambda_vector_base_iterate': ([], 43530), 'print_dir_vectors': ([], 43530), 'print_dist_vectors': ([], 43530), 'dump_dist_dir_vectors': ([], 43530), 'dump_ddrs': ([], 43530), 'gimple_ops': ([], 43530), 'gimple_op': ([], 43530), 'gimple_assign_rhs1': ([], 43530), 'gimple_assign_rhs_code': ([], 43530), 'gimple_assign_rhs2': ([], 43530), 'split_constant_offset': ([], 43530), 'canonicalize_base_object_address': ([], 43530), 'dr_analyze_innermost': ([], 43530), 'free_data_ref': ([], 43530), 'VEC_tree_base_space': ([], 43530), 'VEC_tree_heap_reserve': ([], 43530), 'VEC_tree_base_quick_push': ([], 43530), 'VEC_tree_heap_safe_push': ([], 43530), 'dr_analyze_indices': ([], 43530), 'dr_analyze_alias': ([], 43530), 'create_data_ref': ([], 43530), 'VEC_tree_base_pop': ([], 43530), 'disjoint_objects_p': ([], 43530), 'dr_may_alias_p': ([35], 43527), 'estimated_loop_iterations_int': ([], 43530), 'VEC_subscript_p_base_iterate': ([], 43530), 'free_conflict_function': ([], 43530), 'affine_fn_cst': ([], 43530), 'conflict_fn': ([], 43530), 'VEC_lambda_vector_base_space': ([], 43530), 'VEC_lambda_vector_heap_reserve': ([], 43530), 'VEC_lambda_vector_base_quick_push': ([], 43530), 'VEC_lambda_vector_heap_safe_push': ([], 43530), 'save_dist_v': ([], 43530), 'save_dir_v': ([], 43530), 'object_address_invariant_in_loop_p': ([], 43530), 'VEC_subscript_p_base_space': ([], 43530), 'VEC_subscript_p_heap_reserve': ([], 43530), 'VEC_subscript_p_base_quick_push': ([], 43530), 'VEC_subscript_p_heap_safe_push': ([], 43530), 'VEC_ddr_p_base_space': ([], 43530), 'VEC_ddr_p_heap_reserve': ([], 43530), 'VEC_ddr_p_base_quick_push': ([], 43530), 'VEC_ddr_p_heap_safe_push': ([], 43530), 'access_functions_are_affine_or_constant_p': ([], 43530), 'analyze_ziv_subscript': ([], 43530), 'siv_subscript_p': ([], 43530), 'evolution_function_is_affine_in_loop': ([], 43530), 'get_chrec_loop': ([], 43530), 'analyze_siv_subscript_cst_affine': ([], 43530), 'initialize_matrix_A': ([0], 43525), 'affine_fn_univar': ([], 43530), 'compute_overlap_steps_for_affine_univar': ([], 43530), 'affine_fn_op': ([], 43530), 'compute_overlap_steps_for_affine_1_2': ([2, 7, 92], 43507), 'analyze_subscript_affine_affine': ([2], 43475), 'build_polynomial_chrec': ([], 43530), 'can_use_analyze_subscript_affine_affine': ([], 43530), 'analyze_siv_subscript': ([], 43530), 'estimated_loop_iterations_tree': ([], 43530), 'analyze_miv_subscript': ([], 43530), 'analyze_overlapping_iterations': ([], 43530), 'free_subscripts': ([], 43530), 'finalize_ddr_dependent': ([], 43530), 'common_affine_function': ([0], 43528), 'affine_function_constant_p': ([], 43530), 'compute_subscript_distance': ([], 43530), 'same_access_functions': ([], 43530), 'constant_access_functions': ([], 43530), 'add_distance_for_zero_overlaps': ([], 43530), 'add_multivariate_self_dist': ([], 43530), 'add_other_self_distances': ([], 43530), 'build_classic_dist_vector_1': ([], 43530), 'build_classic_dist_vector': ([], 43530), 'build_classic_dir_vector': ([], 43530), 'subscript_dependence_tester': ([], 43530), 'omega_init_eqn_zero': ([], 43530), 'omega_add_zero_eq': ([], 43530), 'init_omega_eq_with_af': ([2], 43494), 'omega_setup_subscript': ([], 43530), 'omega_add_zero_geq': ([], 43530), 'omega_copy_eqn': ([], 43530), 'omega_copy_problem': ([], 43530), 'omega_free_problem': ([], 43530), 'omega_extract_distance_vectors': ([], 43530), 'init_omega_for_ddr_1': ([100], 43521), 'init_omega_for_ddr': ([], 43530), 'ddr_consistent_p': ([], 43530), 'compute_affine_dependence': ([], 43530), 'compute_all_dependences': ([66], 43529), 'gimple_vuse': ([], 43530), 'gimple_op_ptr': ([], 43530), 'gimple_assign_lhs_ptr': ([], 43530), 'gimple_assign_rhs1_ptr': ([], 43530), 'VEC_data_ref_loc_base_space': ([], 43530), 'VEC_data_ref_loc_heap_reserve': ([], 43530), 'VEC_data_ref_loc_heap_safe_push': ([], 43530), 'gimple_call_arg_ptr': ([], 43530), 'get_references_in_stmt': ([0], 43528), 'dr_address_invariant_p': ([], 43530), 'VEC_data_reference_p_base_space': ([], 43530), 'VEC_data_reference_p_heap_reserve': ([], 43530), 'VEC_data_reference_p_base_quick_push': ([], 43530), 'VEC_data_reference_p_heap_safe_push': ([], 43530), 'find_data_references_in_stmt': ([], 43530), 'graphite_find_data_references_in_stmt': ([0], 43517), 'bb_seq': ([], 43530), 'gsi_start_bb': ([], 43530), 'gsi_stmt': ([], 43530), 'find_data_references_in_bb': ([], 43530), 'find_data_references_in_loop': ([], 43530), 'VEC_loop_p_base_space': ([], 43530), 'VEC_loop_p_heap_reserve': ([], 43530), 'VEC_loop_p_base_quick_push': ([], 43530), 'VEC_loop_p_heap_safe_push': ([], 43530), 'find_loop_nest_1': ([], 43530), 'find_loop_nest': ([], 43530), 'compute_data_dependences_for_loop': ([], 43530), 'VEC_int_base_quick_push': ([], 43530), 'loop_outer': ([], 43530), 'VEC_int_base_iterate': ([], 43530), 'fel_next': ([], 43530), 'fel_init': ([], 43530), 'free_dependence_relation': ([], 43530), 'free_dependence_relations': ([], 43530), 'free_data_refs': ([], 43530), 'analyze_all_data_dependences': ([], 43530), 'tree_check_data_deps': ([], 43530), 'dump_rdg_vertex': ([], 43530), 'dump_rdg_component': ([0], 43526), 'dump_rdg': ([], 43530), 'rdg_vertex_for_stmt': ([], 43530), 'VEC_gimple_base_iterate': ([], 43530), 'create_rdg_vertices': ([], 43530), 'VEC_gimple_base_space': ([], 43530), 'VEC_gimple_heap_reserve': ([], 43530), 'VEC_gimple_base_quick_push': ([], 43530), 'VEC_gimple_heap_safe_push': ([], 43530), 'stmts_from_loop': ([], 43530), 'ddr_dependence_level': ([], 43530), 'create_rdg_edge_for_ddr': ([], 43530), 'clear_and_done_ssa_iter': ([], 43530), 'op_iter_init_phidef': ([], 43530), 'gimple_def_ops': ([], 43530), 'gimple_vdef': ([], 43530), 'op_iter_init': ([], 43530), 'op_iter_next_def': ([], 43530), 'op_iter_init_def': ([], 43530), 'end_readonly_imm_use_p': ([], 43530), 'first_readonly_imm_use': ([], 43530), 'next_readonly_imm_use': ([], 43530), 'create_rdg_edges_for_scalar': ([], 43530), 'create_rdg_edges': ([], 43530), 'free_rdg': ([], 43530), 'stores_from_loop': ([12], 43519), 'rdg_defs_used_in_other_loops_p': ([], 43530), 'ref_base_address': ([], 43530), 'have_similar_memory_accesses': ([6, 7], 43507), 'VEC_gimple_base_ordered_remove': ([], 43530), 'ref_base_address_1': ([], 43530), 'remove_similar_memory_refs': ([], 43530), 'access_matrix_get_index_for_parameter': ([], 43530)}, "PosixPath('602/emit-rtl.bc')": {'set_mem_attributes_minus_bitpos': ([6, 8], 34389), 'set_mem_attrs_for_spill': ([9], 34411), 'init_virtual_regs': ([], 34427), 'gen_rtx_CONST_INT': ([], 34427), 'lookup_const_double': ([], 34427), 'const_double_from_real_value': ([], 34427), 'lookup_const_fixed': ([], 34427), 'const_fixed_from_fixed_value': ([], 34427), 'immed_double_const': ([], 34427), 'gen_rtx_REG': ([], 34427), 'gen_const_mem': ([], 34427), 'get_mem_attrs': ([12], 34425), 'set_mem_alias_set': ([6], 34409), 'gen_frame_mem': ([], 34427), 'gen_tmp_stack_mem': ([], 34427), 'validate_subreg': ([], 34427), 'gen_rtvec': ([], 34427), 'gen_rtvec_v': ([], 34427), 'gen_reg_rtx': ([], 34427), 'get_reg_attrs': ([2], 34424), 'update_reg_offset': ([0], 34420), 'gen_rtx_REG_offset': ([], 34427), 'gen_reg_rtx_offset': ([], 34427), 'adjust_reg_mode': ([], 34427), 'mark_reg_pointer': ([], 34427), 'set_reg_attrs_from_value': ([2], 34420), 'set_reg_attrs_for_parm': ([2], 34422), 'subreg_lowpart_p': ([], 34427), 'set_reg_attrs_for_decl_rtl': ([1, 2, 18], 34406), 'mark_user_reg': ([0], 34419), 'maybe_set_first_label_num': ([], 34427), 'gen_lowpart_common': ([3], 34420), 'gen_highpart': ([], 34427), 'change_address_1': ([], 34427), 'adjust_address_1': ([9], 34396), 'operand_subword': ([], 34427), 'get_mem_align_offset': ([], 34427), 'set_mem_addr_space': ([9], 34386), 'set_mem_align': ([], 34427), 'set_mem_expr': ([6], 34413), 'set_mem_offset': ([6], 34413), 'set_mem_size': ([], 34427), 'change_address': ([], 34427), 'offset_address': ([9], 34409), 'widen_memory_access': ([], 34427), 'get_spill_slot_decl': ([], 34427), 'set_new_first_and_last_insn': ([], 34427), 'reset_used_flags': ([], 34427), 'set_used_flags': ([], 34427), 'set_used_decls': ([], 34427), 'copy_rtx_if_shared_1': ([0, 8], 34411), 'copy_rtx_if_shared': ([], 34427), 'unshare_all_rtl_in_chain': ([], 34427), 'unshare_all_rtl_1': ([], 34427), 'unshare_all_rtl_again': ([], 34427), 'unshare_all_rtl': ([], 34427), 'verify_rtx_sharing': ([0], 34420), 'verify_rtl_sharing': ([], 34427), 'make_safe_from': ([], 34427), 'get_last_insn_anywhere': ([], 34427), 'next_insn': ([], 34427), 'get_first_nonnote_insn': ([], 34427), 'previous_insn': ([], 34427), 'get_last_nonnote_insn': ([], 34427), 'next_nonnote_insn_bb': ([], 34427), 'prev_nonnote_insn_bb': ([], 34427), 'last_call_insn': ([], 34427), 'active_insn_p': ([], 34427), 'skip_consecutive_labels': ([], 34427), 'mark_label_nuses': ([], 34427), 'emit_insn_after_1': ([9], 34420), 'make_insn_raw': ([], 34427), 'add_insn_after': ([], 34427), 'emit_insn_after_setloc': ([], 34427), 'try_split': ([], 34427), 'make_debug_insn_raw': ([], 34427), 'make_jump_insn_raw': ([], 34427), 'add_insn': ([], 34427), 'add_insn_before': ([0], 34425), 'set_insn_deleted': ([], 34427), 'remove_insn': ([], 34427), 'add_function_usage_to': ([], 34427), 'reorder_insns_nobb': ([2], 34423), 'reorder_insns': ([7], 34421), 'make_call_insn_raw': ([], 34427), 'emit_note_before': ([], 34427), 'emit_note_after': ([], 34427), 'emit_insn_after': ([], 34427), 'emit_jump_insn_after_setloc': ([], 34427), 'emit_jump_insn_after': ([], 34427), 'emit_call_insn_after_setloc': ([], 34427), 'emit_call_insn_after': ([], 34427), 'emit_debug_insn_after_setloc': ([], 34427), 'emit_debug_insn_after': ([], 34427), 'emit_insn_before_setloc': ([], 34427), 'emit_insn_before': ([], 34427), 'emit_jump_insn_before_setloc': ([], 34427), 'emit_jump_insn_before': ([], 34427), 'emit_call_insn_before_setloc': ([], 34427), 'emit_call_insn_before': ([], 34427), 'emit_debug_insn_before_setloc': ([], 34427), 'emit_debug_insn_before': ([], 34427), 'emit_insn': ([], 34427), 'emit_debug_insn': ([], 34427), 'emit_jump_insn': ([], 34427), 'emit_call_insn': ([], 34427), 'emit_label': ([], 34427), 'emit_barrier': ([], 34427), 'emit_note_copy': ([], 34427), 'emit_note': ([], 34427), 'start_sequence': ([], 34427), 'end_sequence': ([], 34427), 'gen_clobber': ([], 34427), 'gen_use': ([], 34427), 'classify_insn': ([], 34427), 'emit': ([], 34427), 'push_topmost_sequence': ([], 34427), 'pop_topmost_sequence': ([], 34427), 'copy_insn_1': ([], 34427), 'init_emit': ([], 34427), 'gen_rtx_CONST_VECTOR': ([], 34427), 'init_emit_regs': ([], 34427), 'gen_const_vector': ([], 34427), 'reg_attrs_htab_eq': ([], 34427), 'reg_attrs_htab_hash': ([], 34427), 'mem_attrs_htab_eq': ([], 34427), 'mem_attrs_htab_hash': ([], 34427), 'const_double_htab_eq': ([], 34427), 'const_double_htab_hash': ([], 34427), 'init_emit_once': ([], 34427), 'emit_copy_of_insn_after': ([], 34427)}, "PosixPath('602/haifa-sched.bc')": {'remove_notes': ([], 36464), 'restore_other_notes': ([6], 36451), 'schedule_block': ([318], 36425), 'schedule_insn': ([169], 36460), 'haifa_sched_init': ([], 36464), 'sd_iterator_cond': ([], 36464), 'init_h_i_d': ([], 36464), 'create_check_block_twin': ([], 36464), 'may_trap_exp': ([], 36464), 'haifa_classify_rtx': ([], 36464), 'recog_memoized': ([], 36464), 'insn_cost': ([], 36464), 'dep_cost_1': ([], 36464), 'increase_insn_priority': ([], 36464), 'ready_lastpos': ([], 36464), 'ready_element': ([], 36464), 'dying_use_p': ([], 36464), 'setup_insn_reg_pressure_info': ([], 36464), 'sd_iterator_start': ([], 36464), 'dep_list_size': ([], 36464), 'rank_for_schedule': ([0, 54], 36437), 'swap_sort': ([], 36464), 'ready_sort': ([], 36464), 'setup_ref_regs': ([], 36464), 'bmp_iter_set_init': ([], 36464), 'bmp_iter_set': ([], 36464), 'mark_regno_birth_or_death': ([], 36464), 'initiate_reg_pressure_info': ([], 36464), 'ei_end_p': ([], 36464), 'ei_cond': ([], 36464), 'ei_next': ([], 36464), 'bb_has_eh_pred': ([], 36464), 'initiate_bb_reg_pressure_info': ([], 36464), 'save_reg_pressure': ([], 36464), 'update_register_pressure': ([], 36464), 'restore_reg_pressure': ([], 36464), 'setup_insn_max_reg_pressure': ([], 36464), 'sched_setup_bb_reg_pressure_info': ([], 36464), 'concat_note_lists': ([], 36464), 'get_ebb_head_tail': ([], 36464), 'no_real_insns_p': ([], 36464), 'bb_note': ([0], 36459), 'reemit_notes': ([], 36464), 'max_issue': ([], 36464), 'dump_new_block_header': ([], 36464), 'ready_remove_first': ([], 36464), 'ready_remove': ([], 36464), 'queue_insn': ([], 36464), 'restore_bb_notes': ([], 36464), 'ready_add': ([], 36464), 'queue_to_ready': ([], 36464), 'debug_ready_list': ([], 36464), 'fix_jump_move': ([], 36464), 'move_succs': ([], 36464), 'move_block_after_check': ([12], 36462), 'move_insn': ([28, 34], 36455), 'update_reg_and_insn_max_reg_pressure': ([], 36464), 'haifa_speculate_insn': ([], 36464), 'haifa_change_pattern': ([], 36464), 'queue_remove': ([], 36464), 'change_queue_index': ([], 36464), 'fix_tick_ready': ([], 36464), 'try_ready': ([70], 36458), 'bitmap_initialize_stat': ([], 36464), 'add_jump_dependencies': ([], 36464), 'fix_recovery_deps': ([11], 36421), 'print_curr_reg_pressure': ([], 36464), 'ok_for_early_queue_removal': ([], 36464), 'early_queue_to_ready': ([], 36464), 'choose_ready': ([], 36464), 'find_fallthru_edge': ([], 36464), 'VEC_basic_block_base_iterate': ([], 36464), 'init_insns_in_bb': ([], 36464), 'VEC_rtx_base_iterate': ([], 36464), 'sched_scan': ([1, 5], 36458), 'luids_init_insn': ([], 36464), 'VEC_int_base_space': ([], 36464), 'VEC_int_heap_reserve_exact': ([], 36464), 'VEC_int_heap_safe_grow': ([], 36464), 'VEC_int_heap_safe_grow_cleared': ([], 36464), 'luids_extend_insn': ([], 36464), 'sched_init_luids': ([], 36464), 'VEC_haifa_insn_data_def_base_space': ([], 36464), 'VEC_haifa_insn_data_def_heap_reserve_exact': ([], 36464), 'VEC_haifa_insn_data_def_heap_safe_grow': ([], 36464), 'VEC_haifa_insn_data_def_heap_safe_grow_cleared': ([], 36464), 'extend_h_i_d': ([0], 36462), 'haifa_init_h_i_d': ([], 36464), 'haifa_init_insn': ([], 36464), 'sched_extend_bb': ([], 36464), 'init_before_recovery': ([], 36464), 'sched_create_recovery_block': ([], 36464), 'sched_create_recovery_edges': ([], 36464), 'process_insn_forw_deps_be_in_spec': ([], 36464), 'contributes_to_priority_p': ([], 36464), 'VEC_rtx_base_space': ([], 36464), 'VEC_rtx_heap_reserve': ([], 36464), 'VEC_rtx_base_quick_push': ([], 36464), 'VEC_rtx_heap_safe_push': ([], 36464), 'clear_priorities': ([], 36464), 'priority': ([], 36464), 'calc_priorities': ([], 36464), 'begin_speculative_block': ([], 36464), 'add_to_speculative_block': ([], 36464), 'generate_recovery_code': ([], 36464), 'fix_inter_tick': ([], 36464), 'set_priorities': ([], 36464), 'sched_init': ([], 36464), 'VEC_basic_block_base_quick_push': ([], 36464), 'sched_split_block_1': ([], 36464), 'haifa_finish_h_i_d': ([], 36464), 'haifa_sched_finish': ([], 36464), 'sched_finish_ready_list': ([], 36464), 'unlink_bb_notes': ([3], 36459)}, "PosixPath('602/graph.bc')": {'node_data': ([], 2967), 'ei_end_p': ([], 2967), 'ei_cond': ([], 2967), 'ei_next': ([], 2967), 'print_rtl_graph_with_bb': ([], 2967), 'clean_graph_dump_file': ([], 2967), 'finish_graph_dump_file': ([], 2967)}, "PosixPath('602/tree-nrv.bc')": {'bb_seq': ([], 2759), 'gsi_start_bb': ([], 2759), 'gsi_stmt': ([], 2759), 'gimple_ops': ([], 2759), 'gimple_op': ([], 2759), 'gimple_call_lhs': ([], 2759), 'gimple_call_fn': ([], 2759), 'gimple_call_fndecl': ([], 2759), 'is_global_var': ([], 2759), 'may_be_aliased': ([], 2759), 'is_call_clobbered': ([], 2759), 'is_call_used': ([], 2759), 'dest_safe_for_nrv_p': ([], 2759), 'execute_return_slot_opt': ([0], 2757), 'gimple_return_retval': ([], 2759), 'gimple_has_lhs': ([], 2759), 'gimple_assign_lhs': ([], 2759), 'var_ann': ([], 2759), 'finalize_nrv_r': ([], 2759), 'tree_nrv': ([2, 26, 46, 193], 2697)}, "PosixPath('602/sha1.bc')": {'sha1_init_ctx': ([], 6189), 'sha1_read_ctx': ([], 6189), 'sha1_process_block': ([7, 14, 18, 32, 174], 6050), 'sha1_finish_ctx': ([], 6189), 'sha1_process_bytes': ([], 6189), 'sha1_stream': ([], 6189), 'sha1_buffer': ([], 6189)}, "PosixPath('602/final.bc')": {'rest_of_handle_final': ([21], 20498), 'asm_insn_count': ([], 20504), 'get_attr_length_1': ([], 20504), 'label_to_alignment': ([], 20504), 'label_to_max_skip': ([], 20504), 'align_fuzz': ([], 20504), 'insn_current_reference_address': ([], 20504), 'ei_end_p': ([], 20504), 'ei_cond': ([], 20504), 'ei_next': ([], 20504), 'compute_alignments': ([23, 40], 20469), 'final_addr_vec_align': ([], 20504), 'VEC_int_base_space': ([], 20504), 'VEC_int_heap_reserve_exact': ([], 20504), 'VEC_int_heap_safe_grow': ([], 20504), 'shorten_branches': ([35, 91], 20498), 'add_debug_prefix_map': ([], 20504), 'remap_debug_filename': ([], 20504), 'final_start_function': ([], 20504), 'final_end_function': ([], 20504), 'asm_fprintf': ([161], 20496), 'profile_function': ([], 20504), 'profile_after_prologue': ([], 20504), 'output_alternate_entry_point': ([], 20504), 'get_mem_expr_from_op': ([5], 20486), 'output_asm_operand_names': ([], 20504), 'output_asm_name': ([], 20504), 'output_asm_label': ([1], 20499), 'alter_subreg': ([], 20504), 'walk_alter_subreg': ([], 20504), 'output_address': ([], 20504), 'output_addr_const': ([0, 11], 20499), 'mark_symbol_ref_as_used': ([], 20504), 'output_operand': ([], 20504), 'output_asm_insn': ([1], 20485), 'recog_memoized': ([], 20504), 'cleanup_subreg_operands': ([], 20504), 'get_insn_template': ([], 20504), 'call_from_call_insn': ([], 20504), 'final_scan_insn': ([], 20504), 'final': ([], 20504), 'split_double': ([], 20504), 'leaf_function_p': ([], 20504), 'final_forward_branch_p': ([], 20504), 'debug_flush_symbol_queue': ([], 20504), 'debug_queue_symbol': ([], 20504), 'rest_of_clean_state': ([], 20504)}, "PosixPath('602/getruntime.bc')": {'get_run_time': ([], 111)}, "PosixPath('602/tree-ssa-alias.bc')": {'ptr_deref_may_alias_global_p': ([], 14114), 'first_htab_element': ([], 14114), 'first_referenced_var': ([], 14114), 'end_htab_p': ([], 14114), 'end_referenced_vars_p': ([], 14114), 'may_be_aliased': ([], 14114), 'next_htab_element': ([], 14114), 'next_referenced_var': ([], 14114), 'dump_points_to_solution': ([0], 14110), 'dump_points_to_info_for': ([], 14114), 'dump_alias_info': ([], 14114), 'get_ptr_info': ([], 14114), 'ao_ref_init': ([], 14114), 'ao_ref_base': ([], 14114), 'ao_ref_alias_set': ([], 14114), 'ao_ref_init_from_ptr_and_size': ([0], 14106), 'decl_refs_may_alias_p': ([], 14114), 'gimple_ops': ([], 14114), 'gimple_op': ([], 14114), 'gimple_assign_rhs1': ([], 14114), 'gimple_assign_rhs_code': ([], 14114), 'ptr_deref_may_alias_decl_p': ([0, 1], 14106), 'same_type_for_tbaa': ([], 14114), 'aliasing_component_refs_p': ([59, 87, 104], 14094), 'indirect_ref_may_alias_decl_p': ([], 14114), 'ptr_derefs_may_alias_p': ([0], 14106), 'indirect_refs_may_alias_p': ([], 14114), 'refs_may_alias_p_1': ([], 14114), 'refs_may_alias_p': ([], 14114), 'refs_anti_dependent_p': ([], 14114), 'refs_output_dependent_p': ([], 14114), 'gimple_call_chain': ([], 14114), 'is_global_var': ([], 14114), 'gimple_call_fn': ([], 14114), 'gimple_call_fndecl': ([], 14114), 'gimple_call_arg': ([], 14114), 'is_call_clobbered': ([], 14114), 'is_call_used': ([], 14114), 'ref_maybe_used_by_call_p_1': ([], 14114), 'ref_maybe_used_by_call_p': ([], 14114), 'ref_maybe_used_by_stmt_p': ([], 14114), 'gimple_call_lhs': ([], 14114), 'ptr_deref_may_alias_ref_p_1': ([], 14114), 'call_may_clobber_ref_p_1': ([], 14114), 'gimple_assign_lhs': ([], 14114), 'stmt_may_clobber_ref_p_1': ([], 14114), 'stmt_may_clobber_ref_p': ([], 14114), 'gimple_vuse': ([], 14114), 'get_continuation_for_phi': ([7], 14109), 'maybe_skip_until': ([], 14114), 'walk_non_aliased_vuses': ([], 14114), 'walk_aliased_vdefs_1': ([], 14114), 'walk_aliased_vdefs': ([], 14114)}, "PosixPath('602/gimple-iterator.bc')": {'gsi_start': ([], 4962), 'gsi_insert_seq_nodes_before': ([], 4962), 'gsi_insert_seq_before_without_update': ([], 4962), 'gsi_stmt': ([], 4962), 'update_modified_stmts': ([], 4962), 'gsi_insert_seq_nodes_after': ([], 4962), 'gsi_insert_seq_after_without_update': ([], 4962), 'gsi_split_seq_after': ([1], 4960), 'gsi_split_seq_before': ([], 4962), 'gimple_ops': ([], 4962), 'gimple_op': ([], 4962), 'gimple_call_lhs': ([], 4962), 'gimple_has_lhs': ([], 4962), 'gimple_use_ops': ([], 4962), 'op_iter_init': ([], 4962), 'op_iter_next_use': ([], 4962), 'op_iter_init_use': ([], 4962), 'delink_imm_use': ([], 4962), 'delink_stmt_imm_use': ([], 4962), 'gsi_replace': ([], 4962), 'gsi_insert_before_without_update': ([], 4962), 'gsi_insert_before': ([], 4962), 'gsi_insert_after_without_update': ([], 4962), 'gsi_insert_after': ([], 4962), 'gsi_remove': ([], 4962), 'phi_nodes': ([], 4962), 'gsi_start_phis': ([], 4962), 'bb_seq': ([], 4962), 'gsi_start_bb': ([], 4962), 'gsi_for_stmt': ([], 4962), 'gsi_last_bb': ([], 4962), 'gsi_move_to_bb_end': ([], 4962), 'single_pred_edge': ([], 4962), 'gimple_find_edge_insert_loc': ([], 4962), 'gsi_insert_on_edge_immediate': ([], 4962), 'gsi_insert_seq_on_edge_immediate': ([], 4962), 'single_succ_edge': ([], 4962), 'gsi_commit_one_edge_insert': ([], 4962), 'ei_end_p': ([], 4962), 'ei_cond': ([], 4962), 'ei_next': ([], 4962), 'gsi_commit_edge_inserts': ([], 4962)}, "PosixPath('602/tree-call-cdce.bc')": {'bb_seq': ([], 5973), 'gsi_start_bb': ([], 5973), 'gsi_stmt': ([], 5973), 'gimple_ops': ([], 5973), 'gimple_op': ([], 5973), 'gimple_call_lhs': ([], 5973), 'gimple_call_fn': ([], 5973), 'gimple_call_fndecl': ([], 5973), 'gimple_call_arg': ([], 5973), 'check_target_format': ([], 5973), 'check_builtin_call': ([], 5973), 'gimple_assign_rhs1': ([], 5973), 'gimple_assign_rhs_code': ([], 5973), 'check_pow': ([], 5973), 'is_call_dce_candidate': ([], 5973), 'VEC_gimple_base_space': ([], 5973), 'VEC_gimple_heap_reserve': ([], 5973), 'VEC_gimple_base_quick_push': ([], 5973), 'VEC_gimple_heap_safe_push': ([], 5973), 'gimple_set_op': ([], 5973), 'gimple_assign_set_lhs': ([], 5973), 'gen_one_condition': ([], 5973), 'gen_conditions_for_domain': ([], 5973), 'gen_conditions_for_pow_cst_base': ([], 5973), 'gen_conditions_for_pow_int_base': ([], 5973), 'gen_conditions_for_pow': ([], 5973), 'gen_shrink_wrap_conditions': ([], 5973), 'shrink_wrap_one_built_in_call': ([], 5973), 'shrink_wrap_conditional_dead_built_in_calls': ([], 5973), 'gimple_vop': ([], 5973), 'tree_call_cdce': ([], 5973)}, "PosixPath('602/ira-conflicts.bc')": {'ira_build_conflicts': ([0, 30, 42], 7600), 'ira_allocno_set_iter_init': ([], 7621), 'ira_allocno_conflict_iter_init': ([], 7621), 'ira_allocno_conflict_iter_cond': ([], 7621), 'ira_allocno_conflict_iter_next': ([], 7621), 'print_conflicts': ([], 7621), 'sparseset_bit_p': ([], 7621), 'sparseset_insert_bit': ([], 7621), 'sparseset_set_bit': ([], 7621), 'sparseset_iter_init': ([], 7621), 'sparseset_iter_p': ([], 7621), 'sparseset_iter_elm': ([], 7621), 'sparseset_iter_next': ([], 7621), 'build_conflict_bit_table': ([], 7621), 'ira_allocno_set_iter_cond': ([], 7621), 'ira_allocno_set_iter_next': ([], 7621), 'build_allocno_conflicts': ([], 7621), 'build_conflicts': ([], 7621), 'propagate_copies': ([], 7621), 'go_through_subreg': ([], 7621), 'ira_get_register_move_cost': ([], 7621), 'process_regs_for_copy': ([1, 19], 7612), 'get_dup_num': ([], 7621), 'process_reg_shuffles': ([], 7621), 'add_insn_allocno_copies': ([], 7621), 'add_copies': ([], 7621)}, "PosixPath('602/tree-stdarg.bc')": {'execute_optimize_stdarg': ([393], 9188), 'bb_seq': ([], 9190), 'gsi_start_bb': ([], 9190), 'gsi_stmt': ([], 9190), 'gimple_ops': ([], 9190), 'gimple_op': ([], 9190), 'gimple_call_fn': ([], 9190), 'gimple_call_fndecl': ([], 9190), 'gimple_call_arg': ([], 9190), 'is_global_var': ([], 9190), 'clear_and_done_ssa_iter': ([], 9190), 'op_iter_next_use': ([], 9190), 'op_iter_init_phiuse': ([], 9190), 'ei_end_p': ([], 9190), 'ei_cond': ([], 9190), 'VEC_edge_base_space': ([], 9190), 'VEC_edge_heap_reserve': ([], 9190), 'VEC_edge_base_quick_push': ([], 9190), 'VEC_edge_heap_safe_push': ([], 9190), 'ei_next': ([], 9190), 'VEC_edge_base_pop': ([], 9190), 'reachable_at_most_once': ([23], 9187), 'gimple_assign_lhs': ([], 9190), 'gimple_assign_rhs1': ([], 9190), 'gimple_assign_rhs_code': ([], 9190), 'gimple_assign_cast_p': ([], 9190), 'gimple_assign_rhs2': ([], 9190), 'va_list_counter_bump': ([49], 9186), 'va_list_ptr_read': ([], 9190), 'va_list_ptr_write': ([], 9190), 'check_va_list_escapes': ([], 9190), 'va_list_counter_op': ([], 9190), 'va_list_counter_struct_op': ([], 9190), 'gimple_use_ops': ([], 9190), 'op_iter_init': ([], 9190), 'op_iter_next_tree': ([], 9190), 'op_iter_init_tree': ([], 9190), 'check_all_va_list_escapes': ([], 9190), 'find_va_list_reference': ([0], 9186)}, "PosixPath('602/tree-affine.bc')": {'aff_combination_scale': ([], 8296), 'aff_combination_add_elt': ([7], 8294), 'aff_combination_convert': ([], 8296), 'aff_combination_remove_elt': ([], 8296), 'aff_combination_zero': ([], 8296), 'aff_combination_const': ([], 8296), 'aff_combination_elt': ([], 8296), 'aff_combination_add_cst': ([], 8296), 'aff_combination_add': ([], 8296), 'aff_combination_to_tree': ([], 8296), 'tree_to_aff_combination': ([], 8296), 'unshare_aff_combination': ([], 8296), 'aff_combination_add_product': ([], 8296), 'aff_combination_mult': ([], 8296), 'gimple_ops': ([], 8296), 'gimple_op': ([], 8296), 'gimple_assign_lhs': ([], 8296), 'gimple_assign_rhs1': ([], 8296), 'gimple_assign_rhs_code': ([], 8296), 'gimple_assign_rhs2': ([], 8296), 'aff_combination_expand': ([121], 8293), 'double_int_constant_multiple_p': ([], 8296), 'aff_combination_constant_multiple_p': ([], 8296), 'print_aff': ([3], 8289), 'get_inner_reference_aff': ([], 8296)}, "PosixPath('602/ipa-cp.bc')": {'VEC_ipa_node_params_t_base_space': ([], 10455), 'VEC_ipa_node_params_t_heap_reserve_exact': ([], 10455), 'VEC_ipa_node_params_t_heap_safe_grow': ([], 10455), 'VEC_ipa_node_params_t_heap_safe_grow_cleared': ([], 10455), 'ipa_check_create_node_params': ([], 10455), 'VEC_ipa_edge_args_t_base_space': ([], 10455), 'VEC_ipa_edge_args_t_gc_reserve_exact': ([], 10455), 'VEC_ipa_edge_args_t_gc_safe_grow': ([], 10455), 'VEC_ipa_edge_args_t_gc_safe_grow_cleared': ([], 10455), 'ipa_check_create_edge_args': ([], 10455), 'ipcp_init_stage': ([], 10455), 'ipcp_generate_summary': ([], 10455), 'cgraph_only_called_directly_p': ([], 10455), 'bb_seq': ([], 10455), 'gsi_start_bb': ([], 10455), 'gsi_stmt': ([], 10455), 'gimple_ops': ([], 10455), 'gimple_op': ([], 10455), 'gimple_call_fn': ([], 10455), 'gimple_call_fndecl': ([], 10455), 'ipcp_versionable_function_p': ([], 10455), 'ipcp_cloning_candidate_p': ([], 10455), 'ipcp_initialize_node_lattices': ([], 10455), 'ipcp_compute_node_scale': ([], 10455), 'ipcp_print_all_lattices': ([], 10455), 'ipcp_function_scale_print': ([], 10455), 'ipcp_lattice_from_jfunc': ([], 10455), 'ipcp_lats_are_equal': ([], 10455), 'ipa_lattice_meet': ([], 10455), 'ipcp_lattice_changed': ([], 10455), 'ipcp_propagate_stage': ([], 10455), 'ipcp_change_tops_to_bottom': ([], 10455), 'ipcp_print_call_profile_counts': ([], 10455), 'ipcp_print_profile_data': ([], 10455), 'ipcp_iterate_stage': ([], 10455), 'ipcp_const_param_count': ([], 10455), 'ipcp_need_redirect_p': ([], 10455), 'ipcp_estimate_growth': ([], 10455), 'ipcp_estimate_cloning_cost': ([], 10455), 'build_const_val': ([], 10455), 'ipcp_create_replace_map': ([], 10455), 'VEC_ipa_replace_map_p_base_space': ([], 10455), 'VEC_ipa_replace_map_p_gc_reserve': ([], 10455), 'VEC_ipa_replace_map_p_base_quick_push': ([], 10455), 'VEC_ipa_replace_map_p_gc_safe_push': ([], 10455), 'VEC_cgraph_edge_p_base_quick_push': ([], 10455), 'ipcp_init_cloned_node': ([], 10455), 'ipcp_update_callgraph': ([], 10455), 'ipcp_update_profiling': ([], 10455), 'ipcp_insert_stage': ([], 10455), 'ipcp_driver': ([], 10455)}, "PosixPath('602/lto-opts.bc')": {'output_options': ([], 2316), 'VEC_opt_t_base_space': ([], 2316), 'VEC_opt_t_heap_reserve': ([], 2316), 'VEC_opt_t_base_quick_push': ([], 2316), 'VEC_opt_t_heap_safe_push': ([], 2316), 'lto_register_user_option': ([], 2316), 'clear_options': ([], 2316), 'reverse_iterate_options': ([], 2316), 'concatenate_options': ([], 2316), 'output_string_stream': ([], 2316), 'lto_write_options': ([], 2316), 'input_string_block': ([], 2316), 'input_options': ([], 2316), 'lto_read_file_options': ([], 2316), 'lto_reissue_options': ([], 2316)}, "PosixPath('602/loop-invariant.bc')": {'calculate_loop_reg_pressure': ([], 13231), 'free_inv_motion_data': ([], 13231), 'set_move_mark': ([], 13231), 'VEC_int_base_quick_push': ([], 13231), 'loop_outer': ([], 13231), 'VEC_int_base_iterate': ([], 13231), 'fel_next': ([], 13231), 'fel_init': ([], 13231), 'bitmap_initialize_stat': ([], 13231), 'df_lr_get_bb_info': ([], 13231), 'bmp_iter_set_init': ([], 13231), 'bmp_iter_set': ([], 13231), 'get_regno_cover_class': ([], 13231), 'change_pressure': ([], 13231), 'mark_ref_regs': ([], 13231), 'mark_regno_death': ([], 13231), 'mark_reg_death': ([], 13231), 'mark_regno_live': ([], 13231), 'mark_reg_store': ([3], 13229), 'ei_end_p': ([], 13231), 'ei_cond': ([], 13231), 'ei_next': ([], 13231), 'find_exits': ([], 13231), 'compute_always_reached': ([], 13231), 'check_invariant_table_size': ([], 13231), 'find_defs': ([], 13231), 'may_assign_reg_p': ([], 13231), 'check_maybe_invariant': ([], 13231), 'check_dependency': ([], 13231), 'check_dependencies': ([], 13231), 'VEC_invariant_p_base_space': ([], 13231), 'VEC_invariant_p_heap_reserve': ([], 13231), 'VEC_invariant_p_base_quick_push': ([], 13231), 'VEC_invariant_p_heap_safe_push': ([], 13231), 'create_new_invariant': ([], 13231), 'find_invariant_insn': ([], 13231), 'invariant_for_use': ([], 13231), 'record_use': ([], 13231), 'record_uses': ([], 13231), 'find_invariants_insn': ([], 13231), 'find_invariants_bb': ([], 13231), 'find_invariants_body': ([], 13231), 'VEC_invariant_p_base_iterate': ([], 13231), 'hash_invariant_expr_1': ([1], 13227), 'find_or_insert_inv': ([], 13231), 'find_identical_invariants': ([], 13231), 'invariant_expr_equal_p': ([1], 13229), 'eq_invariant_expr': ([], 13231), 'merge_identical_invariants': ([], 13231), 'find_invariants': ([], 13231), 'get_cover_class_and_nregs': ([2], 13226), 'get_inv_cost': ([23], 13227), 'gain_for_invariant': ([], 13231), 'best_gain_for_invariant': ([], 13231), 'find_invariants_to_move': ([], 13231), 'move_invariant_reg': ([23], 13226), 'move_invariants': ([], 13231), 'move_single_loop_invariants': ([0], 13229), 'move_loop_invariants': ([], 13231)}, "PosixPath('602/xmalloc.bc')": {}, "PosixPath('602/xstrndup.bc')": {'xstrndup': ([], 120)}, "PosixPath('602/lambda-code.bc')": {'first_imm_use_on_stmt': ([], 25364), 'next_imm_use_on_stmt': ([], 25364), 'build_access_matrix': ([], 25364), 'replace_uses_equiv_to_x_with_y': ([], 25364), 'lambda_body_vector_new': ([5], 25358), 'lambda_vector_matrix_mult': ([], 25364), 'lambda_body_vector_compute_new': ([], 25364), 'print_lambda_body_vector': ([], 25364), 'lambda_linear_expression_new': ([5], 25358), 'print_linear_expression': ([], 25364), 'print_lambda_loop': ([], 25364), 'lambda_loopnest_new': ([5], 25358), 'print_lambda_loopnest': ([], 25364), 'lambda_lattice_new': ([], 25364), 'lambda_lattice_compute_base': ([42], 25363), 'lle_equal': ([], 25364), 'compute_nest_using_fourier_motzkin': ([], 25364), 'lambda_compute_auxillary_space': ([], 25364), 'lambda_vector_min_nz': ([], 25364), 'lambda_compute_step_signs': ([], 25364), 'lambda_compute_target_space': ([], 25364), 'lambda_loopnest_transform': ([], 25364), 'gimple_ops': ([], 25364), 'gimple_op': ([], 25364), 'gimple_cond_lhs': ([], 25364), 'gimple_cond_rhs': ([], 25364), 'find_induction_var_from_exit_cond': ([0], 25351), 'bb_seq': ([], 25364), 'gsi_start_bb': ([], 25364), 'gsi_stmt': ([], 25364), 'gimple_def_ops': ([], 25364), 'gimple_vdef': ([], 25364), 'gimple_use_ops': ([], 25364), 'gimple_vuse': ([], 25364), 'op_iter_init': ([], 25364), 'op_iter_next_tree': ([], 25364), 'op_iter_init_tree': ([], 25364), 'single_ssa_tree_operand': ([], 25364), 'end_readonly_imm_use_p': ([], 25364), 'first_readonly_imm_use': ([], 25364), 'phi_loop_edge_uses_def': ([], 25364), 'stmt_uses_phi_result': ([], 25364), 'next_readonly_imm_use': ([], 25364), 'stmt_is_bumper_for_loop': ([], 25364), 'perfect_nest_p': ([12], 25347), 'gimple_assign_lhs': ([], 25364), 'op_iter_next_use': ([], 25364), 'op_iter_init_use': ([], 25364), 'clear_and_done_ssa_iter': ([], 25364), 'op_iter_init_phiuse': ([], 25364), 'cannot_convert_modify_to_perfect_nest': ([], 25364), 'exit_phi_for_loop_p': ([], 25364), 'can_put_in_inner_loop': ([0], 25361), 'can_put_after_inner_loop': ([], 25364), 'cannot_convert_bb_to_perfect_nest': ([], 25364), 'can_convert_to_perfect_nest': ([], 25364), 'VEC_tree_base_iterate': ([], 25364), 'gcc_tree_to_linear_expression': ([], 25364), 'VEC_tree_base_space': ([], 25364), 'VEC_tree_heap_reserve': ([], 25364), 'loop_outer': ([], 25364), 'invariant_in_loop_and_outer_loops': ([], 25364), 'VEC_tree_base_quick_push': ([], 25364), 'VEC_tree_heap_safe_push': ([], 25364), 'VEC_int_base_space': ([], 25364), 'VEC_int_heap_reserve': ([], 25364), 'VEC_int_base_quick_push': ([], 25364), 'VEC_int_heap_safe_push': ([], 25364), 'gcc_loop_to_lambda_loop': ([], 25364), 'VEC_lambda_loop_base_space': ([], 25364), 'VEC_lambda_loop_heap_reserve': ([], 25364), 'VEC_lambda_loop_base_quick_push': ([], 25364), 'VEC_lambda_loop_heap_safe_push': ([], 25364), 'VEC_source_location_base_space': ([], 25364), 'VEC_source_location_heap_reserve': ([], 25364), 'VEC_source_location_base_quick_push': ([], 25364), 'single_succ_edge': ([], 25364), 'VEC_tree_base_pop': ([], 25364), 'VEC_source_location_base_pop': ([], 25364), 'single_pred_edge': ([], 25364), 'gimple_set_op': ([], 25364), 'gimple_assign_set_lhs': ([], 25364), 'gimple_cond_set_lhs': ([], 25364), 'gimple_cond_set_rhs': ([], 25364), 'gimple_cond_set_condition': ([], 25364), 'gsi_last_bb': ([], 25364), 'gsi_after_labels': ([], 25364), 'delink_imm_use': ([], 25364), 'link_imm_use_to_list': ([], 25364), 'link_imm_use': ([], 25364), 'set_ssa_use_from_ptr': ([], 25364), 'gimple_vop': ([], 25364), 'perfect_nestify': ([], 25364), 'VEC_lambda_loop_base_iterate': ([], 25364), 'gcc_loopnest_to_lambda_loopnest': ([286], 25358), 'end_imm_use_stmt_p': ([], 25364), 'move_use_after_head': ([2], 25350), 'gimple_vuse_op': ([], 25364), 'link_use_stmts_after': ([], 25364), 'first_imm_use_stmt': ([], 25364), 'next_imm_use_stmt': ([], 25364), 'remove_iv': ([], 25364), 'build_linear_expr': ([], 25364), 'lle_to_gcc_expression': ([2], 25358), 'lbv_to_gcc_expression': ([], 25364), 'VEC_gimple_base_space': ([], 25364), 'VEC_gimple_heap_reserve': ([], 25364), 'VEC_gimple_base_quick_push': ([], 25364), 'VEC_gimple_heap_safe_push': ([], 25364), 'lambda_loopnest_to_gcc_loopnest': ([161], 25344), 'VEC_ddr_p_base_iterate': ([], 25364), 'lambda_transform_legal_p': ([], 25364), 'VEC_data_reference_p_base_iterate': ([], 25364), 'tree_operand_length': ([], 25364), 'lambda_collect_parameters_from_af': ([0], 25363), 'lambda_collect_parameters': ([], 25364), 'VEC_loop_p_base_iterate': ([], 25364), 'av_for_af_base': ([], 25364), 'av_for_af': ([], 25364), 'VEC_lambda_vector_base_quick_push': ([], 25364), 'lambda_compute_access_matrices': ([], 25364)}, "PosixPath('602/ipa.bc')": {'cgraph_only_called_directly_p': ([], 4550), 'cgraph_postorder': ([], 4550), 'cgraph_can_remove_if_no_direct_calls_p': ([], 4550), 'update_inlined_to_pointer': ([], 4550), 'cgraph_remove_unreachable_nodes': ([2, 5, 10, 98], 4527), 'cgraph_node_set_new': ([], 4550), 'VEC_cgraph_node_ptr_base_space': ([], 4550), 'VEC_cgraph_node_ptr_gc_reserve': ([], 4550), 'VEC_cgraph_node_ptr_base_quick_push': ([], 4550), 'VEC_cgraph_node_ptr_gc_safe_push': ([], 4550), 'cgraph_node_set_add': ([], 4550), 'VEC_cgraph_node_ptr_base_pop': ([], 4550), 'cgraph_node_set_remove': ([], 4550), 'cgraph_node_set_find': ([], 4550), 'dump_cgraph_node_set': ([], 4550), 'cgraph_externally_visible_p': ([], 4550), 'function_and_variable_visibility': ([99, 181], 4548), 'whole_program_function_and_variable_visibility': ([], 4550)}, "PosixPath('602/cfganal.bc')": {'set_edge_can_fallthru_flag': ([], 10851), 'sbitmap_iter_init': ([], 10851), 'flow_active_insn_p': ([], 10851), 'forwarder_block_p': ([], 10851), 'ei_end_p': ([], 10851), 'ei_cond': ([], 10851), 'ei_next': ([], 10851), 'can_fallthru': ([], 10851), 'could_fall_through': ([], 10851), 'ei_one_before_end_p': ([], 10851), 'mark_dfs_back_edges': ([9, 22, 28], 10832), 'find_unreachable_blocks': ([], 10851), 'create_edge_list': ([], 10851), 'print_edge_list': ([], 10851), 'find_edge_index': ([], 10851), 'verify_edge_list': ([15, 61], 10844), 'find_edge': ([], 10851), 'sbitmap_iter_cond': ([], 10851), 'sbitmap_iter_next': ([], 10851), 'flow_nodes_print': ([], 10851), 'flow_edge_list_print': ([], 10851), 'ei_safe_edge': ([], 10851), 'remove_fake_predecessors': ([], 10851), 'add_noreturn_fake_exit_edges': ([], 10851), 'flow_dfs_compute_reverse_init': ([], 10851), 'flow_dfs_compute_reverse_add_bb': ([], 10851), 'flow_dfs_compute_reverse_execute': ([], 10851), 'connect_infinite_loops_to_exit': ([], 10851), 'post_order_compute': ([18], 10843), 'dfs_find_deadend': ([], 10851), 'inverted_post_order_compute': ([33], 10843), 'pre_and_rev_post_order_compute': ([18], 10840), 'dfs_enumerate_from': ([], 10851), 'compute_dominance_frontiers_1': ([], 10851), 'compute_dominance_frontiers': ([], 10851), 'bmp_iter_set_init': ([], 10851), 'bmp_iter_set': ([], 10851), 'VEC_int_base_quick_push': ([], 10851), 'VEC_int_base_pop': ([], 10851), 'bmp_iter_and_compl_init': ([], 10851), 'bmp_iter_and_compl': ([], 10851), 'VEC_int_base_space': ([], 10851), 'VEC_int_heap_reserve': ([], 10851), 'VEC_int_heap_safe_push': ([], 10851), 'compute_idf': ([], 10851)}, "PosixPath('602/physmem.bc')": {}, "PosixPath('602/insn-emit.bc')": {'gen_movti': ([], 362138), 'gen_split_1883': ([], 362138), 'gen_split_1884': ([], 362138), 'gen_split_1885': ([], 362138), 'gen_split_1891': ([], 362138), 'gen_split_1895': ([], 362138), 'gen_split_1908': ([11], 362135), 'gen_split_1992': ([], 362138), 'gen_split_1993': ([], 362138), 'gen_split_1996': ([], 362138), 'gen_split_1997': ([], 362138), 'gen_split_2036': ([], 362138), 'gen_split_2037': ([], 362138), 'gen_split_2038': ([], 362138), 'gen_split_2039': ([], 362138), 'gen_split_2076': ([], 362138), 'gen_split_2087': ([], 362138), 'gen_split_2095': ([], 362138), 'gen_split_2104': ([], 362138), 'gen_split_2105': ([], 362138), 'gen_split_2121': ([], 362138), 'gen_split_2182': ([], 362138), 'gen_split_2183': ([], 362138), 'gen_peephole2_2202': ([], 362138), 'gen_peephole2_2203': ([], 362138), 'gen_split_2220': ([], 362138), 'gen_split_2225': ([], 362138), 'gen_split_2236': ([], 362138), 'gen_split_2237': ([], 362138), 'gen_split_2238': ([], 362138), 'gen_split_2239': ([], 362138), 'gen_split_2405': ([], 362138), 'gen_split_2418': ([], 362138), 'gen_split_2420': ([], 362138), 'gen_split_2421': ([], 362138), 'gen_split_2422': ([], 362138), 'gen_peephole2_2429': ([], 362138), 'gen_peephole2_2430': ([], 362138), 'gen_peephole2_2443': ([], 362138), 'gen_split_2598': ([], 362138), 'gen_split_2599': ([], 362138), 'gen_smaxv16qi3': ([4], 362116), 'gen_smaxv4si3': ([4], 362116), 'gen_umaxv4si3': ([4], 362116), 'gen_sminv16qi3': ([5], 362116), 'gen_sminv4si3': ([5], 362116), 'gen_uminv8hi3': ([5], 362116), 'gen_uminv4si3': ([5], 362116), 'gen_split_2926': ([], 362138), 'gen_split_2927': ([], 362138), 'gen_split_2928': ([], 362138), 'gen_split_2929': ([], 362138), 'gen_split_1848': ([], 362138), 'gen_split_1849': ([], 362138), 'gen_split_1850': ([], 362138), 'gen_split_1851': ([], 362138), 'gen_split_1852': ([], 362138), 'gen_split_1853': ([], 362138), 'gen_split_1854': ([], 362138), 'gen_movsi': ([], 362138), 'gen_movhi': ([], 362138), 'gen_movqi': ([], 362138), 'gen_movdi': ([], 362138), 'gen_movoi': ([], 362138), 'gen_movsf': ([], 362138), 'gen_split_1868': ([], 362138), 'gen_movdf': ([], 362138), 'gen_movxf': ([], 362138), 'gen_split_1876': ([], 362138), 'gen_movtf': ([], 362138), 'gen_split_1881': ([2], 362133), 'gen_split_1882': ([2], 362133), 'gen_split_1890': ([], 362138), 'gen_split_1894': ([], 362138), 'gen_split_1899': ([], 362138), 'gen_split_1901': ([], 362138), 'gen_split_1902': ([], 362138), 'gen_split_1903': ([], 362138), 'gen_split_1905': ([], 362138), 'gen_split_1906': ([], 362138), 'gen_split_1912': ([], 362138), 'gen_split_1914': ([], 362138), 'gen_split_1917': ([], 362138), 'gen_split_1918': ([], 362138), 'gen_split_1919': ([], 362138), 'gen_split_1920': ([], 362138), 'gen_peephole2_1936': ([], 362138), 'gen_peephole2_1937': ([], 362138), 'gen_peephole2_1938': ([], 362138), 'gen_peephole2_1939': ([], 362138), 'gen_peephole2_1940': ([], 362138), 'gen_peephole2_1941': ([], 362138), 'gen_peephole2_1942': ([], 362138), 'gen_peephole2_1943': ([], 362138), 'gen_split_1944': ([], 362138), 'gen_split_1945': ([], 362138), 'gen_split_1946': ([], 362138), 'gen_split_1947': ([], 362138), 'gen_split_1948': ([], 362138), 'gen_split_1949': ([], 362138), 'gen_split_1950': ([], 362138), 'gen_split_1951': ([], 362138), 'gen_split_1952': ([], 362138), 'gen_split_1953': ([], 362138), 'gen_split_1954': ([], 362138), 'gen_split_1955': ([], 362138), 'gen_split_1956': ([], 362138), 'gen_split_1957': ([], 362138), 'gen_split_1958': ([], 362138), 'gen_split_1959': ([], 362138), 'gen_split_1960': ([], 362138), 'gen_split_1961': ([], 362138), 'gen_split_1965': ([], 362138), 'gen_split_1966': ([], 362138), 'gen_split_1967': ([], 362138), 'gen_split_1968': ([], 362138), 'gen_split_1969': ([], 362138), 'gen_split_1970': ([], 362138), 'gen_split_1971': ([], 362138), 'gen_split_1972': ([], 362138), 'gen_split_1973': ([], 362138), 'gen_split_1980': ([], 362138), 'gen_split_1981': ([], 362138), 'gen_split_1982': ([], 362138), 'gen_split_1983': ([], 362138), 'gen_split_1984': ([], 362138), 'gen_split_1985': ([], 362138), 'gen_split_1986': ([], 362138), 'gen_split_1987': ([], 362138), 'gen_split_1988': ([], 362138), 'gen_split_1989': ([], 362138), 'gen_split_1990': ([6], 362133), 'gen_split_1991': ([6], 362133), 'gen_split_1994': ([5], 362133), 'gen_split_1995': ([5], 362133), 'gen_split_1998': ([], 362138), 'gen_split_1999': ([], 362138), 'gen_split_2000': ([], 362138), 'gen_split_2001': ([], 362138), 'gen_split_2002': ([], 362138), 'gen_split_2003': ([], 362138), 'gen_split_2004': ([], 362138), 'gen_split_2005': ([], 362138), 'gen_split_2006': ([], 362138), 'gen_split_2007': ([], 362138), 'gen_split_2008': ([], 362138), 'gen_split_2009': ([], 362138), 'gen_split_2010': ([], 362138), 'gen_split_2011': ([], 362138), 'gen_split_2012': ([], 362138), 'gen_split_2013': ([], 362138), 'gen_split_2014': ([], 362138), 'gen_split_2015': ([], 362138), 'gen_split_2016': ([], 362138), 'gen_split_2017': ([], 362138), 'gen_split_2018': ([], 362138), 'gen_split_2019': ([], 362138), 'gen_split_2020': ([], 362138), 'gen_split_2021': ([], 362138), 'gen_split_2022': ([], 362138), 'gen_split_2023': ([], 362138), 'gen_split_2024': ([], 362138), 'gen_split_2025': ([], 362138), 'gen_split_2026': ([], 362138), 'gen_split_2027': ([], 362138), 'gen_addqi3': ([], 362138), 'gen_addhi3': ([], 362138), 'gen_addsi3': ([], 362138), 'gen_adddi3': ([], 362138), 'gen_split_2035': ([], 362138), 'gen_subqi3': ([], 362138), 'gen_subhi3': ([], 362138), 'gen_subsi3': ([], 362138), 'gen_subdi3': ([], 362138), 'gen_split_2044': ([], 362138), 'gen_split_2077': ([0], 362135), 'gen_split_2080': ([], 362138), 'gen_split_2081': ([], 362138), 'gen_split_2085': ([], 362138), 'gen_split_2086': ([], 362138), 'gen_andqi3': ([], 362138), 'gen_andhi3': ([], 362138), 'gen_andsi3': ([], 362138), 'gen_split_2094': ([], 362138), 'gen_iorqi3': ([], 362138), 'gen_xorqi3': ([], 362138), 'gen_iorhi3': ([], 362138), 'gen_xorhi3': ([], 362138), 'gen_iorsi3': ([], 362138), 'gen_xorsi3': ([], 362138), 'gen_split_2102': ([], 362138), 'gen_split_2103': ([], 362138), 'gen_negqi2': ([], 362138), 'gen_neghi2': ([], 362138), 'gen_negsi2': ([], 362138), 'gen_negdi2': ([], 362138), 'gen_split_2111': ([], 362138), 'gen_abssf2': ([], 362138), 'gen_negsf2': ([], 362138), 'gen_absdf2': ([], 362138), 'gen_negdf2': ([], 362138), 'gen_absxf2': ([], 362138), 'gen_negxf2': ([], 362138), 'gen_abstf2': ([], 362138), 'gen_negtf2': ([], 362138), 'gen_split_2120': ([], 362138), 'gen_split_2122': ([], 362138), 'gen_split_2123': ([], 362138), 'gen_split_2124': ([], 362138), 'gen_copysignsf3': ([], 362138), 'gen_copysigndf3': ([], 362138), 'gen_copysigntf3': ([], 362138), 'gen_one_cmplqi2': ([], 362138), 'gen_one_cmplhi2': ([], 362138), 'gen_one_cmplsi2': ([], 362138), 'gen_split_2137': ([], 362138), 'gen_split_2138': ([], 362138), 'gen_split_2139': ([], 362138), 'gen_split_2140': ([], 362138), 'gen_split_2141': ([], 362138), 'gen_ashldi3': ([], 362138), 'gen_ashlsi3': ([], 362138), 'gen_split_2148': ([], 362138), 'gen_split_2149': ([], 362138), 'gen_ashlhi3': ([], 362138), 'gen_ashlqi3': ([], 362138), 'gen_ashrdi3': ([], 362138), 'gen_ashrsi3': ([], 362138), 'gen_ashrhi3': ([], 362138), 'gen_ashrqi3': ([], 362138), 'gen_lshrdi3': ([], 362138), 'gen_lshrsi3': ([], 362138), 'gen_lshrhi3': ([], 362138), 'gen_lshrqi3': ([], 362138), 'gen_split_2168': ([], 362138), 'gen_rotlsi3': ([], 362138), 'gen_rotlhi3': ([], 362138), 'gen_rotlqi3': ([], 362138), 'gen_split_2174': ([], 362138), 'gen_rotrsi3': ([], 362138), 'gen_rotrhi3': ([], 362138), 'gen_rotrqi3': ([], 362138), 'gen_split_2184': ([], 362138), 'gen_split_2185': ([], 362138), 'gen_split_2186': ([], 362138), 'gen_split_2187': ([], 362138), 'gen_split_2188': ([], 362138), 'gen_split_2189': ([], 362138), 'gen_split_2190': ([], 362138), 'gen_split_2191': ([], 362138), 'gen_split_2192': ([], 362138), 'gen_split_2193': ([], 362138), 'gen_split_2194': ([], 362138), 'gen_split_2195': ([], 362138), 'gen_split_2196': ([], 362138), 'gen_split_2197': ([], 362138), 'gen_split_2198': ([], 362138), 'gen_split_2199': ([], 362138), 'gen_untyped_call': ([], 362138), 'gen_split_2227': ([], 362138), 'gen_split_2232': ([], 362138), 'gen_split_2234': ([], 362138), 'gen_split_2235': ([], 362138), 'gen_fmodsf3': ([], 362138), 'gen_fmoddf3': ([], 362138), 'gen_remaindersf3': ([], 362138), 'gen_remainderdf3': ([], 362138), 'gen_split_2249': ([], 362138), 'gen_split_2250': ([], 362138), 'gen_split_2251': ([], 362138), 'gen_split_2252': ([], 362138), 'gen_split_2253': ([], 362138), 'gen_split_2254': ([], 362138), 'gen_asinxf2': ([], 362138), 'gen_acosxf2': ([], 362138), 'gen_expNcorexf3': ([], 362138), 'gen_expm1xf2': ([], 362138), 'gen_split_2316': ([], 362138), 'gen_split_2317': ([], 362138), 'gen_split_2318': ([], 362138), 'gen_split_2319': ([], 362138), 'gen_split_2320': ([], 362138), 'gen_split_2321': ([], 362138), 'gen_split_2322': ([], 362138), 'gen_split_2323': ([], 362138), 'gen_split_2324': ([], 362138), 'gen_split_2332': ([], 362138), 'gen_split_2336': ([], 362138), 'gen_split_2337': ([], 362138), 'gen_split_2338': ([], 362138), 'gen_split_2339': ([], 362138), 'gen_split_2340': ([], 362138), 'gen_split_2341': ([], 362138), 'gen_split_2342': ([], 362138), 'gen_split_2343': ([], 362138), 'gen_split_2344': ([], 362138), 'gen_split_2350': ([], 362138), 'gen_split_2354': ([], 362138), 'gen_split_2355': ([], 362138), 'gen_split_2356': ([], 362138), 'gen_split_2357': ([], 362138), 'gen_split_2358': ([], 362138), 'gen_split_2359': ([], 362138), 'gen_split_2360': ([], 362138), 'gen_split_2361': ([], 362138), 'gen_split_2362': ([], 362138), 'gen_split_2368': ([], 362138), 'gen_split_2372': ([], 362138), 'gen_split_2376': ([], 362138), 'gen_split_2377': ([], 362138), 'gen_strset': ([0], 362136), 'gen_cmpstrnsi': ([], 362138), 'gen_peephole2_2399': ([], 362138), 'gen_peephole2_2400': ([], 362138), 'gen_movqicc': ([], 362138), 'gen_movhicc': ([], 362138), 'gen_movsicc': ([], 362138), 'gen_movsfcc': ([], 362138), 'gen_movdfcc': ([], 362138), 'gen_movxfcc': ([], 362138), 'gen_split_2409': ([], 362138), 'gen_peephole2_2410': ([], 362138), 'gen_addqicc': ([], 362138), 'gen_addhicc': ([], 362138), 'gen_addsicc': ([], 362138), 'gen_split_2417': ([8], 362124), 'gen_split_2419': ([], 362138), 'gen_peephole2_2423': ([], 362138), 'gen_peephole2_2424': ([], 362138), 'gen_peephole2_2425': ([], 362138), 'gen_peephole2_2426': ([], 362138), 'gen_peephole2_2427': ([], 362138), 'gen_peephole2_2428': ([], 362138), 'gen_peephole2_2431': ([], 362138), 'gen_peephole2_2432': ([], 362138), 'gen_peephole2_2433': ([], 362138), 'gen_peephole2_2434': ([], 362138), 'gen_peephole2_2435': ([], 362138), 'gen_peephole2_2436': ([], 362138), 'gen_peephole2_2437': ([], 362138), 'gen_peephole2_2438': ([], 362138), 'gen_peephole2_2439': ([], 362138), 'gen_peephole2_2440': ([], 362138), 'gen_peephole2_2441': ([], 362138), 'gen_peephole2_2442': ([], 362138), 'gen_peephole2_2444': ([], 362138), 'gen_peephole2_2445': ([], 362138), 'gen_peephole2_2446': ([], 362138), 'gen_peephole2_2450': ([], 362138), 'gen_peephole2_2451': ([], 362138), 'gen_peephole2_2452': ([], 362138), 'gen_peephole2_2453': ([], 362138), 'gen_peephole2_2454': ([], 362138), 'gen_peephole2_2455': ([], 362138), 'gen_peephole2_2461': ([], 362138), 'gen_peephole2_2464': ([], 362138), 'gen_peephole2_2466': ([], 362138), 'gen_peephole2_2472': ([], 362138), 'gen_peephole2_2475': ([], 362138), 'gen_peephole2_2477': ([], 362138), 'gen_peephole2_2478': ([], 362138), 'gen_peephole2_2479': ([], 362138), 'gen_peephole2_2480': ([], 362138), 'gen_peephole2_2481': ([], 362138), 'gen_peephole2_2482': ([], 362138), 'gen_peephole2_2483': ([], 362138), 'gen_peephole2_2484': ([], 362138), 'gen_peephole2_2485': ([0], 362136), 'gen_prefetch': ([], 362138), 'gen_movv8qi': ([], 362138), 'gen_movv4hi': ([], 362138), 'gen_movv2si': ([], 362138), 'gen_movv1di': ([], 362138), 'gen_movv2sf': ([], 362138), 'gen_movmisalignv8qi': ([], 362138), 'gen_movmisalignv4hi': ([], 362138), 'gen_movmisalignv2si': ([], 362138), 'gen_movmisalignv1di': ([], 362138), 'gen_movmisalignv2sf': ([], 362138), 'gen_mmx_addv2sf3': ([], 362138), 'gen_mmx_mulv2sf3': ([], 362138), 'gen_mmx_smaxv2sf3': ([], 362138), 'gen_mmx_sminv2sf3': ([], 362138), 'gen_mmx_eqv2sf3': ([], 362138), 'gen_split_2524': ([], 362138), 'gen_split_2525': ([], 362138), 'gen_mmx_addv8qi3': ([], 362138), 'gen_mmx_subv8qi3': ([], 362138), 'gen_mmx_addv4hi3': ([], 362138), 'gen_mmx_subv4hi3': ([], 362138), 'gen_mmx_addv2si3': ([], 362138), 'gen_mmx_subv2si3': ([], 362138), 'gen_mmx_addv1di3': ([], 362138), 'gen_mmx_subv1di3': ([], 362138), 'gen_mmx_ssaddv8qi3': ([], 362138), 'gen_mmx_usaddv8qi3': ([], 362138), 'gen_mmx_sssubv8qi3': ([], 362138), 'gen_mmx_ussubv8qi3': ([], 362138), 'gen_mmx_ssaddv4hi3': ([], 362138), 'gen_mmx_usaddv4hi3': ([], 362138), 'gen_mmx_sssubv4hi3': ([], 362138), 'gen_mmx_ussubv4hi3': ([], 362138), 'gen_mmx_mulv4hi3': ([], 362138), 'gen_mmx_smulv4hi3_highpart': ([], 362138), 'gen_mmx_umulv4hi3_highpart': ([], 362138), 'gen_mmx_pmaddwd': ([], 362138), 'gen_mmx_pmulhrwv4hi3': ([], 362138), 'gen_sse2_umulv1siv1di3': ([], 362138), 'gen_mmx_smaxv4hi3': ([], 362138), 'gen_mmx_sminv4hi3': ([], 362138), 'gen_mmx_umaxv8qi3': ([], 362138), 'gen_mmx_uminv8qi3': ([], 362138), 'gen_mmx_eqv8qi3': ([], 362138), 'gen_mmx_eqv4hi3': ([], 362138), 'gen_mmx_eqv2si3': ([], 362138), 'gen_mmx_andv8qi3': ([], 362138), 'gen_mmx_iorv8qi3': ([], 362138), 'gen_mmx_xorv8qi3': ([], 362138), 'gen_mmx_andv4hi3': ([], 362138), 'gen_mmx_iorv4hi3': ([], 362138), 'gen_mmx_xorv4hi3': ([], 362138), 'gen_mmx_andv2si3': ([], 362138), 'gen_mmx_iorv2si3': ([], 362138), 'gen_mmx_xorv2si3': ([], 362138), 'gen_split_2569': ([], 362138), 'gen_split_2570': ([], 362138), 'gen_mmx_uavgv8qi3': ([], 362138), 'gen_mmx_uavgv4hi3': ([], 362138), 'gen_movv32qi': ([], 362138), 'gen_movv16hi': ([], 362138), 'gen_movv8si': ([], 362138), 'gen_movv4di': ([], 362138), 'gen_movv8sf': ([], 362138), 'gen_movv4df': ([], 362138), 'gen_movv16qi': ([], 362138), 'gen_movv8hi': ([], 362138), 'gen_movv4si': ([], 362138), 'gen_movv2di': ([], 362138), 'gen_movv1ti': ([], 362138), 'gen_movv4sf': ([], 362138), 'gen_movv2df': ([], 362138), 'gen_split_2597': ([], 362138), 'gen_movmisalignv32qi': ([], 362138), 'gen_movmisalignv16hi': ([], 362138), 'gen_movmisalignv8si': ([], 362138), 'gen_movmisalignv4di': ([], 362138), 'gen_movmisalignv8sf': ([], 362138), 'gen_movmisalignv4df': ([], 362138), 'gen_movmisalignv16qi': ([], 362138), 'gen_movmisalignv8hi': ([], 362138), 'gen_movmisalignv4si': ([], 362138), 'gen_movmisalignv2di': ([], 362138), 'gen_movmisalignv1ti': ([], 362138), 'gen_movmisalignv4sf': ([], 362138), 'gen_movmisalignv2df': ([], 362138), 'gen_absv4sf2': ([], 362138), 'gen_negv4sf2': ([], 362138), 'gen_absv2df2': ([], 362138), 'gen_negv2df2': ([], 362138), 'gen_addv8sf3': ([], 362138), 'gen_subv8sf3': ([], 362138), 'gen_addv4df3': ([], 362138), 'gen_subv4df3': ([], 362138), 'gen_addv4sf3': ([], 362138), 'gen_subv4sf3': ([], 362138), 'gen_addv2df3': ([], 362138), 'gen_subv2df3': ([], 362138), 'gen_mulv8sf3': ([], 362138), 'gen_mulv4df3': ([], 362138), 'gen_mulv4sf3': ([], 362138), 'gen_mulv2df3': ([], 362138), 'gen_divv8sf3': ([], 362138), 'gen_divv4df3': ([], 362138), 'gen_smaxv8sf3': ([], 362138), 'gen_sminv8sf3': ([], 362138), 'gen_smaxv4df3': ([], 362138), 'gen_sminv4df3': ([], 362138), 'gen_smaxv4sf3': ([], 362138), 'gen_sminv4sf3': ([], 362138), 'gen_smaxv2df3': ([], 362138), 'gen_sminv2df3': ([], 362138), 'gen_vcondv4sf': ([], 362138), 'gen_vcondv2df': ([], 362138), 'gen_andv8sf3': ([], 362138), 'gen_iorv8sf3': ([], 362138), 'gen_xorv8sf3': ([], 362138), 'gen_andv4df3': ([], 362138), 'gen_iorv4df3': ([], 362138), 'gen_xorv4df3': ([], 362138), 'gen_andv4sf3': ([], 362138), 'gen_iorv4sf3': ([], 362138), 'gen_xorv4sf3': ([], 362138), 'gen_andv2df3': ([], 362138), 'gen_iorv2df3': ([], 362138), 'gen_xorv2df3': ([], 362138), 'gen_sse2_cvtudq2ps': ([], 362138), 'gen_vec_unpacks_hi_v8hi': ([], 362138), 'gen_vec_unpacks_lo_v8hi': ([], 362138), 'gen_vec_unpacku_hi_v8hi': ([], 362138), 'gen_vec_unpacku_lo_v8hi': ([], 362138), 'gen_vec_unpacku_float_hi_v4si': ([], 362138), 'gen_vec_unpacku_float_lo_v4si': ([], 362138), 'gen_sse_movhlps_exp': ([], 362138), 'gen_sse_movlhps_exp': ([], 362138), 'gen_sse_loadhps_exp': ([], 362138), 'gen_sse_loadlps_exp': ([], 362138), 'gen_split_2721': ([], 362138), 'gen_split_2728': ([], 362138), 'gen_vec_interleave_highv2df': ([], 362138), 'gen_vec_interleave_lowv2df': ([], 362138), 'gen_split_2740': ([], 362138), 'gen_split_2759': ([], 362138), 'gen_split_2760': ([], 362138), 'gen_sse2_loadhpd_exp': ([], 362138), 'gen_split_2762': ([], 362138), 'gen_sse2_loadlpd_exp': ([], 362138), 'gen_split_2764': ([], 362138), 'gen_addv16qi3': ([], 362138), 'gen_subv16qi3': ([], 362138), 'gen_addv8hi3': ([], 362138), 'gen_subv8hi3': ([], 362138), 'gen_addv4si3': ([], 362138), 'gen_subv4si3': ([], 362138), 'gen_addv2di3': ([], 362138), 'gen_subv2di3': ([], 362138), 'gen_sse2_ssaddv16qi3': ([], 362138), 'gen_sse2_usaddv16qi3': ([], 362138), 'gen_sse2_sssubv16qi3': ([], 362138), 'gen_sse2_ussubv16qi3': ([], 362138), 'gen_sse2_ssaddv8hi3': ([], 362138), 'gen_sse2_usaddv8hi3': ([], 362138), 'gen_sse2_sssubv8hi3': ([], 362138), 'gen_sse2_ussubv8hi3': ([], 362138), 'gen_mulv8hi3': ([], 362138), 'gen_split_2785': ([], 362138), 'gen_smulv8hi3_highpart': ([], 362138), 'gen_umulv8hi3_highpart': ([], 362138), 'gen_sse2_umulv2siv2di3': ([], 362138), 'gen_sse4_1_mulv2siv2di3': ([], 362138), 'gen_sse2_pmaddwd': ([], 362138), 'gen_mulv4si3': ([7], 362136), 'gen_split_2793': ([], 362138), 'gen_split_2794': ([], 362138), 'gen_umaxv16qi3': ([], 362138), 'gen_uminv16qi3': ([], 362138), 'gen_smaxv8hi3': ([], 362138), 'gen_sminv8hi3': ([], 362138), 'gen_umaxv8hi3': ([9], 362128), 'gen_smaxv2di3': ([], 362138), 'gen_umaxv2di3': ([], 362138), 'gen_sminv2di3': ([], 362138), 'gen_uminv2di3': ([], 362138), 'gen_sse2_eqv16qi3': ([], 362138), 'gen_sse2_eqv8hi3': ([], 362138), 'gen_sse2_eqv4si3': ([], 362138), 'gen_sse4_1_eqv2di3': ([], 362138), 'gen_vcondv16qi': ([], 362138), 'gen_vcondv8hi': ([], 362138), 'gen_vcondv4si': ([], 362138), 'gen_vcondv2di': ([], 362138), 'gen_vconduv16qi': ([], 362138), 'gen_vconduv8hi': ([], 362138), 'gen_vconduv4si': ([], 362138), 'gen_vconduv2di': ([], 362138), 'gen_andv16qi3': ([], 362138), 'gen_iorv16qi3': ([], 362138), 'gen_xorv16qi3': ([], 362138), 'gen_andv8hi3': ([], 362138), 'gen_iorv8hi3': ([], 362138), 'gen_xorv8hi3': ([], 362138), 'gen_andv4si3': ([], 362138), 'gen_iorv4si3': ([], 362138), 'gen_xorv4si3': ([], 362138), 'gen_andv2di3': ([], 362138), 'gen_iorv2di3': ([], 362138), 'gen_xorv2di3': ([], 362138), 'gen_andtf3': ([], 362138), 'gen_iortf3': ([], 362138), 'gen_xortf3': ([], 362138), 'gen_split_2867': ([], 362138), 'gen_split_2868': ([], 362138), 'gen_split_2870': ([], 362138), 'gen_vec_unpacku_hi_v16qi': ([], 362138), 'gen_vec_unpacks_hi_v16qi': ([], 362138), 'gen_vec_unpacku_lo_v16qi': ([], 362138), 'gen_vec_unpacks_lo_v16qi': ([], 362138), 'gen_vec_unpacku_hi_v4si': ([], 362138), 'gen_vec_unpacks_hi_v4si': ([], 362138), 'gen_vec_unpacku_lo_v4si': ([], 362138), 'gen_vec_unpacks_lo_v4si': ([], 362138), 'gen_sse2_uavgv16qi3': ([], 362138), 'gen_sse2_uavgv8hi3': ([], 362138), 'gen_ssse3_pmulhrswv8hi3': ([], 362138), 'gen_ssse3_pmulhrswv4hi3': ([], 362138), 'gen_split_2891': ([], 362138), 'gen_split_2892': ([], 362138), 'gen_split_2893': ([], 362138), 'gen_split_2894': ([], 362138), 'gen_rotlv2di3': ([], 362138), 'gen_rotrv2di3': ([], 362138), 'gen_ashrv16qi3': ([], 362138), 'gen_ashrv2di3': ([], 362138), 'gen_avx_vpermilv8sf': ([], 362138), 'gen_avx_vperm2f128v8sf3': ([], 362138), 'gen_split_2930': ([], 362138), 'gen_avx_vpermilv4df': ([], 362138), 'gen_avx_vperm2f128v4df3': ([], 362138), 'gen_split_2931': ([], 362138), 'gen_avx_vpermilv2df': ([], 362138), 'gen_avx_vpermilv4sf': ([], 362138), 'gen_avx_vperm2f128v8si3': ([], 362138), 'gen_rdtscp': ([], 362138)}, "PosixPath('602/lower-subreg.bc')": {'sbitmap_iter_init': ([], 7522), 'VEC_bitmap_base_space': ([], 7522), 'VEC_bitmap_heap_reserve_exact': ([], 7522), 'VEC_bitmap_heap_safe_grow': ([], 7522), 'find_decomposable_shift_zext': ([], 7522), 'recog_memoized': ([], 7522), 'simple_move_operand': ([0], 7516), 'simple_move': ([8], 7516), 'find_pseudo_copy': ([], 7522), 'bmp_iter_set_init': ([], 7522), 'bmp_iter_set': ([], 7522), 'propagate_pseudo_copies': ([], 7522), 'decompose_register': ([], 7522), 'resolve_subreg_p': ([], 7522), 'simplify_subreg_concatn': ([1, 2], 7513), 'simplify_gen_subreg_concatn': ([], 7522), 'resolve_subreg_use': ([], 7522), 'resolve_reg_notes': ([], 7522), 'resolve_clobber': ([], 7522), 'resolve_use': ([], 7522), 'adjust_decomposed_uses': ([], 7522), 'can_decompose_p': ([], 7522), 'resolve_simple_move': ([11, 32], 7512), 'resolve_shift_zext': ([], 7522), 'sbitmap_iter_cond': ([], 7522), 'sbitmap_iter_next': ([], 7522), 'VEC_bitmap_base_iterate': ([], 7522), 'find_decomposable_subregs': ([], 7522), 'decompose_multiword_subregs': ([], 7522)}, "PosixPath('602/cfg.bc')": {'init_flow': ([], 12531), 'ei_end_p': ([], 12531), 'ei_cond': ([], 12531), 'ei_next': ([], 12531), 'clear_edges': ([2], 12488), 'link_block': ([], 12531), 'unlink_block': ([], 12531), 'compact_blocks': ([], 12531), 'expunge_block': ([], 12531), 'VEC_edge_base_space': ([], 12531), 'VEC_edge_gc_reserve': ([], 12531), 'VEC_edge_base_quick_push': ([], 12531), 'VEC_edge_gc_safe_push': ([], 12531), 'connect_src': ([], 12531), 'connect_dest': ([], 12531), 'unchecked_make_edge': ([], 12531), 'cached_make_edge': ([5], 12523), 'make_single_succ_edge': ([], 12531), 'ei_safe_edge': ([], 12531), 'VEC_edge_base_unordered_remove': ([], 12531), 'disconnect_src': ([], 12531), 'disconnect_dest': ([], 12531), 'remove_edge_raw': ([], 12531), 'redirect_edge_succ': ([], 12531), 'redirect_edge_succ_nodup': ([], 12531), 'redirect_edge_pred': ([], 12531), 'clear_bb_flags': ([], 12531), 'check_bb_profile': ([], 12531), 'bmp_iter_set_init': ([], 12531), 'bmp_iter_set': ([], 12531), 'dump_regset': ([], 12531), 'dump_edge_info': ([], 12531), 'dump_bb_info': ([], 12531), 'dump_reg_info': ([], 12531), 'dump_flow_info': ([], 12531), 'alloc_aux_for_block': ([], 12531), 'clear_aux_for_blocks': ([], 12531), 'free_aux_for_blocks': ([], 12531), 'alloc_aux_for_edge': ([], 12531), 'alloc_aux_for_edges': ([], 12531), 'clear_aux_for_edges': ([], 12531), 'debug_bb_n': ([], 12531), 'dump_cfg_bb_info': ([], 12531), 'brief_dump_cfg': ([], 12531), 'update_bb_profile_for_threading': ([15], 12523), 'scale_bbs_frequencies_int': ([], 12531), 'scale_bbs_frequencies_gcov_type': ([], 12531), 'copy_original_table_set': ([], 12531), 'get_bb_original': ([], 12531), 'get_bb_copy': ([], 12531), 'copy_original_table_clear': ([], 12531), 'set_loop_copy': ([], 12531), 'get_loop_copy': ([], 12531)}, "PosixPath('602/c-typeck.bc')": {'parser_build_unary_op': ([5], 79786), 'parser_build_binary_op': ([], 79805), 'push_string': ([], 79805), 'push_member_name': ([], 79805), 'push_array_bounds': ([], 79805), 'push_range_stack': ([], 79805), 'c_incomplete_type_error': ([0], 79799), 'require_complete_type': ([], 79805), 'c_type_promotes_to': ([], 79805), 'c_vla_type_p': ([], 79805), 'c_build_qualified_type': ([], 79805), 'qualify_type': ([], 79805), 'same_translation_unit_p': ([], 79805), 'alloc_tagged_tu_seen_cache': ([], 79805), 'comptypes_internal': ([], 79805), 'tagged_types_tu_compatible_p': ([50], 79798), 'function_types_compatible_p': ([2], 79803), 'type_lists_compatible_p': ([], 79805), 'composite_type': ([25], 79791), 'c_common_type': ([], 79805), 'common_type': ([], 79805), 'decl_constant_value': ([], 79805), 'lvalue_p': ([], 79805), 'remove_c_maybe_const_expr': ([], 79805), 'perform_integral_promotions': ([], 79805), 'default_conversion': ([], 79805), 'note_integer_operands': ([], 79805), 'c_objc_common_truthvalue_conversion': ([3], 79799), 'c_size_in_bytes': ([], 79805), 'readonly_error': ([], 79805), 'c_mark_addressable': ([], 79805), 'comp_target_types': ([], 79805), 'common_pointer_type': ([], 79805), 'null_pointer_constant_p': ([], 79805), 'array_to_pointer_conversion': ([], 79805), 'build_unary_op': ([13, 33], 79776), 'build_binary_op': ([0, 20, 54, 67], 79625), 'pointer_diff': ([2], 79795), 'function_to_pointer_conversion': ([], 79805), 'default_function_array_conversion': ([], 79805), 'lookup_field': ([8], 79796), 'build_component_ref': ([8], 79799), 'build_indirect_ref': ([0, 4], 79797), 'build_array_ref': ([4], 79795), 'record_maybe_used_decl': ([], 79805), 'build_external_ref': ([0], 79802), 'pop_maybe_used': ([], 79805), 'c_expr_sizeof_expr': ([], 79805), 'c_expr_sizeof_type': ([], 79805), 'VEC_tree_base_quick_push': ([], 79805), 'VEC_tree_base_iterate': ([], 79805), 'convert_for_assignment': ([34, 44], 79661), 'convert_arguments': ([], 79805), 'build_function_call': ([], 79805), 'build_function_call_vec': ([], 79805), 'build_conditional_expr': ([13], 79803), 'build_compound_expr': ([], 79805), 'spelling_length': ([], 79805), 'print_spelling': ([], 79805), 'maybe_warn_string_init': ([], 79805), 'digest_init': ([8], 79802), 'handle_warn_cast_qual': ([2], 79790), 'build_c_cast': ([5, 75], 79800), 'c_cast_expr': ([7], 79802), 'build_modify_expr': ([0, 2], 79722), 'store_init_value': ([], 79805), 'start_init': ([], 79805), 'finish_init': ([], 79805), 'really_start_incremental_init': ([], 79805), 'add_pending_init': ([], 79805), 'set_nonincremental_init': ([1], 79801), 'VEC_constructor_elt_base_space': ([], 79805), 'VEC_constructor_elt_gc_reserve': ([], 79805), 'VEC_constructor_elt_gc_safe_push': ([], 79805), 'output_init_element': ([94, 95], 79797), 'output_pending_init_elements': ([], 79805), 'find_init_member': ([], 79805), 'set_nonincremental_init_from_string': ([], 79805), 'push_init_level': ([], 79805), 'pop_init_level': ([5], 79778), 'process_init_element': ([15], 79801), 'set_designator': ([], 79805), 'set_init_index': ([], 79805), 'set_init_label': ([], 79805), 'build_asm_expr': ([], 79805), 'c_finish_return': ([], 79805), 'c_start_case': ([], 79805), 'do_case': ([], 79805), 'c_finish_case': ([], 79805), 'c_finish_if_stmt': ([], 79805), 'c_finish_loop': ([], 79805), 'c_finish_bc_stmt': ([], 79805), 'emit_side_effect_warnings': ([], 79805), 'c_process_expr_stmt': ([], 79805), 'c_end_compound_stmt': ([], 79805), 'c_finish_stmt_expr': ([], 79805), 'c_expr_to_decl': ([], 79805), 'c_finish_omp_parallel': ([], 79805), 'c_finish_omp_task': ([], 79805), 'bitmap_initialize_stat': ([], 79805), 'c_finish_omp_clauses': ([], 79805)}, "PosixPath('602/tree-cfgcleanup.bc')": {'VEC_gimple_base_pop': ([], 6824), 'ei_end_p': ([], 6824), 'ei_cond': ([], 6824), 'ei_next': ([], 6824), 'remove_fallthru_edge': ([], 6824), 'split_bbs_on_noreturn_calls': ([], 6824), 'single_pred_edge': ([], 6824), 'cleanup_omp_return': ([], 6824), 'bb_seq': ([], 6824), 'gsi_last_bb': ([], 6824), 'gsi_stmt': ([], 6824), 'gimple_ops': ([], 6824), 'gimple_op': ([], 6824), 'gimple_cond_lhs': ([], 6824), 'gimple_cond_rhs': ([], 6824), 'gimple_switch_index': ([], 6824), 'ei_safe_edge': ([], 6824), 'single_succ_edge': ([], 6824), 'cleanup_control_expr_graph': ([], 6824), 'gimple_goto_dest': ([], 6824), 'cleanup_control_flow_bb': ([0], 6774), 'phi_nodes': ([], 6824), 'gimple_label_label': ([], 6824), 'tree_forwarder_block_p': ([16], 6821), 'has_abnormal_incoming_edge_p': ([], 6824), 'phi_alternatives_equal': ([5], 6822), 'gimple_phi_arg_location_from_edge': ([], 6824), 'gsi_start_bb': ([], 6824), 'gsi_after_labels': ([], 6824), 'remove_forwarder_block': ([], 6824), 'cleanup_tree_cfg_bb': ([], 6824), 'cleanup_tree_cfg_1': ([], 6824), 'cleanup_tree_cfg_noloop': ([], 6824), 'cleanup_tree_cfg': ([], 6824), 'has_zero_uses': ([], 6824), 'single_imm_use': ([], 6824), 'remove_forwarder_block_with_phi': ([], 6824), 'merge_phi_nodes': ([40], 6821)}, "PosixPath('602/concat.bc')": {'concat_copy2': ([], 1873), 'vconcat_length': ([], 1873), 'concat_length': ([1], 1839), 'vconcat_copy': ([], 1873), 'concat_copy': ([0, 3, 5], 1832), 'concat': ([4], 1844), 'reconcat': ([4], 1844)}, "PosixPath('602/cfgexpand.bc')": {'expand_used_vars': ([], 30263), 'expand_gimple_basic_block': ([164], 30251), 'construct_exit_block': ([37], 30260), 'gsi_last': ([], 30263), 'gsi_start': ([], 30263), 'first_imm_use_on_stmt': ([], 30263), 'next_imm_use_on_stmt': ([], 30263), 'expand_gimple_cond': ([], 30263), 'gimple_ops': ([], 30263), 'gimple_op': ([], 30263), 'gimple_assign_rhs1': ([], 30263), 'gimple_assign_rhs_code': ([], 30263), 'gimple_assign_lhs': ([], 30263), 'gimple_assign_rhs2': ([], 30263), 'gimple_assign_rhs_to_tree': ([0], 30259), 'clear_tree_used': ([], 30263), 'init_vars_expansion': ([], 30263), 'var_to_partition': ([], 30263), 'set_rtl': ([], 30263), 'expand_one_register_var': ([], 30263), 'add_stack_var': ([], 30263), 'expand_one_stack_var_at': ([], 30263), 'expand_one_stack_var': ([], 30263), 'expand_one_var': ([11], 30256), 'account_used_vars_for_block': ([], 30263), 'account_stack_vars': ([], 30263), 'fini_vars_expansion': ([], 30263), 'estimated_stack_frame_size': ([3], 30254), 'bb_seq': ([], 30263), 'gsi_start_bb': ([], 30263), 'gsi_stmt': ([], 30263), 'discover_nonconstant_array_refs_r': ([0, 1], 30256), 'discover_nonconstant_array_refs': ([], 30263), 'partition_to_var': ([], 30263), 'add_stack_var_conflict': ([1], 30258), 'expand_used_vars_for_block': ([], 30263), 'aggregate_contains_union_type': ([], 30263), 'add_alias_set_conflicts': ([], 30263), 'stack_protect_classify_type': ([], 30263), 'add_stack_protection_conflicts': ([], 30263), 'stack_var_conflict_p': ([], 30263), 'bmp_iter_set_init': ([], 30263), 'bmp_iter_set': ([], 30263), 'union_stack_vars': ([], 30263), 'add_partitioned_vars_to_ptset': ([], 30263), 'update_alias_info_with_stack_vars': ([], 30263), 'stack_var_size_cmp': ([], 30263), 'partition_stack_vars': ([], 30263), 'dump_stack_var_partition': ([], 30263), 'expand_stack_vars': ([], 30263), 'construct_init_block': ([], 30263), 'ei_end_p': ([], 30263), 'ei_cond': ([], 30263), 'ei_next': ([], 30263), 'single_succ_edge': ([], 30263), 'gimple_return_retval': ([], 30263), 'gimple_goto_dest': ([], 30263), 'gimple_label_label': ([], 30263), 'gimple_call_lhs': ([], 30263), 'gimple_call_fn': ([], 30263), 'gimple_call_fndecl': ([], 30263), 'gimple_call_return_type': ([], 30263), 'gimple_call_chain': ([], 30263), 'gimple_call_arg': ([], 30263), 'expand_call_stmt': ([], 30263), 'expand_gimple_stmt_1': ([], 30263), 'expand_gimple_stmt': ([], 30263), 'gimple_def_ops': ([], 30263), 'gimple_vdef': ([], 30263), 'gimple_use_ops': ([], 30263), 'gimple_vuse': ([], 30263), 'op_iter_init': ([], 30263), 'op_iter_next_tree': ([], 30263), 'op_iter_init_tree': ([], 30263), 'end_readonly_imm_use_p': ([], 30263), 'first_readonly_imm_use': ([], 30263), 'next_readonly_imm_use': ([], 30263), 'end_imm_use_stmt_p': ([], 30263), 'clear_and_done_ssa_iter': ([], 30263), 'op_iter_next_use': ([], 30263), 'op_iter_init_phiuse': ([], 30263), 'delink_imm_use': ([], 30263), 'link_imm_use_to_list': ([], 30263), 'move_use_after_head': ([2], 30249), 'op_iter_init_use': ([], 30263), 'gimple_vuse_op': ([], 30263), 'link_use_stmts_after': ([], 30263), 'first_imm_use_stmt': ([], 30263), 'link_imm_use': ([], 30263), 'set_ssa_use_from_ptr': ([], 30263), 'next_imm_use_stmt': ([], 30263), 'gimple_cond_lhs': ([], 30263), 'gimple_cond_rhs': ([], 30263), 'gimple_cond_single_var_p': ([], 30263), 'label_rtx_for_bb': ([], 30263), 'gimple_debug_bind_get_var': ([], 30263), 'gimple_debug_bind_has_value_p': ([], 30263), 'gimple_debug_bind_get_value': ([], 30263), 'delink_stmt_imm_use': ([], 30263), 'ei_safe_edge': ([], 30263), 'expand_gimple_tailcall': ([], 30263), 'op_iter_next_def': ([], 30263), 'op_iter_init_def': ([], 30263), 'single_ssa_def_operand': ([], 30263), 'expand_debug_expr': ([14, 164, 215], 30254), 'expand_debug_locations': ([], 30263), 'expand_stack_alignment': ([], 30263), 'set_block_levels': ([], 30263), 'gimple_expand_cfg': ([334, 659], 30237)}, "PosixPath('602/graphite-blocking.bc')": {}, "PosixPath('602/tree-predcom.bc')": {'replace_phis_by_defined_names': ([], 19091), 'combine_chains': ([], 19091), 'combinable_refs_p': ([], 19091), 'reassociate_to_the_same_stmt': ([], 19091), 'initialize_root_vars_lm': ([], 19091), 'dump_dref': ([], 19091), 'VEC_tree_base_iterate': ([], 19091), 'VEC_dref_base_iterate': ([], 19091), 'dump_chain': ([], 19091), 'VEC_chain_p_base_iterate': ([], 19091), 'dump_chains': ([], 19091), 'dump_component': ([], 19091), 'gimple_vuse': ([], 19091), 'gimple_vop': ([], 19091), 'mark_virtual_ops_for_renaming': ([], 19091), 'VEC_loop_p_base_iterate': ([], 19091), 'VEC_int_base_quick_push': ([], 19091), 'VEC_int_base_iterate': ([], 19091), 'fel_next': ([], 19091), 'fel_init': ([], 19091), 'VEC_edge_base_iterate': ([], 19091), 'last_always_executed_block': ([], 19091), 'VEC_data_reference_p_base_iterate': ([], 19091), 'suitable_reference_p': ([], 19091), 'component_of': ([], 19091), 'merge_comps': ([], 19091), 'VEC_ddr_p_base_iterate': ([], 19091), 'aff_combination_dr_offset': ([], 19091), 'determine_offset': ([], 19091), 'VEC_dref_base_quick_push': ([], 19091), 'split_data_refs_to_components': ([], 19091), 'suitable_component_p': ([], 19091), 'release_component': ([], 19091), 'filter_suitable_components': ([], 19091), 'VEC_dref_base_space': ([], 19091), 'VEC_dref_heap_reserve': ([], 19091), 'VEC_dref_heap_safe_push': ([], 19091), 'make_invariant_chain': ([], 19091), 'VEC_chain_p_base_space': ([], 19091), 'VEC_chain_p_heap_reserve': ([], 19091), 'VEC_chain_p_base_quick_push': ([], 19091), 'VEC_chain_p_heap_safe_push': ([], 19091), 'gimple_ops': ([], 19091), 'gimple_op': ([], 19091), 'gimple_assign_lhs': ([], 19091), 'gimple_assign_rhs1': ([], 19091), 'gsi_stmt': ([], 19091), 'valid_initializer_p': ([], 19091), 'find_looparound_phi': ([], 19091), 'VEC_dref_base_quick_insert': ([], 19091), 'VEC_dref_heap_safe_insert': ([], 19091), 'insert_looparound_copy': ([], 19091), 'add_looparound_copies': ([], 19091), 'release_chain': ([], 19091), 'make_rooted_chain': ([], 19091), 'add_ref_to_chain': ([], 19091), 'order_drefs': ([], 19091), 'determine_roots_comp': ([], 19091), 'determine_roots': ([], 19091), 'VEC_tree_base_quick_push': ([], 19091), 'ref_at_iteration': ([1], 19089), 'prepare_initializers_chain': ([], 19091), 'VEC_chain_p_base_unordered_remove': ([], 19091), 'prepare_initializers': ([], 19091), 'chain_can_be_combined_p': ([], 19091), 'VEC_chain_p_base_pop': ([], 19091), 'name_for_ref': ([], 19091), 'end_readonly_imm_use_p': ([], 19091), 'first_readonly_imm_use': ([], 19091), 'next_readonly_imm_use': ([], 19091), 'single_nonlooparound_use': ([], 19091), 'gimple_assign_rhs_code': ([], 19091), 'find_use_stmt': ([9], 19087), 'may_reassociate_p': ([], 19091), 'find_associative_operation_root': ([], 19091), 'gimple_assign_rhs2': ([], 19091), 'remove_name_from_operation': ([2], 19084), 'stmt_combining_refs': ([], 19091), 'try_combine_chains': ([], 19091), 'determine_unroll_factor': ([], 19091), 'end_imm_use_stmt_p': ([], 19091), 'clear_and_done_ssa_iter': ([], 19091), 'op_iter_next_use': ([], 19091), 'op_iter_init_phiuse': ([], 19091), 'delink_imm_use': ([], 19091), 'link_imm_use_to_list': ([], 19091), 'move_use_after_head': ([2], 19077), 'gimple_def_ops': ([], 19091), 'gimple_vdef': ([], 19091), 'gimple_use_ops': ([], 19091), 'op_iter_init': ([], 19091), 'op_iter_init_use': ([], 19091), 'gimple_vuse_op': ([], 19091), 'link_use_stmts_after': ([], 19091), 'first_imm_use_stmt': ([], 19091), 'end_imm_use_stmt_traverse': ([], 19091), 'next_imm_use_stmt': ([], 19091), 'base_names_in_chain_on': ([], 19091), 'eliminate_temp_copies': ([], 19091), 'bb_seq': ([], 19091), 'gsi_start_bb': ([], 19091), 'gsi_after_labels': ([], 19091), 'replace_ref_with': ([], 19091), 'execute_load_motion': ([], 19091), 'remove_stmt': ([], 19091), 'get_init_expr': ([], 19091), 'initialize_root_vars': ([], 19091), 'initialize_root': ([], 19091), 'execute_pred_commoning_chain': ([], 19091), 'execute_pred_commoning': ([], 19091), 'release_chains': ([], 19091), 'replace_names_by_phis': ([], 19091), 'execute_pred_commoning_cbck': ([6, 7], 19075), 'tree_predictive_commoning_loop': ([], 19091), 'tree_predictive_commoning': ([313], 19088)}, "PosixPath('602/fibheap.bc')": {'fibnode_new': ([], 1944), 'fibnode_insert_after': ([], 1944), 'fibheap_ins_root': ([], 1944), 'fibheap_insert': ([], 1944), 'fibheap_union': ([], 1944), 'fibnode_remove': ([], 1944), 'fibheap_rem_root': ([], 1944), 'fibheap_link': ([], 1944), 'fibheap_consolidate': ([], 1944), 'fibheap_extr_min_node': ([], 1944), 'fibheap_cut': ([], 1944), 'fibheap_replace_key_data': ([], 1944), 'fibheap_replace_key': ([], 1944), 'fibheap_delete_node': ([], 1944)}, "PosixPath('602/cpp_identifiers.bc')": {'alloc_node': ([8], 855), '_cpp_init_hashtable': ([], 869), '_cpp_destroy_hashtable': ([], 869)}, "PosixPath('602/c-pretty-print.bc')": {'pp_c_space_for_pointer_operator': ([], 18070), 'pp_c_identifier': ([], 18070), 'pp_c_type_qualifier_list': ([0], 18067), 'pp_c_tree_decl_identifier': ([], 18070), 'pp_c_type_specifier': ([0], 18066), 'pp_c_specifier_qualifier_list': ([], 18070), 'pp_c_parameter_type_list': ([], 18070), 'pp_c_direct_abstract_declarator': ([], 18070), 'pp_c_storage_class_specifier': ([], 18070), 'pp_c_function_specifier': ([], 18070), 'pp_c_declaration_specifiers': ([], 18070), 'pp_c_direct_declarator': ([], 18070), 'pp_c_constructor_elts': ([], 18070), 'pp_c_integer_constant': ([], 18070), 'pp_c_type_cast': ([], 18070), 'pp_c_enumeration_constant': ([], 18070), 'pp_c_cast_expression': ([], 18070), 'pp_c_unary_expression': ([], 18070), 'pp_c_additive_expression': ([], 18070), 'pp_c_shift_expression': ([], 18070), 'pp_c_relational_expression': ([], 18070), 'pp_c_equality_expression': ([], 18070), 'pp_c_and_expression': ([], 18070), 'pp_c_exclusive_or_expression': ([], 18070), 'pp_c_inclusive_or_expression': ([], 18070), 'pp_c_logical_and_expression': ([], 18070), 'pp_c_logical_or_expression': ([], 18070), 'pp_c_expression': ([], 18070), 'pp_c_expression_list': ([], 18070), 'pp_c_primary_expression': ([], 18070), 'pp_c_brace_enclosed_initializer_list': ([], 18070), 'pp_c_compound_literal': ([], 18070), 'pp_c_constant': ([], 18070), 'pp_c_init_declarator': ([], 18070), 'pp_c_attributes': ([], 18070), 'pp_c_function_definition': ([], 18070), 'pp_c_id_expression': ([], 18070), 'init_call_expr_arg_iterator': ([], 18070), 'next_call_expr_arg': ([], 18070), 'first_call_expr_arg': ([], 18070), 'more_call_expr_args_p': ([], 18070), 'pp_c_complex_expr': ([], 18070), 'pp_c_postfix_expression': ([], 18070), 'pp_c_statement': ([], 18070), 'pp_c_conditional_expression': ([], 18070), 'pp_c_assignment_expression': ([], 18070), 'pp_c_multiplicative_expression': ([], 18070), 'pp_c_pointer': ([6], 18067), 'pp_c_abstract_declarator': ([2], 18069), 'pp_c_pretty_printer_init': ([], 18070), 'print_c_tree': ([], 18070)}, "PosixPath('602/dyn-string.bc')": {'dyn_string_init': ([], 1745), 'dyn_string_new': ([], 1745), 'dyn_string_release': ([], 1745), 'dyn_string_resize': ([], 1745), 'dyn_string_insert': ([], 1745), 'dyn_string_insert_cstr': ([], 1745), 'dyn_string_insert_char': ([], 1745), 'dyn_string_append': ([], 1745), 'dyn_string_append_cstr': ([], 1745), 'dyn_string_append_char': ([], 1745), 'dyn_string_eq': ([], 1745)}, "PosixPath('602/tree-inline.bc')": {'gsi_start': ([], 38550), 'unsave_expr_now': ([], 38550), 'copy_gimple_seq_and_replace_locals': ([], 38550), 'initialize_cfun': ([], 38550), 'remap_blocks': ([], 38550), 'build_duplicate_type': ([], 38550), 'expand_call_inline': ([], 38550), 'copy_phis_for_bb': ([], 38550), 'bb_seq': ([], 38550), 'gsi_last_bb': ([], 38550), 'copy_statement_list': ([], 38550), 'VEC_constructor_elt_gc_copy': ([], 38550), 'copy_tree_r': ([], 38550), 'VEC_tree_gc_copy': ([], 38550), 'var_ann': ([], 38550), 'can_be_nonlocal': ([0], 38547), 'VEC_tree_base_space': ([], 38550), 'VEC_tree_gc_reserve': ([], 38550), 'VEC_tree_base_quick_push': ([], 38550), 'VEC_tree_gc_safe_push': ([], 38550), 'get_var_ann': ([], 38550), 'remap_decl': ([], 38550), 'remap_type_1': ([], 38550), 'remap_ssa_name': ([], 38550), 'remap_decls': ([], 38550), 'remap_block': ([], 38550), 'copy_bind_expr': ([], 38550), 'copy_tree_body_r': ([16, 57], 38542), 'gsi_stmt': ([], 38550), 'gimple_ops': ([], 38550), 'gimple_op': ([], 38550), 'gimple_return_retval': ([], 38550), 'gimple_omp_for_index': ([], 38550), 'gimple_omp_for_set_index': ([], 38550), 'gimple_omp_for_initial': ([], 38550), 'gimple_omp_for_set_initial': ([], 38550), 'gimple_omp_for_final': ([], 38550), 'gimple_omp_for_set_final': ([], 38550), 'gimple_omp_for_incr': ([], 38550), 'gimple_omp_for_set_incr': ([], 38550), 'gimple_omp_for_cond': ([], 38550), 'gimple_omp_for_set_cond': ([], 38550), 'gimple_assign_lhs': ([], 38550), 'gimple_assign_rhs1': ([], 38550), 'gimple_debug_bind_get_var': ([], 38550), 'gimple_debug_bind_get_value': ([], 38550), 'VEC_gimple_base_space': ([], 38550), 'VEC_gimple_heap_reserve': ([], 38550), 'VEC_gimple_base_quick_push': ([], 38550), 'VEC_gimple_heap_safe_push': ([], 38550), 'gimple_call_fn': ([], 38550), 'gimple_call_fndecl': ([], 38550), 'gimple_call_arg': ([], 38550), 'gimple_set_op': ([], 38550), 'gimple_call_set_arg': ([], 38550), 'gimple_op_ptr': ([], 38550), 'remap_gimple_op_r': ([10, 11], 38545), 'remap_gimple_seq': ([], 38550), 'remap_gimple_stmt': ([21], 38546), 'has_label_address_in_static_1': ([], 38550), 'copy_forbidden': ([0], 38539), 'gimple_goto_dest': ([], 38550), 'inline_forbidden_p_stmt': ([], 38550), 'inline_forbidden_p': ([], 38550), 'tree_inlinable_function_p': ([], 38550), 'gimple_assign_rhs_code': ([], 38550), 'gimple_assign_rhs2': ([], 38550), 'estimate_num_insns': ([0, 37], 38543), 'gsi_start_bb': ([], 38550), 'estimate_num_insns_fn': ([], 38550), 'prepend_lexical_block': ([], 38550), 'gimple_call_chain': ([], 38550), 'copy_decl_for_dup_finish': ([0], 38532), 'copy_decl_to_var': ([], 38550), 'self_inlining_addr_expr': ([], 38550), 'insert_debug_decl_map': ([], 38550), 'insert_init_debug_bind': ([], 38550), 'gimple_assign_rhs_class': ([], 38550), 'gimple_call_return_type': ([], 38550), 'gimple_expr_type': ([], 38550), 'gimple_assign_set_rhs1': ([], 38550), 'insert_init_stmt': ([], 38550), 'setup_one_parameter': ([], 38550), 'declare_inline_vars': ([], 38550), 'initialize_inlined_parameters': ([], 38550), 'gimple_call_lhs': ([], 38550), 'is_global_var': ([], 38550), 'copy_result_decl_to_var': ([], 38550), 'declare_return_variable': ([], 38550), 'VEC_tree_heap_reserve_exact': ([], 38550), 'VEC_tree_heap_safe_grow': ([], 38550), 'gimple_call_arg_ptr': ([], 38550), 'gimple_call_set_lhs': ([], 38550), 'gimple_def_ops': ([], 38550), 'gimple_vdef': ([], 38550), 'op_iter_init': ([], 38550), 'op_iter_next_tree': ([], 38550), 'op_iter_init_tree': ([], 38550), 'copy_bb': ([], 38550), 'ei_end_p': ([], 38550), 'ei_cond': ([], 38550), 'ei_next': ([], 38550), 'delink_imm_use': ([], 38550), 'link_imm_use_to_list': ([], 38550), 'link_imm_use': ([], 38550), 'set_ssa_use_from_ptr': ([], 38550), 'update_ssa_across_abnormal_edges': ([], 38550), 'copy_edges_for_bb': ([], 38550), 'phi_nodes': ([], 38550), 'gimple_phi_arg_location_from_edge': ([], 38550), 'copy_cfg_body': ([], 38550), 'VEC_gimple_base_iterate': ([], 38550), 'gimple_debug_bind_set_var': ([], 38550), 'gimple_debug_bind_has_value_p': ([], 38550), 'gimple_debug_bind_get_value_ptr': ([], 38550), 'gimple_debug_bind_reset_value': ([], 38550), 'copy_debug_stmt': ([75], 38527), 'copy_debug_stmts': ([], 38550), 'copy_body': ([29], 38546), 'gimple_expand_calls_inline': ([], 38550), 'fold_marked_statements': ([0, 4], 38535), 'delete_unreachable_blocks_update_callgraph': ([], 38550), 'copy_decl_no_change': ([], 38550), 'optimize_inline_calls': ([], 38550), 'unsave_expr_1': ([], 38550), 'unsave_r': ([], 38550), 'mark_local_for_remap_r': ([], 38550), 'replace_locals_op': ([], 38550), 'replace_locals_stmt': ([], 38550), 'gimple_label_label': ([], 38550), 'mark_local_labels_stmt': ([], 38550), 'VEC_ipa_opt_pass_heap_copy': ([], 38550), 'VEC_ipa_opt_pass_base_space': ([], 38550), 'VEC_ipa_opt_pass_heap_reserve': ([], 38550), 'VEC_ipa_opt_pass_base_quick_push': ([], 38550), 'VEC_ipa_opt_pass_heap_safe_push': ([], 38550), 'copy_static_chain': ([], 38550), 'copy_arguments_for_versioning': ([], 38550), 'single_succ_edge': ([], 38550), 'VEC_gimple_base_pop': ([], 38550), 'update_clone_info': ([], 38550), 'tree_function_versioning': ([128, 195], 38540), 'init_call_expr_arg_iterator': ([], 38550), 'next_call_expr_arg': ([], 38550), 'first_call_expr_arg': ([], 38550), 'copy_tree_body': ([], 38550), 'maybe_inline_call_in_expr': ([], 38550), 'tree_can_inline_p': ([], 38550)}, "PosixPath('602/tree-ssa-phiprop.bc')": {'single_succ_edge': ([], 4726), 'VEC_basic_block_base_iterate': ([], 4726), 'gsi_stmt': ([], 4726), 'clear_and_done_ssa_iter': ([], 4726), 'op_iter_next_use': ([], 4726), 'op_iter_init_phiuse': ([], 4726), 'gimple_ops': ([], 4726), 'gimple_op': ([], 4726), 'gimple_assign_rhs1': ([], 4726), 'end_imm_use_stmt_p': ([], 4726), 'delink_imm_use': ([], 4726), 'link_imm_use_to_list': ([], 4726), 'move_use_after_head': ([2], 4712), 'gimple_def_ops': ([], 4726), 'gimple_vdef': ([], 4726), 'gimple_use_ops': ([], 4726), 'gimple_vuse': ([], 4726), 'op_iter_init': ([], 4726), 'op_iter_init_use': ([], 4726), 'gimple_vuse_op': ([], 4726), 'link_use_stmts_after': ([], 4726), 'first_imm_use_stmt': ([], 4726), 'end_imm_use_stmt_traverse': ([], 4726), 'next_imm_use_stmt': ([], 4726), 'phivn_valid_p': ([], 4726), 'single_imm_use': ([], 4726), 'gimple_assign_lhs': ([], 4726), 'gimple_assign_rhs_code': ([], 4726), 'ei_end_p': ([], 4726), 'ei_cond': ([], 4726), 'gimple_phi_arg_location_from_edge': ([], 4726), 'gimple_set_op': ([], 4726), 'gimple_assign_set_lhs': ([], 4726), 'ei_next': ([], 4726), 'phiprop_insert_phi': ([], 4726), 'gimple_assign_set_rhs1': ([], 4726), 'propagate_with_phi': ([], 4726), 'tree_ssa_phiprop': ([150], 4720)}, "PosixPath('602/cpp_files.bc')": {'_cpp_report_missing_guards': ([], 9727), '_cpp_read_file_entries': ([], 9727), 'read_file': ([], 9727), 'search_cache': ([], 9727), 'make_cpp_file': ([], 9727), 'append_file_to_dir': ([], 9727), 'read_name_map': ([], 9727), 'allocate_file_hash_entries': ([], 9727), 'new_file_hash_entry': ([], 9727), 'make_cpp_dir': ([], 9727), 'remap_filename': ([], 9727), 'open_file': ([0], 9700), 'validate_pch': ([], 9727), 'pch_open_file': ([], 9727), 'open_file_failed': ([], 9727), 'find_file_in_dir': ([], 9727), 'search_path_exhausted': ([], 9727), '_cpp_find_file': ([], 9727), 'read_file_guts': ([], 9727), 'pchf_compare': ([], 9727), 'check_file_against_entries': ([], 9727), 'destroy_cpp_file': ([], 9727), 'should_stack_file': ([], 9727), '_cpp_stack_file': ([], 9727), 'dir_name_of_file': ([], 9727), 'search_path_head': ([], 9727), '_cpp_stack_include': ([], 9727), 'cpp_included': ([], 9727), 'cpp_included_before': ([], 9727), 'file_hash_eq': ([], 9727), 'file_hash_hash': ([], 9727), '_cpp_init_files': ([], 9727), '_cpp_cleanup_files': ([], 9727), 'cpp_clear_file_cache': ([], 9727), 'cpp_make_system_header': ([], 9727), 'report_missing_guard': ([], 9727), '_cpp_compare_file_date': ([], 9727), '_cpp_pop_file_buffer': ([], 9727), 'cpp_set_include_chains': ([], 9727), '_cpp_save_file_entries': ([], 9727)}, "PosixPath('602/insn-extract.bc')": {'insn_extract': ([], 37844)}, "PosixPath('602/lto-streamer-in.bc')": {'fixup_eh_region_pointers': ([], 18762), 'lto_input_eh_catch_list': ([], 18762), 'lto_data_in_create': ([], 18762), 'VEC_basic_block_base_space': ([], 18762), 'VEC_basic_block_gc_reserve_exact': ([], 18762), 'VEC_basic_block_gc_safe_grow': ([], 18762), 'VEC_basic_block_gc_safe_grow_cleared': ([], 18762), 'set_bb_seq': ([], 18762), 'make_new_block': ([], 18762), 'input_cfg': ([], 18762), 'clear_line_info': ([], 18762), 'VEC_bitpack_word_t_base_space': ([], 18762), 'VEC_bitpack_word_t_heap_reserve': ([], 18762), 'VEC_bitpack_word_t_base_quick_push': ([], 18762), 'VEC_bitpack_word_t_heap_safe_push': ([], 18762), 'lto_input_bitpack': ([], 18762), 'lto_file_decl_data_get_type': ([], 18762), 'lto_file_decl_data_get_field_decl': ([], 18762), 'lto_file_decl_data_get_fn_decl': ([], 18762), 'lto_file_decl_data_get_type_decl': ([], 18762), 'lto_file_decl_data_get_namespace_decl': ([], 18762), 'lto_file_decl_data_get_var_decl': ([], 18762), 'lto_input_tree_ref': ([], 18762), 'input_string_internal': ([9], 18758), 'input_string': ([], 18762), 'input_string_cst': ([], 18762), 'input_identifier': ([], 18762), 'unpack_ts_base_value_fields': ([], 18762), 'unpack_ts_real_cst_value_fields': ([], 18762), 'unpack_ts_fixed_cst_value_fields': ([], 18762), 'unpack_ts_decl_common_value_fields': ([], 18762), 'unpack_ts_decl_with_vis_value_fields': ([], 18762), 'unpack_ts_type_value_fields': ([], 18762), 'unpack_value_fields': ([], 18762), 'lto_materialize_tree': ([], 18762), 'canon_file_name': ([], 18762), 'lto_input_location': ([], 18762), 'tree_operand_length': ([], 18762), 'VEC_tree_base_space': ([], 18762), 'VEC_tree_gc_reserve': ([], 18762), 'VEC_tree_base_quick_push': ([], 18762), 'VEC_tree_gc_safe_push': ([], 18762), 'VEC_constructor_elt_base_space': ([], 18762), 'VEC_constructor_elt_gc_reserve': ([], 18762), 'VEC_constructor_elt_gc_safe_push': ([], 18762), 'lto_stream_as_builtin_p': ([], 18762), 'get_resolution': ([], 18762), 'lto_register_var_decl_in_symtab': ([], 18762), 'lto_register_function_decl_in_symtab': ([], 18762), 'lto_input_tree': ([0], 18753), 'input_ssa_names': ([], 18762), 'VEC_eh_region_base_space': ([], 18762), 'VEC_eh_region_gc_reserve_exact': ([], 18762), 'VEC_eh_region_gc_safe_grow': ([], 18762), 'input_eh_region': ([], 18762), 'VEC_eh_landing_pad_base_space': ([], 18762), 'VEC_eh_landing_pad_gc_reserve_exact': ([], 18762), 'VEC_eh_landing_pad_gc_safe_grow': ([], 18762), 'VEC_tree_gc_reserve_exact': ([], 18762), 'VEC_tree_gc_safe_grow': ([], 18762), 'VEC_uchar_base_space': ([], 18762), 'VEC_uchar_gc_reserve_exact': ([], 18762), 'VEC_uchar_gc_safe_grow': ([], 18762), 'VEC_eh_region_base_iterate': ([], 18762), 'VEC_eh_landing_pad_base_iterate': ([], 18762), 'input_eh_regions': ([], 18762), 'bb_seq': ([], 18762), 'gsi_start_bb': ([], 18762), 'gimple_ops': ([], 18762), 'gimple_set_op': ([], 18762), 'maybe_fixup_handled_component': ([], 18762), 'gimple_op': ([], 18762), 'gimple_label_label': ([], 18762), 'emit_label_in_global_context_p': ([], 18762), 'gimple_asm_output_op': ([], 18762), 'gimple_assign_lhs': ([], 18762), 'gimple_assign_rhs1': ([], 18762), 'gimple_assign_set_rhs1': ([], 18762), 'gimple_assign_set_lhs': ([], 18762), 'gimple_call_lhs': ([], 18762), 'gimple_call_fn': ([], 18762), 'gimple_call_return_type': ([], 18762), 'gimple_call_set_lhs': ([], 18762), 'maybe_fixup_decls': ([], 18762), 'input_gimple_stmt': ([], 18762), 'lto_tag_check_set': ([], 18762), 'input_bb': ([], 18762), 'gsi_stmt': ([], 18762), 'fixup_call_stmt_edges_1': ([], 18762), 'fixup_call_stmt_edges': ([], 18762), 'input_function': ([], 18762), 'VEC_alias_pair_base_space': ([], 18762), 'VEC_alias_pair_gc_reserve': ([], 18762), 'VEC_alias_pair_gc_safe_push': ([], 18762), 'input_alias_pairs': ([], 18762), 'lto_data_in_delete': ([], 18762), 'lto_read_body': ([], 18762)}, "PosixPath('602/timevar.bc')": {'get_time': ([], 7087), 'timevar_accumulate': ([], 7087), 'timevar_push_1': ([], 7087), 'timevar_pop_1': ([], 7087), 'timevar_start': ([], 7087), 'timevar_stop': ([], 7087), 'timevar_print': ([], 7087)}, "PosixPath('602/profile.bc')": {'branch_prob': ([4, 693], 9876), 'compute_branch_probabilities': ([38], 9871), 'ei_end_p': ([], 9880), 'ei_cond': ([], 9880), 'bb_seq': ([], 9880), 'gsi_last_bb': ([], 9880), 'gsi_stmt': ([], 9880), 'single_succ_edge': ([], 9880), 'ei_next': ([], 9880), 'find_group': ([], 9880), 'union_groups': ([], 9880), 'find_spanning_tree': ([], 9880), 'gsi_start_bb': ([], 9880), 'gimple_filename': ([], 9880), 'gimple_lineno': ([], 9880), 'get_exec_counts': ([], 9880), 'read_profile_edge_counts': ([], 9880), 'is_edge_inconsistent': ([], 9880), 'is_inconsistent': ([], 9880), 'correct_negative_edge_counts': ([], 9880), 'set_bb_counts': ([], 9880), 'compute_value_histograms': ([], 9880), 'instrument_edges': ([], 9880), 'instrument_values': ([], 9880), 'end_branch_prob': ([], 9880)}, "PosixPath('602/sched-deps.bc')": {'sd_iterator_cond': ([], 28265), 'init_deps_global': ([], 28265), 'setup_insn_reg_uses': ([], 28265), 'init_dep_1': ([], 28265), 'init_dep': ([], 28265), 'sched_get_condition_with_rev': ([], 28265), 'conditions_mutex_p': ([], 28265), 'sched_insns_conditions_mutex_p': ([], 28265), 'sched_insn_is_legitimate_for_speculation_p': ([], 28265), 'sd_lists_size': ([], 28265), 'sd_lists_empty_p': ([], 28265), 'create_deps_list': ([], 28265), 'sd_init_insn': ([], 28265), 'free_deps_list': ([], 28265), 'sd_finish_insn': ([0], 28260), 'sd_iterator_start': ([], 28265), 'sd_find_dep_between_no_cache': ([234], 28264), 'sd_find_dep_between': ([], 28265), 'create_dep_node': ([], 28265), 'get_back_and_forw_lists': ([], 28265), 'attach_dep_link': ([], 28265), 'depl_on_debug_p': ([], 28265), 'add_to_deps_list': ([], 28265), 'set_dependency_caches': ([], 28265), 'sd_add_dep': ([], 28265), 'ask_dependency_caches': ([], 28265), 'detach_dep_link': ([], 28265), 'remove_from_deps_list': ([], 28265), 'change_spec_dep_to_hard': ([], 28265), 'estimate_dep_weak': ([], 28265), 'update_dependency_caches': ([], 28265), 'update_dep': ([], 28265), 'add_or_update_dep_1': ([], 28265), 'sd_resolve_dep': ([], 28265), 'sd_copy_back_deps': ([4], 28256), 'delete_dep_node': ([], 28265), 'sd_delete_dep': ([], 28265), 'dump_lists': ([], 28265), 'sd_debug_lists': ([], 28265), 'maybe_extend_reg_info_p': ([], 28265), 'add_dependence': ([], 28265), 'add_dependence_list_and_free': ([], 28265), 'flush_pending_lists': ([], 28265), 'extend_deps_reg_info': ([], 28265), 'deps_may_trap_p': ([], 28265), 'add_insn_mem_dependence': ([], 28265), 'sched_analyze_2': ([], 28265), 'sched_analyze_1': ([5], 28263), 'sched_analyze_reg': ([], 28265), 'bitmap_initialize_stat': ([], 28265), 'bmp_iter_set_init': ([], 28265), 'bmp_iter_set': ([], 28265), 'create_insn_reg_use': ([], 28265), 'mark_hard_regno_death': ([], 28265), 'mark_pseudo_death': ([], 28265), 'mark_reg_death': ([], 28265), 'insn_use_p': ([], 28265), 'create_insn_reg_set': ([], 28265), 'mark_insn_hard_regno_birth': ([], 28265), 'mark_insn_pseudo_birth': ([], 28265), 'mark_insn_reg_birth': ([7], 28263), 'setup_insn_reg_pressure_info': ([], 28265), 'sched_analyze_insn': ([], 28265), 'call_may_noreturn_p': ([], 28265), 'delete_all_dependences': ([], 28265), 'fixup_sched_groups': ([], 28265), 'deps_analyze_insn': ([88], 28261), 'deps_start_bb': ([], 28265), 'delete_dep_nodes_in_back_deps': ([], 28265), 'sched_free_deps': ([], 28265), 'init_deps': ([], 28265), 'init_deps_reg_last': ([], 28265), 'free_deps': ([], 28265), 'remove_from_both_dependence_lists': ([], 28265), 'remove_from_dependence_list': ([], 28265), 'remove_from_deps': ([], 28265), 'VEC_haifa_deps_insn_data_def_base_space': ([], 28265), 'VEC_haifa_deps_insn_data_def_heap_reserve_exact': ([], 28265), 'VEC_haifa_deps_insn_data_def_heap_safe_grow': ([], 28265), 'VEC_haifa_deps_insn_data_def_heap_safe_grow_cleared': ([], 28265), 'init_deps_data_vector': ([], 28265), 'extend_dependency_caches': ([], 28265), 'sched_deps_init': ([], 28265), 'sched_deps_finish': ([2], 28263), 'maybe_add_or_update_dep_1': ([], 28265), 'haifa_note_dep': ([], 28265), 'haifa_note_mem_dep': ([], 28265)}, "PosixPath('602/mkstemps.bc')": {'mkstemps': ([], 743)}, "PosixPath('602/tree-cfg.bc')": {'first_imm_use_on_stmt': ([], 64324), 'next_imm_use_on_stmt': ([], 64324), 'clear_special_calls': ([], 64324), 'gimple_duplicate_sese_region': ([], 64324), 'replace_block_vars_by_duplicates': ([], 64324), 'gimple_verify_flow_info': ([11, 258], 64307), 'gsi_start': ([], 64324), 'VEC_basic_block_base_space': ([], 64324), 'VEC_basic_block_gc_reserve_exact': ([], 64324), 'VEC_basic_block_gc_safe_grow': ([], 64324), 'VEC_basic_block_gc_safe_grow_cleared': ([], 64324), 'init_empty_tree_cfg_for_function': ([], 64324), 'bb_seq': ([], 64324), 'gsi_last_bb': ([], 64324), 'gsi_stmt': ([], 64324), 'last_stmt': ([], 64324), 'gimple_ops': ([], 64324), 'gimple_op': ([], 64324), 'gimple_cond_lhs': ([], 64324), 'gimple_cond_rhs': ([], 64324), 'gimple_set_op': ([], 64324), 'gimple_cond_set_lhs': ([], 64324), 'gimple_cond_set_rhs': ([], 64324), 'gimple_cond_make_false': ([], 64324), 'gimple_cond_make_true': ([], 64324), 'fold_cond_expr_cond': ([0], 64319), 'edge_to_cases_cleanup': ([], 64324), 'gsi_start_bb': ([], 64324), 'label_to_block_fn': ([], 64324), 'gimple_label_label': ([], 64324), 'make_abnormal_goto_edges': ([], 64324), 'gimple_cond_true_label': ([], 64324), 'gimple_cond_false_label': ([], 64324), 'main_block_label': ([], 64324), 'gimple_cond_set_true_label': ([], 64324), 'gimple_cond_set_false_label': ([], 64324), 'gimple_switch_label': ([], 64324), 'gimple_asm_label_op': ([], 64324), 'gimple_goto_dest': ([], 64324), 'gimple_goto_set_dest': ([], 64324), 'VEC_eh_landing_pad_base_iterate': ([], 64324), 'ehr_next': ([], 64324), 'cleanup_dead_labels_eh': ([], 64324), 'cleanup_dead_labels': ([1, 11, 92], 64315), 'gimple_switch_default_label': ([], 64324), 'gimple_switch_set_label': ([], 64324), 'group_case_labels': ([], 64324), 'single_imm_use_1': ([], 64324), 'end_imm_use_stmt_p': ([], 64324), 'clear_and_done_ssa_iter': ([], 64324), 'op_iter_next_use': ([], 64324), 'op_iter_init_phiuse': ([], 64324), 'delink_imm_use': ([], 64324), 'link_imm_use_to_list': ([], 64324), 'move_use_after_head': ([2], 64310), 'gimple_def_ops': ([], 64324), 'gimple_vdef': ([], 64324), 'gimple_use_ops': ([], 64324), 'gimple_vuse': ([], 64324), 'op_iter_init': ([], 64324), 'op_iter_init_use': ([], 64324), 'gimple_vuse_op': ([], 64324), 'link_use_stmts_after': ([], 64324), 'first_imm_use_stmt': ([], 64324), 'next_imm_use_stmt': ([], 64324), 'has_zero_uses': ([], 64324), 'VEC_int_base_quick_push': ([], 64324), 'loop_outer': ([], 64324), 'VEC_int_base_iterate': ([], 64324), 'fel_next': ([], 64324), 'fel_init': ([], 64324), 'replace_uses_by': ([], 64324), 'single_noncomplex_succ': ([], 64324), 'notice_special_calls': ([], 64324), 'extract_true_false_edges_from_block': ([], 64324), 'find_taken_edge_cond_expr': ([], 64324), 'find_case_label_for_value': ([], 64324), 'find_taken_edge_switch_expr': ([], 64324), 'find_taken_edge': ([], 64324), 'gimple_debug_bb_n': ([], 64324), 'dump_cfg_stats': ([], 64324), 'dump_function_to_file': ([], 64324), 'gimple_dump_cfg': ([], 64324), 'is_ctrl_altering_stmt': ([], 64324), 'first_stmt': ([], 64324), 'gsi_prev_nondebug': ([], 64324), 'gsi_last_nondebug_bb': ([], 64324), 'last_and_only_stmt': ([5], 64321), 'gimple_assign_rhs1': ([], 64324), 'gimple_assign_rhs_code': ([], 64324), 'gimple_assign_rhs_class': ([], 64324), 'gimple_assign_lhs': ([], 64324), 'verify_types_in_gimple_min_lval': ([], 64324), 'verify_types_in_gimple_reference': ([1], 64309), 'verify_gimple_assign_single': ([], 64324), 'verify_gimple_assign_unary': ([], 64324), 'gimple_assign_rhs2': ([], 64324), 'verify_gimple_comparison': ([2], 64317), 'verify_gimple_assign_binary': ([], 64324), 'verify_gimple_assign': ([], 64324), 'gimple_call_fn': ([], 64324), 'gimple_call_lhs': ([], 64324), 'gimple_call_chain': ([], 64324), 'gimple_call_arg': ([], 64324), 'verify_gimple_call': ([], 64324), 'verify_gimple_goto': ([], 64324), 'gimple_switch_index': ([], 64324), 'verify_gimple_switch': ([], 64324), 'gimple_return_retval': ([], 64324), 'verify_gimple_return': ([], 64324), 'verify_gimple_phi': ([], 64324), 'verify_types_in_gimple_stmt': ([], 64324), 'verify_types_in_gimple_seq_2': ([0], 64323), 'tree_node_can_be_shared': ([0, 1], 64312), 'gsi_one_before_end_p': ([], 64324), 'gimple_call_fndecl': ([], 64324), 'verify_expr': ([0], 64321), 'verify_stmt': ([], 64324), 'verify_stmts': ([], 64324), 'gimple_block_label': ([], 64324), 'ei_end_p': ([], 64324), 'ei_cond': ([], 64324), 'phi_nodes': ([], 64324), 'ei_next': ([], 64324), 'gimple_phi_arg_location_from_edge': ([], 64324), 'add_phi_args_after_copy_edge': ([18, 20], 64303), 'add_phi_args_after_copy_bb': ([], 64324), 'add_phi_args_after_copy': ([], 64324), 'VEC_basic_block_heap_reserve': ([], 64324), 'VEC_basic_block_base_quick_push': ([], 64324), 'VEC_basic_block_heap_safe_push': ([], 64324), 'single_succ_edge': ([], 64324), 'gimple_duplicate_sese_tail': ([4, 15, 30, 68], 64267), 'gather_blocks_in_sese_region': ([], 64324), 'mark_virtual_ops_in_bb': ([], 64324), 'ei_safe_edge': ([], 64324), 'VEC_basic_block_base_iterate': ([], 64324), 'find_outermost_region_in_block': ([], 64324), 'replace_by_duplicate_decl': ([], 64324), 'replace_ssa_name': ([], 64324), 'link_imm_use': ([], 64324), 'set_ssa_use_from_ptr': ([], 64324), 'is_global_var': ([], 64324), 'move_stmt_op': ([5], 64316), 'gimple_call_set_arg': ([], 64324), 'move_stmt_r': ([], 64324), 'move_block_to_fn': ([], 64324), 'new_label_mapper': ([], 64324), 'move_sese_region_to_fn': ([0], 64297), 'print_pred_bbs': ([], 64324), 'print_succ_bbs': ([], 64324), 'print_loops_bb': ([], 64324), 'print_loop': ([], 64324), 'debug_loop_num': ([], 64324), 'bmp_iter_set_init': ([], 64324), 'bmp_iter_set': ([], 64324), 'remove_edge_and_dominated_blocks': ([], 64324), 'gimple_purge_dead_eh_edges': ([], 64324), 'gimple_purge_dead_abnormal_call_edges': ([], 64324), 'gimple_purge_all_dead_eh_edges': ([], 64324), 'do_warn_unused_result': ([1], 64322), 'execute_warn_function_noreturn': ([], 64324), 'execute_warn_function_return': ([], 64324), 'split_critical_edges': ([41], 64321), 'gimple_lv_adjust_loop_header_phi': ([5], 64312), 'gimple_lv_add_condition_to_bb': ([], 64324), 'gimple_execute_on_shrinking_pred': ([], 64324), 'gimple_execute_on_growing_pred': ([], 64324), 'need_fake_edge_p': ([], 64324), 'gimple_flow_call_edges_add': ([], 64324), 'gimple_block_ends_with_call_p': ([], 64324), 'gimple_make_forwarder_block': ([], 64324), 'reinstall_phi_args': ([], 64324), 'gimple_split_edge': ([], 64324), 'op_iter_next_def': ([], 64324), 'op_iter_init_def': ([], 64324), 'gimple_duplicate_bb': ([], 64324), 'set_bb_seq': ([], 64324), 'gimple_merge_blocks': ([33, 34, 85, 86, 148], 64261), 'gimple_can_merge_blocks_p': ([], 64324), 'gimple_split_block': ([2], 64318), 'remove_phi_nodes_and_edges_for_unreachable_block': ([], 64324), 'remove_bb': ([], 64324), 'gimple_try_redirect_by_replacing_jump': ([], 64324), 'get_cases_for_edge': ([], 64324), 'gimple_redirect_edge_and_branch': ([1], 64290), 'create_bb': ([7, 14], 64295), 'stmt_starts_bb_p': ([], 64324), 'gimple_has_lhs': ([], 64324), 'make_blocks': ([], 64324), 'factor_computed_gotos': ([], 64324), 'first_non_label_stmt': ([], 64324), 'same_line_p': ([], 64324), 'next_discriminator_for_locus': ([], 64324), 'assign_discriminator': ([], 64324), 'make_goto_expr_edges': ([], 64324), 'make_cond_expr_edges': ([], 64324), 'make_gimple_switch_edges': ([], 64324), 'make_gimple_asm_edges': ([], 64324), 'make_edges': ([], 64324), 'get_lineno': ([], 64324), 'gimple_cfg2vcg': ([], 64324), 'build_gimple_cfg': ([], 64324), 'execute_build_cfg': ([], 64324)}, "PosixPath('602/explow.bc')": {'trunc_int_for_mode': ([], 8402), 'plus_constant': ([], 8402), 'eliminate_constant_term': ([], 8402), 'expr_size': ([], 8402), 'int_expr_size': ([], 8402), 'force_reg': ([4], 8399), 'break_out_memory_refs': ([0], 8393), 'memory_address_addr_space': ([], 8402), 'use_anchored_address': ([2], 8397), 'validize_mem': ([], 8402), 'promote_decl_mode': ([0], 8401), 'adjust_stack': ([], 8402), 'anti_adjust_stack': ([], 8402), 'update_nonlocal_goto_save_area': ([], 8402), 'round_push': ([], 8402), 'anti_adjust_stack_and_probe': ([0], 8395), 'allocate_dynamic_stack_space': ([], 8402), 'probe_stack_range': ([], 8402), 'hard_function_value': ([], 8402)}, "PosixPath('602/print-rtl.bc')": {'print_rtx': ([7, 182], 6106), 'debug_rtx_list': ([], 6132), 'debug_rtx_range': ([], 6132), 'debug_rtx_find': ([], 6132), 'print_rtl': ([], 6132)}, "PosixPath('602/tree-ssa-ter.bc')": {'var_to_partition': ([], 4088), 'new_temp_expr_table': ([], 4088), 'bb_seq': ([], 4088), 'gsi_start_bb': ([], 4088), 'gsi_stmt': ([], 4088), 'gimple_def_ops': ([], 4088), 'gimple_vdef': ([], 4088), 'gimple_use_ops': ([], 4088), 'gimple_vuse': ([], 4088), 'op_iter_init': ([], 4088), 'op_iter_next_tree': ([], 4088), 'op_iter_init_tree': ([], 4088), 'single_ssa_tree_operand': ([], 4088), 'single_imm_use': ([], 4088), 'gimple_references_memory_p': ([], 4088), 'gimple_ops': ([], 4088), 'gimple_op': ([], 4088), 'gimple_call_fn': ([], 4088), 'gimple_call_return_type': ([], 4088), 'gimple_assign_rhs_code': ([], 4088), 'gimple_expr_type': ([], 4088), 'is_replaceable_p': ([], 4088), 'bmp_iter_set_init': ([], 4088), 'bmp_iter_set': ([], 4088), 'remove_from_partition_kill_list': ([], 4088), 'finished_with_expr': ([], 4088), 'mark_replaceable': ([], 4088), 'add_to_partition_kill_list': ([], 4088), 'make_dependent_on_partition': ([], 4088), 'add_dependence': ([], 4088), 'process_replaceable': ([], 4088), 'kill_virtual_exprs': ([], 4088), 'find_replaceable_in_bb': ([], 4088), 'free_temp_expr_table': ([], 4088), 'find_replaceable_exprs': ([], 4088)}, "PosixPath('602/spaces.bc')": {'spaces': ([], 194)}, "PosixPath('602/tree-complex.bc')": {'gsi_stmt': ([], 15182), 'bb_seq': ([], 15182), 'gsi_start_bb': ([], 15182), 'gimple_ops': ([], 15182), 'gimple_op': ([], 15182), 'gimple_call_lhs': ([], 15182), 'gimple_assign_lhs': ([], 15182), 'gimple_assign_rhs1': ([], 15182), 'gimple_assign_rhs_code': ([], 15182), 'gimple_assign_rhs2': ([], 15182), 'gimple_cond_lhs': ([], 15182), 'gimple_cond_rhs': ([], 15182), 'init_dont_simulate_again': ([], 15182), 'VEC_complex_lattice_t_base_space': ([], 15182), 'VEC_complex_lattice_t_heap_reserve_exact': ([], 15182), 'VEC_complex_lattice_t_heap_safe_grow': ([], 15182), 'VEC_complex_lattice_t_heap_safe_grow_cleared': ([], 15182), 'var_ann': ([], 15182), 'init_parameter_lattice_values': ([], 15182), 'VEC_tree_base_space': ([], 15182), 'VEC_tree_heap_reserve_exact': ([], 15182), 'VEC_tree_heap_safe_grow': ([], 15182), 'VEC_tree_heap_safe_grow_cleared': ([], 15182), 'single_succ_edge': ([], 15182), 'some_nonzerop': ([], 15182), 'find_lattice_value': ([], 15182), 'cvc_lookup': ([], 15182), 'create_one_component_var': ([], 15182), 'cvc_insert': ([], 15182), 'get_component_var': ([], 15182), 'get_component_ssa_name': ([], 15182), 'set_component_ssa_name': ([], 15182), 'update_parameter_components': ([], 15182), 'extract_component': ([], 15182), 'delink_imm_use': ([], 15182), 'link_imm_use_to_list': ([], 15182), 'link_imm_use': ([], 15182), 'set_ssa_use_from_ptr': ([], 15182), 'update_phi_components': ([], 15182), 'ei_end_p': ([], 15182), 'ei_cond': ([], 15182), 'ei_next': ([], 15182), 'update_complex_assignment': ([], 15182), 'gimple_set_op': ([], 15182), 'gimple_assign_set_lhs': ([], 15182), 'gimple_assign_set_rhs1': ([], 15182), 'gimple_return_set_retval': ([], 15182), 'expand_complex_move': ([], 15182), 'gimple_call_set_lhs': ([], 15182), 'expand_complex_libcall': ([], 15182), 'expand_complex_multiplication': ([], 15182), 'gsi_last_bb': ([], 15182), 'expand_complex_div_wide': ([], 15182), 'expand_complex_division': ([], 15182), 'gimple_return_retval': ([], 15182), 'gimple_cond_set_lhs': ([], 15182), 'gimple_cond_set_rhs': ([], 15182), 'expand_complex_comparison': ([], 15182), 'expand_complex_operations_1': ([], 15182), 'complex_visit_phi': ([], 15182), 'complex_visit_stmt': ([3], 15175), 'tree_lower_complex': ([], 15182)}, "PosixPath('602/i386-c.bc')": {'ix86_pragma_target_parse': ([], 3294)}, "PosixPath('602/cpp_mkdeps.bc')": {'deps_free': ([0, 1, 2], 2597), 'apply_vpath': ([], 2603), 'munge': ([], 2603), 'deps_add_target': ([], 2603), 'deps_add_default_target': ([], 2603), 'deps_add_dep': ([10], 2601), 'deps_add_vpath': ([21], 2602), 'deps_write': ([], 2603), 'deps_phony_targets': ([], 2603), 'deps_save': ([], 2603), 'deps_restore': ([], 2603)}, "PosixPath('602/convert.bc')": {'convert_to_pointer': ([], 8815), 'strip_float_extensions': ([3, 4], 8804), 'convert_to_real': ([], 8815), 'convert_to_integer': ([0, 106], 8809), 'convert_to_complex': ([], 8815), 'convert_to_vector': ([], 8815), 'convert_to_fixed': ([], 8815)}, "PosixPath('602/insn-automata.bc')": {'dfa_insn_code_enlarge': ([], 149699), 'dfa_insn_code': ([], 149699), 'internal_min_issue_delay': ([], 149699), 'internal_state_transition': ([], 149699), 'state_transition': ([], 149699), 'min_issue_delay': ([], 149699), 'min_insn_conflict_delay': ([], 149699), 'insn_latency': ([], 149699), 'maximal_insn_latency': ([], 149699), 'print_reservation': ([], 149699), 'dfa_clean_insn_cache': ([], 149699), 'dfa_clear_single_insn_cache': ([], 149699)}, "PosixPath('602/c-pch.bc')": {'pch_init': ([], 3986), 'c_common_valid_pch': ([], 3986), 'c_common_read_pch': ([], 3986), 'c_common_write_pch': ([], 3986), 'c_common_no_more_pch': ([], 3986), 'c_common_pch_pragma': ([], 3986)}, "PosixPath('602/reginfo.bc')": {'init_move_cost': ([], 9119), 'bmp_iter_set_init': ([], 9119), 'bmp_iter_set': ([], 9119), 'reg_set_to_hard_reg_set': ([], 9119), 'init_reg_sets': ([], 9119), 'choose_hard_reg_mode': ([], 9119), 'init_reg_modes_target': ([], 9119), 'init_reg_sets_1': ([], 9119), 'init_regs': ([], 9119), 'init_fake_stack_mems': ([], 9119), 'fix_register': ([], 9119), 'globalize_reg': ([], 9119), 'resize_reg_info': ([], 9119), 'setup_reg_classes': ([], 9119), 'reg_scan_mark_refs': ([21], 9110), 'reg_scan': ([], 9119), 'record_subregs_of_mode': ([], 9119), 'find_subregs_of_mode': ([], 9119), 'init_subregs_of_mode': ([], 9119), 'invalid_mode_change_p': ([], 9119)}, "PosixPath('602/gtype-desc.bc')": {'gt_ggc_mx_VEC_ipa_edge_args_t_gc': ([], 54682), 'gt_ggc_mx_ssa_operand_memory_d': ([0], 54678), 'gt_ggc_mx_section': ([], 54682), 'gt_ggc_mx_gimple_statement_d': ([140], 54680), 'gt_ggc_mx_basic_block_def': ([], 54682), 'gt_ggc_mx_rtl_bb_info': ([], 54682), 'gt_ggc_mx_gimple_bb_info': ([], 54682), 'gt_ggc_mx_loop': ([], 54682), 'gt_ggc_mx_loop_exit': ([], 54682), 'gt_ggc_mx_nb_iter_bound': ([2], 54678), 'gt_ggc_mx_edge_def': ([], 54682), 'gt_ggc_mx_rtx_def': ([10], 54677), 'gt_ggc_mx_mem_attrs': ([], 54682), 'gt_ggc_mx_object_block': ([], 54682), 'gt_ggc_mx_gimple_seq_d': ([4], 54678), 'gt_ggc_mx_gimple_seq_node_d': ([6], 54677), 'gt_ggc_mx_eh_catch_d': ([], 54682), 'gt_ggc_mx_eh_landing_pad_d': ([], 54682), 'gt_ggc_mx_eh_region_d': ([], 54682), 'gt_ggc_mx_constant_descriptor_tree': ([], 54682), 'gt_ggc_mx_cgraph_asm_node': ([], 54682), 'gt_ggc_mx_varpool_node': ([], 54682), 'gt_ggc_mx_ipa_replace_map': ([], 54682), 'gt_ggc_mx_bitmap_element_def': ([], 54682), 'gt_ggc_mx_bitmap_head_def': ([], 54682), 'gt_ggc_mx_bitmap_obstack': ([], 54682), 'gt_ggc_mx_cgraph_node': ([], 54682), 'gt_ggc_m_P11cgraph_edge4htab': ([3, 4], 54675), 'gt_ggc_mx_cgraph_edge': ([], 54682), 'gt_ggc_m_P27cgraph_node_set_element_def4htab': ([3, 4], 54675), 'gt_ggc_mx_elt_loc_list': ([], 54682), 'gt_ggc_mx_cselib_val_struct': ([], 54682), 'gt_ggc_mx_elt_list': ([], 54682), 'gt_ggc_mx_types_used_by_vars_entry': ([], 54682), 'gt_ggc_m_P9loop_exit4htab': ([3, 4], 54675), 'gt_ggc_mx_loops': ([], 54682), 'gt_ggc_mx_control_flow_graph': ([], 54682), 'gt_ggc_m_P15throw_stmt_node4htab': ([3, 4], 54675), 'gt_ggc_mx_eh_status': ([], 54682), 'gt_ggc_m_P9tree_node4htab': ([3, 4], 54675), 'gt_ggc_mx_gimple_df': ([], 54682), 'gt_ggc_mx_sequence_stack': ([], 54682), 'gt_ggc_mx_tree_map': ([], 54682), 'gt_ggc_mx_tree_statement_list_node': ([], 54682), 'gt_ggc_mx_varray_head_tag': ([], 54682), 'gt_ggc_mx_VEC_constructor_elt_gc': ([], 54682), 'gt_ggc_mx_VEC_alias_pair_gc': ([], 54682), 'gt_ggc_mx_machine_function': ([], 54682), 'gt_ggc_mx_function': ([], 54682), 'gt_ggc_mx_answer': ([], 54682), 'gt_ggc_mx_cpp_macro': ([0, 1], 54675), 'gt_ggc_mx_line_maps': ([0], 54680), 'gt_ggc_m_SP9tree_node17splay_tree_node_s': ([], 54682), 'gt_ggc_m_P9tree_nodeP9tree_node17splay_tree_node_s': ([], 54682), 'gt_ggc_m_IP9tree_node17splay_tree_node_s': ([], 54682), 'gt_ggc_m_P12tree_int_map4htab': ([3, 4], 54675), 'gt_ggc_m_P12varpool_node4htab': ([3, 4], 54675), 'gt_ggc_m_P24constant_descriptor_tree4htab': ([3, 4], 54675), 'gt_ggc_m_P12object_block4htab': ([3, 4], 54675), 'gt_ggc_m_P7section4htab': ([3, 4], 54675), 'gt_ggc_m_P17tree_priority_map4htab': ([3, 4], 54675), 'gt_ggc_m_P8tree_map4htab': ([3, 4], 54675), 'gt_ggc_m_P9reg_attrs4htab': ([3, 4], 54675), 'gt_ggc_m_P9mem_attrs4htab': ([3, 4], 54675), 'gt_ggc_m_P7rtx_def4htab': ([3, 4], 54675), 'gt_ggc_m_P11cgraph_node4htab': ([3, 4], 54675), 'gt_ggc_m_P24types_used_by_vars_entry4htab': ([3, 4], 54675), 'gt_pch_p_22VEC_ipa_edge_args_t_gc': ([3], 54671), 'gt_pch_nx_VEC_ipa_edge_args_t_gc': ([3], 54664), 'gt_pch_nx_ssa_operand_memory_d': ([0], 54678), 'gt_pch_nx_section': ([], 54682), 'gt_pch_p_7rtx_def': ([], 54682), 'gt_pch_p_18gimple_statement_d': ([7], 54670), 'gt_pch_nx_gimple_statement_d': ([140], 54680), 'gt_pch_nx_basic_block_def': ([], 54682), 'gt_pch_nx_rtl_bb_info': ([], 54682), 'gt_pch_nx_gimple_bb_info': ([], 54682), 'gt_pch_nx_loop': ([], 54682), 'gt_pch_nx_loop_exit': ([], 54682), 'gt_pch_nx_nb_iter_bound': ([2], 54678), 'gt_pch_nx_edge_def': ([], 54682), 'gt_pch_nx_rtx_def': ([7], 54677), 'gt_pch_nx_mem_attrs': ([], 54682), 'gt_pch_nx_object_block': ([], 54682), 'gt_pch_nx_gimple_seq_d': ([4], 54678), 'gt_pch_nx_gimple_seq_node_d': ([8], 54678), 'gt_pch_nx_eh_catch_d': ([], 54682), 'gt_pch_nx_eh_landing_pad_d': ([], 54682), 'gt_pch_nx_eh_region_d': ([], 54682), 'gt_pch_nx_constant_descriptor_tree': ([], 54682), 'gt_pch_nx_cgraph_asm_node': ([], 54682), 'gt_pch_nx_varpool_node': ([], 54682), 'gt_pch_p_P11cgraph_edge4htab': ([4], 54677), 'gt_pch_nx_ipa_replace_map': ([], 54682), 'gt_pch_nx_bitmap_element_def': ([], 54682), 'gt_pch_nx_bitmap_head_def': ([], 54682), 'gt_pch_nx_bitmap_obstack': ([], 54682), 'gt_pch_nx_cgraph_node': ([], 54682), 'gt_pch_n_P11cgraph_edge4htab': ([3, 4], 54675), 'gt_pch_nx_cgraph_edge': ([], 54682), 'gt_pch_p_P27cgraph_node_set_element_def4htab': ([4], 54677), 'gt_pch_n_P27cgraph_node_set_element_def4htab': ([3, 4], 54675), 'gt_pch_nx_elt_loc_list': ([], 54682), 'gt_pch_nx_cselib_val_struct': ([], 54682), 'gt_pch_nx_elt_list': ([], 54682), 'gt_pch_nx_types_used_by_vars_entry': ([], 54682), 'gt_pch_p_P9loop_exit4htab': ([4], 54677), 'gt_pch_n_P9loop_exit4htab': ([3, 4], 54675), 'gt_pch_nx_loops': ([], 54682), 'gt_pch_nx_control_flow_graph': ([], 54682), 'gt_pch_p_P15throw_stmt_node4htab': ([4], 54677), 'gt_pch_n_P15throw_stmt_node4htab': ([3, 4], 54675), 'gt_pch_nx_eh_status': ([], 54682), 'gt_pch_p_P9tree_node4htab': ([4], 54677), 'gt_pch_n_P9tree_node4htab': ([3, 4], 54675), 'gt_pch_nx_gimple_df': ([], 54682), 'gt_pch_nx_sequence_stack': ([], 54682), 'gt_pch_nx_tree_map': ([], 54682), 'gt_pch_nx_tree_statement_list_node': ([], 54682), 'gt_pch_p_15varray_head_tag': ([], 54682), 'gt_pch_nx_varray_head_tag': ([], 54682), 'gt_pch_nx_VEC_constructor_elt_gc': ([], 54682), 'gt_pch_nx_VEC_alias_pair_gc': ([], 54682), 'gt_pch_nx_machine_function': ([], 54682), 'gt_pch_nx_function': ([], 54682), 'gt_pch_p_9cpp_token': ([], 54682), 'gt_pch_p_6answer': ([], 54682), 'gt_pch_nx_answer': ([], 54682), 'gt_pch_p_9cpp_macro': ([2], 54677), 'gt_pch_nx_cpp_macro': ([0, 1], 54675), 'gt_pch_p_9line_maps': ([3], 54679), 'gt_pch_nx_line_maps': ([0], 54680), 'gt_pch_n_SP9tree_node17splay_tree_node_s': ([], 54682), 'gt_pch_n_P9tree_nodeP9tree_node17splay_tree_node_s': ([], 54682), 'gt_pch_n_IP9tree_node17splay_tree_node_s': ([], 54682), 'gt_pch_p_P12tree_int_map4htab': ([4], 54677), 'gt_pch_n_P12tree_int_map4htab': ([3, 4], 54675), 'gt_pch_p_P12varpool_node4htab': ([4], 54677), 'gt_pch_n_P12varpool_node4htab': ([3, 4], 54675), 'gt_pch_p_P24constant_descriptor_tree4htab': ([4], 54677), 'gt_pch_n_P24constant_descriptor_tree4htab': ([3, 4], 54675), 'gt_pch_p_P12object_block4htab': ([4], 54677), 'gt_pch_n_P12object_block4htab': ([3, 4], 54675), 'gt_pch_p_P7section4htab': ([4], 54677), 'gt_pch_n_P7section4htab': ([3, 4], 54675), 'gt_pch_p_P17tree_priority_map4htab': ([4], 54677), 'gt_pch_n_P17tree_priority_map4htab': ([3, 4], 54675), 'gt_pch_p_P8tree_map4htab': ([4], 54677), 'gt_pch_n_P8tree_map4htab': ([3, 4], 54675), 'gt_pch_p_P9reg_attrs4htab': ([4], 54677), 'gt_pch_n_P9reg_attrs4htab': ([3, 4], 54675), 'gt_pch_p_P9mem_attrs4htab': ([4], 54677), 'gt_pch_n_P9mem_attrs4htab': ([3, 4], 54675), 'gt_pch_p_P7rtx_def4htab': ([4], 54677), 'gt_pch_n_P7rtx_def4htab': ([3, 4], 54675), 'gt_pch_p_P11cgraph_node4htab': ([4], 54677), 'gt_pch_n_P11cgraph_node4htab': ([3, 4], 54675), 'gt_pch_p_P24types_used_by_vars_entry4htab': ([4], 54677), 'gt_pch_n_P24types_used_by_vars_entry4htab': ([3, 4], 54675)}, "PosixPath('602/bid2dpd_dpd2bid.bc')": {'_bid_to_dpd32': ([], 92005), '_dpd_to_bid32': ([], 92005), '_bid_to_dpd64': ([], 92005), '_dpd_to_bid64': ([], 92005), '_bid_to_dpd128': ([], 92005), '_dpd_to_bid128': ([], 92005)}, "PosixPath('602/plugin.bc')": {'get_named_event_id': ([], 5044), 'register_callback': ([], 5044), 'add_new_plugin': ([], 5044), 'parse_plugin_arg_opt': ([], 5044), 'register_plugin_info': ([], 5044), 'unregister_callback': ([], 5044), 'invoke_plugin_callbacks': ([], 5044), 'print_version_one_plugin': ([], 5044), 'print_plugins_versions': ([], 5044), 'print_help_one_plugin': ([], 5044), 'print_plugins_help': ([], 5044), 'dump_active_plugins': ([], 5044), 'plugin_default_version_check': ([], 5044)}, "PosixPath('602/decimal128.bc')": {'__dpd128FromNumber': ([28], 3567), '__dpd128ToNumber': ([4, 5, 6], 3523), '__dpd128ToString': ([], 3572), 'decimal128FromNumber': ([], 3572), 'decimal128ToNumber': ([], 3572)}, "PosixPath('602/lto-wpa-fixup.bc')": {'lto_fixup_nothrow_decls': ([], 1354), 'lto_mark_nothrow_fndecl': ([], 1354), 'lto_file_decl_data_get_fn_decl': ([], 1354), 'lto_input_wpa_fixup_1': ([], 1354), 'lto_input_wpa_fixup': ([], 1354), 'VEC_tree_base_space': ([], 1354), 'VEC_tree_heap_reserve': ([], 1354), 'VEC_tree_base_quick_push': ([], 1354), 'VEC_tree_heap_safe_push': ([], 1354), 'lto_output_wpa_fixup': ([], 1354)}, "PosixPath('602/cfgrtl.bc')": {'force_nonfallthru_and_redirect': ([], 21712), 'can_delete_label_p': ([], 21712), 'delete_insn': ([0], 21702), 'ei_end_p': ([], 21712), 'ei_safe_edge': ([], 21712), 'ei_next': ([], 21712), 'single_succ_edge': ([], 21712), 'ei_cond': ([], 21712), 'purge_dead_edges': ([5, 6], 21704), 'delete_insn_and_edges': ([], 21712), 'delete_insn_chain': ([], 21712), 'update_bb_for_insn_chain': ([], 21712), 'update_bb_for_insn': ([], 21712), 'create_basic_block_structure': ([], 21712), 'compute_bb_for_insn': ([], 21712), 'free_bb_for_insn': ([], 21712), 'entry_of_function': ([], 21712), 'insert_insn_on_edge': ([], 21712), 'commit_one_edge_insertion': ([8, 36], 21699), 'commit_edge_insertions': ([1], 21700), 'emit_insn_at_entry': ([], 21712), 'block_label': ([], 21712), 'try_redirect_by_replacing_jump': ([], 21712), 'VEC_edge_base_unordered_remove': ([], 21712), 'VEC_edge_base_space': ([], 21712), 'VEC_edge_gc_reserve': ([], 21712), 'VEC_edge_base_quick_push': ([], 21712), 'VEC_edge_gc_safe_push': ([], 21712), 'print_rtl_with_bb': ([], 21712), 'update_br_prob_note': ([], 21712), 'get_last_bb_insn': ([], 21712), 'purge_all_dead_edges': ([], 21712), 'insert_insn_end_bb_new': ([5], 21710), 'rtl_extract_cond_bb_edges': ([], 21712), 'rtl_lv_add_condition_to_bb': ([], 21712), 'need_fake_edge_p': ([], 21712), 'rtl_flow_call_edges_add': ([], 21712), 'rtl_block_ends_with_call_p': ([3, 4], 21700), 'cfg_layout_split_edge': ([], 21712), 'cfg_layout_merge_blocks': ([7, 34, 44], 21697), 'cfg_layout_can_merge_blocks_p': ([], 21712), 'first_insn_after_basic_block_note': ([], 21712), 'rtl_split_block': ([11], 21709), 'cfg_layout_delete_block': ([], 21712), 'rtl_can_remove_branch_p': ([], 21712), 'patch_jump_insn': ([16], 21708), 'redirect_branch_edge': ([11], 21706), 'cfg_layout_redirect_edge_and_branch': ([0, 4, 5], 21692), 'VEC_basic_block_base_space': ([], 21712), 'VEC_basic_block_gc_reserve_exact': ([], 21712), 'VEC_basic_block_gc_safe_grow': ([], 21712), 'VEC_basic_block_gc_safe_grow_cleared': ([], 21712), 'rtl_create_basic_block': ([2, 6], 21706), 'rtl_dump_bb': ([], 21712), 'rtl_verify_flow_info_1': ([18, 57, 99, 115, 126], 21666), 'rtl_tidy_fallthru_edge': ([], 21712), 'rtl_split_edge': ([0], 21710), 'rtl_merge_blocks': ([10], 21707), 'rtl_can_merge_blocks': ([], 21712), 'rtl_redirect_edge_and_branch_force': ([], 21712), 'rtl_redirect_edge_and_branch': ([], 21712), 'rtl_verify_flow_info': ([], 21712)}, "PosixPath('602/dbgcnt.bc')": {'dbg_cnt_is_enabled': ([], 2067), 'dbg_cnt': ([], 2067), 'dbg_cnt_set_limit_by_index': ([], 2067), 'dbg_cnt_set_limit_by_name': ([], 2067), 'dbg_cnt_process_single_pair': ([], 2067), 'dbg_cnt_process_opt': ([], 2067), 'dbg_cnt_list_all_counters': ([], 2067)}, "PosixPath('602/c-objc-common.bc')": {'c_warn_unused_global_decl': ([], 994), 'c_tree_printer': ([], 994)}, "PosixPath('602/varpool.bc')": {'varpool_node': ([], 3645), 'cgraph_variable_initializer_availability': ([], 3645), 'dump_varpool_node': ([2], 3640), 'varpool_enqueue_needed_node': ([], 3645), 'varpool_mark_needed_node': ([2, 7], 3636), 'decide_is_variable_needed': ([0], 3642), 'varpool_analyze_pending_decls': ([], 3645), 'varpool_assemble_decl': ([], 3645), 'varpool_assemble_pending_decls': ([], 3645), 'varpool_finalize_decl': ([0], 3641), 'varpool_remove_unreferenced_decls': ([], 3645), 'varpool_empty_needed_queue': ([0], 3635), 'add_new_static_var': ([], 3645), 'varpool_extra_name_alias': ([], 3645)}, "PosixPath('602/insn-output.bc')": {'output_1755': ([], 334740), 'output_1471': ([], 334740), 'output_1470': ([], 334740), 'output_1469': ([], 334740), 'output_1462': ([], 334740), 'output_1461': ([], 334740), 'output_1460': ([], 334740), 'output_1459': ([], 334740), 'output_1458': ([], 334740), 'output_1246': ([], 334740), 'output_1245': ([], 334740), 'output_1244': ([], 334740), 'output_1243': ([], 334740), 'output_1238': ([], 334740), 'output_1186': ([], 334740), 'output_1185': ([], 334740), 'output_1184': ([], 334740), 'output_1183': ([], 334740), 'output_1182': ([], 334740), 'output_819': ([], 334740), 'output_817': ([], 334740), 'output_693': ([], 334740), 'output_498': ([], 334740), 'output_496': ([], 334740), 'output_393': ([], 334740), 'output_392': ([], 334740), 'output_391': ([], 334740), 'output_390': ([], 334740), 'output_389': ([], 334740), 'output_388': ([], 334740), 'output_387': ([], 334740), 'output_386': ([], 334740), 'output_385': ([], 334740), 'output_384': ([], 334740), 'output_383': ([], 334740), 'output_293': ([], 334740), 'output_290': ([], 334740), 'output_289': ([], 334740), 'output_281': ([], 334740), 'output_219': ([], 334740), 'output_218': ([], 334740), 'output_217': ([], 334740), 'output_216': ([], 334740), 'output_215': ([], 334740), 'output_214': ([], 334740), 'output_213': ([], 334740), 'output_212': ([], 334740), 'output_211': ([], 334740), 'output_210': ([], 334740), 'output_209': ([], 334740), 'output_208': ([], 334740), 'output_207': ([], 334740), 'output_206': ([], 334740), 'output_205': ([], 334740), 'output_204': ([], 334740), 'output_203': ([], 334740), 'output_202': ([], 334740), 'output_201': ([], 334740), 'output_200': ([], 334740), 'output_199': ([], 334740), 'output_198': ([], 334740), 'output_197': ([], 334740), 'output_83': ([], 334740), 'output_76': ([], 334740), 'output_74': ([], 334740), 'output_71': ([], 334740), 'output_53': ([], 334740)}, "PosixPath('602/tree-ssa-ccp.bc')": {'gsi_start': ([], 26543), 'get_symbol_constant_value': ([], 26543), 'may_propagate_address_into_dereference': ([], 26543), 'gimple_ops': ([], 26543), 'gimple_op': ([], 26543), 'gimple_call_lhs': ([], 26543), 'gimple_assign_rhs1': ([], 26543), 'get_default_value': ([], 26543), 'canonicalize_float_value': ([], 26543), 'get_value': ([], 26543), 'fold_const_aggregate_ref': ([27], 26539), 'maybe_fold_offset_to_array_ref': ([], 26543), 'maybe_fold_offset_to_component_ref': ([], 26543), 'maybe_fold_offset_to_reference': ([], 26543), 'maybe_fold_offset_to_address': ([2], 26542), 'gimple_assign_rhs_code': ([], 26543), 'gimple_assign_rhs2': ([], 26543), 'maybe_fold_stmt_addition': ([], 26543), 'gsi_stmt': ([], 26543), 'maybe_fold_stmt_indirect': ([], 26543), 'maybe_fold_reference': ([3], 26542), 'gimple_call_fn': ([], 26543), 'gimple_call_return_type': ([], 26543), 'gimple_expr_type': ([], 26543), 'gimple_assign_lhs': ([], 26543), 'fold_gimple_assign': ([], 26543), 'gimple_cond_lhs': ([], 26543), 'gimple_cond_rhs': ([], 26543), 'fold_gimple_cond': ([], 26543), 'gimple_call_arg': ([], 26543), 'gimple_set_op': ([], 26543), 'gimple_call_set_arg': ([], 26543), 'gimple_call_fndecl': ([], 26543), 'get_maxval_strlen': ([], 26543), 'ccp_fold_builtin': ([2], 26536), 'gimple_vuse': ([], 26543), 'gimple_vdef': ([], 26543), 'gimplify_and_update_call_from_tree': ([4], 26536), 'gimple_call_set_fn': ([], 26543), 'fold_gimple_call': ([], 26543), 'gimple_asm_output_op': ([], 26543), 'gimple_asm_input_op': ([], 26543), 'gimple_has_lhs': ([], 26543), 'fold_stmt_1': ([], 26543), 'bb_seq': ([], 26543), 'gsi_start_bb': ([], 26543), 'single_succ_edge': ([], 26543), 'has_single_use': ([], 26543), 'optimize_stack_restore': ([], 26543), 'optimize_stdarg_builtin': ([], 26543), 'execute_fold_all_builtins': ([0], 26522), 'surely_varying_stmt_p': ([], 26543), 'gimple_def_ops': ([], 26543), 'gimple_use_ops': ([], 26543), 'op_iter_init': ([], 26543), 'op_iter_next_tree': ([], 26543), 'op_iter_init_tree': ([], 26543), 'set_value_varying': ([], 26543), 'ccp_initialize': ([], 26543), 'do_dbg_cnt': ([], 26543), 'gimple_references_memory_p': ([], 26543), 'likely_value': ([], 26543), 'gimple_switch_index': ([], 26543), 'ccp_fold': ([35, 40], 26536), 'evaluate_stmt': ([], 26543), 'gimple_cond_set_lhs': ([], 26543), 'gimple_cond_set_rhs': ([], 26543), 'gimple_cond_make_false': ([], 26543), 'gimple_cond_make_true': ([], 26543), 'ccp_fold_stmt': ([], 26543), 'ccp_finalize': ([], 26543), 'ccp_lattice_meet': ([], 26543), 'set_lattice_value': ([], 26543), 'ccp_visit_phi_node': ([], 26543), 'visit_assignment': ([], 26543), 'ccp_visit_stmt': ([], 26543), 'do_ssa_ccp': ([], 26543)}, "PosixPath('602/graphite-interchange.bc')": {}, "PosixPath('602/cpp_charset.bc')": {'init_iconv_desc': ([], 13936), 'cpp_interpret_string': ([], 13936), '_cpp_convert_input': ([], 13936), 'conversion_loop': ([], 13936), 'one_cppchar_to_utf8': ([], 13936), 'one_utf16_to_utf8': ([], 13936), 'convert_utf16_utf8': ([], 13936), 'one_utf32_to_utf8': ([], 13936), 'convert_utf32_utf8': ([], 13936), 'one_utf8_to_cppchar': ([], 13936), 'one_utf8_to_utf16': ([], 13936), 'convert_utf8_utf16': ([], 13936), 'one_utf8_to_utf32': ([], 13936), 'convert_utf8_utf32': ([], 13936), 'convert_no_conversion': ([6], 13935), 'cpp_init_iconv': ([], 13936), 'cpp_host_to_exec_charset': ([], 13936), 'ucn_valid_in_identifier': ([], 13936), '_cpp_valid_ucn': ([], 13936), 'convert_ucn': ([], 13936), 'emit_numeric_escape': ([21], 13935), 'convert_hex': ([], 13936), 'convert_oct': ([], 13936), 'convert_escape': ([], 13936), 'cpp_interpret_string_notranslate': ([], 13936), 'wide_str_to_charconst': ([], 13936), 'narrow_str_to_charconst': ([], 13936), 'cpp_interpret_charconst': ([], 13936), '_cpp_interpret_identifier': ([], 13936)}, "PosixPath('602/tree-ssa-coalesce.bc')": {'coalesce_pair_map_eq': ([], 10224), 'coalesce_pair_map_hash': ([], 10224), 'create_coalesce_list': ([], 10224), 'gsi_stmt': ([], 10224), 'ei_end_p': ([], 10224), 'ei_cond': ([], 10224), 'ei_next': ([], 10224), 'coalesce_cost_edge': ([], 10224), 'has_single_use': ([], 10224), 'add_cost_one_coalesce': ([], 10224), 'find_coalesce_pair': ([1], 10221), 'add_coalesce': ([], 10224), 'abnormal_corrupt': ([], 10224), 'bb_seq': ([], 10224), 'gsi_start_bb': ([], 10224), 'gimple_def_ops': ([], 10224), 'gimple_vdef': ([], 10224), 'gimple_use_ops': ([], 10224), 'gimple_vuse': ([], 10224), 'op_iter_init': ([], 10224), 'op_iter_next_tree': ([], 10224), 'op_iter_init_tree': ([], 10224), 'gimple_ops': ([], 10224), 'gimple_op': ([], 10224), 'gimple_assign_lhs': ([], 10224), 'gimple_assign_rhs1': ([], 10224), 'gimple_asm_output_op': ([], 10224), 'gimple_asm_input_op': ([], 10224), 'has_zero_uses': ([], 10224), 'create_outofssa_var_map': ([76], 10222), 'delete_coalesce_list': ([], 10224), 'ssa_conflicts_new': ([], 10224), 'live_on_exit': ([], 10224), 'bmp_iter_set_init': ([], 10224), 'bmp_iter_set': ([], 10224), 'basevar_index': ([], 10224), 'live_track_add_partition': ([], 10224), 'live_track_init': ([], 10224), 'gsi_last_bb': ([], 10224), 'var_to_partition': ([], 10224), 'live_track_remove_partition': ([], 10224), 'live_track_clear_var': ([], 10224), 'ssa_conflicts_add_one': ([], 10224), 'live_track_process_def': ([], 10224), 'live_track_process_use': ([], 10224), 'live_track_live_p': ([], 10224), 'delete_live_track': ([], 10224), 'build_ssa_conflict_graph': ([], 10224), 'ssa_conflicts_dump': ([], 10224), 'first_htab_element': ([], 10224), 'first_coalesce_pair': ([], 10224), 'end_htab_p': ([], 10224), 'end_coalesce_pair_p': ([], 10224), 'next_htab_element': ([], 10224), 'next_coalesce_pair': ([], 10224), 'compare_pairs': ([], 10224), 'sort_coalesce_list': ([], 10224), 'dump_coalesce_list': ([], 10224), 'partition_to_var': ([], 10224), 'ssa_conflicts_test_p': ([], 10224), 'ssa_conflicts_merge': ([], 10224), 'attempt_coalesce': ([], 10224), 'pop_cost_one_pair': ([], 10224), 'pop_best_coalesce': ([], 10224), 'coalesce_partitions': ([], 10224), 'ssa_conflicts_delete': ([], 10224), 'coalesce_ssa_name': ([], 10224)}, "PosixPath('602/regrename.bc')": {'bitmap_initialize_stat': ([], 12115), 'df_scan_get_bb_info': ([], 12115), 'df_get_artificial_defs': ([], 12115), 'verify_reg_in_set': ([], 12115), 'VEC_du_head_p_base_space': ([], 12115), 'VEC_du_head_p_heap_reserve': ([], 12115), 'VEC_du_head_p_base_quick_push': ([], 12115), 'VEC_du_head_p_heap_safe_push': ([], 12115), 'create_new_chain': ([], 12115), 'hide_operands': ([], 12115), 'scan_rtx_reg': ([167], 12109), 'scan_rtx_address': ([], 12115), 'scan_rtx': ([], 12115), 'record_out_operands': ([], 12115), 'remove_from_hard_reg_set': ([], 12115), 'add_to_hard_reg_set': ([], 12115), 'note_sets_clobbers': ([5, 7], 12109), 'build_def_use': ([], 12115), 'dump_def_use_chain': ([], 12115), 'bmp_iter_set_init': ([], 12115), 'bmp_iter_set': ([], 12115), 'merge_overlapping_regs': ([], 12115), 'do_replace': ([], 12115), 'VEC_du_head_p_base_iterate': ([], 12115), 'free_chain_data': ([], 12115), 'regrename_optimize': ([], 12115)}, "PosixPath('602/hex.bc')": {}, "PosixPath('602/version.bc')": {}, "PosixPath('602/ipa-utils.bc')": {'searchc': ([], 1221), 'ipa_utils_reduced_inorder': ([], 1221), 'get_base_var': ([], 1221)}, "PosixPath('602/ggc-page.bc')": {'debug_print_page_list': ([], 7298), 'set_page_group_in_use': ([], 7298), 'set_page_table_entry': ([], 7298), 'alloc_page': ([], 7298), 'ggc_alloc_stat': ([33, 36], 7271), 'ggc_allocated_p': ([], 7298), 'lookup_page_table_entry': ([], 7298), 'gt_ggc_m_S': ([], 7298), 'ggc_set_mark': ([], 7298), 'ggc_marked_p': ([], 7298), 'ggc_get_size': ([], 7298), 'ggc_free': ([], 7298), 'compute_inverse': ([], 7298), 'init_ggc': ([], 7298), 'release_pages': ([], 7298), 'ggc_print_statistics': ([28], 7291), 'ggc_pch_total_size': ([], 7298), 'ggc_pch_this_base': ([], 7298), 'ggc_pch_alloc_object': ([1], 7295), 'ggc_pch_write_object': ([], 7298), 'clear_marks': ([], 7298), 'ggc_pch_read': ([], 7298)}, "PosixPath('602/strerror.bc')": {'init_error_tables': ([], 7502)}, "PosixPath('602/lists.bc')": {'find_list_elem': ([], 1124), 'remove_list_elem': ([], 1124), 'alloc_INSN_LIST': ([], 1124), 'alloc_EXPR_LIST': ([], 1124), 'free_list': ([], 1124), 'free_EXPR_LIST_list': ([], 1124), 'free_INSN_LIST_list': ([], 1124), 'remove_free_INSN_LIST_elem': ([], 1124), 'remove_free_INSN_LIST_node': ([], 1124), 'remove_free_EXPR_LIST_node': ([], 1124)}, "PosixPath('602/xmemdup.bc')": {}, "PosixPath('602/combine.bc')": {'setup_incoming_promotions': ([13, 17], 85055), 'try_combine': ([11, 12, 14, 26, 66, 79, 190, 468, 505, 1031, 1035], 84665), 'record_value_for_reg': ([], 85062), 'distribute_links': ([44], 85060), 'combine_simplify_rtx': ([94, 137, 255, 329], 85008), 'simplify_set': ([4, 35, 36, 121, 144], 85006), 'reg_truncated_to_mode': ([], 85062), 'df_lr_get_bb_info': ([], 85062), 'get_last_value_validate': ([], 85062), 'get_last_value': ([], 85062), 'reg_num_sign_bit_copies_for_combine': ([], 85062), 'reg_nonzero_bits_for_combine': ([], 85062), 'gen_lowpart_for_combine': ([], 85062), 'VEC_reg_stat_type_base_space': ([], 85062), 'VEC_reg_stat_type_heap_reserve_exact': ([], 85062), 'VEC_reg_stat_type_heap_safe_grow': ([], 85062), 'VEC_reg_stat_type_heap_safe_grow_cleared': ([], 85062), 'count_rtxs': ([], 85062), 'update_table_tick': ([], 85062), 'create_log_links': ([], 85062), 'single_pred_edge': ([], 85062), 'record_dead_and_set_regs_1': ([], 85062), 'record_dead_and_set_regs': ([], 85062), 'init_reg_last': ([], 85062), 'record_promoted_value': ([], 85062), 'check_promoted_subreg': ([], 85062), 'cant_combine_insn_p': ([], 85062), 'likely_spilled_retval_1': ([], 85062), 'likely_spilled_retval_p': ([], 85062), 'do_SUBST': ([2], 85057), 'reg_subword_p': ([0], 85059), 'expand_field_assignment': ([16], 85059), 'use_crosses_set_p': ([], 85062), 'can_combine_p': ([], 85062), 'undo_all': ([], 85062), 'combinable_i3pat': ([8], 85038), 'find_single_use_1': ([], 85062), 'find_single_use': ([], 85062), 'can_change_dest_mode': ([], 85062), 'do_SUBST_MODE': ([], 85062), 'if_then_else_cond': ([6, 16], 85026), 'try_widen_shift_mode': ([], 85062), 'force_to_mode': ([30, 39, 105], 85031), 'simplify_and_const_int': ([], 85062), 'expand_compound_operation': ([0, 7], 85050), 'simplify_shift_const_1': ([5, 368], 84982), 'apply_distributive_law': ([5], 85041), 'make_extraction': ([0], 84965), 'extract_left_shift': ([], 85062), 'make_compound_operation': ([13, 27], 85004), 'simplify_comparison': ([1, 102, 122, 129, 210], 84894), 'distribute_and_simplify_rtx': ([], 85062), 'known_cond': ([], 85062), 'do_SUBST_INT': ([], 85062), 'reg_dead_at_p_1': ([], 85062), 'reg_dead_at_p': ([], 85062), 'recog_for_combine': ([50], 85055), 'rtx_equal_for_field_assignment_p': ([0], 85059), 'canon_reg_for_combine': ([0], 85051), 'make_field_assignment': ([], 85062), 'simplify_logical': ([], 85062), 'subst': ([12], 85032), 'simplify_if_then_else': ([17], 85056), 'add_to_hard_reg_set': ([], 85062), 'mark_used_regs_combine': ([], 85062), 'combine_split_insns': ([], 85062), 'find_split_point': ([8, 27], 85058), 'contains_muldiv': ([], 85062), 'combine_validate_cost': ([], 85062), 'propagate_for_debug': ([], 85062), 'reg_bitfield_target_p': ([], 85062), 'distribute_notes': ([124], 85054), 'move_deaths': ([6, 9, 29], 84993), 'single_succ_edge': ([], 85062), 'update_cfg_for_uncondjump': ([], 85062), 'set_nonzero_bits_and_sign_copies': ([], 85062), 'clear_log_links': ([], 85062), 'delete_noop_moves': ([], 85062), 'record_truncated_value': ([], 85062), 'combine_instructions': ([409], 85052), 'rest_of_handle_combine': ([], 85062)}, "PosixPath('602/ira-costs.bc')": {'ira_init_costs': ([], 14188), 'ira_init_costs_once': ([], 14188), 'free_ira_costs': ([], 14188), 'ok_for_base_p_nonstrict': ([], 14188), 'ok_for_index_p_nonstrict': ([], 14188), 'ira_get_may_move_cost': ([], 14188), 'record_address_regs': ([142], 14182), 'copy_cost': ([3, 8], 14178), 'ira_get_register_move_cost': ([], 14188), 'record_reg_classes': ([3, 156], 14145), 'record_operand_costs': ([1, 47], 14173), 'scan_one_insn': ([], 14188), 'process_bb_for_costs': ([180], 14183), 'print_allocno_costs': ([], 14188), 'print_pseudo_costs': ([], 14188), 'find_costs_and_classes': ([], 14188), 'process_bb_node_for_hard_reg_moves': ([1], 14170), 'setup_allocno_cover_class_and_costs': ([], 14188), 'ira_costs': ([], 14188), 'ira_tune_allocno_costs_and_cover_classes': ([0], 14186)}, "PosixPath('602/df-problems.bc')": {'df_rd_free': ([], 34604), 'df_lr_finalize': ([], 34604), 'df_lr_free': ([], 34604), 'df_live_free': ([], 34604), 'df_chain_alloc': ([], 34604), 'df_chain_free': ([], 34604), 'df_chain_fully_remove_problem': ([], 34604), 'df_byte_lr_alloc': ([], 34604), 'df_byte_lr_free': ([], 34604), 'df_note_bb_compute': ([], 34604), 'df_md_free': ([], 34604), 'df_live_get_bb_info': ([], 34604), 'df_lr_get_bb_info': ([], 34604), 'df_get_live_out': ([], 34604), 'df_get_live_in': ([], 34604), 'df_grow_bb_info': ([], 34604), 'df_chain_dump': ([], 34604), 'ei_end_p': ([], 34604), 'ei_cond': ([], 34604), 'ei_next': ([], 34604), 'df_print_bb_index': ([], 34604), 'df_scan_get_bb_info': ([], 34604), 'df_get_artificial_defs': ([], 34604), 'df_rd_simulate_artificial_defs_at_top': ([], 34604), 'df_rd_simulate_one_insn': ([6], 34596), 'df_rd_get_bb_info': ([], 34604), 'df_rd_bottom_dump': ([], 34604), 'df_rd_top_dump': ([], 34604), 'df_rd_start_dump': ([], 34604), 'bmp_iter_set_init': ([], 34604), 'bmp_iter_set': ([], 34604), 'df_rd_transfer_function': ([], 34604), 'df_rd_confluence_n': ([], 34604), 'df_rd_init_solution': ([], 34604), 'df_rd_bb_local_compute_process_def': ([], 34604), 'df_rd_bb_local_compute': ([], 34604), 'df_rd_local_compute': ([], 34604), 'df_rd_free_bb_info': ([], 34604), 'df_rd_set_bb_info': ([], 34604), 'df_rd_alloc': ([], 34604), 'df_lr_verify_solution_end': ([], 34604), 'df_lr_verify_solution_start': ([], 34604), 'df_lr_bottom_dump': ([], 34604), 'df_lr_top_dump': ([], 34604), 'df_lr_set_bb_info': ([4], 34589), 'df_lr_alloc': ([], 34604), 'df_get_artificial_uses': ([], 34604), 'df_lr_bb_local_compute': ([], 34604), 'df_lr_local_compute': ([], 34604), 'df_lr_transfer_function': ([], 34604), 'df_lr_confluence_n': ([], 34604), 'df_lr_confluence_0': ([], 34604), 'df_lr_init': ([], 34604), 'df_lr_free_bb_info': ([], 34604), 'df_lr_reset': ([], 34604), 'df_lr_verify_transfer_functions': ([], 34604), 'df_live_verify_solution_end': ([17], 34600), 'df_live_verify_solution_start': ([], 34604), 'df_live_bottom_dump': ([], 34604), 'df_live_top_dump': ([], 34604), 'df_live_finalize': ([], 34604), 'df_live_transfer_function': ([], 34604), 'df_live_confluence_n': ([], 34604), 'df_live_init': ([], 34604), 'df_live_bb_local_compute': ([], 34604), 'df_live_local_compute': ([], 34604), 'df_live_free_bb_info': ([], 34604), 'df_live_reset': ([], 34604), 'df_live_set_bb_info': ([], 34604), 'df_live_alloc': ([8], 34597), 'df_live_set_all_dirty': ([], 34604), 'df_live_verify_transfer_functions': ([], 34604), 'df_chain_create': ([], 34604), 'df_chain_unlink_1': ([], 34604), 'df_chain_unlink': ([], 34604), 'df_chain_copy': ([], 34604), 'df_chain_bottom_dump': ([], 34604), 'df_chain_top_dump': ([], 34604), 'df_chain_remove_problem': ([31, 48], 34568), 'df_chain_create_bb_process_use': ([34], 34596), 'df_chain_create_bb': ([], 34604), 'df_chain_finalize': ([], 34604), 'df_byte_lr_get_bb_info': ([], 34604), 'df_byte_lr_bottom_dump': ([], 34604), 'df_byte_lr_top_dump': ([], 34604), 'df_byte_lr_transfer_function': ([], 34604), 'df_byte_lr_confluence_n': ([], 34604), 'df_byte_lr_confluence_0': ([], 34604), 'df_byte_lr_init': ([], 34604), 'df_byte_lr_expand_bitmap': ([], 34604), 'df_byte_lr_bb_local_compute': ([], 34604), 'df_byte_lr_local_compute': ([], 34604), 'df_byte_lr_free_bb_info': ([], 34604), 'df_byte_lr_reset': ([], 34604), 'df_byte_lr_check_regs': ([], 34604), 'df_byte_lr_set_bb_info': ([], 34604), 'df_byte_lr_simulate_defs': ([], 34604), 'df_byte_lr_simulate_uses': ([], 34604), 'df_byte_lr_simulate_artificial_refs_at_top': ([], 34604), 'df_byte_lr_simulate_artificial_refs_at_end': ([], 34604), 'df_kill_notes': ([], 34604), 'df_whole_mw_reg_unused_p': ([], 34604), 'df_set_note': ([], 34604), 'df_set_unused_notes_for_mw': ([4], 34603), 'df_create_unused_note': ([], 34604), 'df_whole_mw_reg_dead_p': ([], 34604), 'df_set_dead_notes_for_mw': ([], 34604), 'df_note_compute': ([], 34604), 'df_simulate_find_defs': ([], 34604), 'df_simulate_defs': ([], 34604), 'df_simulate_uses': ([], 34604), 'df_simulate_initialize_backwards': ([], 34604), 'bb_has_eh_pred': ([], 34604), 'df_simulate_fixup_sets': ([], 34604), 'df_simulate_one_insn_backwards': ([], 34604), 'df_simulate_finalize_backwards': ([], 34604), 'df_simulate_initialize_forwards': ([], 34604), 'df_simulate_one_insn_forwards': ([], 34604), 'df_md_simulate_artificial_defs_at_top': ([], 34604), 'df_md_simulate_one_insn': ([], 34604), 'df_md_get_bb_info': ([], 34604), 'df_md_bottom_dump': ([], 34604), 'df_md_top_dump': ([], 34604), 'df_md_transfer_function': ([], 34604), 'df_md_confluence_n': ([], 34604), 'df_md_confluence_0': ([], 34604), 'df_md_init': ([], 34604), 'df_md_bb_local_compute_process_def': ([], 34604), 'df_md_bb_local_compute': ([], 34604), 'df_md_local_compute': ([], 34604), 'df_md_free_bb_info': ([], 34604), 'df_md_reset': ([], 34604), 'df_md_set_bb_info': ([], 34604), 'df_md_alloc': ([], 34604)}, "PosixPath('602/tree-ssa-copy.bc')": {'may_propagate_copy': ([], 7129), 'gimple_ops': ([], 7129), 'gimple_op': ([], 7129), 'gimple_assign_rhs1': ([], 7129), 'gimple_switch_index': ([], 7129), 'gimple_assign_lhs': ([], 7129), 'gimple_call_lhs': ([], 7129), 'may_propagate_copy_into_stmt': ([], 7129), 'may_propagate_copy_into_asm': ([], 7129), 'delink_imm_use': ([], 7129), 'link_imm_use_to_list': ([], 7129), 'link_imm_use': ([], 7129), 'set_ssa_use_from_ptr': ([], 7129), 'replace_exp_1': ([], 7129), 'gsi_stmt': ([], 7129), 'gimple_set_op': ([], 7129), 'gimple_cond_set_lhs': ([], 7129), 'gimple_cond_set_rhs': ([], 7129), 'gimple_op_ptr': ([], 7129), 'gimple_switch_index_ptr': ([], 7129), 'propagate_tree_value_into_stmt': ([0], 7127), 'bb_seq': ([], 7129), 'gsi_start_bb': ([], 7129), 'gimple_vuse': ([], 7129), 'gimple_assign_rhs_code': ([], 7129), 'stmt_may_generate_copy': ([], 7129), 'gimple_def_ops': ([], 7129), 'op_iter_init': ([], 7129), 'op_iter_next_tree': ([], 7129), 'op_iter_init_tree': ([], 7129), 'set_copy_of_val': ([], 7129), 'ei_end_p': ([], 7129), 'ei_cond': ([], 7129), 'ei_next': ([], 7129), 'init_copy_prop': ([], 7129), 'fini_copy_prop': ([], 7129), 'get_copy_of_val': ([], 7129), 'dump_copy_of': ([9, 14], 7111), 'copy_prop_visit_phi_node': ([], 7129), 'copy_prop_visit_assignment': ([], 7129), 'gimple_cond_lhs': ([], 7129), 'gimple_cond_rhs': ([], 7129), 'copy_prop_visit_cond_stmt': ([1], 7095), 'copy_prop_visit_stmt': ([58], 7088), 'execute_copy_prop': ([], 7129)}, "PosixPath('602/tree-ssa-dom.bc')": {'tree_ssa_dominator_optimize': ([], 21715), 'first_imm_use_on_stmt': ([], 21715), 'next_imm_use_on_stmt': ([], 21715), 'loop_depth_of_name': ([], 21715), 'degenerate_phi_result': ([11], 21714), 'gsi_stmt': ([], 21715), 'gimple_ops': ([], 21715), 'gimple_op': ([], 21715), 'gimple_assign_lhs': ([], 21715), 'get_lhs_or_phi_result': ([], 21715), 'has_zero_uses': ([], 21715), 'gimple_assign_rhs1': ([], 21715), 'get_rhs_or_phi_arg': ([], 21715), 'end_imm_use_stmt_p': ([], 21715), 'clear_and_done_ssa_iter': ([], 21715), 'op_iter_next_use': ([], 21715), 'op_iter_init_phiuse': ([], 21715), 'delink_imm_use': ([], 21715), 'link_imm_use_to_list': ([], 21715), 'move_use_after_head': ([2], 21701), 'gimple_def_ops': ([], 21715), 'gimple_vdef': ([], 21715), 'gimple_use_ops': ([], 21715), 'gimple_vuse': ([], 21715), 'op_iter_init': ([], 21715), 'op_iter_init_use': ([], 21715), 'gimple_vuse_op': ([], 21715), 'link_use_stmts_after': ([], 21715), 'first_imm_use_stmt': ([], 21715), 'gimple_cond_lhs': ([], 21715), 'gimple_cond_rhs': ([], 21715), 'gimple_switch_index': ([], 21715), 'gimple_goto_dest': ([], 21715), 'ei_end_p': ([], 21715), 'ei_safe_edge': ([], 21715), 'ei_next': ([], 21715), 'bb_seq': ([], 21715), 'gsi_last_bb': ([], 21715), 'next_imm_use_stmt': ([], 21715), 'propagate_rhs_into_lhs': ([], 21715), 'eliminate_const_or_copy': ([], 21715), 'bmp_iter_set_init': ([], 21715), 'bmp_iter_set': ([], 21715), 'eliminate_degenerate_phis': ([], 21715), 'gsi_start_bb': ([], 21715), 'ei_cond': ([], 21715), 'free_all_edge_infos': ([], 21715), 'single_succ_edge': ([], 21715), 'gimple_assign_rhs_code': ([], 21715), 'gimple_assign_rhs2': ([], 21715), 'gimple_call_lhs': ([], 21715), 'gimple_call_fn': ([], 21715), 'gimple_call_arg': ([], 21715), 'iterative_hash_hashable_expr': ([], 21715), 'avail_expr_hash': ([], 21715), 'initialize_hash_element': ([], 21715), 'print_expr_hash_elt': ([], 21715), 'VEC_expr_hash_elt_t_base_space': ([], 21715), 'VEC_expr_hash_elt_t_heap_reserve': ([], 21715), 'VEC_expr_hash_elt_t_base_quick_push': ([], 21715), 'VEC_expr_hash_elt_t_heap_safe_push': ([0], 21713), 'lookup_avail_expr': ([1, 9], 21707), 'dom_thread_across_edge': ([], 21715), 'VEC_tree_base_space': ([], 21715), 'VEC_tree_heap_reserve': ([], 21715), 'VEC_tree_base_quick_push': ([], 21715), 'VEC_tree_heap_safe_push': ([0], 21713), 'record_const_or_copy_1': ([0], 21711), 'record_const_or_copy': ([], 21715), 'initialize_hash_element_from_expr': ([], 21715), 'record_cond': ([], 21715), 'VEC_expr_hash_elt_t_base_pop': ([], 21715), 'remove_local_expressions_from_table': ([], 21715), 'VEC_tree_base_pop': ([], 21715), 'restore_vars_to_original_value': ([], 21715), 'dom_opt_leave_block': ([], 21715), 'single_incoming_edge_ignoring_loop_edges': ([], 21715), 'record_equality': ([], 21715), 'record_equivalences_from_incoming_edge': ([], 21715), 'record_equivalences_from_phis': ([5], 21714), 'gimple_set_op': ([], 21715), 'gimple_cond_set_lhs': ([], 21715), 'gimple_cond_set_rhs': ([], 21715), 'canonicalize_comparison': ([], 21715), 'simple_iv_increment_p': ([], 21715), 'cprop_operand': ([], 21715), 'cprop_into_stmt': ([], 21715), 'gimple_call_fndecl': ([], 21715), 'eliminate_redundant_computations': ([], 21715), 'gimple_references_memory_p': ([], 21715), 'record_equivalences_from_stmt': ([], 21715), 'optimize_stmt': ([], 21715), 'gimple_switch_label': ([], 21715), 'build_and_record_new_cond': ([], 21715), 'initialize_expr_from_cond': ([], 21715), 'record_conditions': ([], 21715), 'record_edge_info': ([], 21715), 'cprop_into_successor_phis': ([], 21715), 'dom_opt_enter_block': ([], 21715), 'free_expr_hash_elt': ([], 21715), 'hashable_expr_equal_p': ([], 21715), 'avail_expr_eq': ([], 21715)}, "PosixPath('602/sreal.bc')": {'normalize': ([0], 1274), 'dump_sreal': ([], 1278), 'sreal_init': ([], 1278), 'sreal_to_int': ([], 1278), 'sreal_compare': ([], 1278), 'copy': ([], 1278), 'shift_right': ([], 1278), 'sreal_add': ([], 1278), 'sreal_sub': ([9], 1276), 'sreal_mul': ([], 1278), 'sreal_div': ([0], 1273)}, "PosixPath('602/tree-vectorizer.bc')": {'vect_print_dump_info': ([], 1887), 'VEC_int_base_quick_push': ([], 1887), 'loop_outer': ([], 1887), 'VEC_int_base_iterate': ([], 1887), 'fel_next': ([], 1887), 'fel_init': ([], 1887), 'gimple_vop': ([], 1887), 'vectorize_loops': ([], 1887), 'increase_alignment': ([], 1887), 'execute_vect_slp': ([], 1887)}, "PosixPath('602/recog.bc')": {'extract_insn': ([], 21507), 'validate_change_1': ([], 21507), 'extract_asm_operands': ([], 21507), 'asm_noperands': ([], 21507), 'decode_asm_operands': ([], 21507), 'recog_memoized': ([], 21507), 'skip_alternative': ([], 21507), 'reg_fits_class_p': ([], 21507), 'general_operand': ([0, 27], 21494), 'find_constant_term_loc': ([], 21507), 'offsettable_address_addr_space_p': ([], 21507), 'offsettable_memref_p': ([], 21507), 'offsettable_nonstrict_memref_p': ([], 21507), 'constrain_operands': ([9, 160], 21478), 'memory_operand': ([0], 21501), 'register_operand': ([0, 2], 21479), 'asm_operand_ok': ([13], 21496), 'check_asm_operands': ([], 21507), 'insn_invalid_p': ([5], 21490), 'confirm_change_group': ([], 21507), 'cancel_changes': ([], 21507), 'verify_changes': ([], 21507), 'canonicalize_change_group': ([], 21507), 'simplify_while_replacing': ([], 21507), 'validate_replace_rtx_1': ([1, 2], 21498), 'validate_replace_rtx_group': ([], 21507), 'validate_replace_src_1': ([], 21507), 'validate_replace_src_group': ([], 21507), 'validate_simplify_insn': ([], 21507), 'scratch_operand': ([], 21507), 'immediate_operand': ([0], 21505), 'const_int_operand': ([], 21507), 'nonmemory_operand': ([1], 21502), 'push_operand': ([], 21507), 'pop_operand': ([], 21507), 'indirect_operand': ([], 21507), 'ordered_comparison_operator': ([0], 21503), 'comparison_operator': ([0], 21501), 'extract_constrain_insn_cached': ([], 21507), 'preprocess_constraints': ([9, 10, 139], 21497), 'split_insn': ([], 21507), 'split_all_insns': ([], 21507), 'split_all_insns_noflow': ([], 21507), 'peep2_regno_dead_p': ([], 21507), 'peep2_reg_dead_p': ([], 21507), 'add_to_hard_reg_set': ([], 21507), 'peep2_find_free_register': ([], 21507), 'store_data_bypass_p': ([18, 27], 21501), 'if_test_bypass_p': ([9], 21504), 'df_lr_get_bb_info': ([], 21507), 'peep2_reinit_state': ([], 21507), 'ei_end_p': ([], 21507), 'ei_cond': ([], 21507), 'ei_next': ([], 21507), 'peephole2_optimize': ([], 21507), 'rest_of_handle_peephole2': ([], 21507)}, "PosixPath('602/decimal32.bc')": {'__dpd32FromNumber': ([5, 28], 2669), '__dpd32ToNumber': ([], 2679), '__dpd32ToString': ([], 2679), 'decimal32FromNumber': ([], 2679), 'decimal32ToNumber': ([], 2679)}, "PosixPath('602/lto-section-in.bc')": {'lto_input_1_unsigned': ([6], 2073), 'lto_free_section_data': ([], 2077), 'lto_create_simple_input_block': ([], 2077), 'lto_record_renamed_decl': ([], 2077), 'lto_get_decl_name_mapping': ([], 2077), 'lto_get_function_in_decl_state': ([], 2077)}, "PosixPath('602/tree-pretty-print.bc')": {'maybe_init_pretty_print': ([], 22581), 'dump_location': ([], 22581), 'dump_decl_name': ([], 22581), 'tree_operand_length': ([], 22581), 'op_prio': ([], 22581), 'dump_function_name': ([], 22581), 'init_call_expr_arg_iterator': ([], 22581), 'next_call_expr_arg': ([], 22581), 'first_call_expr_arg': ([], 22581), 'more_call_expr_args_p': ([], 22581), 'VEC_tree_base_iterate': ([], 22581), 'dump_generic_node': ([15, 70, 73], 22500), 'dump_block_node': ([], 22581), 'print_call_name': ([], 22581), 'print_struct_decl': ([], 22581), 'print_declaration': ([0], 22566), 'dump_array_domain': ([], 22581), 'do_niy': ([], 22581), 'dump_function_declaration': ([], 22581), 'print_generic_expr': ([], 22581), 'print_generic_stmt': ([], 22581), 'print_generic_decl': ([], 22581), 'print_generic_stmt_indented': ([], 22581)}, "PosixPath('602/init-regs.bc')": {'df_lr_get_bb_info': ([], 783), 'df_live_get_bb_info': ([], 783), 'initialize_uninitialized_regs': ([], 783), 'rest_of_handle_initialize_regs': ([], 783)}, "PosixPath('602/expr.bc')": {'init_block_move_fn': ([], 74907), 'init_block_clear_fn': ([], 74907), 'expand_expr_real_1': ([3, 52, 58, 66, 90, 376, 478, 782, 840, 956, 1004, 1995], 74610), 'init_expr_target': ([], 74907), 'compress_float_constant': ([], 74907), 'get_subtarget': ([], 74907), 'get_rtx_for_ssa_name': ([], 74907), 'const_vector_from_tree': ([], 74907), 'count_type_elements': ([], 74907), 'categorize_ctor_elements_1': ([42], 74906), 'all_zeros_p': ([], 74907), 'move_by_pieces_ninsns': ([], 74907), 'store_by_pieces_2': ([], 74907), 'store_by_pieces_1': ([], 74907), 'clear_by_pieces': ([], 74907), 'tree_operand_length': ([], 74907), 'safe_from_p': ([4, 13], 74900), 'mostly_zeros_p': ([], 74907), 'highest_pow2_factor': ([], 74907), 'can_store_by_pieces': ([], 74907), 'store_by_pieces': ([], 74907), 'block_move_libcall_safe_for_call_parm': ([], 74907), 'emit_storent_insn': ([], 74907), 'gimple_ops': ([], 74907), 'gimple_op': ([], 74907), 'gimple_assign_rhs1': ([], 74907), 'gimple_assign_rhs_code': ([], 74907), 'get_def_for_expr': ([], 74907), 'component_ref_field_offset': ([], 74907), 'array_ref_low_bound': ([], 74907), 'array_ref_element_size': ([], 74907), 'get_inner_reference': ([16], 74903), 'target_align': ([], 74907), 'is_aligning_offset': ([], 74907), 'gimple_assign_rhs2': ([], 74907), 'emit_move_change_mode': ([], 74907), 'emit_move_via_integer': ([], 74907), 'undefined_operand_subword_p': ([], 74907), 'expand_assignment': ([4, 35, 42, 135, 149, 150, 151, 153], 74854), 'store_expr': ([17, 26], 74892), 'emit_group_load': ([5], 74904), 'emit_group_load_1': ([23], 74900), 'convert_modes': ([20], 74904), 'convert_move': ([20, 46], 74890), 'emit_move_insn': ([], 74907), 'emit_move_insn_1': ([6], 74900), 'emit_move_complex_push': ([1], 74876), 'read_complex_part': ([1], 74899), 'expand_expr_real': ([], 74907), 'expand_expr_real_2': ([29, 102, 218, 246, 249, 290, 469], 74809), 'reduce_to_bit_field_precision': ([0], 74904), 'expand_expr_addr_expr': ([], 74907), 'expand_expr_addr_expr_1': ([11, 37], 74875), 'expand_constructor': ([], 74907), 'store_constructor': ([12], 74900), 'clear_storage_hints': ([], 74907), 'set_storage_via_libcall': ([], 74907), 'set_storage_via_setmem': ([], 74907), 'write_complex_part': ([], 74907), 'store_constructor_field': ([], 74907), 'store_field': ([], 74907), 'emit_block_move_hints': ([5, 73], 74859), 'force_operand': ([2, 21], 74898), 'emit_block_move_via_libcall': ([], 74907), 'move_by_pieces': ([3], 74839), 'emit_single_push_insn': ([], 74907), 'emit_move_multi_word': ([], 74907), 'emit_move_resolve_push': ([], 74907), 'move_block_to_reg': ([], 74907), 'gen_group_rtx': ([], 74907), 'emit_group_load_into_temps': ([], 74907), 'emit_group_move': ([0], 74904), 'emit_group_move_into_temps': ([], 74907), 'emit_group_store': ([32], 74883), 'copy_blkmode_from_reg': ([], 74907), 'use_reg': ([], 74907), 'use_group_regs': ([0], 74904), 'push_block': ([], 74907), 'emit_push_insn': ([], 74907), 'contains_packed_reference': ([], 74907), 'string_constant': ([], 74907), 'do_tablejump': ([], 74907), 'try_tablejump': ([0], 74901), 'vector_mode_valid_p': ([], 74907), 'build_personality_function': ([], 74907), 'get_personality_function': ([], 74907)}, "PosixPath('602/lambda-trans.bc')": {'lambda_trans_matrix_new': ([], 352), 'lambda_trans_matrix_id_p': ([], 352), 'lambda_trans_matrix_inverse': ([], 352), 'print_lambda_trans_matrix': ([], 352)}, "PosixPath('602/tree-optimize.bc')": {'execute_fixup_cfg': ([], 2315), 'bb_seq': ([], 2315), 'gsi_start_bb': ([], 2315), 'gsi_stmt': ([], 2315), 'gimple_ops': ([], 2315), 'gimple_op': ([], 2315), 'gimple_call_fn': ([], 2315), 'gimple_call_fndecl': ([], 2315), 'ei_end_p': ([], 2315), 'ei_cond': ([], 2315), 'ei_next': ([], 2315), 'gate_all_early_local_passes': ([], 2315), 'tree_rest_of_compilation': ([], 2315), 'gate_all_early_optimizations': ([], 2315), 'gate_all_optimizations': ([], 2315)}, "PosixPath('602/tree-nested.bc')": {'convert_nonlocal_reference_op': ([], 16837), 'convert_local_reference_op': ([], 16837), 'get_chain_decl': ([0], 16821), 'gsi_last': ([], 16837), 'get_trampoline_type': ([], 16837), 'finalize_nesting_tree_1': ([], 16837), 'remap_vla_decls': ([51], 16835), 'build_addr': ([], 16837), 'insert_field_into_struct': ([], 16837), 'check_for_nested_with_variably_modified': ([0], 16834), 'create_nesting_tree': ([], 16837), 'walk_body': ([], 16837), 'walk_function': ([], 16837), 'iter_nestinfo_next': ([], 16837), 'walk_all_functions': ([], 16837), 'gsi_stmt': ([], 16837), 'gimple_ops': ([], 16837), 'gimple_op': ([], 16837), 'gimple_call_chain': ([], 16837), 'gimple_call_fn': ([], 16837), 'gimple_call_fndecl': ([], 16837), 'create_tmp_var_for': ([], 16837), 'get_chain_field': ([], 16837), 'init_tmp_var': ([], 16837), 'get_static_chain': ([], 16837), 'gimple_set_op': ([], 16837), 'gimple_call_set_chain': ([], 16837), 'convert_gimple_call': ([8], 16835), 'lookup_tramp_for_decl': ([], 16837), 'gimple_call_return_type': ([], 16837), 'gimple_call_set_lhs': ([], 16837), 'init_tmp_var_with_call': ([], 16837), 'convert_tramp_reference_op': ([], 16837), 'gimple_op_ptr': ([], 16837), 'gimple_call_arg_ptr': ([], 16837), 'convert_tramp_reference_stmt': ([], 16837), 'convert_all_function_calls': ([], 16837), 'use_pointer_in_frame': ([], 16837), 'lookup_field_for_decl': ([], 16837), 'gimple_assign_set_rhs1': ([], 16837), 'nesting_copy_decl': ([], 16837), 'finalize_nesting_tree': ([], 16837), 'unnest_nesting_tree': ([], 16837), 'free_nesting_tree': ([], 16837), 'gimple_label_label': ([], 16837), 'convert_nl_goto_receiver': ([], 16837), 'gimple_goto_dest': ([], 16837), 'get_nl_goto_field': ([], 16837), 'convert_nl_goto_reference': ([], 16837), 'get_local_debug_decl': ([0], 16828), 'save_tmp_var': ([], 16837), 'gimple_omp_for_index_ptr': ([], 16837), 'gimple_omp_for_initial_ptr': ([], 16837), 'gimple_omp_for_final_ptr': ([], 16837), 'gimple_omp_for_incr': ([], 16837), 'walk_gimple_omp_for': ([54], 16831), 'convert_local_omp_clauses': ([], 16837), 'convert_local_reference_stmt': ([], 16837), 'get_nonlocal_debug_decl': ([2], 16827), 'note_nonlocal_vla_type': ([0], 16835), 'note_nonlocal_block_vlas': ([], 16837), 'convert_nonlocal_omp_clauses': ([], 16837), 'convert_nonlocal_reference_stmt': ([], 16837), 'lower_nested_functions': ([], 16837), 'get_frame_type': ([], 16837)}, "PosixPath('602/cplus-dem.bc')": {'demangle_template': ([10], 29956), 'string_need': ([], 29959), 'string_prependn': ([], 29959), 'consume_count': ([], 29959), 'consume_count_with_underscores': ([], 29959), 'register_Btype': ([], 29959), 'get_count': ([], 29959), 'string_appends': ([], 29959), 'ada_demangle': ([4], 29938), 'do_hpacc_template_const_value': ([], 29959), 'arm_pt': ([], 29959), 'snarf_numeric_literal': ([], 29959), 'arm_special': ([16, 20], 29954), 'forget_types': ([], 29959), 'delete_non_B_K_work_stuff': ([8, 9, 12], 29951), 'forget_B_and_K_types': ([2], 29932), 'squangle_mop_up': ([], 29959), 'work_stuff_copy_to_from': ([], 29959), 'remember_type': ([], 29959), 'string_prepends': ([], 29959), 'remember_Ktype': ([], 29959), 'mop_up': ([], 29959), 'iterate_demangle_function': ([1, 3], 29926), 'demangle_function_name': ([5], 29954), 'demangle_arm_hp_template': ([1, 3, 31, 56, 81, 125], 29895), 'do_type': ([2], 29952), 'demangle_nested_args': ([], 29959), 'demangle_template_value_parm': ([3], 29950), 'demangle_expression': ([0], 29948), 'demangle_qualified': ([9], 29945), 'cplus_demangle': ([], 29959), 'internal_cplus_demangle': ([4], 29956), 'demangle_signature': ([11, 15, 16, 18, 21, 241, 265, 267, 313], 29899), 'demangle_class_name': ([], 29959), 'demangle_args': ([7, 9], 29946), 'do_arg': ([4], 29953), 'gnu_special': ([0], 29943), 'demangle_template_template_parm': ([], 29959), 'cplus_demangle_opname': ([], 29959), 'cplus_mangle_opname': ([], 29959), 'cplus_demangle_name_to_style': ([], 29959)}, "PosixPath('602/stack-ptr-mod.bc')": {'notice_stack_pointer_modification_1': ([], 370), 'notice_stack_pointer_modification': ([], 370), 'rest_of_handle_stack_ptr_mod': ([], 370)}, "PosixPath('602/cpp_macro.bc')": {'enter_macro_context': ([6], 13000), '_cpp_create_definition': ([6, 7], 13066), '_cpp_warn_if_unused_macro': ([], 13088), 'cpp_quote_string': ([], 13088), '_cpp_builtin_macro_text': ([0, 24], 13085), '_cpp_arguments_ok': ([], 13088), 'next_context': ([], 13088), '_cpp_push_token_context': ([], 13088), '_cpp_push_text_context': ([], 13088), '_cpp_pop_context': ([], 13088), '_cpp_backup_tokens_direct': ([], 13088), '_cpp_backup_tokens': ([], 13088), 'paste_tokens': ([], 13088), 'paste_all_tokens': ([], 13088), 'padding_token': ([], 13088), 'macro_real_token_count': ([], 13088), 'new_string_token': ([], 13088), 'stringify_arg': ([], 13088), 'push_ptoken_context': ([], 13088), 'builtin_macro': ([], 13088), 'cpp_get_token': ([58], 13000), 'cpp_scan_nooutput': ([], 13088), '_cpp_save_parameter': ([4, 5], 13073), 'parse_params': ([], 13088), 'alloc_expansion_token': ([2, 3], 13074), 'check_trad_stringification': ([], 13088), 'lex_expansion_token': ([], 13088), 'create_iso_definition': ([], 13088), 'warn_of_redefinition': ([], 13088), 'cpp_macro_definition': ([48, 58], 13072)}, "PosixPath('602/obstack.bc')": {}, "PosixPath('602/cp-demint.bc')": {'cplus_demangle_fill_component': ([], 882), 'cplus_demangle_fill_builtin_type': ([], 882), 'cplus_demangle_fill_operator': ([], 882), 'cplus_demangle_v3_components': ([2], 880)}, "PosixPath('602/bt-load.bc')": {'compute_defs_uses_and_gen': ([], 10906), 'sbitmap_iter_init': ([], 10906), 'find_btr_reference': ([], 10906), 'insn_sets_btr_p': ([5], 10897), 'find_btr_def_group': ([], 10906), 'add_btr_def': ([], 10906), 'note_other_use_this_block': ([], 10906), 'find_btr_use': ([], 10906), 'new_btr_user': ([], 10906), 'note_btr_set': ([], 10906), 'compute_kill': ([], 10906), 'compute_out': ([], 10906), 'sbitmap_iter_cond': ([], 10906), 'sbitmap_iter_next': ([], 10906), 'link_btr_uses': ([], 10906), 'build_btr_def_use_webs': ([], 10906), 'ei_end_p': ([], 10906), 'ei_cond': ([], 10906), 'ei_next': ([], 10906), 'augment_live_range': ([], 10906), 'bmp_iter_set_init': ([], 10906), 'bmp_iter_set': ([], 10906), 'btr_def_live_range': ([], 10906), 'block_at_edge_of_live_range_p': ([], 10906), 'clear_btr_from_live_range': ([], 10906), 'combine_btr_defs': ([], 10906), 'add_btr_to_live_range': ([], 10906), 'move_btr_def': ([], 10906), 'migrate_btr_def': ([], 10906), 'migrate_btr_defs': ([], 10906), 'branch_target_load_optimize': ([1], 10867)}, "PosixPath('602/sched-ebb.bc')": {'schedule_ebb': ([], 3965), 'begin_schedule_ready': ([], 3965), 'sd_iterator_cond': ([], 3965), 'ei_end_p': ([], 3965), 'ei_cond': ([], 3965), 'ei_next': ([], 3965), 'ebb_compute_jump_reg_dependencies': ([], 3965), 'sd_iterator_start': ([], 3965), 'earliest_block_with_similiar_load': ([], 3965), 'add_deps_for_risky_insns': ([], 3965), 'advance_target_bb': ([], 3965), 'ebb_print_insn': ([], 3965), 'rank': ([], 3965), 'init_ready_list': ([], 3965), 'ebb_add_block': ([], 3965), 'ebb_fix_recovery_cfg': ([1], 3961), 'schedule_ebbs': ([], 3965)}, "PosixPath('602/df-scan.bc')": {'df_scan_alloc': ([], 35135), 'df_scan_free_internal': ([4], 35126), 'df_grow_reg_info': ([], 35135), 'df_grow_insn_info': ([], 35135), 'df_scan_blocks': ([], 35135), 'df_ref_create_structure': ([0], 35114), 'df_maybe_reorganize_use_refs': ([], 35135), 'df_maybe_reorganize_def_refs': ([], 35135), 'df_scan_free': ([], 35135), 'df_scan_get_bb_info': ([], 35135), 'df_scan_start_block': ([], 35135), 'df_scan_start_dump': ([], 35135), 'df_reg_chain_unlink': ([62], 35131), 'df_ref_chain_delete': ([], 35135), 'df_insn_delete': ([], 35135), 'df_scan_free_bb_info': ([], 35135), 'df_get_regular_block_artificial_uses': ([1], 35134), 'df_get_entry_block_def_set': ([], 35135), 'bmp_iter_set_init': ([], 35135), 'bmp_iter_set': ([], 35135), 'VEC_df_mw_hardreg_ptr_base_space': ([], 35135), 'VEC_df_mw_hardreg_ptr_stack_reserve': ([], 35135), 'VEC_df_mw_hardreg_ptr_base_quick_push': ([], 35135), 'VEC_df_mw_hardreg_ptr_stack_safe_push': ([], 35135), 'VEC_df_ref_base_space': ([], 35135), 'VEC_df_ref_stack_reserve': ([], 35135), 'VEC_df_ref_base_quick_push': ([], 35135), 'VEC_df_ref_stack_safe_push': ([], 35135), 'df_ref_record': ([], 35135), 'df_ref_compare': ([], 35135), 'df_swap_refs': ([], 35135), 'df_ref_equal_p': ([], 35135), 'df_sort_and_compress_refs': ([7], 35134), 'df_mw_compare': ([], 35135), 'df_mw_equal_p': ([], 35135), 'df_sort_and_compress_mws': ([], 35135), 'df_canonize_collection_rec': ([], 35135), 'df_entry_block_defs_collect': ([], 35135), 'VEC_df_ref_base_iterate': ([], 35135), 'df_grow_ref_info': ([], 35135), 'df_check_and_grow_ref_info': ([], 35135), 'df_install_ref': ([], 35135), 'df_install_refs': ([], 35135), 'df_refs_add_to_chains': ([0, 6, 11, 17], 35118), 'df_record_entry_block_defs': ([], 35135), 'df_mark_reg': ([], 35135), 'df_get_exit_block_use_set': ([2], 35131), 'ei_end_p': ([], 35135), 'ei_cond': ([], 35135), 'ei_next': ([], 35135), 'bb_has_eh_pred': ([], 35135), 'df_exit_block_uses_collect': ([], 35135), 'df_record_exit_block_uses': ([], 35135), 'df_insn_create_insn_record': ([], 35135), 'df_read_modify_subreg_p': ([], 35135), 'df_def_record_1': ([0, 2], 35131), 'df_defs_record': ([], 35135), 'df_uses_record': ([], 35135), 'df_get_call_refs': ([], 35135), 'df_get_conditional_uses': ([], 35135), 'df_insn_refs_collect': ([12], 35126), 'df_bb_refs_collect': ([], 35135), 'df_bb_refs_record': ([], 35135), 'df_ref_create': ([], 35135), 'df_ref_compress_rec': ([], 35135), 'df_ref_remove': ([], 35135), 'df_refs_verify': ([1], 35129), 'VEC_df_mw_hardreg_ptr_base_iterate': ([], 35135), 'df_mws_verify': ([], 35135), 'df_insn_refs_verify': ([3, 9], 35130), 'df_free_collection_rec': ([], 35135), 'df_insn_rescan': ([], 35135), 'df_insn_rescan_debug_internal': ([], 35135), 'df_insn_rescan_all': ([1], 35133), 'df_mw_hardreg_chain_delete_eq_uses': ([], 35135), 'df_notes_rescan': ([35], 35132), 'df_update_entry_block_defs': ([], 35135), 'df_update_exit_block_uses': ([2], 35131), 'df_update_entry_exit_and_calls': ([], 35135), 'df_process_deferred_rescans': ([1], 35133), 'df_count_refs': ([], 35135), 'df_get_artificial_defs': ([], 35135), 'df_get_artificial_uses': ([], 35135), 'df_reorganize_refs_by_reg_by_insn': ([], 35135), 'df_reorganize_refs_by_reg_by_reg': ([], 35135), 'df_reorganize_refs_by_reg': ([], 35135), 'df_add_refs_to_table': ([], 35135), 'df_reorganize_refs_by_insn_bb': ([], 35135), 'df_reorganize_refs_by_insn': ([], 35135), 'df_insn_change_bb': ([], 35135), 'df_ref_change_reg_with_loc_1': ([], 35135), 'df_ref_change_reg_with_loc': ([], 35135), 'df_recompute_luids': ([], 35135), 'df_hard_reg_init': ([], 35135), 'df_set_regs_ever_live': ([], 35135), 'df_compute_regs_ever_live': ([], 35135), 'df_reg_chain_mark': ([3], 35111), 'df_bb_verify': ([], 35135), 'df_reg_chain_verify_unmarked': ([], 35135), 'df_scan_verify': ([], 35135)}, "PosixPath('602/tree-ssa-loop-prefetch.bc')": {'determine_loop_nest_reuse': ([], 8967), 'gather_memory_references_ref': ([52], 8961), 'VEC_int_base_quick_push': ([], 8967), 'loop_outer': ([], 8967), 'VEC_int_base_iterate': ([], 8967), 'fel_next': ([], 8967), 'fel_init': ([], 8967), 'bb_seq': ([], 8967), 'gsi_start_bb': ([], 8967), 'gsi_stmt': ([], 8967), 'gimple_vuse': ([], 8967), 'gimple_ops': ([], 8967), 'gimple_op': ([], 8967), 'gimple_assign_lhs': ([], 8967), 'gimple_assign_rhs1': ([], 8967), 'idx_analyze_ref': ([], 8967), 'analyze_ref': ([], 8967), 'find_or_create_group': ([], 8967), 'record_ref': ([], 8967), 'gather_memory_references': ([], 8967), 'prune_ref_by_self_reuse': ([], 8967), 'prune_ref_by_group_reuse': ([], 8967), 'prune_ref_by_reuse': ([], 8967), 'prune_group_by_reuse': ([], 8967), 'prune_by_reuse': ([], 8967), 'should_issue_prefetch_p': ([], 8967), 'estimate_prefetch_count': ([], 8967), 'volume_of_references': ([], 8967), 'VEC_data_reference_p_base_space': ([], 8967), 'VEC_data_reference_p_heap_reserve': ([], 8967), 'VEC_data_reference_p_base_quick_push': ([], 8967), 'VEC_data_reference_p_heap_safe_push': ([], 8967), 'VEC_data_reference_p_base_iterate': ([], 8967), 'VEC_tree_base_iterate': ([], 8967), 'get_chrec_loop': ([], 8967), 'add_subscript_strides': ([], 8967), 'self_reuse_distance': ([], 8967), 'VEC_ddr_p_base_iterate': ([], 8967), 'volume_of_dist_vector': ([], 8967), 'determine_unroll_factor': ([], 8967), 'is_loop_prefetching_profitable': ([], 8967), 'VEC_edge_base_iterate': ([], 8967), 'may_use_storent_in_loop_p': ([], 8967), 'nontemporal_store_p': ([], 8967), 'mark_nontemporal_store': ([], 8967), 'gsi_after_labels': ([], 8967), 'emit_mfence_after_loop': ([], 8967), 'mark_nontemporal_stores': ([], 8967), 'schedule_prefetches': ([], 8967), 'issue_prefetch_ref': ([], 8967), 'issue_prefetches': ([], 8967), 'release_mem_refs': ([], 8967), 'loop_prefetch_arrays': ([], 8967), 'tree_ssa_prefetch_arrays': ([], 8967)}, "PosixPath('602/prefix.bc')": {'translate_name': ([], 926), 'update_path': ([6], 925)}, "PosixPath('602/tree-ssa-sccvn.bc')": {'get_constant_value_id': ([], 34425), 'get_or_alloc_constant_value_id': ([], 34425), 'valueize_refs': ([], 34425), 'vn_nary_op_insert_pieces': ([21], 34419), 'vn_nary_op_insert': ([36], 34419), 'vn_nary_op_insert_stmt': ([36], 34419), 'DFS': ([], 34425), 'copy_nary': ([], 34425), 'visit_reference_op_call': ([], 34425), 'VEC_vn_ssa_aux_t_base_space': ([], 34425), 'VEC_vn_ssa_aux_t_heap_reserve_exact': ([], 34425), 'VEC_vn_ssa_aux_t_heap_safe_grow': ([], 34425), 'VN_INFO_GET': ([4], 34423), 'gimple_ops': ([], 34425), 'gimple_op': ([], 34425), 'gimple_assign_rhs1': ([], 34425), 'gimple_assign_rhs_code': ([], 34425), 'gimple_call_fn': ([], 34425), 'gimple_call_return_type': ([], 34425), 'gimple_expr_type': ([], 34425), 'gimple_assign_rhs2': ([], 34425), 'vn_get_expr_for': ([], 34425), 'vn_hash_constant_with_type': ([], 34425), 'vn_reference_op_compute_hash': ([], 34425), 'vn_reference_compute_hash': ([], 34425), 'vn_reference_op_eq': ([], 34425), 'vn_reference_eq': ([], 34425), 'VEC_vn_reference_op_s_base_space': ([], 34425), 'VEC_vn_reference_op_s_heap_reserve': ([], 34425), 'VEC_vn_reference_op_s_base_quick_push': ([], 34425), 'VEC_vn_reference_op_s_heap_safe_push': ([], 34425), 'copy_reference_ops_from_ref': ([2], 34419), 'ao_ref_init_from_vn_reference': ([], 34425), 'gimple_call_chain': ([], 34425), 'gimple_call_arg': ([], 34425), 'copy_reference_ops_from_call': ([0], 34421), 'VEC_vn_reference_op_s_base_ordered_remove': ([], 34425), 'VEC_vn_reference_op_s_base_quick_insert': ([], 34425), 'VEC_vn_reference_op_s_heap_safe_insert': ([], 34425), 'vn_reference_fold_indirect': ([6, 48, 50], 34404), 'VEC_vn_reference_op_s_heap_reserve_exact': ([], 34425), 'VEC_vn_reference_op_s_heap_safe_grow': ([0], 34423), 'vn_reference_lookup_1': ([], 34425), 'gimple_call_fndecl': ([], 34425), 'VEC_vn_reference_op_s_heap_copy': ([], 34425), 'vn_reference_insert_pieces': ([], 34425), 'gimple_assign_lhs': ([], 34425), 'vn_reference_lookup_3': ([], 34425), 'vn_reference_lookup_2': ([], 34425), 'vn_reference_lookup_pieces': ([1, 27], 34413), 'vn_reference_lookup': ([], 34425), 'create_reference_ops_from_ref': ([], 34425), 'vn_reference_insert': ([], 34425), 'vn_nary_op_compute_hash': ([], 34425), 'vn_nary_op_eq': ([], 34425), 'vn_nary_op_lookup_pieces': ([], 34425), 'vn_nary_op_lookup': ([12], 34424), 'vn_nary_op_lookup_stmt': ([0], 34401), 'free_vn_table': ([], 34425), 'free_scc_vn': ([], 34425), 'VEC_vn_ssa_aux_t_heap_safe_grow_cleared': ([], 34425), 'VEC_tree_base_iterate': ([], 34425), 'vn_phi_eq': ([], 34425), 'vn_constant_eq': ([], 34425), 'init_scc_vn': ([], 34425), 'has_zero_uses': ([], 34425), 'VEC_tree_base_space': ([], 34425), 'VEC_tree_heap_reserve': ([], 34425), 'VEC_tree_base_quick_push': ([], 34425), 'VEC_tree_heap_safe_push': ([], 34425), 'clear_and_done_ssa_iter': ([], 34425), 'op_iter_next_use': ([], 34425), 'op_iter_init_phiuse': ([], 34425), 'gimple_def_ops': ([], 34425), 'gimple_vdef': ([], 34425), 'gimple_use_ops': ([], 34425), 'gimple_vuse': ([], 34425), 'op_iter_init': ([], 34425), 'op_iter_init_use': ([], 34425), 'VEC_tree_base_pop': ([], 34425), 'compare_ops': ([], 34425), 'print_scc': ([], 34425), 'set_ssa_val_to': ([], 34425), 'visit_copy': ([0, 3, 6], 34418), 'vn_phi_compute_hash': ([], 34425), 'vn_phi_lookup': ([], 34425), 'vn_phi_insert': ([], 34425), 'visit_phi': ([], 34425), 'gimple_call_lhs': ([], 34425), 'gimple_has_lhs': ([], 34425), 'op_iter_next_def': ([], 34425), 'op_iter_init_def': ([], 34425), 'defs_to_varying': ([], 34425), 'valueize_expr': ([], 34425), 'gimple_assign_cast_p': ([], 34425), 'simplify_unary_expression': ([], 34425), 'simplify_binary_expression': ([], 34425), 'try_to_simplify': ([], 34425), 'expr_has_constants': ([], 34425), 'stmt_has_constants': ([2], 34423), 'visit_reference_op_store': ([], 34425), 'visit_reference_op_load': ([3], 34424), 'create_reference_ops_from_call': ([], 34425), 'visit_use': ([18], 34420), 'copy_references': ([], 34425), 'copy_phis': ([], 34425), 'process_scc': ([], 34425), 'extract_and_process_scc_for_name': ([], 34425), 'VEC_ssa_op_iter_base_space': ([], 34425), 'VEC_ssa_op_iter_heap_reserve': ([], 34425), 'VEC_ssa_op_iter_base_quick_push': ([], 34425), 'VEC_ssa_op_iter_heap_safe_push': ([], 34425), 'first_htab_element': ([], 34425), 'end_htab_p': ([], 34425), 'next_htab_element': ([], 34425), 'set_hashtable_value_ids': ([], 34425), 'run_scc_vn': ([], 34425), 'vn_nary_may_trap': ([], 34425), 'allocate_vn_table': ([], 34425)}, "PosixPath('602/regstat.bc')": {'regstat_init_n_sets_and_refs': ([], 4574), 'bmp_iter_set_init': ([], 4574), 'bmp_iter_set': ([], 4574), 'df_scan_get_bb_info': ([], 4574), 'df_get_artificial_defs': ([], 4574), 'df_get_artificial_uses': ([], 4574), 'regstat_bb_compute_ri': ([], 4574), 'regstat_compute_ri': ([], 4574), 'regstat_free_ri': ([], 4574), 'regstat_bb_compute_calls_crossed': ([], 4574), 'regstat_compute_calls_crossed': ([], 4574)}, "PosixPath('602/graphite.bc')": {}, "PosixPath('602/mini-gmp.bc')": {'gmp_default_realloc': ([], 33897), 'gmp_default_alloc': ([], 33897), 'mpn_copyi': ([], 33897), 'mpn_copyd': ([], 33897), 'mpn_addmul_1': ([], 33897), 'mpn_submul_1': ([], 33897), 'mpn_mul': ([], 33897), 'mpn_lshift': ([], 33897), 'mpn_get_str_bits': ([], 33897), 'mpn_get_base_info': ([], 33897), 'mpn_div_qr_1_invert': ([], 33897), 'mpn_div_qr_1_preinv': ([5], 33884), 'mpn_limb_get_str': ([], 33897), 'mpn_get_str_other': ([], 33897), 'mpn_get_str': ([], 33897), 'mpn_set_str_bits': ([], 33897), 'mpn_set_str_other': ([], 33897), 'mpn_set_str': ([], 33897), 'mpz_init': ([], 33897), 'mpz_init2': ([], 33897), 'mpz_set_ui': ([0], 33878), 'mpz_set_si': ([], 33897), 'mpz_realloc': ([], 33897), 'mpz_set': ([], 33897), 'mpz_init_set_si': ([], 33897), 'mpz_init_set_ui': ([], 33897), 'mpz_init_set': ([], 33897), 'mpz_fits_slong_p': ([], 33897), 'mpz_get_si': ([], 33897), 'mpz_get_ui': ([], 33897), 'mpz_getlimbn': ([], 33897), 'mpz_realloc2': ([], 33897), 'mpz_limbs_modify': ([], 33897), 'mpz_roinit_n': ([], 33897), 'mpz_set_d': ([], 33897), 'mpz_init_set_d': ([], 33897), 'mpz_get_d': ([], 33897), 'mpz_cmpabs_d': ([], 33897), 'mpz_cmp_ui': ([], 33897), 'mpz_cmp_si': ([], 33897), 'mpz_cmp': ([], 33897), 'mpz_cmpabs_ui': ([], 33897), 'mpz_cmpabs': ([], 33897), 'mpz_swap': ([], 33897), 'mpz_abs_add_ui': ([], 33897), 'mpz_abs_sub_ui': ([], 33897), 'mpz_add_ui': ([], 33897), 'mpz_sub_ui': ([], 33897), 'mpz_ui_sub': ([], 33897), 'mpz_abs_add': ([], 33897), 'mpz_abs_sub': ([], 33897), 'mpz_mul_ui': ([], 33897), 'mpz_mul': ([], 33897), 'mpz_mul_2exp': ([], 33897), 'mpz_addmul_ui': ([], 33897), 'mpz_submul_ui': ([], 33897), 'mpz_addmul': ([], 33897), 'mpz_submul': ([], 33897), 'mpn_div_qr_2_invert': ([], 33897), 'mpn_div_qr_invert': ([], 33897), 'mpn_div_qr_2_preinv': ([], 33897), 'mpn_div_qr_pi1': ([], 33897), 'mpn_div_qr_preinv': ([], 33897), 'mpn_div_qr': ([], 33897), 'mpz_div_qr': ([2], 33895), 'mpz_div_q_2exp': ([], 33897), 'mpz_div_r_2exp': ([], 33897), 'mpz_congruent_p': ([], 33897), 'mpn_div_qr_1': ([], 33897), 'mpz_div_qr_ui': ([], 33897), 'mpz_gcd_ui': ([], 33897), 'mpz_gcd': ([48], 33866), 'mpz_tstbit': ([], 33897), 'mpz_abs_add_bit': ([7], 33879), 'mpz_abs_sub_bit': ([], 33897), 'mpz_gcdext': ([259], 33878), 'mpz_lcm': ([], 33897), 'mpz_invert': ([], 33897), 'mpz_pow_ui': ([], 33897), 'mpz_ui_pow_ui': ([0], 33887), 'mpz_powm': ([11, 14], 33884), 'mpz_powm_ui': ([0], 33889), 'mpz_sizeinbase': ([], 33897), 'mpz_rootrem': ([4, 38, 69, 72, 96], 33812), 'mpz_root': ([], 33897), 'mpn_perfect_square_p': ([], 33897), 'mpn_sqrtrem': ([], 33897), 'mpz_bin_uiui': ([], 33897), 'mpz_scan1': ([], 33897), 'gmp_millerrabin': ([], 33897), 'mpz_probab_prime_p': ([], 33897), 'mpz_and': ([], 33897), 'mpz_ior': ([], 33897), 'mpz_xor': ([], 33897), 'mpz_popcount': ([], 33897), 'mpz_hamdist': ([], 33897), 'mpz_scan0': ([], 33897), 'mpz_get_str': ([], 33897), 'mpz_set_str': ([], 33897), 'mpz_init_set_str': ([], 33897), 'mpz_import': ([], 33897), 'mpz_export': ([], 33897)}, "PosixPath('602/df-core.bc')": {'df_add_problem': ([], 13370), 'df_set_blocks': ([2], 13367), 'df_finish_pass': ([10], 13366), 'rest_of_handle_df_initialize': ([], 13370), 'df_analyze': ([], 13370), 'bmp_iter_set_init': ([], 13370), 'bmp_iter_set': ([], 13370), 'df_get_bb_info': ([], 13370), 'df_set_bb_info': ([], 13370), 'df_mark_solutions_dirty': ([], 13370), 'df_remove_problem': ([], 13370), 'ei_end_p': ([], 13370), 'ei_cond': ([], 13370), 'ei_next': ([], 13370), 'df_worklist_propagate_forward': ([], 13370), 'df_worklist_propagate_backward': ([], 13370), 'df_worklist_dataflow_doublequeue': ([], 13370), 'df_worklist_dataflow': ([], 13370), 'df_analyze_problem': ([0], 13369), 'df_prune_to_subcfg': ([], 13370), 'df_get_n_blocks': ([], 13370), 'df_get_postorder': ([], 13370), 'df_set_bb_dirty': ([], 13370), 'df_set_bb_dirty_nonlr': ([], 13370), 'df_compact_blocks': ([13], 13369), 'df_clear_bb_dirty': ([], 13370), 'df_bb_replace': ([], 13370), 'df_bb_delete': ([], 13370), 'df_bb_regno_first_def_find': ([], 13370), 'df_bb_regno_last_def_find': ([], 13370), 'df_find_def': ([0], 13366), 'df_find_use': ([0], 13366), 'df_print_regset': ([], 13370), 'df_print_byte_regset': ([], 13370), 'df_dump_start': ([], 13370), 'df_dump_top': ([], 13370), 'df_dump_bottom': ([], 13370), 'df_dump_region': ([], 13370), 'df_refs_chain_dump': ([], 13370), 'df_regs_chain_dump': ([], 13370), 'df_mws_dump': ([], 13370), 'df_insn_uid_debug': ([], 13370), 'df_insn_debug': ([], 13370), 'df_insn_debug_regno': ([], 13370), 'df_ref_debug': ([], 13370), 'debug_df_reg': ([], 13370), 'debug_df_defno': ([], 13370), 'debug_df_useno': ([], 13370), 'rest_of_handle_df_finish': ([], 13370)}, "PosixPath('602/tree-ssa-pre.bc')": {'remove_dead_inserted_code': ([], 37661), 'compute_antic': ([], 37661), 'eliminate': ([8], 37571), 'sorted_array_from_bitmap_set': ([], 37661), 'phi_translate_1': ([], 37661), 'gsi_start': ([], 37661), 'VEC_bitmap_set_t_base_space': ([], 37661), 'VEC_bitmap_set_t_heap_reserve_exact': ([], 37661), 'VEC_bitmap_set_t_heap_safe_grow': ([], 37661), 'VEC_bitmap_set_t_heap_safe_grow_cleared': ([], 37661), 'lookup_expression_id': ([], 37661), 'VEC_pre_expr_base_space': ([], 37661), 'VEC_pre_expr_heap_reserve': ([], 37661), 'VEC_pre_expr_base_quick_push': ([], 37661), 'VEC_pre_expr_heap_safe_push': ([], 37661), 'VEC_unsigned_base_space': ([], 37661), 'VEC_unsigned_heap_reserve': ([], 37661), 'VEC_unsigned_heap_reserve_exact': ([], 37661), 'VEC_unsigned_heap_safe_grow': ([], 37661), 'VEC_unsigned_heap_safe_grow_cleared': ([], 37661), 'alloc_expression_id': ([], 37661), 'get_or_alloc_expression_id': ([], 37661), 'bitmap_insert_into_set_1': ([], 37661), 'add_to_value': ([], 37661), 'get_expr_value_id': ([], 37661), 'print_pre_expr': ([9, 11], 37655), 'bmp_iter_set_init': ([], 37661), 'bmp_iter_set': ([], 37661), 'print_bitmap_set': ([], 37661), 'print_value_expressions': ([], 37661), 'VEC_gimple_base_iterate': ([], 37661), 'VEC_gimple_base_quick_push': ([], 37661), 'VEC_gimple_base_pop': ([], 37661), 'VEC_gimple_base_space': ([], 37661), 'VEC_gimple_heap_reserve': ([], 37661), 'mark_operand_necessary': ([], 37661), 'gimple_def_ops': ([], 37661), 'gimple_vdef': ([], 37661), 'gimple_use_ops': ([], 37661), 'gimple_vuse': ([], 37661), 'op_iter_init': ([], 37661), 'op_iter_next_tree': ([], 37661), 'op_iter_init_tree': ([], 37661), 'VEC_gimple_heap_safe_push': ([], 37661), 'ei_one_before_end_p': ([], 37661), 'ei_next': ([], 37661), 'my_rev_post_order_compute': ([], 37661), 'pre_expr_eq': ([], 37661), 'vn_hash_constant_with_type': ([], 37661), 'pre_expr_hash': ([], 37661), 'expr_pred_trans_eq': ([], 37661), 'init_pre': ([], 37661), 'has_zero_uses': ([], 37661), 'get_or_alloc_expr_for_name': ([], 37661), 'gsi_stmt': ([], 37661), 'make_values_for_phi': ([], 37661), 'bb_seq': ([], 37661), 'gsi_start_bb': ([], 37661), 'gimple_ops': ([], 37661), 'gimple_op': ([], 37661), 'gimple_call_fn': ([], 37661), 'gimple_call_return_type': ([], 37661), 'gimple_assign_rhs1': ([], 37661), 'gimple_assign_rhs_code': ([], 37661), 'gimple_expr_type': ([], 37661), 'gimple_assign_rhs2': ([], 37661), 'compute_avail': ([], 37661), 'ei_end_p': ([], 37661), 'ei_cond': ([], 37661), 'single_succ_edge': ([], 37661), 'phi_nodes': ([], 37661), 'VEC_pre_expr_base_iterate': ([], 37661), 'phi_trans_lookup': ([], 37661), 'bitmap_set_contains_value': ([], 37661), 'bmp_iter_and_init': ([], 37661), 'bmp_iter_and': ([], 37661), 'bitmap_find_leader': ([], 37661), 'get_expr_type': ([], 37661), 'get_var_ann': ([], 37661), 'get_representative_for': ([], 37661), 'get_or_alloc_expr_for_constant': ([], 37661), 'get_or_alloc_expr_for': ([], 37661), 'get_constant_for_value_id': ([], 37661), 'fully_constant_expression': ([], 37661), 'VEC_vn_reference_op_s_heap_copy': ([], 37661), 'translate_vuse_through_block': ([], 37661), 'phi_trans_add': ([], 37661), 'phi_translate': ([3], 37620), 'bitmap_set_replace_value': ([], 37661), 'bitmap_value_replace_in_set': ([], 37661), 'phi_translate_set': ([], 37661), 'defer_or_phi_translate_block': ([], 37661), 'VEC_basic_block_base_quick_push': ([], 37661), 'VEC_basic_block_base_iterate': ([], 37661), 'bitmap_set_and': ([], 37661), 'bitmap_set_free': ([], 37661), 'bitmap_set_subtract': ([], 37661), 'vro_valid_in_sets': ([], 37661), 'value_dies_in_block_x': ([], 37661), 'valid_in_sets': ([178], 37644), 'clean': ([], 37661), 'compute_antic_aux': ([], 37661), 'bitmap_set_subtract_values': ([], 37661), 'dependent_clean': ([], 37661), 'compute_partial_antic_aux': ([], 37661), 'inhibit_phi_insertion': ([], 37661), 'gimple_set_op': ([], 37661), 'gimple_assign_set_lhs': ([], 37661), 'create_component_ref_by_pieces_1': ([], 37661), 'create_expression_by_pieces': ([], 37661), 'find_or_generate_expression': ([], 37661), 'insert_into_preds_of_block': ([49], 37657), 'do_regular_insertion': ([], 37661), 'do_partial_partial_insertion': ([], 37661), 'insert_aux': ([], 37661), 'insert': ([], 37661), 'gimple_call_lhs': ([], 37661), 'gimple_has_lhs': ([], 37661), 'do_SCCVN_insertion': ([], 37661), 'gimple_assign_lhs': ([], 37661), 'gimple_cond_lhs': ([], 37661), 'gimple_cond_rhs': ([], 37661), 'gimple_cond_set_lhs': ([], 37661), 'gimple_cond_set_rhs': ([], 37661), 'gimple_cond_make_false': ([], 37661), 'gimple_cond_make_true': ([], 37661), 'gimple_call_set_fn': ([], 37661), 'gsi_after_labels': ([], 37661), 'single_imm_use': ([], 37661), 'delink_imm_use': ([], 37661), 'link_imm_use_to_list': ([], 37661), 'link_imm_use': ([], 37661), 'set_ssa_use_from_ptr': ([], 37661), 'fini_pre': ([], 37661), 'execute_pre': ([], 37661), 'bitmap_set_new': ([], 37661)}, "PosixPath('602/tree-ssa-loop-ivcanon.bc')": {'bb_seq': ([], 5457), 'gsi_start_bb': ([], 5457), 'gsi_stmt': ([], 5457), 'tree_num_loop_insns': ([7], 5451), 'VEC_loop_p_base_iterate': ([], 5457), 'VEC_int_base_quick_push': ([], 5457), 'loop_outer': ([], 5457), 'VEC_int_base_iterate': ([], 5457), 'fel_next': ([], 5457), 'fel_init': ([], 5457), 'gimple_ops': ([], 5457), 'gimple_op': ([], 5457), 'gimple_assign_lhs': ([], 5457), 'constant_after_peeling': ([0, 1], 5446), 'gimple_assign_rhs1': ([], 5457), 'gimple_assign_rhs_code': ([], 5457), 'gimple_assign_rhs_class': ([], 5457), 'gimple_assign_rhs2': ([], 5457), 'gimple_cond_lhs': ([], 5457), 'gimple_cond_rhs': ([], 5457), 'tree_estimate_loop_size': ([], 5457), 'estimated_unrolled_size': ([], 5457), 'RESET_BIT': ([], 5457), 'VEC_edge_base_iterate': ([], 5457), 'gimple_set_op': ([], 5457), 'gimple_cond_set_lhs': ([], 5457), 'gimple_cond_set_rhs': ([], 5457), 'gimple_cond_make_true': ([], 5457), 'gimple_cond_make_false': ([], 5457), 'try_unroll_loop_completely': ([], 5457), 'gsi_last_bb': ([], 5457), 'create_canonical_iv': ([], 5457), 'canonicalize_loop_induction_variables': ([], 5457), 'canonicalize_induction_variables': ([], 5457), 'tree_unroll_loops_completely': ([5], 5454)}, "PosixPath('602/cfglayout.bc')": {'fixup_reorder_chain': ([], 8118), 'VEC_int_base_space': ([], 8118), 'VEC_int_heap_reserve': ([], 8118), 'VEC_int_base_quick_push': ([], 8118), 'VEC_int_heap_safe_push': ([], 8118), 'VEC_tree_base_space': ([], 8118), 'VEC_tree_gc_reserve': ([], 8118), 'VEC_tree_base_quick_push': ([], 8118), 'VEC_tree_gc_safe_push': ([], 8118), 'VEC_location_t_base_space': ([], 8118), 'VEC_location_t_heap_reserve': ([], 8118), 'VEC_location_t_base_quick_push': ([], 8118), 'VEC_location_t_heap_safe_push': ([], 8118), 'curr_insn_locator': ([], 8118), 'change_scope': ([], 8118), 'reemit_insn_block_notes': ([], 8118), 'relink_block_chain': ([], 8118), 'verify_insn_chain': ([], 8118), 'cfg_layout_can_duplicate_bb_p': ([2], 8115), 'duplicate_insn_chain': ([], 8118), 'cfg_layout_duplicate_bb': ([], 8118), 'skip_insns_after_block': ([], 8118), 'record_effective_endpoints': ([], 8118), 'cfg_layout_initialize': ([], 8118), 'break_superblocks': ([], 8118), 'ei_end_p': ([], 8118), 'ei_cond': ([], 8118), 'ei_next': ([], 8118), 'ei_safe_edge': ([], 8118), 'force_one_exit_fallthru': ([], 8118), 'label_for_bb': ([], 8118), 'single_pred_edge': ([], 8118), 'cfg_layout_finalize': ([], 8118), 'can_copy_bbs_p': ([], 8118), 'copy_bbs': ([], 8118), 'outof_cfg_layout_mode': ([6], 8111)}, "PosixPath('602/cpp_directives-only.bc')": {'_cpp_preprocess_dir_only': ([], 1379)}, "PosixPath('602/et-forest.bc')": {'et_new_occ': ([], 2905), 'et_new_tree': ([], 2905), 'set_depth_add': ([], 2905), 'set_depth': ([], 2905), 'et_recomp_min': ([], 2905), 'et_splay': ([], 2905), 'et_split': ([], 2905), 'et_free_tree': ([], 2905), 'et_free_tree_force': ([], 2905), 'et_set_father': ([], 2905), 'et_nca': ([], 2905), 'et_below': ([], 2905)}, "PosixPath('602/main.bc')": {}, "PosixPath('602/ipa-struct-reorg.bc')": {'exclude_alloc_and_field_accs_1': ([], 26036), 'build_basic_struct': ([], 26036), 'program_redefines_malloc_p': ([], 26036), 'get_type_of_var': ([], 26036), 'strip_type': ([], 26036), 'VEC_tree_base_iterate': ([], 26036), 'get_type_name': ([], 26036), 'is_equal_types': ([], 26036), 'compare_fields': ([], 26036), 'VEC_tree_base_space': ([], 26036), 'VEC_tree_heap_reserve': ([], 26036), 'VEC_tree_base_quick_push': ([], 26036), 'VEC_tree_heap_safe_push': ([], 26036), 'add_unsuitable_type': ([], 26036), 'is_candidate': ([], 26036), 'find_structure': ([], 26036), 'get_fields': ([], 26036), 'VEC_structure_base_space': ([], 26036), 'VEC_structure_heap_reserve': ([], 26036), 'VEC_structure_base_quick_push': ([], 26036), 'VEC_structure_heap_safe_push': ([], 26036), 'add_structure': ([], 26036), 'build_data_structure': ([], 26036), 'check_struct_form': ([], 26036), 'analyze_struct_form': ([], 26036), 'exclude_types_passed_to_local_func': ([], 26036), 'exclude_returned_types': ([], 26036), 'exclude_escaping_types_1': ([], 26036), 'exclude_escaping_types': ([], 26036), 'check_bitfields': ([], 26036), 'exclude_types_with_bit_fields': ([], 26036), 'VEC_alloc_site_t_base_ordered_remove': ([], 26036), 'remove_str_allocs_in_func': ([], 26036), 'free_accs': ([], 26036), 'free_struct_cluster': ([], 26036), 'free_data_struct': ([3], 26034), 'VEC_structure_base_ordered_remove': ([], 26036), 'remove_structure': ([], 26036), 'remove_unsuitable_types': ([], 26036), 'collect_structures': ([], 26036), 'gimple_ops': ([], 26036), 'gimple_op': ([], 26036), 'gimple_call_fn': ([], 26036), 'gimple_call_fndecl': ([], 26036), 'gimple_call_lhs': ([], 26036), 'single_imm_use': ([], 26036), 'get_final_alloc_stmt': ([], 26036), 'gimple_assign_lhs': ([], 26036), 'is_alloc_of_struct': ([], 26036), 'VEC_alloc_site_t_base_space': ([], 26036), 'VEC_alloc_site_t_heap_reserve': ([], 26036), 'VEC_alloc_site_t_base_quick_push': ([], 26036), 'VEC_alloc_site_t_heap_safe_push': ([], 26036), 'add_alloc_site': ([], 26036), 'collect_alloc_sites': ([], 26036), 'collect_allocation_sites': ([], 26036), 'bb_seq': ([], 26036), 'gsi_start_bb': ([], 26036), 'gsi_stmt': ([], 26036), 'add_access_to_acc_sites': ([], 26036), 'find_field_in_struct_1': ([], 26036), 'find_field_in_struct': ([], 26036), 'gimple_assign_rhs1': ([], 26036), 'gimple_assign_rhs_code': ([], 26036), 'gimple_assign_rhs2': ([], 26036), 'gimple_use_ops': ([], 26036), 'gimple_vuse': ([], 26036), 'op_iter_init': ([], 26036), 'op_iter_next_tree': ([], 26036), 'op_iter_init_tree': ([], 26036), 'single_ssa_tree_operand': ([], 26036), 'is_result_of_mult': ([], 26036), 'decompose_indirect_ref_acc': ([], 26036), 'decompose_access': ([0], 26034), 'get_stmt_accesses': ([5], 26034), 'collect_accesses_in_bb': ([], 26036), 'collect_accesses_in_func': ([], 26036), 'is_part_of_malloc': ([], 26036), 'find_in_field_accs': ([], 26036), 'is_part_of_field_access': ([], 26036), 'exclude_from_accs': ([], 26036), 'exclude_alloc_and_field_accs': ([], 26036), 'gimple_cond_lhs': ([], 26036), 'gimple_cond_rhs': ([], 26036), 'is_safe_cond_expr': ([], 26036), 'safe_cond_expr_check': ([2], 26021), 'check_cond_exprs': ([], 26036), 'dump_field_acc': ([], 26036), 'dump_acc': ([], 26036), 'dump_accs': ([], 26036), 'dump_accesses': ([], 26036), 'collect_data_accesses': ([], 26036), 'sum_counts': ([], 26036), 'exclude_cold_structs': ([], 26036), 'get_max_field_count': ([], 26036), 'peel_field': ([], 26036), 'gen_cluster': ([], 26036), 'peel_hot_fields': ([], 26036), 'peel_structs': ([], 26036), 'gen_cluster_name': ([], 26036), 'create_fields': ([], 26036), 'create_new_type': ([], 26036), 'create_new_types': ([], 26036), 'dump_struct_type': ([], 26036), 'dump_new_types': ([], 26036), 'gen_var_name': ([], 26036), 'VEC_type_wrapper_t_base_space': ([], 26036), 'VEC_type_wrapper_t_heap_reserve': ([], 26036), 'VEC_type_wrapper_t_base_quick_push': ([], 26036), 'VEC_type_wrapper_t_heap_safe_push': ([], 26036), 'gen_struct_type': ([], 26036), 'is_global_var': ([], 26036), 'copy_decl_attributes': ([], 26036), 'create_new_var_1': ([], 26036), 'create_new_var': ([], 26036), 'update_varpool_with_new_var': ([], 26036), 'new_var_eq': ([], 26036), 'create_new_global_vars': ([], 26036), 'dump_new_var': ([], 26036), 'first_htab_element': ([], 26036), 'first_referenced_var': ([], 26036), 'end_htab_p': ([], 26036), 'end_referenced_vars_p': ([], 26036), 'next_htab_element': ([], 26036), 'next_referenced_var': ([], 26036), 'finalize_new_vars_creation': ([], 26036), 'create_new_local_vars': ([], 26036), 'gimple_call_arg': ([], 26036), 'gen_num_of_structs_in_malloc': ([], 26036), 'gimple_set_op': ([], 26036), 'gimple_call_set_lhs': ([], 26036), 'find_var_in_new_vars_vec': ([], 26036), 'find_new_var_of_type': ([], 26036), 'gen_cast_stmt': ([], 26036), 'create_new_malloc': ([], 26036), 'update_cgraph_with_malloc_call': ([], 26036), 'create_new_alloc_sites': ([], 26036), 'create_new_alloc_sites_for_func': ([], 26036), 'gimple_phi_arg_location_from_edge': ([], 26036), 'make_edge_and_fix_phis_of_dest': ([8], 26031), 'create_new_stmts_for_cond_expr_1': ([], 26036), 'create_new_stmts_for_cond_expr': ([], 26036), 'gimple_debug_bind_reset_value': ([], 26036), 'gimple_assign_set_rhs1': ([], 26036), 'gimple_assign_set_lhs': ([], 26036), 'find_pos_in_stmt_1': ([], 26036), 'find_pos_in_stmt': ([], 26036), 'insert_new_var_in_stmt': ([], 26036), 'create_general_new_stmt': ([], 26036), 'create_new_stmts_for_general_acc': ([], 26036), 'create_new_general_access': ([], 26036), 'create_new_acc': ([], 26036), 'create_base_plus_offset': ([], 26036), 'finalize_global_creation': ([], 26036), 'build_comp_ref': ([], 26036), 'replace_field_acc': ([], 26036), 'replace_field_access_stmt': ([], 26036), 'create_new_field_access': ([], 26036), 'create_new_field_acc': ([], 26036), 'create_new_accs_for_struct': ([], 26036), 'create_new_accesses_in_bb': ([], 26036), 'create_new_accesses_for_func': ([], 26036), 'free_new_var': ([], 26036), 'do_reorg_for_func': ([], 26036), 'do_reorg_1': ([], 26036), 'do_reorg': ([], 26036), 'free_falloc_sites': ([], 26036), 'reorg_structs': ([], 26036), 'reorg_structs_drive': ([], 26036)}, "PosixPath('602/xatexit.bc')": {'xatexit_cleanup': ([], 274), 'xatexit': ([], 274)}, "PosixPath('602/lto-streamer.bc')": {'bp_unpack_value': ([], 5789), 'print_lto_report': ([], 5789), 'bitpack_delete': ([], 5789), 'bp_get_next_word': ([], 5789), 'VEC_bitpack_word_t_base_space': ([], 5789), 'VEC_bitpack_word_t_heap_reserve': ([], 5789), 'VEC_bitpack_word_t_base_quick_push': ([], 5789), 'VEC_bitpack_word_t_heap_safe_push': ([], 5789), 'bp_pack_value': ([9], 5787), 'VEC_tree_base_space': ([], 5789), 'VEC_tree_gc_reserve_exact': ([], 5789), 'VEC_tree_gc_safe_grow': ([], 5789), 'VEC_tree_gc_safe_grow_cleared': ([], 5789), 'VEC_unsigned_base_space': ([], 5789), 'VEC_unsigned_heap_reserve_exact': ([], 5789), 'VEC_unsigned_heap_safe_grow': ([], 5789), 'VEC_unsigned_heap_safe_grow_cleared': ([], 5789), 'lto_streamer_cache_add_to_node_array': ([], 5789), 'lto_stream_as_builtin_p': ([], 5789), 'lto_streamer_cache_insert_1': ([5], 5784), 'lto_streamer_cache_lookup': ([], 5789), 'lto_streamer_cache_get': ([], 5789), 'VEC_tree_heap_reserve': ([], 5789), 'VEC_tree_base_quick_push': ([], 5789), 'VEC_tree_heap_safe_push': ([], 5789), 'lto_record_common_node': ([], 5789), 'lto_get_common_nodes': ([], 5789), 'VEC_tree_base_iterate': ([], 5789), 'preload_common_node': ([], 5789), 'lto_streamer_cache_create': ([], 5789), 'lto_streamer_cache_delete': ([], 5789), 'check_handled_ts_structures': ([], 5789), 'lto_streamer_init': ([], 5789), 'gate_lto_out': ([], 5789)}, "PosixPath('602/vec.bc')": {'calculate_allocation': ([], 1599), 'vec_gc_o_reserve_1': ([], 1599), 'vec_heap_o_reserve_1': ([], 1599), 'VEC_void_p_base_space': ([], 1599), 'VEC_void_p_heap_reserve': ([], 1599), 'VEC_void_p_base_quick_push': ([], 1599), 'VEC_void_p_heap_safe_push': ([], 1599), 'vec_stack_p_reserve_exact_1': ([], 1599), 'VEC_void_p_base_unordered_remove': ([], 1599), 'vec_stack_o_reserve_1': ([], 1599), 'vec_stack_free': ([], 1599)}, "PosixPath('602/cc1-checksum.bc')": {}, "PosixPath('602/dfp.bc')": {'decimal_from_decnumber': ([], 4508), 'decimal_to_decnumber': ([], 4508), 'decode_decimal32': ([], 4508), 'encode_decimal64': ([], 4508), 'decode_decimal64': ([6], 4505), 'encode_decimal128': ([], 4508), 'decode_decimal128': ([], 4508), 'decimal_do_compare': ([], 4508), 'decimal_round_for_format': ([], 4508), 'decimal_real_convert': ([], 4508), 'decimal_do_fix_trunc': ([], 4508), 'decimal_real_to_integer': ([], 4508), 'decimal_real_to_integer2': ([], 4508), 'decimal_real_arithmetic': ([], 4508)}, "PosixPath('602/web.bc')": {'unionfind_root': ([], 2616), 'unionfind_union': ([], 2616), 'union_defs': ([], 2616), 'entry_register': ([], 2616), 'replace_ref': ([], 2616), 'web_main': ([], 2616)}, "PosixPath('602/lbasename.bc')": {'lbasename': ([], 79)}, "PosixPath('602/ipa-pure-const.bc')": {'bb_seq': ([], 9547), 'gsi_start_bb': ([], 9547), 'gsi_stmt': ([], 9547), 'gimple_ops': ([], 9547), 'gimple_op': ([], 9547), 'gimple_call_fn': ([], 9547), 'gimple_call_fndecl': ([], 9547), 'check_call': ([], 9547), 'gimple_label_label': ([], 9547), 'gimple_asm_clobber_op': ([], 9547), 'check_decl': ([], 9547), 'check_op': ([], 9547), 'check_store': ([], 9547), 'check_load': ([], 9547), 'check_stmt': ([], 9547), 'VEC_int_base_quick_push': ([], 9547), 'loop_outer': ([], 9547), 'VEC_int_base_iterate': ([], 9547), 'fel_next': ([], 9547), 'fel_init': ([], 9547), 'analyze_function': ([], 9547), 'local_pure_const': ([], 9547), 'gate_pure_const': ([], 9547), 'VEC_funct_state_base_space': ([], 9547), 'VEC_funct_state_heap_reserve_exact': ([], 9547), 'VEC_funct_state_heap_safe_grow': ([], 9547), 'VEC_funct_state_heap_safe_grow_cleared': ([], 9547), 'set_function_state': ([], 9547), 'add_new_function': ([], 9547), 'get_function_state': ([], 9547), 'duplicate_node_data': ([0], 9525), 'remove_node_data': ([], 9547), 'pure_const_read_summary': ([], 9547), 'pure_const_write_summary': ([], 9547), 'generate_summary': ([], 9547), 'self_recursive_p': ([], 9547), 'propagate': ([], 9547)}, "PosixPath('602/tree-parloops.bc')": {'create_loop_fn': ([0], 17640), 'take_address_of': ([], 17641), 'parallelized_function_p': ([], 17641), 'VEC_int_base_quick_push': ([], 17641), 'loop_outer': ([], 17641), 'VEC_int_base_iterate': ([], 17641), 'fel_next': ([], 17641), 'fel_init': ([], 17641), 'gsi_stmt': ([], 17641), 'loop_has_vector_phi_nodes': ([], 17641), 'gimple_ops': ([], 17641), 'gimple_op': ([], 17641), 'gimple_assign_rhs1': ([], 17641), 'gimple_assign_rhs_code': ([], 17641), 'build_new_reduction': ([], 17641), 'gather_scalar_reductions': ([], 17641), 'end_readonly_imm_use_p': ([], 17641), 'first_readonly_imm_use': ([], 17641), 'next_readonly_imm_use': ([], 17641), 'try_create_reduction_list': ([], 17641), 'loop_parallel_p': ([], 17641), 'single_succ_edge': ([], 17641), 'gimple_cond_lhs': ([], 17641), 'gimple_cond_rhs': ([], 17641), 'gimple_set_op': ([], 17641), 'gimple_cond_set_lhs': ([], 17641), 'bb_seq': ([], 17641), 'gsi_start_bb': ([], 17641), 'gsi_after_labels': ([], 17641), 'transform_to_exit_first_loop': ([], 17641), 'VEC_basic_block_base_iterate': ([], 17641), 'gimple_op_ptr': ([], 17641), 'gimple_debug_bind_get_value_ptr': ([], 17641), 'gimple_assign_set_lhs': ([], 17641), 'eliminate_local_variables_1': ([], 17641), 'eliminate_local_variables_stmt': ([], 17641), 'eliminate_local_variables': ([], 17641), 'single_pred_edge': ([], 17641), 'clear_and_done_ssa_iter': ([], 17641), 'op_iter_init_phidef': ([], 17641), 'gimple_def_ops': ([], 17641), 'gimple_vdef': ([], 17641), 'gimple_use_ops': ([], 17641), 'gimple_vuse': ([], 17641), 'op_iter_init': ([], 17641), 'op_iter_next_def': ([], 17641), 'op_iter_init_def': ([], 17641), 'separate_decls_in_region_name': ([], 17641), 'op_iter_next_use': ([], 17641), 'op_iter_init_phiuse': ([], 17641), 'op_iter_init_use': ([], 17641), 'expr_invariant_in_region_p': ([], 17641), 'delink_imm_use': ([], 17641), 'link_imm_use_to_list': ([], 17641), 'link_imm_use': ([], 17641), 'set_ssa_use_from_ptr': ([], 17641), 'separate_decls_in_region_stmt': ([], 17641), 'gimple_debug_bind_get_var': ([], 17641), 'gimple_debug_bind_set_var': ([], 17641), 'gimple_debug_bind_reset_value': ([], 17641), 'separate_decls_in_region_debug_bind': ([], 17641), 'gimple_assign_lhs': ([], 17641), 'create_loads_for_reductions': ([], 17641), 'create_final_loads_for_reduction': ([], 17641), 'gsi_last_bb': ([], 17641), 'create_stores_for_reduction': ([], 17641), 'create_loads_and_stores_for_name': ([], 17641), 'add_field_for_reduction': ([2], 17638), 'add_field_for_name': ([], 17641), 'separate_decls_in_region': ([73, 203], 17510), 'gimple_phi_arg_location_from_edge': ([], 17641), 'gimple_omp_for_set_index': ([], 17641), 'gimple_omp_for_set_initial': ([], 17641), 'gimple_omp_for_set_final': ([], 17641), 'gimple_omp_for_set_cond': ([], 17641), 'gimple_omp_for_set_incr': ([], 17641), 'create_parallel_loop': ([], 17641), 'create_call_for_reduction_1': ([], 17641), 'create_phi_for_local_result': ([], 17641), 'create_call_for_reduction': ([], 17641), 'initialize_reductions': ([4], 17639), 'gen_parallel_loop': ([], 17641), 'parallelize_loops': ([], 17641)}, "PosixPath('602/cpp_expr.bc')": {'append_digit': ([], 13810), 'reduce': ([], 13810), '_cpp_expand_op_stack': ([], 13810), 'num_binary_op': ([10], 13800), 'num_mul': ([], 13810), 'num_div_op': ([], 13810), 'num_lshift': ([15], 13809), 'num_rshift': ([], 13810), 'interpret_float_suffix': ([0], 13802), 'interpret_int_suffix': ([], 13810), 'cpp_classify_number': ([14], 13807), 'num_trim': ([], 13810), 'cpp_interpret_integer': ([0, 1, 68], 13782), 'parse_defined': ([], 13810), 'eval_token': ([], 13810), 'check_promotion': ([], 13810), 'num_negate': ([], 13810), 'num_unary_op': ([], 13810), 'num_greater_eq': ([2], 13791), 'num_inequality_op': ([], 13810), 'num_equality_op': ([], 13810), 'num_bitwise_op': ([], 13810), 'num_part_mul': ([], 13810), '_cpp_parse_expr': ([240], 13805), 'cpp_num_sign_extend': ([], 13810)}, "PosixPath('602/passes.bc')": {'print_current_pass': ([], 14061), 'rest_of_decl_compilation': ([0], 14058), 'rest_of_type_compilation': ([], 14061), 'set_pass_for_id': ([], 14061), 'register_one_dump_file': ([], 14061), 'make_pass_instance': ([], 14061), 'position_pass': ([], 14061), 'register_pass': ([2], 14059), 'register_dump_files_1': ([], 14061), 'gate_rest_of_compilation': ([], 14061), 'do_per_function_toporder': ([], 14061), 'pass_init_dump_file': ([], 14061), 'execute_ipa_summary_passes': ([], 14061), 'do_per_function': ([], 14061), 'execute_function_todo': ([], 14061), 'execute_one_ipa_transform_pass': ([], 14061), 'execute_all_ipa_transforms': ([12], 14057), 'VEC_ipa_opt_pass_base_space': ([], 14061), 'VEC_ipa_opt_pass_heap_reserve': ([], 14061), 'VEC_ipa_opt_pass_base_quick_push': ([], 14061), 'VEC_ipa_opt_pass_heap_safe_push': ([], 14061), 'update_properties_after_pass': ([], 14061), 'execute_one_pass': ([], 14061), 'execute_pass_list': ([], 14061), 'ipa_write_summaries_2': ([], 14061), 'ipa_write_summaries': ([], 14061), 'ipa_write_summaries_of_cgraph_node_set': ([], 14061), 'ipa_read_summaries_1': ([24], 14056), 'execute_ipa_pass_list': ([], 14061), 'execute_ipa_stmt_fixups': ([], 14061), 'function_called_by_processed_nodes_p': ([], 14061), 'gt_pch_na_order': ([], 14061), 'gt_ggc_ma_order': ([], 14061)}, "PosixPath('602/argv.bc')": {'dupargv': ([], 1844), 'consume_whitespace': ([], 1844), 'buildargv': ([2], 1842), 'expandargv': ([], 1844)}, "PosixPath('602/alloc-pool.bc')": {'pool_alloc': ([], 900), 'create_alloc_pool': ([], 900), 'free_alloc_pool_if_empty': ([], 900), 'pool_free': ([6], 893)}, "PosixPath('602/floatformat.bc')": {'mant_bits_set': ([], 4409), 'floatformat_to_double': ([], 4409), 'put_field': ([], 4409), 'floatformat_from_double': ([], 4409), 'floatformat_ibm_long_double_is_valid': ([], 4409), 'floatformat_i387_ext_is_valid': ([], 4409)}, "PosixPath('602/ddg.bc')": {'sbitmap_iter_init': ([], 8806), 'sd_iterator_cond': ([], 8806), 'sd_iterator_start': ([], 8806), 'get_node_of_insn': ([], 8806), 'rtx_mem_access_p': ([], 8806), 'df_rd_get_bb_info': ([], 8806), 'create_ddg_edge': ([], 8806), 'add_edge_to_ddg': ([2], 8804), 'create_ddg_dep_from_intra_loop_link': ([], 8806), 'add_backarc_to_ddg': ([], 8806), 'create_ddg_dep_no_link': ([], 8806), 'add_inter_loop_mem_dep': ([], 8806), 'build_intra_loop_deps': ([], 8806), 'bmp_iter_set_init': ([], 8806), 'bmp_iter_set': ([], 8806), 'add_cross_iteration_register_deps': ([], 8806), 'build_inter_loop_deps': ([], 8806), 'create_ddg': ([], 8806), 'free_ddg': ([], 8806), 'print_ddg_edge': ([], 8806), 'print_ddg': ([], 8806), 'vcg_print_ddg': ([], 8806), 'sbitmap_iter_cond': ([], 8806), 'sbitmap_iter_next': ([], 8806), 'print_sccs': ([], 8806), 'find_successors': ([], 8806), 'find_predecessors': ([], 8806), 'find_nodes_on_paths': ([8, 21], 8790), 'add_backarc_to_scc': ([], 8806), 'update_dist_to_successors': ([], 8806), 'longest_simple_path': ([], 8806), 'set_recurrence_length': ([], 8806), 'create_scc': ([], 8806), 'add_scc_to_ddg': ([], 8806), 'order_sccs': ([], 8806), 'create_ddg_all_sccs': ([], 8806), 'free_scc': ([], 8806), 'free_ddg_all_sccs': ([5], 8803)}, "PosixPath('602/except.bc')": {'gen_eh_region': ([], 17352), 'dw2_build_landing_pads': ([], 17352), 'VEC_eh_region_base_space': ([], 17352), 'VEC_eh_region_gc_reserve': ([], 17352), 'VEC_eh_region_base_quick_push': ([], 17352), 'VEC_eh_region_gc_safe_push': ([], 17352), 'VEC_eh_landing_pad_base_space': ([], 17352), 'VEC_eh_landing_pad_gc_reserve': ([], 17352), 'VEC_eh_landing_pad_base_quick_push': ([], 17352), 'VEC_eh_landing_pad_gc_safe_push': ([], 17352), 'init_eh_for_function': ([], 17352), 'gen_eh_region_catch': ([], 17352), 'gen_eh_landing_pad': ([0], 17351), 'duplicate_eh_regions_1': ([], 17352), 'duplicate_eh_regions': ([], 17352), 'eh_region_outermost': ([], 17352), 'VEC_eh_region_base_iterate': ([], 17352), 'VEC_tree_base_space': ([], 17352), 'VEC_tree_gc_reserve': ([], 17352), 'VEC_tree_base_quick_push': ([], 17352), 'VEC_tree_gc_safe_push': ([], 17352), 'add_ttypes_entry': ([], 17352), 'VEC_uchar_base_space': ([], 17352), 'VEC_uchar_gc_reserve': ([], 17352), 'VEC_uchar_base_quick_push': ([], 17352), 'VEC_uchar_gc_safe_push': ([], 17352), 'push_uleb128': ([], 17352), 'add_ehspec_entry': ([], 17352), 'ehspec_filter_hash': ([], 17352), 'assign_filter_values': ([], 17352), 'remove_eh_landing_pad': ([], 17352), 'remove_eh_handler': ([], 17352), 'VEC_eh_landing_pad_base_iterate': ([], 17352), 'for_each_eh_label': ([], 17352), 'insn_could_throw_p': ([], 17352), 'get_eh_region_and_lp_from_rtx': ([], 17352), 'get_eh_landing_pad_from_rtx': ([], 17352), 'get_eh_region_from_rtx': ([], 17352), 'can_throw_internal': ([], 17352), 'can_throw_external': ([], 17352), 'insn_nothrow_p': ([], 17352), 'expand_builtin_eh_pointer': ([], 17352), 'expand_builtin_eh_filter': ([], 17352), 'expand_builtin_eh_copy_values': ([], 17352), 'dw2_output_call_site_table': ([], 17352), 'VEC_uchar_base_iterate': ([], 17352), 'output_ttype': ([], 17352), 'VEC_tree_base_iterate': ([], 17352), 'output_one_function_exception_table': ([], 17352), 'ehr_next': ([], 17352), 'function_needs_eh_personality': ([], 17352), 'dump_eh_tree': ([], 17352), 'verify_eh_tree': ([], 17352), 'push_sleb128': ([], 17352), 'add_action_record': ([], 17352), 'collect_one_action_chain': ([], 17352), 'VEC_call_site_record_base_space': ([], 17352), 'VEC_call_site_record_gc_reserve': ([], 17352), 'VEC_call_site_record_base_quick_push': ([], 17352), 'VEC_call_site_record_gc_safe_push': ([], 17352), 'add_call_site': ([], 17352), 'ei_end_p': ([], 17352), 'ei_safe_edge': ([], 17352), 'ei_next': ([], 17352), 'action_record_eq': ([], 17352), 'action_record_hash': ([], 17352), 'convert_to_eh_region_ranges': ([], 17352), 'set_nothrow_function_flags': ([], 17352), 'emit_to_new_bb_before': ([], 17352), 'single_succ_edge': ([], 17352), 'ei_cond': ([], 17352), 'finish_eh_generation': ([], 17352), 'rest_of_handle_eh': ([], 17352)}, "PosixPath('602/tree-ssa-reassoc.bc')": {'sbitmap_iter_init': ([], 23378), 'VEC_operand_entry_t_base_iterate': ([], 23378), 'dump_ops_vector': ([], 23378), 'init_reassoc': ([], 23378), 'bb_seq': ([], 23378), 'gsi_start_bb': ([], 23378), 'gsi_stmt': ([], 23378), 'gimple_ops': ([], 23378), 'gimple_op': ([], 23378), 'gimple_assign_rhs1': ([], 23378), 'gimple_assign_rhs_code': ([], 23378), 'gimple_assign_lhs': ([], 23378), 'gimple_assign_rhs2': ([], 23378), 'has_single_use': ([], 23378), 'is_reassociable_op': ([], 23378), 'single_imm_use': ([], 23378), 'get_single_immediate_use': ([], 23378), 'should_break_up_subtract': ([], 23378), 'gimple_set_op': ([], 23378), 'gimple_assign_set_rhs1': ([], 23378), 'gimple_assign_set_rhs2': ([], 23378), 'VEC_tree_base_space': ([], 23378), 'VEC_tree_heap_reserve': ([], 23378), 'VEC_tree_base_quick_push': ([], 23378), 'VEC_tree_heap_safe_push': ([], 23378), 'negate_value': ([10], 23376), 'break_up_subtract': ([], 23378), 'break_up_subtract_bb': ([6, 34], 23303), 'gsi_last_bb': ([], 23378), 'has_zero_uses': ([], 23378), 'gimple_vdef': ([], 23378), 'tree_operand_length': ([], 23378), 'get_rank': ([], 23378), 'VEC_operand_entry_t_base_space': ([], 23378), 'VEC_operand_entry_t_heap_reserve': ([], 23378), 'VEC_operand_entry_t_base_quick_push': ([], 23378), 'VEC_operand_entry_t_heap_safe_push': ([1], 23376), 'add_to_ops_vec': ([], 23378), 'gimple_op_ptr': ([], 23378), 'gimple_assign_rhs1_ptr': ([], 23378), 'gimple_assign_rhs2_ptr': ([], 23378), 'linearize_expr': ([1], 23362), 'linearize_expr_tree': ([1], 23376), 'VEC_operand_entry_t_base_last': ([], 23378), 'VEC_operand_entry_t_base_pop': ([], 23378), 'eliminate_using_constants': ([], 23378), 'get_unary_op': ([], 23378), 'eliminate_not_pairs': ([], 23378), 'VEC_operand_entry_t_base_ordered_remove': ([], 23378), 'eliminate_duplicate_pair': ([], 23378), 'eliminate_plus_minus_pair': ([], 23378), 'optimize_ops_list': ([], 23378), 'sbitmap_iter_cond': ([], 23378), 'VEC_oecount_base_space': ([], 23378), 'VEC_oecount_heap_reserve': ([], 23378), 'VEC_oecount_base_quick_push': ([], 23378), 'VEC_oecount_heap_safe_push': ([], 23378), 'sbitmap_iter_next': ([], 23378), 'delink_imm_use': ([], 23378), 'link_imm_use_to_list': ([], 23378), 'link_imm_use': ([], 23378), 'set_ssa_use_from_ptr': ([], 23378), 'zero_one_operation': ([1, 9], 23375), 'gimple_assign_set_lhs': ([], 23378), 'single_succ_edge': ([], 23378), 'gsi_after_labels': ([], 23378), 'ei_end_p': ([], 23378), 'ei_cond': ([], 23378), 'ei_next': ([], 23378), 'build_and_add_sum': ([18], 23370), 'oecount_eq': ([], 23378), 'undistribute_ops_list': ([], 23378), 'remove_visited_stmt_chain': ([], 23378), 'clear_and_done_ssa_iter': ([], 23378), 'op_iter_next_use': ([], 23378), 'op_iter_init_phiuse': ([], 23378), 'is_phi_for_stmt': ([], 23378), 'rewrite_expr_tree': ([33, 34, 85], 23369), 'sort_by_operand_rank': ([], 23378), 'reassociate_bb': ([6, 54, 56], 23333), 'VEC_tree_base_iterate': ([], 23378), 'repropagate_negates': ([], 23378), 'execute_reassoc': ([], 23378)}, "PosixPath('602/ira-color.bc')": {'ira_reassign_conflict_allocnos': ([], 29326), 'ira_sort_regnos_for_alter_reg': ([1, 2], 29252), 'update_copy_costs': ([], 29326), 'ira_color': ([], 29326), 'fast_allocation': ([], 29326), 'push_allocno_to_stack': ([355], 29322), 'add_allocno_to_ordered_bucket': ([5], 29303), 'ei_end_p': ([], 29326), 'ei_cond': ([], 29326), 'df_lr_get_bb_info': ([], 29326), 'ei_next': ([], 29326), 'VEC_edge_base_iterate': ([], 29326), 'ira_loop_edge_freq': ([28], 29323), 'ira_allocno_conflict_iter_init': ([], 29326), 'ira_allocno_conflict_iter_cond': ([], 29326), 'ira_allocno_conflict_iter_next': ([], 29326), 'setup_allocno_priorities': ([], 29326), 'ira_get_register_move_cost': ([], 29326), 'update_curr_costs': ([], 29326), 'queue_update_cost': ([], 29326), 'get_next_update_cost': ([], 29326), 'update_conflict_hard_regno_costs': ([], 29326), 'VEC_ira_allocno_t_base_space': ([], 29326), 'VEC_ira_allocno_t_heap_reserve': ([], 29326), 'VEC_ira_allocno_t_base_quick_push': ([], 29326), 'VEC_ira_allocno_t_heap_safe_push': ([], 29326), 'allocno_cost_compare_func': ([], 29326), 'assign_hard_reg': ([], 29326), 'allocno_priority_compare_func': ([], 29326), 'bmp_iter_set_init': ([], 29326), 'bmp_iter_set': ([], 29326), 'allocnos_have_intersected_live_ranges_p': ([], 29326), 'coalesced_allocno_conflict_p': ([], 29326), 'copy_freq_compare_func': ([], 29326), 'coalesce_allocnos': ([], 29326), 'setup_coalesced_allocno_costs_and_nums': ([], 29326), 'collect_spilled_coalesced_allocnos': ([], 29326), 'slot_coalesced_allocno_live_ranges_intersect_p': ([], 29326), 'coalesce_spill_slots': ([], 29326), 'coalesced_pseudo_reg_slot_compare': ([], 29326), 'coalesced_pseudo_reg_freq_compare': ([], 29326), 'ira_mark_allocation_change': ([8], 29315), 'ira_mark_memory_move_deletion': ([], 29326), 'allocno_reload_assign': ([], 29326), 'pseudo_reg_compare': ([], 29326), 'ira_reassign_pseudos': ([], 29326), 'ira_reuse_stack_slot': ([], 29326), 'bitmap_initialize_stat': ([], 29326), 'ira_mark_new_stack_slot': ([], 29326), 'calculate_spill_cost': ([], 29326), 'ira_better_spill_reload_regno_p': ([], 29326), 'print_loop_title': ([], 29326), 'setup_allocno_left_conflicts_size': ([], 29326), 'setup_allocno_available_regs_num': ([], 29326), 'add_allocno_to_bucket': ([], 29326), 'put_allocno_into_bucket': ([], 29326), 'calculate_allocno_spill_cost': ([], 29326), 'get_coalesced_allocnos_attributes': ([], 29326), 'bucket_allocno_compare_func': ([], 29326), 'sort_bucket': ([], 29326), 'delete_allocno_from_bucket': ([], 29326), 'allocno_spill_priority': ([], 29326), 'remove_allocno_from_bucket_and_push': ([], 29326), 'push_only_colorable': ([], 29326), 'push_allocno_to_spill': ([], 29326), 'VEC_ira_allocno_t_base_pop': ([], 29326), 'splay_tree_free': ([], 29326), 'allocno_spill_priority_compare': ([], 29326), 'push_allocnos_to_stack': ([], 29326), 'pop_allocnos_from_stack': ([], 29326), 'color_allocnos': ([], 29326), 'color_pass': ([8], 29310), 'move_spill_restore': ([], 29326), 'color': ([], 29326)}, "PosixPath('602/cpp_errors.bc')": {'cpp_error': ([], 578)}, "PosixPath('602/tree-vect-loop-manip.bc')": {'slpeel_tree_duplicate_loop_to_edge_cfg': ([], 16692), 'first_imm_use_on_stmt': ([], 16692), 'next_imm_use_on_stmt': ([], 16692), 'bb_seq': ([], 16692), 'gsi_start_bb': ([], 16692), 'gsi_stmt': ([], 16692), 'gimple_def_ops': ([], 16692), 'gimple_vdef': ([], 16692), 'gimple_use_ops': ([], 16692), 'gimple_vuse': ([], 16692), 'op_iter_init': ([], 16692), 'op_iter_next_use': ([], 16692), 'op_iter_init_use': ([], 16692), 'delink_imm_use': ([], 16692), 'link_imm_use_to_list': ([], 16692), 'link_imm_use': ([], 16692), 'set_ssa_use_from_ptr': ([], 16692), 'rename_use_op': ([], 16692), 'ei_end_p': ([], 16692), 'ei_cond': ([], 16692), 'ei_next': ([], 16692), 'rename_variables_in_bb': ([], 16692), 'find_loop_location': ([], 16692), 'slpeel_make_loop_iterate_ntimes': ([], 16692), 'loop_outer': ([], 16692), 'gimple_phi_arg_location_from_edge': ([], 16692), 'gsi_last_bb': ([], 16692), 'slpeel_can_duplicate_loop_p': ([], 16692), 'vect_can_advance_ivs_p': ([], 16692), 'vect_build_loop_niters': ([6], 16683), 'vect_generate_tmps_on_preheader': ([13], 16655), 'gimple_vop': ([], 16692), 'VEC_adjust_info_base_space': ([], 16692), 'VEC_adjust_info_stack_reserve': ([], 16692), 'VEC_adjust_info_base_quick_push': ([], 16692), 'VEC_adjust_info_stack_safe_push': ([], 16692), 'end_imm_use_stmt_p': ([], 16692), 'clear_and_done_ssa_iter': ([], 16692), 'op_iter_init_phiuse': ([], 16692), 'move_use_after_head': ([2], 16678), 'gimple_vuse_op': ([], 16692), 'link_use_stmts_after': ([], 16692), 'first_imm_use_stmt': ([], 16692), 'gimple_ops': ([], 16692), 'gimple_set_op': ([], 16692), 'gimple_debug_bind_reset_value': ([], 16692), 'next_imm_use_stmt': ([], 16692), 'adjust_debug_stmts_now': ([], 16692), 'adjust_debug_stmts': ([], 16692), 'adjust_phi_and_debug_stmts': ([5], 16688), 'slpeel_update_phis_for_duplicate_loop': ([], 16692), 'single_pred_edge': ([], 16692), 'set_prologue_iterations': ([], 16692), 'slpeel_add_loop_guard': ([], 16692), 'slpeel_update_phi_nodes_for_guard1': ([], 16692), 'slpeel_update_phi_nodes_for_guard2': ([], 16692), 'adjust_vec_debug_stmts': ([], 16692), 'slpeel_tree_peel_loop_to_edge': ([], 16692), 'vect_update_ivs_after_vectorizer': ([], 16692), 'vect_do_peeling_for_loop_bound': ([], 16692), 'vect_gen_niters_for_prolog_loop': ([], 16692), 'VEC_data_reference_p_base_iterate': ([], 16692), 'vect_update_init_of_dr': ([], 16692), 'vect_update_inits_of_drs': ([], 16692), 'vect_do_peeling_for_alignment': ([], 16692), 'VEC_gimple_base_iterate': ([], 16692), 'vect_create_cond_for_align_checks': ([], 16692), 'VEC_ddr_p_base_iterate': ([], 16692), 'vect_create_cond_for_alias_checks': ([], 16692), 'vect_loop_versioning': ([53, 55], 16677)}, "PosixPath('602/getpwd.bc')": {'getpwd': ([], 342)}, "PosixPath('602/simplify-rtx.bc')": {'mode_signbit_p': ([1], 42591), 'simplify_immed_subreg': ([102], 42593), 'plus_minus_operand_p': ([], 42596), 'simplify_plus_minus_op_data_cmp': ([], 42596), 'simplify_rtx': ([], 42596), 'simplify_relational_operation': ([], 42596), 'simplify_const_relational_operation': ([12, 18], 42500), 'avoid_constant_pool_reference': ([5, 12], 42592), 'simplify_subreg': ([0, 62], 42557), 'simplify_unary_operation': ([0, 85], 42477), 'simplify_binary_operation_1': ([14, 133, 190, 394, 395], 42443), 'simplify_associative_operation': ([], 42596), 'simplify_plus_minus': ([73, 74, 123], 42589), 'simplify_const_binary_operation': ([85], 42584), 'simplify_const_unary_operation': ([5, 10, 124], 42580), 'simplify_ternary_operation': ([], 42596), 'delegitimize_mem_from_attrs': ([35], 42591), 'simplify_replace_fn_rtx': ([], 42596)}, "PosixPath('602/opts-common.bc')": {'find_opt': ([4], 1104), 'prune_options': ([], 1114)}, "PosixPath('602/tree-into-ssa.bc')": {'sbitmap_iter_init': ([], 27162), 'VEC_ssa_name_info_p_base_space': ([], 27162), 'VEC_ssa_name_info_p_heap_reserve': ([], 27162), 'VEC_ssa_name_info_p_base_quick_push': ([], 27162), 'get_ssa_name_ann': ([], 27162), 'var_ann': ([], 27162), 'get_current_def': ([], 27162), 'set_current_def': ([], 27162), 'bmp_iter_set_init': ([], 27162), 'bmp_iter_set': ([], 27162), 'ei_end_p': ([], 27162), 'ei_cond': ([], 27162), 'ei_next': ([], 27162), 'compute_global_livein': ([], 27162), 'dump_decl_set': ([], 27162), 'dump_defs_stack': ([], 27162), 'first_htab_element': ([], 27162), 'first_referenced_var': ([], 27162), 'end_htab_p': ([], 27162), 'end_referenced_vars_p': ([], 27162), 'next_htab_element': ([], 27162), 'next_referenced_var': ([], 27162), 'dump_currdefs': ([], 27162), 'names_replaced_by': ([], 27162), 'dump_names_replaced_by': ([], 27162), 'sbitmap_iter_cond': ([], 27162), 'sbitmap_iter_next': ([], 27162), 'dump_update_ssa': ([], 27162), 'fini_ssa_renamer': ([], 27162), 'delete_update_ssa': ([], 27162), 'repl_map_free': ([], 27162), 'init_update_ssa': ([], 27162), 'add_to_repl_tbl': ([], 27162), 'is_new_name': ([], 27162), 'add_new_name_mapping': ([], 27162), 'create_new_def_for': ([], 27162), 'mark_set_for_renaming': ([], 27162), 'is_old_name': ([], 27162), 'name_registered_for_update_p': ([], 27162), 'ssa_names_to_replace': ([], 27162), 'switch_virtuals_to_full_rewrite_p': ([], 27162), 'switch_virtuals_to_full_rewrite': ([], 27162), 'gsi_stmt': ([], 27162), 'bb_seq': ([], 27162), 'gsi_start_bb': ([], 27162), 'initialize_flags_in_bb': ([], 27162), 'mark_block_for_update': ([], 27162), 'get_phi_state': ([3], 27161), 'get_def_blocks_for': ([], 27162), 'set_phi_state': ([], 27162), 'set_def_block': ([], 27162), 'mark_def_interesting': ([], 27162), 'prepare_def_site_for': ([], 27162), 'end_readonly_imm_use_p': ([], 27162), 'first_readonly_imm_use': ([], 27162), 'VEC_gimple_vec_base_space': ([], 27162), 'VEC_gimple_vec_heap_reserve': ([], 27162), 'VEC_gimple_vec_base_quick_push': ([], 27162), 'VEC_gimple_base_space': ([], 27162), 'VEC_gimple_heap_reserve': ([], 27162), 'VEC_gimple_base_quick_push': ([], 27162), 'VEC_gimple_heap_safe_push': ([], 27162), 'mark_phi_for_rewrite': ([], 27162), 'set_livein_block': ([], 27162), 'mark_use_interesting': ([], 27162), 'next_readonly_imm_use': ([], 27162), 'prepare_use_sites_for': ([], 27162), 'prepare_names_to_update': ([], 27162), 'gimple_def_ops': ([], 27162), 'gimple_vdef': ([], 27162), 'gimple_use_ops': ([], 27162), 'gimple_vuse': ([], 27162), 'op_iter_init': ([], 27162), 'op_iter_next_use': ([], 27162), 'op_iter_init_use': ([], 27162), 'op_iter_next_def': ([], 27162), 'op_iter_init_def': ([], 27162), 'prepare_block_for_update': ([23], 27158), 'find_def_blocks_for': ([], 27162), 'VEC_int_base_quick_push': ([], 27162), 'VEC_int_base_pop': ([], 27162), 'VEC_int_base_space': ([], 27162), 'VEC_int_heap_reserve': ([], 27162), 'VEC_int_heap_safe_push': ([], 27162), 'prune_unused_phi_nodes': ([], 27162), 'gsi_after_labels': ([], 27162), 'insert_phi_nodes_for': ([], 27162), 'insert_updated_phi_nodes_for': ([], 27162), 'VEC_tree_base_pop': ([], 27162), 'rewrite_update_leave_block': ([], 27162), 'VEC_tree_base_space': ([], 27162), 'VEC_tree_heap_reserve': ([], 27162), 'VEC_tree_base_quick_push': ([], 27162), 'VEC_tree_heap_safe_push': ([], 27162), 'register_new_update_single': ([], 27162), 'register_new_update_set': ([], 27162), 'delink_imm_use': ([], 27162), 'link_imm_use_to_list': ([], 27162), 'link_imm_use': ([], 27162), 'set_ssa_use_from_ptr': ([], 27162), 'maybe_replace_use_in_debug_stmt': ([], 27162), 'gimple_ops': ([], 27162), 'gimple_set_op': ([], 27162), 'gimple_debug_bind_reset_value': ([], 27162), 'get_reaching_def': ([], 27162), 'maybe_replace_use': ([], 27162), 'gsi_one_before_end_p': ([], 27162), 'phi_nodes': ([], 27162), 'maybe_register_def': ([], 27162), 'rewrite_update_stmt': ([], 27162), 'VEC_gimple_base_iterate': ([], 27162), 'rewrite_update_phi_arguments': ([], 27162), 'rewrite_update_enter_block': ([], 27162), 'rewrite_leave_block': ([], 27162), 'register_new_def': ([], 27162), 'rewrite_stmt': ([], 27162), 'rewrite_add_phi_arguments': ([], 27162), 'rewrite_enter_block': ([], 27162), 'rewrite_blocks': ([], 27162), 'def_blocks_free': ([], 27162), 'update_ssa': ([], 27162), 'init_ssa_renamer': ([], 27162), 'op_iter_next_tree': ([], 27162), 'op_iter_init_tree': ([], 27162), 'mark_def_sites': ([], 27162), 'mark_def_sites_block': ([], 27162), 'mark_def_site_blocks': ([], 27162), 'insert_phi_nodes': ([], 27162), 'rewrite_into_ssa': ([], 27162)}, "PosixPath('602/gcse.bc')": {'can_assign_to_reg_without_clobbers_p': ([4], 26186), 'compute_can_copy': ([], 26201), 'is_too_expensive': ([], 26201), 'alloc_gcse_mem': ([], 26201), 'alloc_hash_table': ([], 26201), 'bmp_iter_set_init': ([], 26201), 'bmp_iter_set': ([], 26201), 'free_insn_expr_list_list': ([], 26201), 'clear_modify_mem_tables': ([], 26201), 'record_last_reg_set_info': ([], 26201), 'canon_list_insert': ([], 26201), 'record_last_mem_set_info': ([], 26201), 'gcse_constant_p': ([6], 26198), 'want_to_gcse_p': ([0], 26199), 'find_rtx_in_ldst': ([], 26201), 'mems_conflict_for_gcse_p': ([], 26201), 'load_killed_in_block_p': ([], 26201), 'oprs_unchanged_p': ([], 26201), 'insert_expr_in_table': ([], 26201), 'insert_set_in_table': ([], 26201), 'hash_scan_set': ([], 26201), 'hash_scan_insn': ([], 26201), 'record_last_set_info': ([0], 26199), 'compute_hash_table_work': ([], 26201), 'compute_hash_table': ([], 26201), 'dump_hash_table': ([3, 6], 26191), 'bmp_iter_and_compl_init': ([], 26201), 'bmp_iter_and_compl': ([], 26201), 'compute_transp': ([], 26201), 'compute_local_properties': ([35], 26194), 'compute_transpout': ([], 26201), 'compute_code_hoist_vbeinout': ([], 26201), 'compute_code_hoist_data': ([], 26201), 'VEC_basic_block_base_iterate': ([], 26201), 'ei_end_p': ([], 26201), 'ei_cond': ([], 26201), 'ei_next': ([], 26201), 'hoist_expr_reaches_here_p': ([], 26201), 'gcse_emit_move_after': ([], 26201), 'process_insert_insn': ([], 26201), 'single_succ_edge': ([], 26201), 'add_label_notes': ([], 26201), 'insert_insn_end_basic_block': ([], 26201), 'hoist_code': ([], 26201), 'one_code_hoisting_pass': ([], 26201), 'execute_rtl_hoist': ([], 26201), 'ldst_entry': ([], 26201), 'invalidate_any_buried_refs': ([], 26201), 'pre_ldst_expr_hash': ([], 26201), 'compute_ld_motion_mems': ([], 26201), 'trim_ld_motion_mems': ([], 26201), 'compute_pre_data': ([], 26201), 'pre_delete': ([], 26201), 'update_ld_motion_stores': ([15], 26198), 'pre_edge_insert': ([], 26201), 'pre_expr_reaches_here_p_work': ([], 26201), 'pre_insert_copy_insn': ([], 26201), 'pre_insert_copies': ([], 26201), 'pre_gcse': ([], 26201), 'free_ldst_mems': ([], 26201), 'one_pre_gcse_pass': ([], 26201), 'execute_rtl_pre': ([], 26201), 'find_used_regs': ([], 26201), 'local_cprop_find_used_regs': ([], 26201), 'ei_safe_edge': ([], 26201), 'cprop_jump': ([], 26201), 'try_replace_reg': ([], 26201), 'constprop_register': ([], 26201), 'do_local_cprop': ([], 26201), 'local_cprop_pass': ([], 26201), 'implicit_set_cond_p': ([], 26201), 'find_implicit_sets': ([], 26201), 'oprs_not_set_p': ([], 26201), 'lookup_set': ([], 26201), 'find_avail_set': ([], 26201), 'cprop_insn': ([], 26201), 'mark_set': ([], 26201), 'mark_clobber': ([], 26201), 'mark_oprs_set': ([], 26201), 'find_bypass_set': ([], 26201), 'reg_killed_on_edge': ([], 26201), 'bypass_block': ([], 26201), 'bypass_conditional_jumps': ([], 26201), 'one_cprop_pass': ([], 26201), 'execute_rtl_cprop': ([], 26201), 'can_copy_p': ([], 26201)}, "PosixPath('602/loop-unswitch.bc')": {'compare_and_jump_seq': ([], 3713), 'VEC_loop_p_base_iterate': ([], 3713), 'VEC_int_base_quick_push': ([], 3713), 'VEC_int_base_iterate': ([], 3713), 'fel_next': ([], 3713), 'fel_init': ([], 3713), 'may_unswitch_on': ([], 3713), 'reversed_condition': ([], 3713), 'single_succ_edge': ([], 3713), 'single_pred_edge': ([], 3713), 'unswitch_loop': ([], 3713), 'unswitch_single_loop': ([], 3713), 'unswitch_loops': ([4], 3710)}, "PosixPath('602/c-opts.bc')": {'c_common_init_options': ([7], 13392), 'c_common_handle_option': ([], 13393), 'c_common_post_options': ([], 13393), 'check_deps_environment_vars': ([], 13393), 'sanitize_cpp_opts': ([], 13393), 'c_common_init': ([], 13393), 'push_command_line_include': ([], 13393), 'defer_opt': ([], 13393), 'handle_OPT_d': ([], 13393), 'handle_deferred_opts': ([], 13393), 'cb_file_change': ([], 13393), 'finish_options': ([], 13393), 'c_common_parse_file': ([], 13393), 'c_common_finish': ([], 13393)}, "PosixPath('602/ipa-inline.bc')": {'inline_transform': ([], 16780), 'cgraph_can_remove_if_no_direct_calls_p': ([], 16780), 'update_noncloned_frequencies': ([], 16780), 'cgraph_clone_inlined_nodes': ([26], 16776), 'bb_seq': ([], 16780), 'gsi_start_bb': ([], 16780), 'gsi_stmt': ([], 16780), 'gimple_ops': ([], 16780), 'gimple_op': ([], 16780), 'gimple_assign_rhs1': ([], 16780), 'gimple_assign_rhs_code': ([], 16780), 'gimple_assign_rhs_class': ([], 16780), 'gimple_assign_lhs': ([], 16780), 'likely_eliminated_by_inlining_p': ([], 16780), 'estimate_function_body_sizes': ([], 16780), 'compute_inline_parameters': ([], 16780), 'inline_indirect_intraprocedural_analysis': ([], 16780), 'VEC_ipa_node_params_t_base_space': ([], 16780), 'VEC_ipa_node_params_t_heap_reserve_exact': ([], 16780), 'VEC_ipa_node_params_t_heap_safe_grow': ([], 16780), 'VEC_ipa_node_params_t_heap_safe_grow_cleared': ([], 16780), 'ipa_check_create_node_params': ([], 16780), 'VEC_ipa_edge_args_t_base_space': ([], 16780), 'VEC_ipa_edge_args_t_gc_reserve_exact': ([], 16780), 'VEC_ipa_edge_args_t_gc_safe_grow': ([], 16780), 'VEC_ipa_edge_args_t_gc_safe_grow_cleared': ([], 16780), 'ipa_check_create_edge_args': ([], 16780), 'inline_generate_summary': ([], 16780), 'cgraph_estimate_size_after_inlining': ([], 16780), 'cgraph_estimate_time_after_inlining': ([], 16780), 'cgraph_mark_inline_edge': ([46], 16777), 'cgraph_mark_inline': ([], 16780), 'cgraph_recursive_inlining_p': ([], 16780), 'leaf_node_p': ([], 16780), 'cgraph_only_called_directly_p': ([], 16780), 'cgraph_estimate_growth': ([13], 16776), 'cgraph_check_inline_limits': ([17], 16776), 'cgraph_default_inline_p': ([], 16780), 'cgraph_decide_inlining_incrementally': ([29, 80], 16772), 'try_inline': ([0, 5], 16753), 'cgraph_set_inline_failed': ([], 16780), 'cgraph_edge_badness': ([5], 16776), 'compute_max_insns': ([], 16780), 'gimple_filename': ([], 16780), 'gimple_lineno': ([], 16780), 'lookup_recursive_calls': ([], 16780), 'cgraph_decide_recursive_inlining': ([], 16780), 'VEC_cgraph_edge_p_base_pop': ([], 16780), 'add_new_edges_to_heap': ([], 16780), 'update_caller_keys': ([], 16780), 'update_callee_keys': ([], 16780), 'cgraph_decide_inlining_of_small_functions': ([], 16780), 'cgraph_decide_inlining': ([347], 16734), 'cgraph_early_inlining': ([], 16780)}, "PosixPath('602/lto-streamer-out.bc')": {'eq_string_slot_node': ([], 16586), 'create_output_block': ([], 16586), 'destroy_output_block': ([], 16586), 'VEC_bitpack_word_t_base_iterate': ([], 16586), 'lto_output_bitpack': ([], 16586), 'tree_is_indexable': ([], 16586), 'output_type_ref': ([], 16586), 'lto_stream_as_builtin_p': ([], 16586), 'output_string_with_length': ([], 16586), 'lto_output_builtin_tree': ([], 16586), 'output_identifier': ([], 16586), 'lto_output_tree_header': ([], 16586), 'pack_ts_base_value_fields': ([], 16586), 'pack_ts_real_cst_value_fields': ([], 16586), 'pack_ts_fixed_cst_value_fields': ([], 16586), 'pack_ts_decl_common_value_fields': ([], 16586), 'pack_ts_decl_with_vis_value_fields': ([], 16586), 'pack_ts_function_decl_value_fields': ([], 16586), 'pack_ts_type_value_fields': ([], 16586), 'pack_value_fields': ([], 16586), 'lto_output_location': ([], 16586), 'tree_operand_length': ([], 16586), 'VEC_tree_base_iterate': ([], 16586), 'lto_output_chain': ([], 16586), 'lto_output_tree_ref': ([1], 16584), 'lto_output_tree': ([20], 16582), 'produce_asm': ([30], 16583), 'output_alias_pair_p': ([], 16586), 'output_unreferenced_globals': ([], 16586), 'write_global_stream': ([], 16586), 'lto_output_decl_state_streams': ([], 16586), 'write_global_references': ([], 16586), 'lto_output_decl_state_refs': ([], 16586), 'write_symbol_vec': ([8, 33], 16581), 'write_symbols_of_kind': ([], 16586), 'produce_asm_for_decls': ([], 16586), 'output_ssa_names': ([], 16586), 'VEC_eh_region_base_iterate': ([], 16586), 'output_eh_region': ([], 16586), 'VEC_eh_landing_pad_base_iterate': ([], 16586), 'VEC_uchar_base_iterate': ([], 16586), 'output_eh_regions': ([], 16586), 'bb_seq': ([], 16586), 'gsi_start_bb': ([], 16586), 'phi_nodes': ([], 16586), 'gsi_stmt': ([], 16586), 'gimple_ops': ([], 16586), 'gimple_op': ([], 16586), 'output_gimple_stmt': ([], 16586), 'output_phi': ([], 16586), 'output_bb': ([], 16586), 'ei_end_p': ([], 16586), 'ei_cond': ([], 16586), 'ei_next': ([], 16586), 'output_cfg': ([], 16586), 'output_function': ([], 16586), 'VEC_tree_base_space': ([], 16586), 'VEC_tree_heap_reserve': ([], 16586), 'VEC_tree_base_quick_push': ([], 16586), 'VEC_tree_heap_safe_push': ([], 16586), 'copy_function': ([], 16586), 'lto_output': ([], 16586)}, "PosixPath('602/incpath.bc')": {'add_cpp_dir_path': ([], 3094), 'add_path': ([], 3094), 'add_env_var_paths': ([], 3094), 'add_standard_paths': ([], 3094), 'add_sysroot_to_chain': ([], 3094), 'remove_duplicates': ([], 3094), 'register_include_chains': ([], 3094)}, "PosixPath('602/predict.bc')": {'compute_function_frequency': ([3, 6], 17133), 'maybe_hot_count_p': ([], 17160), 'maybe_hot_frequency_p': ([], 17160), 'maybe_hot_bb_p': ([], 17160), 'cgraph_maybe_hot_edge_p': ([], 17160), 'maybe_hot_edge_p': ([], 17160), 'loop_outer': ([], 17160), 'optimize_loop_nest_for_speed_p': ([], 17160), 'predictable_edge_p': ([], 17160), 'rtl_predicted_by_p': ([], 17160), 'gimple_predicted_by_p': ([], 17160), 'br_prob_note_reliable_p': ([], 17160), 'gimple_predict_edge': ([], 17160), 'remove_predictions_associated_with_edge': ([], 17160), 'invert_br_probabilities': ([], 17160), 'bb_estimate_probability_locally': ([], 17160), 'ei_end_p': ([], 17160), 'ei_cond': ([], 17160), 'ei_next': ([], 17160), 'set_even_probabilities': ([0], 17149), 'dump_prediction': ([], 17160), 'single_succ_edge': ([], 17160), 'combine_predictions_for_insn': ([], 17160), 'guess_outgoing_edge_probabilities': ([], 17160), 'gimple_ops': ([], 17160), 'gimple_op': ([], 17160), 'gimple_return_retval': ([], 17160), 'return_prediction': ([0], 17156), 'predict_paths_for_bb': ([], 17160), 'apply_return_prediction': ([], 17160), 'bb_seq': ([], 17160), 'gsi_start_bb': ([], 17160), 'gsi_stmt': ([], 17160), 'gimple_call_fn': ([], 17160), 'gimple_call_fndecl': ([], 17160), 'tree_bb_level_predictions': ([], 17160), 'VEC_int_base_quick_push': ([], 17160), 'VEC_int_base_iterate': ([], 17160), 'fel_next': ([], 17160), 'fel_init': ([], 17160), 'VEC_edge_base_iterate': ([], 17160), 'predict_loops': ([], 17160), 'gimple_cond_lhs': ([], 17160), 'gimple_cond_rhs': ([], 17160), 'gimple_assign_lhs': ([], 17160), 'gimple_assign_rhs1': ([], 17160), 'gimple_assign_rhs_code': ([], 17160), 'gimple_assign_rhs2': ([], 17160), 'gimple_call_arg': ([], 17160), 'expr_expected_value_1': ([], 17160), 'expr_expected_value': ([], 17160), 'tree_predict_by_opcode': ([], 17160), 'tree_estimate_probability_bb': ([], 17160), 'combine_predictions_for_bb': ([], 17160), 'counts_to_freqs': ([], 17160), 'bmp_iter_set_init': ([], 17160), 'bmp_iter_set': ([], 17160), 'propagate_freq': ([58], 17159), 'estimate_loops': ([], 17160), 'choose_function_section': ([], 17160), 'estimate_bb_frequencies': ([], 17160), 'tree_estimate_probability': ([149], 17158), 'expensive_function_p': ([], 17160), 'gimple_call_lhs': ([], 17160), 'strip_predict_hints': ([0, 6, 22], 17145)}, "PosixPath('602/tree-profile.bc')": {'tree_init_ic_make_global_vars': ([], 4318), 'prepare_instrumented_value': ([], 4318), 'gsi_stmt': ([], 4318), 'add_abnormal_goto_call_edges': ([], 4318), 'tree_gen_ior_profiler': ([], 4318), 'tree_gen_average_profiler': ([], 4318), 'tree_gen_ic_profiler': ([], 4318), 'tree_gen_one_value_profiler': ([], 4318), 'tree_gen_pow2_profiler': ([], 4318), 'tree_gen_interval_profiler': ([], 4318), 'tree_init_edge_profiler': ([], 4318), 'ei_end_p': ([], 4318), 'ei_cond': ([], 4318), 'bb_seq': ([], 4318), 'gsi_start_bb': ([], 4318), 'ei_next': ([], 4318), 'tree_gen_ic_func_profiler': ([], 4318), 'tree_profiling': ([], 4318)}, "PosixPath('602/real.bc')": {'do_divide': ([], 23732), 'real_to_hexadecimal': ([3], 23728), 'get_zero': ([], 23732), 'get_canonical_qnan': ([], 23732), 'sticky_rshift_significand': ([], 23732), 'get_inf': ([], 23732), 'normalize': ([], 23732), 'do_add': ([5, 6], 23709), 'do_multiply': ([9], 23726), 'lshift_significand_1': ([], 23732), 'div_significands': ([32], 23723), 'clear_significand_below': ([], 23732), 'do_fix_trunc': ([], 23732), 'real_arithmetic': ([], 23732), 'real_ldexp': ([], 23732), 'rtd_divmod': ([0], 23723), 'round_for_format': ([0], 23729), 'real_convert': ([], 23732), 'times_pten': ([], 23732), 'real_from_integer': ([], 23732), 'exact_real_inverse': ([], 23732), 'real_can_shorten_arithmetic': ([], 23732), 'real_to_integer': ([], 23732), 'rshift_significand': ([], 23732), 'real_to_integer2': ([0], 23731), 'ten_to_mptwo': ([], 23732), 'real_to_decimal_for_mode': ([], 23732), 'get_canonical_snan': ([], 23732), 'real_from_string': ([10, 14, 24], 23651), 'real_inf': ([], 23732), 'real_nan': ([45], 23726), 'real_maxval': ([], 23732), 'real_2expN': ([], 23732), 'exact_real_truncate': ([], 23732), 'real_to_target_fmt': ([], 23732), 'real_to_target': ([], 23732), 'significand_size': ([], 23732), 'real_sqrt': ([7], 23730), 'real_powi': ([], 23732), 'real_floor': ([], 23732), 'real_ceil': ([], 23732), 'get_max_float': ([], 23732), 'decode_ieee_half': ([], 23732), 'encode_ieee_half': ([], 23732), 'decode_vax_g': ([], 23732), 'encode_vax_g': ([], 23732), 'decode_vax_d': ([], 23732), 'encode_vax_d': ([], 23732), 'decode_vax_f': ([], 23732), 'encode_vax_f': ([], 23732), 'decode_ieee_quad': ([0], 23731), 'encode_ieee_quad': ([0], 23723), 'decode_ieee_double': ([], 23732), 'encode_ieee_double': ([], 23732), 'decode_ibm_extended': ([], 23732), 'encode_ibm_extended': ([], 23732), 'decode_ieee_extended': ([], 23732), 'encode_ieee_extended': ([3], 23729), 'decode_ieee_extended_motorola': ([], 23732), 'encode_ieee_extended_motorola': ([], 23732), 'decode_ieee_single': ([], 23732), 'encode_ieee_single': ([], 23732)}, "PosixPath('602/dwarf2asm.bc')": {'dw2_assemble_integer': ([], 10111), 'dw2_asm_output_data_raw': ([], 10111), 'dw2_asm_output_nstring': ([], 10111), 'dw2_force_const_mem': ([], 10111), 'dw2_output_indirect_constant_1': ([], 10111)}, "PosixPath('602/hooks.bc')": {}, "PosixPath('602/matrix-reorg.bc')": {'analyze_transpose': ([], 18614), 'check_allocation_function': ([3, 71], 18610), 'first_imm_use_on_stmt': ([], 18614), 'next_imm_use_on_stmt': ([], 18614), 'bb_seq': ([], 18614), 'gsi_start_bb': ([], 18614), 'gsi_stmt': ([], 18614), 'gimple_ops': ([], 18614), 'gimple_op': ([], 18614), 'gimple_assign_rhs1': ([], 18614), 'gimple_assign_rhs_code': ([], 18614), 'gimple_assign_cast_p': ([], 18614), 'may_flatten_matrices_1': ([], 18614), 'may_flatten_matrices': ([], 18614), 'analyze_matrix_decl': ([], 18614), 'find_matrices_decl': ([], 18614), 'mark_min_matrix_escape_level': ([], 18614), 'gimple_call_fn': ([], 18614), 'gimple_call_fndecl': ([], 18614), 'gimple_call_arg': ([], 18614), 'collect_data_for_malloc_call': ([0], 18607), 'add_allocation_site': ([], 18614), 'analyze_matrix_allocation_site': ([4], 18612), 'gimple_assign_lhs': ([], 18614), 'update_type_size': ([9], 18611), 'end_readonly_imm_use_p': ([], 18614), 'first_readonly_imm_use': ([], 18614), 'gimple_call_lhs': ([], 18614), 'ssa_accessed_in_tree': ([], 18614), 'ssa_accessed_in_call_rhs': ([], 18614), 'analyze_accesses_for_call_stmt': ([], 18614), 'gimple_assign_rhs2': ([], 18614), 'ssa_accessed_in_assign_rhs': ([], 18614), 'VEC_access_site_info_p_base_space': ([], 18614), 'VEC_access_site_info_p_heap_reserve': ([], 18614), 'VEC_access_site_info_p_base_quick_push': ([], 18614), 'VEC_access_site_info_p_heap_safe_push': ([], 18614), 'record_access_alloc_site_info': ([], 18614), 'get_index_from_offset': ([], 18614), 'next_readonly_imm_use': ([], 18614), 'analyze_matrix_accesses': ([34, 40, 152, 166, 169], 18373), 'find_sites_in_func': ([], 18614), 'record_all_accesses_in_func': ([], 18614), 'dump_matrix_reorg_analysis': ([], 18614), 'VEC_access_site_info_p_base_iterate': ([], 18614), 'gimple_def_ops': ([], 18614), 'gimple_vdef': ([], 18614), 'gimple_use_ops': ([], 18614), 'gimple_vuse': ([], 18614), 'op_iter_init': ([], 18614), 'op_iter_next_tree': ([], 18614), 'op_iter_init_tree': ([], 18614), 'end_imm_use_stmt_p': ([], 18614), 'clear_and_done_ssa_iter': ([], 18614), 'op_iter_next_use': ([], 18614), 'op_iter_init_phiuse': ([], 18614), 'delink_imm_use': ([], 18614), 'link_imm_use_to_list': ([], 18614), 'move_use_after_head': ([2], 18600), 'op_iter_init_use': ([], 18614), 'gimple_vuse_op': ([], 18614), 'link_use_stmts_after': ([], 18614), 'first_imm_use_stmt': ([], 18614), 'gimple_set_op': ([], 18614), 'gimple_assign_set_lhs': ([], 18614), 'link_imm_use': ([], 18614), 'set_ssa_use_from_ptr': ([], 18614), 'next_imm_use_stmt': ([], 18614), 'gimple_assign_set_rhs1': ([], 18614), 'gimple_assign_set_rhs2': ([], 18614), 'transform_access_sites': ([17, 233], 18603), 'sort_dim_hot_level': ([], 18614), 'check_var_notmodified_p': ([21], 18609), 'transform_allocation_sites': ([26], 18572), 'gimple_call_return_type': ([], 18614), 'gimple_expr_type': ([], 18614), 'can_calculate_expr_before_stmt': ([7], 18606), 'mat_free': ([], 18614), 'matrix_reorg': ([], 18614)}, "PosixPath('602/tree-ssa-dce.bc')": {'first_imm_use_on_stmt': ([], 12348), 'next_imm_use_on_stmt': ([], 12348), 'gsi_start': ([], 12348), 'end_imm_use_stmt_p': ([], 12348), 'clear_and_done_ssa_iter': ([], 12348), 'op_iter_next_use': ([], 12348), 'op_iter_init_phiuse': ([], 12348), 'delink_imm_use': ([], 12348), 'link_imm_use_to_list': ([], 12348), 'move_use_after_head': ([2], 12334), 'gimple_def_ops': ([], 12348), 'gimple_vdef': ([], 12348), 'gimple_use_ops': ([], 12348), 'gimple_vuse': ([], 12348), 'op_iter_init': ([], 12348), 'op_iter_init_use': ([], 12348), 'gimple_vuse_op': ([], 12348), 'link_use_stmts_after': ([], 12348), 'first_imm_use_stmt': ([], 12348), 'link_imm_use': ([], 12348), 'set_ssa_use_from_ptr': ([], 12348), 'next_imm_use_stmt': ([], 12348), 'mark_virtual_phi_result_for_renaming': ([], 12348), 'single_succ_edge': ([], 12348), 'find_pdom': ([], 12348), 'set_control_dependence_map_bit': ([], 12348), 'find_control_dependence': ([], 12348), 'find_all_control_dependences': ([], 12348), 'gsi_stmt': ([], 12348), 'bb_seq': ([], 12348), 'gsi_start_bb': ([], 12348), 'VEC_gimple_base_space': ([], 12348), 'VEC_gimple_heap_reserve': ([], 12348), 'VEC_gimple_base_quick_push': ([], 12348), 'VEC_gimple_heap_safe_push': ([], 12348), 'mark_stmt_necessary': ([2], 12341), 'gimple_ops': ([], 12348), 'gimple_op': ([], 12348), 'gimple_call_lhs': ([], 12348), 'gimple_assign_lhs': ([], 12348), 'gimple_debug_bind_has_value_p': ([], 12348), 'gimple_debug_bind_get_var': ([], 12348), 'mark_stmt_if_obviously_necessary': ([], 12348), 'ei_end_p': ([], 12348), 'ei_cond': ([], 12348), 'bmp_iter_set_init': ([], 12348), 'bmp_iter_set': ([], 12348), 'mark_control_dependent_edges_necessary': ([31], 12339), 'ei_next': ([], 12348), 'VEC_int_base_quick_push': ([], 12348), 'loop_outer': ([], 12348), 'VEC_int_base_iterate': ([], 12348), 'fel_next': ([], 12348), 'fel_init': ([], 12348), 'find_obviously_necessary_stmts': ([], 12348), 'VEC_gimple_base_pop': ([], 12348), 'mark_operand_necessary': ([6, 11], 12335), 'degenerate_phi_p': ([], 12348), 'op_iter_next_tree': ([], 12348), 'op_iter_init_tree': ([], 12348), 'may_be_aliased': ([], 12348), 'ref_may_be_aliased': ([], 12348), 'mark_all_reaching_defs_necessary_1': ([], 12348), 'mark_all_reaching_defs_necessary': ([], 12348), 'gimple_call_fn': ([], 12348), 'gimple_call_fndecl': ([], 12348), 'gimple_call_arg': ([], 12348), 'gimple_has_lhs': ([], 12348), 'mark_aliased_reaching_defs_necessary_1': ([], 12348), 'mark_aliased_reaching_defs_necessary': ([], 12348), 'gimple_assign_rhs1': ([], 12348), 'gimple_return_retval': ([], 12348), 'gimple_asm_input_op': ([], 12348), 'propagate_necessity': ([], 12348), 'VEC_basic_block_base_pop': ([], 12348), 'gsi_last_bb': ([], 12348), 'phi_nodes': ([], 12348), 'forward_edge_to_pdom': ([], 12348), 'ei_safe_edge': ([], 12348), 'remove_dead_stmt': ([], 12348), 'gimple_set_op': ([], 12348), 'gimple_call_set_lhs': ([], 12348), 'end_imm_use_stmt_traverse': ([], 12348), 'remove_dead_phis': ([], 12348), 'eliminate_unnecessary_stmts': ([], 12348), 'tree_dce_done': ([], 12348), 'perform_tree_ssa_dce': ([], 12348)}, "PosixPath('602/postreload.bc')": {'reload_cse_simplify_set': ([2], 8956), 'reload_cse_noop_set_p': ([], 8960), 'reload_cse_simplify_operands': ([58, 78], 8940), 'reload_cse_simplify': ([], 8960), 'reload_cse_regs_1': ([], 8960), 'reload_combine_note_use': ([3], 8948), 'reload_combine_note_store': ([4], 8957), 'reload_combine': ([5], 8953), 'move2add_note_store': ([142, 149], 8953), 'reload_cse_move2add': ([], 8960), 'reload_cse_regs': ([], 8960)}, "PosixPath('602/cselib.bc')": {'cselib_record_sets': ([], 13751), 'references_value_p': ([], 13751), 'preserve_only_constants': ([], 13751), 'cselib_reset_table': ([], 13751), 'cselib_invalidate_regno': ([39], 13743), 'promote_debug_loc': ([], 13751), 'new_cselib_val': ([], 13751), 'new_elt_loc_list': ([], 13751), 'new_elt_list': ([], 13751), 'add_mem_for_addr': ([], 13751), 'cselib_subst_to_values': ([], 13751), 'cselib_hash_rtx': ([], 13751), 'cselib_lookup_mem': ([21], 13720), 'cselib_lookup': ([51], 13735), 'cselib_invalidate_mem': ([], 13751), 'unchain_one_value': ([], 13751), 'discard_useless_values': ([], 13751), 'discard_useless_locs': ([], 13751), 'remove_useless_values': ([], 13751), 'cselib_reg_set_mode': ([], 13751), 'rtx_equal_for_cselib_p': ([], 13751), 'cselib_expand_value_rtx_1': ([], 13751), 'expand_loc': ([2], 13748), 'cselib_expand_value_rtx': ([], 13751), 'cselib_expand_value_rtx_cb': ([], 13751), 'cselib_dummy_expand_value_rtx_cb': ([], 13751), 'cselib_invalidate_rtx': ([], 13751), 'cselib_record_set': ([], 13751), 'cselib_process_insn': ([40], 13748), 'entry_and_rtx_equal_p': ([], 13751)}, "PosixPath('602/sel-sched-dump.bc')": {'replace_str_in_buf': ([], 11074), 'sel_prepare_string_for_dot_label': ([], 11074), 'dump_insn_rtx_1': ([], 11074), 'debug_insn_rtx': ([], 11074), 'dump_vinsn_1': ([], 11074), 'debug_vinsn': ([], 11074), 'dump_expr_1': ([], 11074), 'debug_expr': ([], 11074), 'dump_insn_1': ([], 11074), 'debug_insn': ([], 11074), '_list_iter_start': ([], 11074), '_list_iter_next': ([], 11074), 'dump_av_set': ([], 11074), 'bmp_iter_set_init': ([], 11074), 'bmp_iter_set': ([], 11074), 'dump_lv_set': ([], 11074), 'dump_blist': ([], 11074), 'VEC_rtx_base_iterate': ([], 11074), 'dump_insn_vector': ([], 11074), 'sel_print_insn': ([], 11074), 'ei_end_p': ([], 11074), 'ei_cond': ([], 11074), 'ei_next': ([], 11074), 'has_preds_in_current_region_p': ([], 11074), 'sel_dump_cfg_edge': ([], 11074), 'sel_dump_cfg_2': ([], 11074), 'sel_dump_cfg_1': ([], 11074), 'sel_debug_cfg_1': ([], 11074), 'debug_av_set': ([], 11074), 'debug_lv_set': ([], 11074), 'debug_ilist': ([], 11074), 'debug_blist': ([], 11074), 'debug_insn_vector': ([], 11074), 'debug_hard_reg_set': ([], 11074), 'debug_mem_addr_value': ([], 11074)}, "PosixPath('602/c-errors.bc')": {'pedwarn_c99': ([], 534), 'pedwarn_c90': ([], 534)}, "PosixPath('602/c-lex.bc')": {'interpret_integer': ([], 7407), 'lex_string': ([], 7407), 'get_fileinfo': ([], 7407), 'cb_undef': ([], 7407), 'cb_define': ([], 7407), 'cb_def_pragma': ([], 7407), 'cb_ident': ([], 7407), 'cb_line_change': ([], 7407), 'init_c_lex': ([], 7407), 'dump_one_header': ([], 7407), 'dump_time_statistics': ([], 7407), 'fe_file_change': ([], 7407), 'narrowest_unsigned_type': ([], 7407), 'narrowest_signed_type': ([], 7407), 'interpret_fixed': ([], 7407), 'interpret_float': ([], 7407), 'lex_charconst': ([], 7407), 'c_lex_with_flags': ([], 7407)}, "PosixPath('602/df-byte-scan.bc')": {'df_compute_accessed_bytes_extract': ([], 990), 'df_compute_accessed_bytes_strict_low_part': ([], 990), 'df_compute_accessed_bytes_subreg': ([], 990), 'df_compute_accessed_bytes': ([], 990)}, "PosixPath('602/tree-dump.bc')": {'dump_register': ([], 9662), 'queue': ([], 9662), 'dump_maybe_newline': ([], 9662), 'queue_and_dump_index': ([], 9662), 'dump_string': ([], 9662), 'dump_string_field': ([], 9662), 'dump_flag': ([], 9662), 'VEC_tree_base_iterate': ([], 9662), 'dump_real': ([], 9662), 'dump_fixed': ([], 9662), 'init_call_expr_arg_iterator': ([], 9662), 'next_call_expr_arg': ([], 9662), 'first_call_expr_arg': ([], 9662), 'dequeue_and_dump': ([], 9662), 'dump_node': ([], 9662), 'get_dump_file_name': ([], 9662), 'dump_enabled_p': ([], 9662), 'dump_enable_all': ([], 9662), 'dump_switch_p_1': ([], 9662)}, "PosixPath('602/i386.bc')": {'function_arg_advance_32': ([], 240179), 'ix86_compute_frame_layout': ([2], 240139), 'ix86_expand_prologue': ([18, 52], 240118), 'ix86_expand_epilogue': ([], 240179), 'assign_386_stack_local': ([], 240179), 'ix86_expand_int_addcc': ([], 240179), 'ix86_split_long_move': ([1, 2], 240136), 'ix86_vectorize_builtin_vec_perm_ok': ([], 240179), 'expand_vec_perm_interleave2': ([], 240179), 'ix86_target_string': ([], 240179), 'ix86_expand_vec_perm_builtin': ([], 240179), 'ix86_can_inline_p': ([], 240179), 'ix86_function_specific_print': ([], 240179), 'ix86_function_specific_restore': ([], 240179), 'ix86_function_specific_save': ([], 240179), 'ix86_valid_target_attribute_inner_p': ([], 240179), 'ix86_get_builtin_type': ([], 240179), 'ix86_get_builtin_func_type': ([], 240179), 'ix86_add_new_builtins': ([], 240179), 'ix86_frame_pointer_required': ([], 240179), 'ix86_secondary_reload': ([], 240179), 'ix86_function_regparm': ([], 240179), 'ix86_static_chain': ([], 240179), 'ix86_trampoline_init': ([], 240179), 'find_drap_reg': ([], 240179), 'ix86_get_drap_rtx': ([], 240179), 'ix86_minimum_incoming_stack_boundary': ([], 240179), 'type_natural_mode': ([0, 1, 3], 240164), 'ix86_function_sseregparm': ([], 240179), 'function_value_32': ([], 240179), 'ix86_function_value_1': ([], 240179), 'ix86_function_value': ([], 240179), 'return_in_memory_32': ([], 240179), 'ix86_return_in_memory': ([], 240179), 'ix86_struct_value_rtx': ([], 240179), 'ix86_canonical_va_list_type': ([], 240179), 'ei_end_p': ([], 240179), 'ei_cond': ([], 240179), 'ei_next': ([], 240179), 'ix86_pad_returns': ([], 240179), 'symbolic_reference_mentioned_p': ([], 240179), 'min_insn_size': ([], 240179), 'ix86_avoid_jump_mispredicts': ([], 240179), 'ix86_reorg': ([], 240179), 'ix86_decompose_address': ([45], 240178), 'ix86_address_cost': ([], 240179), 'standard_80387_constant_p': ([], 240179), 'ix86_rtx_costs': ([81], 240159), 'ix86_in_large_data_p': ([], 240179), 'ix86_encode_section_info': ([], 240179), 'legitimate_pic_address_disp_p': ([2], 240172), 'legitimate_constant_p': ([2], 240167), 'ix86_legitimate_address_p': ([54], 240174), 'ix86_pic_register_p': ([], 240179), 'ix86_delegitimize_address': ([0, 8], 240169), 'ix86_tls_module_base': ([], 240179), 'legitimize_pic_address': ([0], 240168), 'ix86_legitimize_address': ([5, 26, 30, 48], 240156), 'ix86_mangle_type': ([], 240179), 'recog_memoized': ([], 240179), 'expand_vselect': ([], 240179), 'expand_vec_perm_blend': ([], 240179), 'expand_vec_perm_vpermil': ([], 240179), 'expand_vec_perm_pshufb': ([], 240179), 'expand_vec_perm_1': ([], 240179), 'get_mode_wider_vector': ([], 240179), 'expand_vec_perm_broadcast_1': ([], 240179), 'ix86_expand_vector_init_duplicate': ([], 240179), 'ix86_expand_vector_extract': ([], 240179), 'ix86_expand_vector_set': ([], 240179), 'ix86_expand_vector_init_one_nonzero': ([], 240179), 'ix86_expand_vector_init_one_var': ([], 240179), 'ix86_expand_vector_init_interleave': ([], 240179), 'ix86_expand_vector_init_general': ([10, 13, 17], 240159), 'ix86_expand_vector_init': ([], 240179), 'ix86_expand_vector_init_concat': ([], 240179), 'ix86_expand_vec_init_builtin': ([], 240179), 'ix86_expand_vec_ext_builtin': ([], 240179), 'ix86_expand_vec_set_builtin': ([], 240179), 'extract_vec_perm_cst': ([], 240179), 'expand_vec_perm_pshuflw_pshufhw': ([], 240179), 'expand_vec_perm_palignr': ([], 240179), 'expand_vec_perm_broadcast': ([], 240179), 'expand_vec_perm_pshufb2': ([], 240179), 'expand_vec_perm_even_odd_1': ([], 240179), 'expand_vec_perm_even_odd': ([], 240179), 'ix86_expand_vec_perm_builtin_1': ([], 240179), 'ix86_expand_special_args_builtin': ([], 240179), 'ix86_expand_sse_ptest': ([], 240179), 'ix86_expand_unop_vec_merge_builtin': ([], 240179), 'ix86_expand_binop_builtin': ([], 240179), 'ix86_expand_sse_compare': ([], 240179), 'ix86_expand_args_builtin': ([], 240179), 'ix86_expand_sse_comi': ([], 240179), 'ix86_expand_sse_pcmpestr': ([], 240179), 'ix86_expand_sse_pcmpistr': ([], 240179), 'ix86_expand_multi_arg_builtin': ([], 240179), 'ix86_expand_builtin': ([], 240179), 'ix86_init_builtin_types': ([], 240179), 'def_builtin': ([], 240179), 'def_builtin_const': ([], 240179), 'ix86_init_mmx_sse_builtins': ([], 240179), 'ix86_init_builtins': ([], 240179), 'ix86_comp_type_attributes': ([], 240179), 'ix86_handle_struct_attribute': ([], 240179), 'ix86_vectorize_builtin_vec_perm': ([], 240179), 'ix86_builtin_vectorized_function': ([], 240179), 'ix86_agi_dependent': ([], 240179), 'ix86_flags_dependent': ([], 240179), 'ix86_adjust_cost': ([6], 240175), 'ix86_veclibabi_svml': ([], 240179), 'ix86_init_machine_status': ([], 240179), 'override_options': ([], 240179), 'ix86_function_ok_for_sibcall': ([], 240179), 'ix86_code_end': ([0], 240173), 'output_set_got': ([], 240179), 'x86_output_mi_thunk': ([], 240179), 'ix86_valid_target_attribute_tree': ([1], 240177), 'ix86_valid_target_attribute_p': ([], 240179), 'ix86_conditional_register_usage': ([], 240179), 'x86_output_aligned_bss': ([], 240179), 'init_cumulative_args': ([], 240179), 'function_arg_advance': ([], 240179), 'function_arg_32': ([], 240179), 'function_arg': ([], 240179), 'contains_aligned_value_p': ([], 240179), 'ix86_function_arg_boundary': ([], 240179), 'ix86_sol10_return_in_memory': ([], 240179), 'ix86_check_movabs': ([0], 240175), 'ix86_save_reg': ([], 240179), 'ix86_can_use_return_insn_p': ([], 240179), 'ix86_initial_elimination_offset': ([], 240179), 'gen_push': ([], 240179), 'ix86_add_queued_cfa_restore_notes': ([], 240179), 'pro_epilogue_adjust_stack': ([], 240179), 'ix86_emit_leave': ([], 240179), 'ix86_emit_restore_reg_using_pop': ([], 240179), 'legitimate_pic_operand_p': ([2], 240174), 'print_reg': ([2], 240176), 'get_some_local_dynamic_name_1': ([], 240179), 'get_some_local_dynamic_name': ([], 240179), 'output_pic_addr_const': ([], 240179), 'print_operand': ([], 240179), 'print_operand_address': ([48], 240177), 'output_addr_const_extra': ([], 240179), 'split_di': ([], 240179), 'split_ti': ([], 240179), 'output_387_binary_op': ([], 240179), 'ix86_mode_needed': ([], 240179), 'output_fix_trunc': ([], 240179), 'output_fp_compare': ([], 240179), 'ix86_expand_clear': ([], 240179), 'ix86_expand_move': ([], 240179), 'ix86_expand_vector_move_misalign': ([], 240179), 'ix86_expand_vector_move': ([14], 240165), 'ix86_swap_binary_operands_p': ([], 240179), 'ix86_fixup_binary_operands': ([7], 240178), 'ix86_expand_binary_operator': ([], 240179), 'ix86_binary_operator_ok': ([], 240179), 'ix86_expand_unary_operator': ([], 240179), 'distance_non_agu_define': ([12], 240156), 'distance_agu_use': ([], 240179), 'ix86_lea_for_add_ok': ([], 240179), 'ix86_dep_by_shift_count_body': ([], 240179), 'ix86_unary_operator_ok': ([], 240179), 'ix86_vec_interleave_v2df_operator_ok': ([], 240179), 'ix86_split_convert_uns_si_sse': ([], 240179), 'ix86_expand_fp_absneg_operator': ([], 240179), 'ix86_expand_copysign': ([], 240179), 'ix86_split_copysign_const': ([], 240179), 'ix86_split_copysign_var': ([], 240179), 'ix86_match_ccmode': ([0], 240175), 'ix86_cc_mode': ([], 240179), 'ix86_prepare_fp_compare_args': ([], 240179), 'ix86_expand_fp_compare': ([], 240179), 'ix86_expand_branch': ([], 240179), 'ix86_expand_carry_flag_compare': ([], 240179), 'ix86_expand_int_movcc': ([], 240179), 'ix86_expand_sse_movcc': ([], 240179), 'ix86_expand_fp_movcc': ([], 240179), 'ix86_expand_fp_vcond': ([], 240179), 'ix86_expand_int_vcond': ([], 240179), 'ix86_expand_sse_unpack': ([], 240179), 'ix86_expand_sse4_unpack': ([], 240179), 'ix86_split_to_parts': ([26], 240174), 'ix86_expand_ashl_const': ([], 240179), 'ix86_split_ashl': ([], 240179), 'ix86_split_ashr': ([], 240179), 'ix86_split_lshr': ([], 240179), 'decide_alg': ([], 240179), 'expand_constant_movmem_prologue': ([], 240179), 'expand_set_or_movmem_via_loop': ([], 240179), 'scale_counter': ([0], 240169), 'expand_movmem_via_rep_mov': ([], 240179), 'expand_movmem_epilogue': ([], 240179), 'ix86_expand_movmem': ([23], 240163), 'promote_duplicated_reg': ([], 240179), 'expand_constant_setmem_prologue': ([], 240179), 'expand_setmem_via_rep_stos': ([], 240179), 'expand_setmem_epilogue': ([], 240179), 'ix86_expand_setmem': ([], 240179), 'ix86_expand_strlensi_unroll_1': ([], 240179), 'ix86_expand_strlen': ([], 240179), 'ix86_expand_call': ([], 240179), 'satisfies_constraint_K': ([], 240179), 'memory_address_length': ([2], 240132), 'ix86_attr_length_immediate_default': ([], 240179), 'ix86_attr_length_address_default': ([7], 240175), 'ix86_constant_alignment': ([], 240179), 'ix86_data_alignment': ([], 240179), 'ix86_local_alignment': ([], 240179), 'ix86_minimum_alignment': ([], 240179), 'avx_vpermilp_parallel': ([], 240179), 'avx_vperm2f128_parallel': ([], 240179), 'ix86_force_to_memory': ([], 240179), 'ix86_preferred_reload_class': ([], 240179), 'inline_memory_move_cost': ([], 240179), 'ix86_register_move_cost': ([], 240179), 'ix86_hard_regno_mode_ok': ([], 240179), 'ix86_modes_tieable_p': ([], 240179), 'x86_order_regs_for_local_alloc': ([], 240179), 'x86_field_alignment': ([], 240179), 'x86_extended_QIreg_mentioned_p': ([], 240179), 'extended_reg_mentioned_1': ([], 240179), 'x86_extended_reg_mentioned_p': ([], 240179), 'x86_emit_floatuns': ([], 240179), 'output_387_reg_move': ([0], 240176), 'ix86_emit_i387_log1p': ([], 240179), 'ix86_emit_swsqrtsf': ([], 240179), 'ix86_expand_lround': ([], 240179), 'ix86_expand_rint': ([], 240179), 'ix86_expand_floorceildf_32': ([], 240179), 'ix86_expand_floorceil': ([], 240179), 'ix86_expand_rounddf_32': ([], 240179), 'ix86_expand_trunc': ([], 240179), 'ix86_expand_truncdf_32': ([], 240179), 'ix86_expand_round': ([], 240179), 'ix86_expand_vec_extract_even_odd': ([], 240179), 'gt_ggc_mx_stack_local_entry': ([], 240179), 'gt_pch_nx_stack_local_entry': ([], 240179)}, "PosixPath('602/integrate.bc')": {'function_attribute_inlinable_p': ([], 2551), 'set_decl_origin_self': ([], 2551), 'set_block_origin_self': ([], 2551), 'set_decl_abstract_flags': ([], 2551), 'set_block_abstract_flags': ([], 2551), 'get_hard_reg_initial_reg': ([], 2551), 'has_hard_reg_initial_val': ([], 2551), 'get_hard_reg_initial_val': ([], 2551), 'emit_initial_value_sets': ([], 2551), 'allocate_initial_values': ([], 2551), 'gt_ggc_mx_initial_value_struct': ([], 2551), 'gt_pch_p_20initial_value_struct': ([3], 2545), 'gt_pch_nx_initial_value_struct': ([3], 2549)}, "PosixPath('602/tree-ssa-forwprop.bc')": {'bb_seq': ([], 19549), 'gsi_start_bb': ([], 19549), 'gsi_stmt': ([], 19549), 'gimple_ops': ([], 19549), 'gimple_op': ([], 19549), 'gimple_assign_lhs': ([], 19549), 'gimple_assign_rhs1': ([], 19549), 'gimple_assign_rhs_code': ([], 19549), 'has_single_use': ([], 19549), 'end_imm_use_stmt_p': ([], 19549), 'clear_and_done_ssa_iter': ([], 19549), 'op_iter_next_use': ([], 19549), 'op_iter_init_phiuse': ([], 19549), 'delink_imm_use': ([], 19549), 'link_imm_use_to_list': ([], 19549), 'move_use_after_head': ([2], 19535), 'gimple_def_ops': ([], 19549), 'gimple_vdef': ([], 19549), 'gimple_use_ops': ([], 19549), 'gimple_vuse': ([], 19549), 'op_iter_init': ([], 19549), 'op_iter_init_use': ([14], 19547), 'gimple_vuse_op': ([], 19549), 'link_use_stmts_after': ([], 19549), 'first_imm_use_stmt': ([], 19549), 'gimple_set_op': ([], 19549), 'gimple_assign_set_rhs1': ([], 19549), 'gimple_op_ptr': ([], 19549), 'gimple_assign_lhs_ptr': ([], 19549), 'tidy_after_forward_propagate_addr': ([], 19549), 'gimple_assign_rhs1_ptr': ([], 19549), 'gimple_assign_rhs2': ([], 19549), 'forward_propagate_addr_into_variable_array_index': ([], 19549), 'has_zero_uses': ([], 19549), 'next_imm_use_stmt': ([], 19549), 'forward_propagate_addr_expr': ([20, 176, 250], 19498), 'simplify_not_neg_expr': ([], 19549), 'get_prop_source_stmt': ([25], 19547), 'can_propagate_from': ([0], 19534), 'rhs_to_tree': ([3], 19547), 'remove_prop_source_from_use': ([], 19549), 'forward_propagate_into_cond': ([], 19549), 'single_imm_use': ([], 19549), 'get_prop_dest_stmt': ([], 19549), 'forward_propagate_comparison': ([], 19549), 'gimple_assign_cast_p': ([], 19549), 'gimple_call_fn': ([], 19549), 'gimple_call_return_type': ([], 19549), 'gimple_expr_type': ([], 19549), 'simplify_bitwise_and': ([], 19549), 'gimple_switch_index': ([], 19549), 'gimple_switch_set_index': ([], 19549), 'simplify_gimple_switch': ([], 19549), 'gimple_cond_lhs': ([], 19549), 'gimple_cond_rhs': ([], 19549), 'forward_propagate_into_gimple_cond': ([], 19549), 'tree_ssa_forward_propagate_single_use_vars': ([3, 43], 19397)}, "PosixPath('602/statistics.bc')": {'hash_statistics_eq': ([], 2397), 'curr_statistics_hash': ([2], 2392), 'statistics_fini_pass_2': ([], 2397), 'statistics_fini_pass_1': ([], 2397), 'statistics_fini_pass': ([], 2397), 'statistics_fini_1': ([], 2397), 'statistics_fini': ([], 2397), 'lookup_or_add_counter': ([], 2397), 'statistics_counter_event': ([], 2397), 'statistics_histogram_event': ([], 2397)}, "PosixPath('602/host-ieee128.bc')": {'__host_to_ieee_128': ([], 80), '__ieee_to_host_128': ([], 80)}, "PosixPath('602/host-ieee32.bc')": {}, "PosixPath('602/xexit.bc')": {}, "PosixPath('602/cpp_pch.bc')": {'write_macdef': ([], 5310), 'cpp_valid_state': ([], 5310), '_cpp_restore_pushed_macros': ([], 5310), 'save_idents': ([], 5310), 'cpp_string_eq': ([], 5310), 'hashmem': ([], 5310), 'cpp_string_hash': ([], 5310), 'write_defs': ([], 5310), 'count_defs': ([], 5310), 'cpp_write_pch_deps': ([], 5310), '_cpp_save_pushed_macros': ([1, 14], 5290), 'cpp_write_pch_state': ([], 5310), 'collect_ht_nodes': ([], 5310), 'save_macros': ([4], 5297), 'cpp_prepare_state': ([], 5310), 'cpp_read_state': ([], 5310)}, "PosixPath('602/c-ppoutput.bc')": {'print_line': ([], 3956), 'maybe_print_line': ([], 3956), 'account_for_newlines': ([], 3956), 'scan_translation_unit_trad': ([], 3956), 'scan_translation_unit_directives_only': ([], 3956), 'dump_queued_macros': ([], 3956), 'do_line_change': ([], 3956), 'scan_translation_unit': ([], 3956), 'dump_macro': ([], 3956), 'preprocess_file': ([], 3956), 'cb_used_undef': ([], 3956), 'cb_used_define': ([], 3956), 'cb_define': ([], 3956), 'cb_include': ([], 3956), 'init_pp_output': ([], 3956), 'pp_file_change': ([11], 3955)}, "PosixPath('602/builtins.bc')": {'expand_builtin_setjmp_setup': ([], 74677), 'gimplify_va_arg_expr': ([], 74677), 'fold_builtin_object_size': ([], 74677), 'is_builtin_fn': ([], 74677), 'get_object_alignment': ([18, 19], 74668), 'get_pointer_alignment': ([], 74677), 'c_strlen': ([], 74677), 'expand_builtin_setjmp_receiver': ([], 74677), 'c_readstr': ([13], 74675), 'builtin_memset_read_str': ([], 74677), 'std_canonical_va_list_type': ([], 74677), 'build_va_arg_indirect_ref': ([], 74677), 'std_gimplify_va_arg_expr': ([], 74677), 'avoid_folding_inline_builtin': ([], 74677), 'fold_builtin_inf': ([], 74677), 'type_to_class': ([], 74677), 'fold_builtin_classify_type': ([], 74677), 'fold_builtin_0': ([], 74677), 'fold_builtin_constant_p': ([], 74677), 'c_getstr': ([], 74677), 'fold_builtin_nan': ([], 74677), 'init_const_call_expr_arg_iterator': ([], 74677), 'more_const_call_expr_args_p': ([], 74677), 'next_const_call_expr_arg': ([], 74677), 'builtin_mathfn_code': ([], 74677), 'integer_valued_real_p': ([], 74677), 'fold_builtin_bswap': ([], 74677), 'fold_builtin_bitop': ([], 74677), 'fold_builtin_signbit': ([], 74677), 'fold_builtin_significand': ([], 74677), 'fold_builtin_logb': ([], 74677), 'interclass_mathfn_icode': ([], 74677), 'build_string_literal': ([], 74677), 'fold_builtin_load_exponent': ([], 74677), 'fold_builtin_frexp': ([], 74677), 'fold_builtin_modf': ([], 74677), 'var_decl_component_p': ([], 74677), 'fold_builtin_memset': ([4], 74670), 'fold_builtin_bzero': ([], 74677), 'fold_builtin_strchr': ([], 74677), 'fold_builtin_powi': ([], 74677), 'fold_builtin_unordered_cmp': ([], 74677), 'readonly_data_expr': ([], 74677), 'fold_builtin_strncmp': ([], 74677), 'fold_builtin_memchr': ([], 74677), 'rewrite_call_expr': ([1, 3, 9, 12], 74647), 'fold_builtin_sprintf_chk': ([], 74677), 'fold_builtin_snprintf_chk': ([], 74677), 'validate_arglist': ([2], 74654), 'fold_builtin_fpclassify': ([], 74677), 'fold_builtin_varargs': ([], 74677), 'fold_builtin_strncat_chk': ([], 74677), 'fold_builtin_memory_op': ([49], 74674), 'fold_builtin_fprintf': ([], 74677), 'fold_builtin_copysign': ([], 74677), 'fold_builtin_expect': ([0], 74672), 'fold_builtin_strpbrk': ([], 74677), 'fold_builtin_stpcpy': ([], 74677), 'fold_builtin_strrchr': ([], 74677), 'fold_builtin_strstr': ([], 74677), 'fold_builtin_printf': ([], 74677), 'fold_builtin_interclass_mathfn': ([23], 74671), 'fold_builtin_classify': ([7, 82, 221], 74427), 'fold_builtin_int_roundingfn': ([], 74677), 'fold_builtin_round': ([], 74677), 'fold_builtin_trunc': ([], 74677), 'fold_builtin_ceil': ([], 74677), 'fold_builtin_floor': ([], 74677), 'fold_builtin_carg': ([], 74677), 'fold_builtin_n': ([71], 74673), 'fold_builtin_call_array': ([], 74677), 'build_call_expr_loc': ([5], 74667), 'fold_fixed_mathfn': ([], 74677), 'build_builtin_expect_predicate': ([], 74677), 'init_call_expr_arg_iterator': ([], 74677), 'next_call_expr_arg': ([], 74677), 'first_call_expr_arg': ([], 74677), 'expand_builtin': ([0], 74671), 'fold_call_expr': ([], 74677), 'build_function_call_expr': ([], 74677), 'gimple_ops': ([], 74677), 'gimple_op': ([], 74677), 'gimple_call_arg': ([], 74677), 'validate_gimple_arglist': ([], 74677), 'fold_builtin_next_arg': ([], 74677), 'gimple_rewrite_call_expr': ([5], 74668), 'gimple_fold_builtin_snprintf_chk': ([], 74677), 'gimple_call_fn': ([], 74677), 'gimple_call_fndecl': ([], 74677), 'gimple_fold_builtin_sprintf_chk': ([], 74677), 'gimple_fold_builtin_varargs': ([], 74677), 'fold_call_stmt': ([19], 74674), 'set_builtin_user_assembler_name': ([0], 74672)}, "PosixPath('602/insn-preds.bc')": {'any_fp_register_operand': ([], 11501), 'fp_register_operand': ([], 11501), 'register_and_not_any_fp_reg_operand': ([], 11501), 'register_and_not_fp_reg_operand': ([], 11501), 'mmx_reg_operand': ([], 11501), 'q_regs_operand_1': ([], 11501), 'q_regs_operand': ([], 11501), 'ext_register_operand_1': ([], 11501), 'ext_register_operand': ([], 11501), 'ax_reg_operand': ([], 11501), 'flags_reg_operand': ([], 11501), 'reg_not_xmm0_operand': ([], 11501), 'nonimm_not_xmm0_operand': ([], 11501), 'x86_64_zext_immediate_operand_1': ([], 11501), 'x86_64_zext_immediate_operand': ([], 11501), 'symbolic_operand_1': ([], 11501), 'symbolic_operand': ([0], 11497), 'pic_symbolic_operand_1': ([], 11501), 'pic_symbolic_operand': ([], 11501), 'local_symbolic_operand_1': ([], 11501), 'local_symbolic_operand': ([], 11501), 'tls_symbolic_operand': ([], 11501), 'tp_or_register_operand': ([], 11501), 'register_no_elim_operand_1': ([], 11501), 'register_no_elim_operand': ([], 11501), 'call_register_no_elim_operand_1': ([], 11501), 'call_register_no_elim_operand': ([], 11501), 'index_register_operand_1': ([], 11501), 'index_register_operand': ([], 11501), 'const8_operand': ([], 11501), 'const128_operand': ([], 11501), 'const248_operand': ([], 11501), 'const_0_to_3_operand': ([], 11501), 'const_0_to_7_operand': ([], 11501), 'const_0_to_15_operand': ([], 11501), 'const_0_to_31_operand': ([], 11501), 'const_0_to_63_operand': ([], 11501), 'const_0_to_255_operand': ([], 11501), 'const_0_to_255_mul_8_operand': ([], 11501), 'const_1_to_31_operand': ([], 11501), 'const_1_to_63_operand': ([], 11501), 'const_2_to_3_operand': ([], 11501), 'const_4_to_5_operand': ([], 11501), 'const_4_to_7_operand': ([], 11501), 'const_6_to_7_operand': ([], 11501), 'const_8_to_11_operand': ([], 11501), 'const_12_to_15_operand': ([], 11501), 'const_pow2_1_to_2_operand': ([], 11501), 'const_pow2_1_to_8_operand': ([], 11501), 'const_pow2_1_to_128_operand': ([], 11501), 'const_pow2_1_to_32768_operand': ([], 11501), 'zero_extended_scalar_load_operand_1': ([], 11501), 'zero_extended_scalar_load_operand': ([], 11501), 'vector_all_ones_operand_1': ([], 11501), 'vector_all_ones_operand': ([], 11501), 'aligned_operand_1': ([], 11501), 'aligned_operand': ([], 11501), 'memory_displacement_operand_1': ([], 11501), 'memory_displacement_operand': ([], 11501), 'memory_displacement_only_operand_1': ([], 11501), 'memory_displacement_only_operand': ([], 11501), 'cmpxchg8b_pic_memory_operand_1': ([], 11501), 'cmpxchg8b_pic_memory_operand': ([], 11501), 'fcmov_comparison_operator_1': ([], 11501), 'fcmov_comparison_operator': ([], 11501), 'ix86_comparison_operator_1': ([], 11501), 'ix86_comparison_operator': ([], 11501), 'ix86_carry_flag_operator_1': ([], 11501), 'ix86_carry_flag_operator': ([], 11501), 'misaligned_operand': ([], 11501), 'emms_operation_1': ([], 11501), 'emms_operation': ([], 11501), 'vzeroall_operation_1': ([], 11501), 'vzeroall_operation': ([], 11501), 'vzeroupper_operation_1': ([], 11501), 'vzeroupper_operation': ([], 11501), 'avx_vbroadcast_operand_1': ([], 11501), 'avx_vbroadcast_operand': ([], 11501), 'satisfies_constraint_I': ([], 11501), 'satisfies_constraint_J': ([], 11501), 'satisfies_constraint_K': ([], 11501), 'satisfies_constraint_L': ([], 11501), 'satisfies_constraint_M': ([], 11501), 'satisfies_constraint_N': ([], 11501), 'satisfies_constraint_O': ([], 11501), 'constraint_satisfied_p': ([], 11501)}, "PosixPath('602/c-dump.bc')": {'dump_stmt': ([], 203), 'c_dump_tree': ([], 203)}, "PosixPath('602/rtl.bc')": {'rtx_equal_p_cb': ([], 8477), 'shallow_copy_rtvec': ([], 8477), 'rtx_size': ([], 8477), 'rtx_alloc_stat': ([], 8477), 'shared_const_p': ([], 8477), 'shallow_copy_rtx_stat': ([], 8477), 'copy_rtx': ([1], 8474), 'rtx_equal_p': ([], 8477)}, "PosixPath('602/loop-iv.bc')": {'iv_neg': ([], 20565), 'iv_analyze_biv': ([28, 62], 20555), 'iv_subreg': ([], 20565), 'iv_number_of_iterations': ([], 20565), 'dump_iv_info': ([0], 20563), 'check_iv_ref_table_size': ([], 20565), 'clear_iv_info': ([], 20565), 'iv_analysis_loop_init': ([], 20565), 'get_iv_value': ([], 20565), 'simple_reg_p': ([0], 20563), 'iv_get_reaching_def': ([0], 20561), 'iv_constant': ([], 20565), 'df_rd_get_bb_info': ([], 20565), 'latch_dominating_def': ([], 20565), 'get_biv_step_1': ([], 20565), 'get_biv_step': ([], 20565), 'record_biv': ([], 20565), 'iv_extend': ([], 20565), 'iv_add': ([], 20565), 'iv_mult': ([], 20565), 'iv_shift': ([], 20565), 'iv_analyze_expr': ([16, 19], 20536), 'iv_analyze_op': ([], 20565), 'iv_analyze_def': ([7], 20563), 'iv_analyze': ([], 20565), 'biv_p': ([], 20565), 'canon_condition': ([], 20565), 'implies_p': ([14], 20560), 'altered_reg_used': ([], 20565), 'simplify_using_condition': ([], 20565), 'ei_end_p': ([], 20565), 'ei_cond': ([], 20565), 'shorten_into_mode': ([], 20565), 'canonicalize_iv_subregs': ([69], 20559), 'simple_rhs_p': ([], 20565), 'suitable_set_for_replacement': ([], 20565), 'replace_single_def_regs': ([], 20565), 'single_pred_edge': ([], 20565), 'mark_altered': ([0], 20560), 'simplify_using_initial_values': ([12, 53, 113], 20542), 'determine_max_iter': ([], 20565), 'check_simple_exit': ([], 20565), 'ei_next': ([], 20565), 'find_simple_exit': ([30], 20430), 'get_simple_loop_desc': ([21], 20561)}, "PosixPath('602/xcoffout.bc')": {}, "PosixPath('602/graphite-scop-detection.bc')": {}, "PosixPath('602/tree-ssa-phiopt.bc')": {'gsi_start': ([], 11208), 'single_pred_edge': ([], 11208), 'blocks_in_phiopt_order': ([5], 11207), 'bb_seq': ([], 11208), 'gsi_start_bb': ([], 11208), 'gsi_stmt': ([], 11208), 'gsi_after_labels': ([], 11208), 'gsi_next_nondebug': ([], 11208), 'empty_block_p': ([], 11208), 'gimple_ops': ([], 11208), 'gimple_op': ([], 11208), 'gimple_assign_lhs': ([], 11208), 'add_or_mark_expr': ([], 11208), 'gimple_assign_rhs1': ([], 11208), 'gimple_assign_rhs_code': ([], 11208), 'gimple_assign_rhs2': ([], 11208), 'nt_init_block': ([], 11208), 'name_to_bb_eq': ([], 11208), 'get_non_trapping': ([], 11208), 'get_var_ann': ([], 11208), 'gimple_set_op': ([], 11208), 'gimple_assign_set_lhs': ([], 11208), 'gsi_last_bb': ([], 11208), 'cond_store_replacement': ([1, 2, 9, 21], 11059), 'phi_nodes': ([], 11208), 'gimple_seq_singleton_p': ([], 11208), 'gimple_cond_lhs': ([], 11208), 'gimple_cond_rhs': ([], 11208), 'delink_imm_use': ([], 11208), 'link_imm_use_to_list': ([], 11208), 'link_imm_use': ([], 11208), 'set_ssa_use_from_ptr': ([], 11208), 'replace_phi_edge_with_variable': ([33], 11200), 'conditional_replacement': ([15], 11199), 'single_succ_edge': ([], 11208), 'value_replacement': ([], 11208), 'abs_replacement': ([113], 11207), 'gsi_prev_nondebug': ([], 11208), 'gsi_last_nondebug_bb': ([22], 11196), 'minmax_replacement': ([1, 172], 11180), 'tree_ssa_phiopt_worker': ([6, 9], 11192)}, "PosixPath('602/omp-low.bc')": {'expand_omp_sections': ([], 58909), 'extract_omp_for_data': ([47, 121], 58879), 'gsi_start': ([], 58909), 'scan_omp_task': ([], 58909), 'new_omp_context': ([], 58909), 'create_omp_child_function': ([9], 58906), 'create_task_copyfn': ([], 58909), 'lower_rec_input_clauses': ([0], 58849), 'lower_omp_single_copy': ([], 58909), 'find_omp_clause': ([], 58909), 'copy_var_decl': ([0], 58903), 'dump_omp_region': ([], 58909), 'new_omp_region': ([], 58909), 'omp_reduction_init': ([], 58909), 'bb_seq': ([], 58909), 'gsi_last_bb': ([], 58909), 'gsi_stmt': ([], 58909), 'build_omp_regions_1': ([], 58909), 'ei_end_p': ([], 58909), 'ei_cond': ([], 58909), 'gimple_omp_subcode': ([], 58909), 'ei_next': ([], 58909), 'remove_exit_barrier': ([], 58909), 'remove_exit_barriers': ([], 58909), 'single_succ_edge': ([], 58909), 'gimple_omp_for_index': ([], 58909), 'gimple_omp_for_initial': ([], 58909), 'gimple_omp_for_cond': ([], 58909), 'gimple_omp_for_final': ([], 58909), 'gimple_omp_for_incr': ([], 58909), 'workshare_safe_to_combine_p': ([], 58909), 'get_ws_args_for': ([], 58909), 'determine_parallel_type': ([], 58909), 'gsi_start_bb': ([], 58909), 'gimple_ops': ([], 58909), 'gimple_op': ([], 58909), 'gimple_assign_rhs1': ([], 58909), 'gimple_assign_lhs': ([], 58909), 'gimple_set_op': ([], 58909), 'gimple_assign_set_rhs1': ([], 58909), 'list2chain': ([], 58909), 'gimple_call_fn': ([], 58909), 'gimple_call_fndecl': ([], 58909), 'gimple_call_set_fndecl': ([], 58909), 'optimize_omp_library_calls': ([], 58909), 'gimple_build_cond_empty': ([], 58909), 'expand_parallel_call': ([], 58909), 'expand_task_call': ([], 58909), 'expand_omp_taskreg': ([], 58909), 'expand_omp_for_static_nochunk': ([], 58909), 'single_pred_edge': ([], 58909), 'gimple_phi_arg_location_from_edge': ([], 58909), 'expand_omp_for_static_chunk': ([], 58909), 'phi_nodes': ([], 58909), 'delink_imm_use': ([], 58909), 'link_imm_use_to_list': ([], 58909), 'link_imm_use': ([], 58909), 'set_ssa_use_from_ptr': ([], 58909), 'expand_omp_for_generic': ([56, 114, 144, 234], 58889), 'expand_omp_for': ([37, 47, 53, 234], 58866), 'gimple_call_set_lhs': ([], 58909), 'VEC_tree_base_quick_push': ([], 58909), 'expand_omp_single': ([], 58909), 'expand_omp_synch': ([], 58909), 'gsi_after_labels': ([], 58909), 'gimple_assign_rhs_code': ([], 58909), 'gimple_assign_rhs2': ([], 58909), 'expand_omp_atomic_fetch_op': ([0, 41], 58833), 'expand_omp_atomic_pipeline': ([], 58909), 'expand_omp_atomic_mutex': ([], 58909), 'expand_omp_atomic': ([], 58909), 'expand_omp': ([], 58909), 'gimple_cond_true_label': ([], 58909), 'gimple_cond_false_label': ([], 58909), 'gimple_goto_dest': ([], 58909), 'gimple_switch_label': ([], 58909), 'diagnose_sb_2': ([], 58909), 'gimple_label_label': ([], 58909), 'diagnose_sb_1': ([], 58909), 'diagnose_omp_structured_block_errors': ([], 58909), 'scan_omp_1_op': ([], 58909), 'check_omp_nesting_restrictions': ([], 58909), 'is_global_var': ([], 58909), 'omp_copy_decl': ([], 58909), 'create_omp_child_function_name': ([], 58909), 'omp_copy_decl_2': ([], 58909), 'omp_copy_decl_1': ([], 58909), 'install_var_local': ([], 58909), 'use_pointer_for_field': ([], 58909), 'install_var_field': ([], 58909), 'scan_omp_op': ([], 58909), 'fixup_remapped_decl': ([5], 58903), 'fixup_child_record_type': ([], 58909), 'gimple_omp_for_index_ptr': ([], 58909), 'gimple_omp_for_initial_ptr': ([], 58909), 'gimple_omp_for_final_ptr': ([], 58909), 'gimple_omp_for_incr_ptr': ([], 58909), 'scan_omp': ([], 58909), 'scan_sharing_clauses': ([124], 58906), 'scan_omp_parallel': ([], 58909), 'scan_omp_for': ([], 58909), 'scan_omp_sections': ([], 58909), 'scan_omp_single': ([], 58909), 'scan_omp_1_stmt': ([], 58909), 'gimple_op_ptr': ([], 58909), 'gimple_cond_lhs_ptr': ([], 58909), 'gimple_cond_rhs_ptr': ([], 58909), 'task_copyfn_remap_type': ([], 58909), 'build_outer_var_ref': ([], 58909), 'lookup_decl_in_outer_ctx': ([], 58909), 'lookup_sfield': ([], 58909), 'build_sender_ref': ([], 58909), 'lower_send_clauses': ([], 58909), 'lower_send_shared_vars': ([], 58909), 'maybe_catch_exception': ([], 58909), 'check_combined_parallel': ([], 58909), 'lower_copyprivate_clauses': ([], 58909), 'lower_omp_single_simple': ([], 58909), 'lower_omp_regimplify_p': ([], 58909), 'lower_lastprivate_clauses': ([], 58909), 'lower_reduction_clauses': ([], 58909), 'lower_omp_critical': ([], 58909), 'lower_omp': ([4, 121, 293], 58759), 'finalize_task_copyfn': ([], 58909), 'delete_omp_context': ([], 58909), 'execute_lower_omp': ([], 58909)}, "PosixPath('602/c-gimplify.bc')": {'c_genericize': ([], 775), 'VEC_gimple_base_iterate': ([], 775), 'add_block_to_enclosing': ([], 775), 'c_build_bind_expr': ([], 775), 'c_gimplify_expr': ([], 775)}, "PosixPath('602/tree.bc')": {'decl_value_expr_insert': ([], 78191), 'build_int_cst_wide': ([], 78191), 'build_int_cst_wide_type': ([], 78191), 'build_fn_decl': ([], 78191), 'build_type_attribute_qual_variant': ([], 78191), 'free_lang_data': ([], 78191), 'decl_debug_expr_insert': ([], 78191), 'build_index_type': ([], 78191), 'build_function_type': ([], 78191), 'tree_code_size': ([], 78191), 'make_node_stat': ([0], 78184), 'initialize_tree_contains_struct': ([], 78191), 'cl_option_hash_hash': ([], 78191), 'int_cst_hash_eq': ([], 78191), 'int_cst_hash_hash': ([], 78191), 'is_attribute_with_length_p': ([], 78191), 'lookup_attribute': ([], 78191), 'init_const_call_expr_arg_iterator': ([], 78191), 'next_const_call_expr_arg': ([], 78191), 'first_const_call_expr_arg': ([], 78191), 'simple_cst_equal': ([], 78191), 'attribute_list_contained': ([], 78191), 'type_list_equal': ([], 78191), 'tree_int_cst_equal': ([], 78191), 'type_hash_eq': ([16, 19], 78158), 'init_ttree': ([], 78191), 'decl_assembler_name': ([0], 78189), 'decl_assembler_name_equal': ([], 78191), 'decl_assembler_name_hash': ([], 78191), 'tree_size': ([], 78191), 'decl_value_expr_lookup': ([], 78191), 'decl_init_priority_lookup': ([], 78191), 'decl_priority_info': ([], 78191), 'copy_node_stat': ([0, 11], 78158), 'make_tree_vec_stat': ([], 78191), 'build_int_cst_type': ([], 78191), 'build_low_bits_mask': ([], 78191), 'cst_and_fits_in_hwi': ([], 78191), 'build_vector': ([], 78191), 'tree_cons_stat': ([], 78191), 'nreverse': ([], 78191), 'build_vector_from_ctor': ([], 78191), 'build_constructor': ([], 78191), 'build_constructor_single': ([], 78191), 'build_constructor_from_list': ([], 78191), 'build_fixed': ([], 78191), 'build_real': ([], 78191), 'real_value_from_int_cst': ([], 78191), 'build_real_from_int_cst': ([0], 78183), 'build_string': ([], 78191), 'type_hash_lookup': ([], 78191), 'type_hash_add': ([], 78191), 'type_hash_canon': ([], 78191), 'build_decl_stat': ([], 78191), 'check_qualified_type': ([], 78191), 'get_qualified_type': ([], 78191), 'build_distinct_type_copy': ([], 78191), 'build_variant_type_copy': ([], 78191), 'set_type_quals': ([], 78191), 'build_qualified_type': ([], 78191), 'build_complex_type': ([], 78191), 'build_complex': ([], 78191), 'build_one_cst': ([14], 78187), 'VEC_tree_base_embedded_init': ([], 78191), 'make_tree_binfo_stat': ([], 78191), 'tree_nop_conversion': ([], 78191), 'tree_strip_nop_conversions': ([], 78191), 'integer_zerop': ([], 78191), 'integer_onep': ([], 78191), 'integer_all_onesp': ([], 78191), 'integer_pow2p': ([], 78191), 'integer_nonzerop': ([], 78191), 'fixed_zerop': ([], 78191), 'tree_log2': ([], 78191), 'tree_floor_log2': ([], 78191), 'real_zerop': ([], 78191), 'real_onep': ([], 78191), 'real_twop': ([], 78191), 'real_minus_onep': ([], 78191), 'really_constant_p': ([], 78191), 'value_member': ([], 78191), 'purpose_member': ([], 78191), 'fields_length': ([], 78191), 'first_field': ([], 78191), 'build_tree_list_stat': ([], 78191), 'VEC_tree_base_iterate': ([], 78191), 'build_tree_list_vec_stat': ([], 78191), 'ctor_to_list': ([], 78191), 'VEC_tree_base_quick_push': ([], 78191), 'ctor_to_vec': ([], 78191), 'int_size_in_bytes': ([], 78191), 'host_integerp': ([], 78191), 'max_int_size_in_bytes': ([], 78191), 'tree_expr_size': ([], 78191), 'bit_position': ([], 78191), 'int_bit_position': ([], 78191), 'byte_position': ([], 78191), 'int_byte_position': ([], 78191), 'expr_align': ([], 78191), 'array_type_nelts': ([], 78191), 'staticp': ([], 78191), 'get_containing_scope': ([], 78191), 'decl_function_context': ([], 78191), 'decl_address_invariant_p': ([0], 78184), 'decl_address_ip_invariant_p': ([0], 78182), 'skip_simple_arithmetic': ([0], 78188), 'tree_invariant_p_1': ([], 78191), 'contains_placeholder_p': ([], 78191), 'recompute_tree_invariant_for_addr_expr': ([4, 5, 26, 33, 48], 78164), 'build1_stat': ([], 78191), 'save_expr': ([], 78191), 'type_contains_placeholder_p': ([], 78191), 'VEC_tree_base_space': ([], 78191), 'VEC_tree_heap_reserve': ([], 78191), 'VEC_tree_heap_safe_push': ([], 78191), 'push_without_duplicates': ([], 78191), 'tree_operand_length': ([], 78191), 'find_placeholder_in_expr': ([0, 1], 78186), 'build4_stat': ([0], 78187), 'process_call_operands': ([2], 78190), 'substitute_in_expr': ([2], 78188), 'substitute_placeholder_in_expr': ([0], 78189), 'build_nt': ([], 78191), 'stabilize_reference_1': ([], 78191), 'stabilize_reference': ([], 78191), 'build2_stat': ([0], 78180), 'build3_stat': ([], 78191), 'build5_stat': ([0], 78186), 'build6_stat': ([0], 78163), 'build_vl_exp_stat': ([], 78191), 'build_nt_call_list': ([], 78191), 'build_nt_call_vec': ([], 78191), 'build_block': ([], 78191), 'expand_location': ([], 78191), 'type_hash_list': ([], 78191), 'build_type_attribute_variant': ([], 78191), 'need_assembler_name_p': ([], 78191), 'assign_assembler_name_if_neeeded': ([], 78191), 'remove_attribute': ([], 78191), 'merge_attributes': ([], 78191), 'decl_fini_priority_lookup': ([], 78191), 'decl_debug_expr_lookup': ([], 78191), 'type_num_arguments': ([], 78191), 'tree_int_cst_sgn': ([], 78191), 'tree_int_cst_lt': ([], 78191), 'tree_int_cst_msb': ([], 78191), 'tree_int_cst_min_precision': ([], 78191), 'compare_tree_int': ([], 78191), 'iterative_hash_expr': ([], 78191), 'build_pointer_type_for_mode': ([], 78191), 'build_reference_type_for_mode': ([], 78191), 'build_type_no_quals': ([0], 78183), 'build_nonstandard_integer_type': ([], 78191), 'build_range_type': ([], 78191), 'subrange_type_for_debug_p': ([], 78191), 'build_array_type': ([], 78191), 'maybe_canonicalize_argtypes': ([0], 78181), 'build_function_type_skip_args': ([], 78191), 'build_function_type_list_1': ([], 78191), 'build_method_type_directly': ([], 78191), 'build_method_type': ([], 78191), 'build_offset_type': ([], 78191), 'excess_precision_type': ([], 78191), 'int_fits_type_p': ([], 78191), 'get_unwidened': ([], 78191), 'get_narrower': ([0, 1, 4], 78135), 'get_type_static_bounds': ([], 78191), 'auto_var_in_fn_p': ([], 78191), 'walk_tree_1': ([6], 78129), 'walk_type_fields': ([], 78191), 'variably_modified_type_p': ([0, 4, 5], 78180), 'decl_type_context': ([], 78191), 'get_callee_fndecl': ([2], 78186), 'crc32_string': ([], 78191), 'clean_symbol_name': ([], 78191), 'get_file_function_name': ([], 78191), 'build_common_tree_nodes': ([], 78191), 'build_common_tree_nodes_2': ([], 78191), 'local_define_builtin': ([], 78191), 'build_common_builtin_nodes': ([], 78191), 'reconstruct_complex_type': ([0], 78183), 'make_vector_type': ([], 78191), 'build_vector_type_for_mode': ([1, 2], 78179), 'build_opaque_vector_type': ([], 78191), 'initializer_zerop': ([], 78191), 'build_omp_clause': ([], 78191), 'build_call_list': ([], 78191), 'build_call_valist': ([], 78191), 'build_call_array_loc': ([], 78191), 'build_call_vec': ([], 78191), 'range_in_array_bounds_p': ([], 78191), 'is_global_var': ([], 78191), 'needs_to_live_in_memory': ([0], 78188), 'find_compatible_field': ([], 78191), 'int_cst_value': ([], 78191), 'widest_int_cst_value': ([], 78191), 'signed_or_unsigned_type_for': ([0], 78186), 'upper_bound_in_type': ([], 78191), 'lower_bound_in_type': ([], 78191), 'num_ending_zeros': ([], 78191), 'call_expr_arglist': ([], 78191), 'create_artificial_label': ([], 78191), 'function_args_iter_init': ([], 78191), 'function_args_iter_next': ([], 78191), 'stdarg_p': ([], 78191), 'block_nonartificial_location': ([], 78191), 'tree_nonartificial_location': ([], 78191), 'block_ultimate_origin': ([], 78191), 'list_equal_p': ([], 78191), 'tree_sign_nop_conversion': ([], 78191), 'tree_strip_sign_nop_conversions': ([12, 13], 78186), 'gt_ggc_m_P9type_hash4htab': ([3, 4], 78184), 'gt_pch_p_P9type_hash4htab': ([4], 78186), 'gt_pch_n_P9type_hash4htab': ([3, 4], 78184), 'VEC_tree_base_pop': ([], 78191), 'add_tree_to_fld_list': ([], 78191), 'fld_worklist_push': ([], 78191), 'find_decls_types_r': ([], 78191), 'find_decls_types': ([], 78191), 'get_eh_types_for_runtime': ([], 78191), 'find_decls_types_in_eh_region': ([], 78191), 'ehr_next': ([], 78191), 'gsi_stmt': ([], 78191), 'bb_seq': ([], 78191), 'gsi_start_bb': ([], 78191), 'gimple_ops': ([], 78191), 'gimple_op': ([], 78191), 'find_decls_types_in_node': ([], 78191), 'free_lang_data_in_block': ([], 78191), 'free_lang_data_in_decl': ([1], 78188), 'free_lang_data_in_binfo': ([], 78191), 'free_lang_data_in_type': ([], 78191), 'free_lang_data_in_cgraph': ([], 78191)}, "PosixPath('602/c-aux-info.bc')": {'deserves_ellipsis': ([], 3281), 'affix_data_type': ([], 3281), 'gen_decl': ([0], 3265), 'gen_type': ([5], 3272), 'gen_formal_list_for_func_def': ([], 3281), 'gen_aux_info_record': ([], 3281)}, "PosixPath('602/ggc-common.bc')": {'VEC_const_ggc_root_tab_t_base_space': ([], 5155), 'VEC_const_ggc_root_tab_t_heap_reserve': ([], 5155), 'VEC_const_ggc_root_tab_t_base_quick_push': ([], 5155), 'VEC_const_ggc_root_tab_t_heap_safe_push': ([], 5155), 'ggc_register_root_tab': ([], 5155), 'VEC_const_ggc_cache_tab_t_base_space': ([], 5155), 'VEC_const_ggc_cache_tab_t_heap_reserve': ([], 5155), 'VEC_const_ggc_cache_tab_t_base_quick_push': ([], 5155), 'VEC_const_ggc_cache_tab_t_heap_safe_push': ([], 5155), 'ggc_register_cache_tab': ([], 5155), 'VEC_const_ggc_root_tab_t_base_iterate': ([], 5155), 'VEC_const_ggc_cache_tab_t_base_iterate': ([], 5155), 'ggc_mark_roots': ([], 5155), 'gt_pch_note_object': ([], 5155), 'write_pch_globals': ([], 5155), 'call_alloc': ([], 5155), 'call_count': ([], 5155), 'gt_pch_save': ([124], 5149), 'gt_pch_restore': ([], 5155)}, "PosixPath('602/ebitmap.bc')": {'ebitmap_bit_p': ([], 7971), 'sbitmap_iter_init': ([], 7971), 'ebitmap_iter_init': ([], 7971), 'sbitmap_iter_next': ([], 7971), 'sbitmap_iter_cond': ([], 7971), 'ebitmap_iter_cond': ([], 7971), 'ebitmap_iter_next': ([], 7971), 'ebitmap_last_set_bit': ([], 7971), 'ebitmap_array_clear': ([], 7971), 'ebitmap_clear': ([], 7971), 'ebitmap_array_init': ([], 7971), 'ebitmap_alloc': ([], 7971), 'ebitmap_clear_bit': ([], 7971), 'ebitmap_array_grow': ([], 7971), 'ebitmap_array_grow_get': ([], 7971), 'ebitmap_array_get': ([], 7971), 'ebitmap_array_maybe_grow': ([], 7971), 'ebitmap_set_bit': ([0, 1, 5, 6, 7], 7949), 'ebitmap_copy': ([8], 7969), 'ebitmap_and_into': ([], 7971), 'ebitmap_and': ([], 7971), 'ebitmap_ior_into': ([42], 7951), 'ebitmap_ior': ([], 7971), 'ebitmap_and_compl_into': ([], 7971), 'ebitmap_and_compl': ([], 7971), 'ebitmap_equal_p': ([5], 7963)}, "PosixPath('602/c-format.bc')": {'init_dynamic_diag_info': ([], 60262), 'check_format_info_main': ([9, 94, 103, 123, 135], 60118), 'get_constant': ([], 60262), 'check_format_string': ([], 60262), 'handle_format_arg_attribute': ([], 60262), 'cmp_attribs': ([], 60262), 'convert_format_name_to_system_name': ([], 60262), 'decode_format_type': ([], 60262), 'decode_format_attr': ([], 60262), 'init_dollar_format_checking': ([], 60262), 'finish_dollar_format_checking': ([], 60262), 'maybe_read_dollar_number': ([], 60262), 'avoid_dollar_number': ([], 60262), 'get_flag_spec': ([], 60262), 'format_type_warning': ([], 60262), 'check_format_types': ([], 60262), 'check_format_arg': ([4], 60256), 'check_format_info': ([], 60262), 'check_function_format': ([], 60262), 'init_dynamic_asm_fprintf_info': ([], 60262), 'init_dynamic_gfc_info': ([], 60262), 'handle_format_attribute': ([2], 60245)}, "PosixPath('602/graphds.bc')": {'dump_graph': ([0], 3274), 'add_edge': ([], 3277), 'identify_vertices': ([], 3277), 'bmp_iter_set_init': ([], 3277), 'bmp_iter_set': ([], 3277), 'VEC_int_base_space': ([], 3277), 'VEC_int_heap_reserve': ([], 3277), 'VEC_int_base_quick_push': ([], 3277), 'VEC_int_heap_safe_push': ([], 3277), 'graphds_dfs': ([15], 3250), 'graphds_scc': ([], 3277), 'for_each_edge': ([0], 3270), 'free_graph': ([0], 3274), 'tree_nca': ([], 3277), 'graphds_domtree': ([17], 3273)}, "PosixPath('602/sched-rgn.bc')": {'sd_iterator_cond': ([], 28645), 'schedule_region': ([], 28645), 'haifa_find_rgns': ([], 28645), 'compute_trg_info': ([], 28645), 'sbitmap_iter_init': ([], 28645), 'ei_end_p': ([], 28645), 'ei_cond': ([], 28645), 'ei_next': ([], 28645), 'dump_region_dot': ([], 28645), 'too_large': ([], 28645), 'extend_rgns': ([65], 28632), 'debug_candidate': ([], 28645), 'contributes_to_priority': ([], 28645), 'bmp_iter_set_init': ([], 28645), 'bmp_iter_set': ([], 28645), 'deps_join': ([], 28645), 'recog_memoized': ([], 28645), 'sd_iterator_start': ([], 28645), 'debug_dependencies': ([], 28645), 'debug_rgn_dependencies': ([], 28645), 'sched_is_disabled_for_current_region_p': ([], 28645), 'free_rgn_deps': ([33], 28644), 'compute_priorities': ([45], 28643), 'single_pred_edge': ([], 28645), 'is_cfg_nonregular': ([], 28645), 'find_single_block_region': ([], 28645), 'single_succ_edge': ([], 28645), 'find_rgns': ([], 28645), 'sched_rgn_init': ([341], 28638), 'sets_likely_spilled_1': ([], 28645), 'add_branch_dependences': ([], 28645), 'propagate_deps': ([], 28645), 'compute_block_dependences': ([52], 28644), 'sched_rgn_compute_dependencies': ([108], 28642), 'compute_dom_prob_ps': ([59], 28633), 'sched_rgn_local_init': ([165], 28633), 'rgn_estimate_number_of_insns': ([], 28645), 'rgn_make_new_region_out_of_new_block': ([], 28645), 'rgn_add_block': ([], 28645), 'rgn_fix_recovery_cfg': ([], 28645), 'advance_target_bb': ([1], 28644), 'check_live_1': ([], 28645), 'check_live': ([], 28645), 'update_live_1': ([], 28645), 'update_live': ([], 28645), 'set_spec_fed': ([], 28645), 'begin_schedule_ready': ([], 28645), 'rgn_add_remove_insn': ([], 28645), 'rgn_insn_finishes_block_p': ([], 28645), 'rgn_print_insn': ([], 28645), 'rgn_rank': ([], 28645), 'is_pfree': ([], 28645), 'find_conditional_protection': ([43, 62], 28618), 'is_conditionally_protected': ([45, 70], 28596), 'is_exception_free': ([], 28645), 'new_ready': ([], 28645), 'can_schedule_ready_p': ([], 28645), 'sbitmap_iter_cond': ([], 28645), 'sbitmap_iter_next': ([], 28645), 'extract_edgelst': ([], 28645), 'split_edges': ([], 28645), 'init_ready_list': ([], 28645), 'free_block_dependencies': ([], 28645), 'schedule_insns': ([], 28645)}, "PosixPath('602/loop-unroll.bc')": {'decide_unrolling_and_peeling': ([], 15222), 'unroll_loop_constant_iterations': ([], 15222), 'VEC_int_base_quick_push': ([], 15222), 'loop_outer': ([], 15222), 'VEC_int_base_iterate': ([], 15222), 'fel_next': ([], 15222), 'fel_init': ([], 15222), 'decide_peel_once_rolling': ([], 15222), 'decide_peel_completely': ([], 15222), 'analyze_iv_to_split_insn': ([], 15222), 'referenced_in_one_insn_in_loop_p': ([], 15222), 'reset_debug_uses_in_loop': ([], 15222), 'analyze_insn_to_expand_var': ([], 15222), 'analyze_insns_in_loop': ([], 15222), 'get_ivts_expr': ([], 15222), 'allocate_basic_variable': ([], 15222), 'insert_base_initialization': ([], 15222), 'split_iv': ([], 15222), 'get_expansion': ([], 15222), 'VEC_rtx_base_space': ([], 15222), 'VEC_rtx_heap_reserve': ([], 15222), 'VEC_rtx_base_quick_push': ([], 15222), 'VEC_rtx_heap_safe_push': ([], 15222), 'expand_var_during_unrolling': ([], 15222), 'VEC_rtx_base_iterate': ([], 15222), 'insert_var_expansion_initialization': ([], 15222), 'combine_var_copies_in_loop_exit': ([], 15222), 'apply_opt_in_copies': ([], 15222), 'free_opt_info': ([9], 15217), 'VEC_edge_base_iterate': ([], 15222), 'peel_loop_completely': ([], 15222), 'peel_loops_completely': ([], 15222), 'loop_exit_at_end_p': ([], 15222), 'decide_unroll_constant_iterations': ([], 15222), 'decide_unroll_runtime_iterations': ([], 15222), 'decide_unroll_stupid': ([], 15222), 'decide_peel_simple': ([], 15222), 'peel_loop_simple': ([], 15222), 'SET_BIT': ([], 15222), 'VEC_basic_block_base_iterate': ([], 15222), 'VEC_basic_block_base_space': ([], 15222), 'VEC_basic_block_heap_reserve': ([], 15222), 'VEC_basic_block_base_quick_push': ([], 15222), 'VEC_basic_block_heap_safe_push': ([], 15222), 'single_pred_edge': ([], 15222), 'single_succ_edge': ([], 15222), 'unroll_loop_runtime_iterations': ([], 15222), 'unroll_loop_stupid': ([], 15222), 'unroll_and_peel_loops': ([], 15222)}, "PosixPath('602/cfgloopmanip.bc')": {'duplicate_loop_to_header_edge': ([], 14518), 'set_zero_probability': ([], 14518), 'single_pred_edge': ([], 14518), 'loop_outer': ([], 14518), 'single_succ_edge': ([], 14518), 'VEC_edge_base_iterate': ([], 14518), 'fix_loop_placement': ([], 14518), 'ei_end_p': ([], 14518), 'ei_cond': ([], 14518), 'ei_next': ([], 14518), 'fix_bb_placement': ([], 14518), 'fix_bb_placements': ([0, 51], 14482), 'unloop': ([], 14518), 'find_path': ([], 14518), 'VEC_basic_block_base_space': ([], 14518), 'VEC_basic_block_heap_reserve': ([], 14518), 'VEC_basic_block_base_quick_push': ([], 14518), 'VEC_basic_block_heap_safe_push': ([], 14518), 'fix_loop_placements': ([], 14518), 'remove_path': ([13, 100, 100, 106], 14478), 'VEC_loop_p_base_space': ([], 14518), 'VEC_loop_p_gc_reserve': ([], 14518), 'VEC_loop_p_base_quick_push': ([], 14518), 'VEC_loop_p_gc_safe_push': ([], 14518), 'place_new_loop': ([0], 14487), 'add_loop': ([], 14518), 'bb_seq': ([], 14518), 'gsi_last_bb': ([], 14518), 'create_empty_if_region_on_edge': ([], 14518), 'update_dominators_in_loop': ([4, 8], 14506), 'gimple_ops': ([], 14518), 'gimple_op': ([], 14518), 'gimple_cond_lhs': ([], 14518), 'gimple_set_op': ([], 14518), 'gimple_cond_set_lhs': ([], 14518), 'create_empty_loop_on_edge': ([], 14518), 'loopify': ([], 14518), 'VEC_edge_base_space': ([], 14518), 'VEC_edge_heap_reserve': ([], 14518), 'VEC_edge_base_quick_push': ([], 14518), 'VEC_edge_heap_safe_push': ([], 14518), 'bmp_iter_set_init': ([], 14518), 'bmp_iter_set': ([], 14518), 'VEC_basic_block_base_iterate': ([], 14518), 'has_preds_from_loop': ([], 14518), 'create_preheader': ([], 14518), 'VEC_int_base_quick_push': ([], 14518), 'VEC_int_base_iterate': ([], 14518), 'fel_next': ([], 14518), 'fel_init': ([], 14518), 'create_preheaders': ([], 14518), 'force_single_succ_latches': ([], 14518), 'lv_adjust_loop_entry_edge': ([], 14518), 'loop_version': ([], 14518), 'fix_loop_structure': ([216], 14517)}, "PosixPath('602/store-motion.bc')": {'remove_reachable_equiv_notes': ([73], 8183), 'st_expr_entry': ([], 8192), 'extract_mentioned_regs': ([], 8192), 'store_ops_ok': ([], 8192), 'find_loads': ([0, 1], 8186), 'store_killed_in_pat': ([], 8192), 'store_killed_in_insn': ([], 8192), 'store_killed_before': ([], 8192), 'store_killed_after': ([], 8192), 'find_moveable_store': ([], 8192), 'enumerate_store_motion_mems': ([], 8192), 'pre_st_expr_hash': ([], 8192), 'compute_store_table': ([], 8192), 'ei_end_p': ([], 8192), 'ei_next': ([], 8192), 'replace_store_insn': ([85], 8166), 'build_store_vectors': ([], 8192), 'delete_store': ([], 8192), 'ei_cond': ([], 8192), 'insert_insn_start_basic_block': ([], 8192), 'insert_store': ([], 8192), 'free_store_motion_mems': ([], 8192), 'free_store_memory': ([], 8192), 'one_store_motion_pass': ([], 8192), 'execute_rtl_store_motion': ([], 8192)}, "PosixPath('602/xstrerror.bc')": {}, "PosixPath('602/strsignal.bc')": {'init_signal_tables': ([], 1350)}, "PosixPath('602/dwarf2out.bc')": {'compute_barrier_args_size': ([48], 166365), 'loc_list_from_tree': ([4, 9, 81, 268], 166296), 'loc_descriptor': ([14], 166362), 'mem_loc_descriptor': ([2, 6, 15, 453], 166336), 'address_of_int_loc_descriptor': ([], 166376), 'add_const_value_attribute': ([6, 13, 136], 166347), 'expand_builtin_init_dwarf_reg_sizes': ([], 166376), 'get_cfa_from_loc_descr': ([], 166376), 'lookup_cfa_1': ([], 166376), 'lookup_cfa': ([], 166376), 'cfa_equal_p': ([], 166376), 'new_cfi': ([], 166376), 'new_loc_descr': ([], 166376), 'new_reg_loc_descr': ([], 166376), 'build_cfa_loc': ([], 166376), 'size_of_loc_descr': ([], 166376), 'output_loc_operands_raw': ([], 166376), 'output_loc_sequence_raw': ([], 166376), 'output_cfa_loc_raw': ([], 166376), 'output_cfi_directive': ([], 166376), 'add_fde_cfi': ([], 166376), 'def_cfa_1': ([0, 9], 166359), 'dwarf2out_def_cfa': ([], 166376), 'dwarf2out_window_save': ([], 166376), 'int_loc_descriptor': ([], 166376), 'loc_descr_plus_const': ([5], 166367), 'build_cfa_aligned_loc': ([], 166376), 'reg_save': ([], 166376), 'dwarf2out_reg_save_reg': ([], 166376), 'flush_queued_reg_saves': ([], 166376), 'clobbers_queued_reg_save': ([], 166376), 'dwarf2out_args_size': ([], 166376), 'VEC_rtx_base_quick_push': ([], 166376), 'VEC_rtx_base_pop': ([], 166376), 'stack_adjust_offset': ([], 166376), 'VEC_rtx_base_space': ([], 166376), 'VEC_rtx_heap_reserve': ([], 166376), 'VEC_rtx_heap_safe_push': ([], 166376), 'compute_barrier_args_size_1': ([2], 166375), 'dwarf2out_notice_stack_adjust': ([], 166376), 'dwarf2out_frame_debug_def_cfa': ([], 166376), 'dwarf2out_frame_debug_adjust_cfa': ([], 166376), 'dwarf2out_frame_debug_cfa_offset': ([], 166376), 'dwarf2out_frame_debug_cfa_register': ([], 166376), 'dwarf2out_frame_debug_cfa_restore': ([], 166376), 'reg_saved_in': ([], 166376), 'queue_reg_save': ([], 166376), 'dwarf2out_frame_debug_expr': ([1, 70, 82, 157], 166353), 'dwarf2out_frame_debug': ([41], 166371), 'dwarf2out_begin_epilogue': ([], 166376), 'dwarf2out_frame_debug_restore_state': ([], 166376), 'lookup_filename': ([], 166376), 'maybe_emit_file': ([3], 166375), 'dwarf2out_do_cfi_startproc': ([], 166376), 'dwarf2out_begin_prologue': ([0, 2, 11], 166347), 'initial_return_save': ([], 166376), 'dwarf2out_frame_init': ([], 166376), 'output_loc_operands': ([], 166376), 'output_loc_sequence': ([], 166376), 'output_cfa_loc': ([], 166376), 'output_cfi': ([], 166376), 'VEC_dw_cfi_ref_base_space': ([], 166376), 'VEC_dw_cfi_ref_heap_reserve_exact': ([], 166376), 'VEC_dw_cfi_ref_heap_safe_grow': ([], 166376), 'VEC_dw_cfi_ref_heap_safe_grow_cleared': ([], 166376), 'output_cfis': ([37], 166347), 'output_fde': ([], 166376), 'output_call_frame_info': ([], 166376), 'dwarf2out_switch_text_section': ([7], 166373), 'AT_loc_list': ([], 166376), 'AT_int': ([], 166376), 'AT_unsigned': ([], 166376), 'AT_flag': ([], 166376), 'AT_ref': ([], 166376), 'AT_lbl': ([], 166376), 'AT_string': ([], 166376), 'AT_file': ([], 166376), 'print_die': ([], 166376), 'get_AT': ([7], 166369), 'get_AT_unsigned': ([], 166376), 'is_fortran': ([], 166376), 'is_cxx': ([], 166376), 'decl_ultimate_origin': ([7], 166373), 'class_or_namespace_scope_p': ([], 166376), 'local_scope_p': ([], 166376), 'add_child_die': ([], 166376), 'new_die': ([], 166376), 'decl_class_context': ([], 166376), 'VEC_tree_base_space': ([], 166376), 'VEC_tree_gc_reserve': ([], 166376), 'VEC_tree_base_quick_push': ([], 166376), 'VEC_tree_gc_safe_push': ([], 166376), 'push_decl_scope': ([], 166376), 'member_declared_type': ([], 166376), 'find_AT_string': ([], 166376), 'VEC_dw_attr_node_base_space': ([], 166376), 'VEC_dw_attr_node_gc_reserve': ([], 166376), 'VEC_dw_attr_node_base_quick_push': ([], 166376), 'VEC_dw_attr_node_gc_safe_push': ([], 166376), 'add_dwarf_attr': ([], 166376), 'add_AT_string': ([], 166376), 'add_name_attribute': ([], 166376), 'add_AT_file': ([], 166376), 'add_AT_unsigned': ([], 166376), 'add_src_coords_attributes': ([], 166376), 'add_name_and_src_coords_attributes': ([], 166376), 'add_AT_die_ref': ([], 166376), 'field_type': ([], 166376), 'simple_type_size_in_bits': ([], 166376), 'add_byte_size_attribute': ([], 166376), 'add_bit_size_attribute': ([], 166376), 'simple_type_align_in_bits': ([], 166376), 'simple_decl_align_in_bits': ([], 166376), 'field_byte_offset': ([], 166376), 'add_bit_offset_attribute': ([], 166376), 'add_AT_int': ([], 166376), 'add_AT_loc': ([], 166376), 'add_data_member_location_attribute': ([], 166376), 'add_AT_flag': ([], 166376), 'equate_decl_number_to_die': ([], 166376), 'fortran_common': ([], 166376), 'add_loc_descr_to_each': ([], 166376), 'add_loc_list': ([], 166376), 'based_loc_descr': ([], 166376), 'const_ok_for_output_1': ([], 166376), 'const_ok_for_output': ([], 166376), 'VEC_rtx_gc_reserve': ([], 166376), 'VEC_rtx_gc_safe_push': ([0], 166374), 'is_based_loc': ([], 166376), 'resolve_one_addr': ([], 166376), 'is_pseudo_reg': ([], 166376), 'reference_to_unused': ([0], 166365), 'rtl_for_decl_init': ([], 166376), 'rtl_for_decl_location': ([0], 166369), 'secname_for_decl': ([], 166376), 'one_reg_loc_descriptor': ([], 166376), 'add_loc_descr_op_piece': ([], 166376), 'multiple_reg_loc_descriptor': ([], 166376), 'reg_loc_descriptor': ([], 166376), 'insert_float': ([], 166376), 'new_loc_list': ([], 166376), 'gen_internal_sym': ([], 166376), 'gen_llsym': ([], 166376), 'dw_loc_list': ([], 166376), 'dw_loc_list_1': ([16], 166373), 'cst_pool_loc_descr': ([], 166376), 'tls_mem_loc_descriptor': ([], 166376), 'loc_descriptor_from_tree': ([], 166376), 'loc_list_for_address_of_addr_expr_of_indirect_ref': ([], 166376), 'single_element_loc_list_p': ([], 166376), 'add_AT_loc_list': ([], 166376), 'add_AT_location_description': ([], 166376), 'VEC_dw_attr_node_base_ordered_remove': ([], 166376), 'remove_AT': ([], 166376), 'VEC_pubname_entry_base_space': ([], 166376), 'VEC_pubname_entry_gc_reserve': ([], 166376), 'VEC_pubname_entry_base_quick_push': ([], 166376), 'VEC_pubname_entry_gc_safe_push': ([], 166376), 'add_pubname_string': ([], 166376), 'get_AT_flag': ([], 166376), 'add_AT_specification': ([], 166376), 'get_AT_file': ([], 166376), 'decl_by_reference_p': ([], 166376), 'VEC_deferred_locations_base_space': ([], 166376), 'VEC_deferred_locations_gc_reserve': ([], 166376), 'VEC_deferred_locations_base_quick_push': ([], 166376), 'VEC_deferred_locations_gc_safe_push': ([], 166376), 'defer_location': ([], 166376), 'add_AT_vec': ([], 166376), 'add_AT_double': ([], 166376), 'native_encode_initializer': ([], 166376), 'tree_add_const_value_attribute': ([], 166376), 'tree_add_const_value_attribute_for_decl': ([], 166376), 'add_location_or_const_value_attribute': ([3], 166372), 'common_block_die_table_eq': ([], 166376), 'common_block_die_table_hash': ([], 166376), 'VEC_tree_base_pop': ([], 166376), 'remove_child_with_prev': ([], 166376), 'remove_child_TAG': ([], 166376), 'add_prototyped_attribute': ([], 166376), 'add_pure_or_virtual_attribute': ([], 166376), 'add_AT_lbl_id': ([], 166376), 'add_arange': ([], 166376), 'convert_cfa_to_fb_loc_list': ([], 166376), 'compute_frame_pointer_to_fb_displacement': ([], 166376), 'VEC_die_arg_entry_base_space': ([], 166376), 'VEC_die_arg_entry_gc_reserve': ([], 166376), 'VEC_die_arg_entry_base_quick_push': ([], 166376), 'VEC_die_arg_entry_gc_safe_push': ([], 166376), 'append_entry_to_tmpl_value_parm_die_table': ([], 166376), 'gen_unspecified_parameters_die': ([], 166376), 'is_redundant_typedef': ([9], 166371), 'get_AT_string': ([], 166376), 'add_pubtype': ([], 166376), 'base_type_die': ([0], 166372), 'dwarf2out_ignore_block': ([], 166376), 'add_ranges_num': ([0], 166372), 'add_AT_range_list': ([], 166376), 'add_high_low_attributes': ([], 166376), 'add_call_src_coords_attributes': ([], 166376), 'add_calling_convention_attribute': ([], 166376), 'scope_die_for': ([4], 166371), 'type_tag': ([], 166376), 'descr_info_loc': ([], 166376), 'add_descr_info_field': ([], 166376), 'lower_bound_default': ([], 166376), 'is_ada': ([], 166376), 'gen_enumeration_type_die': ([], 166376), 'VEC_tree_base_iterate': ([], 166376), 'get_AT_ref': ([], 166376), 'splice_child_die': ([2], 166372), 'get_context_die': ([], 166376), 'force_type_die': ([], 166376), 'modified_type_die': ([], 166376), 'gen_type_die_with_usage': ([0], 166367), 'gen_struct_or_union_type_die': ([], 166376), 'gen_array_type_die': ([], 166376), 'gen_subroutine_type_die': ([], 166376), 'gen_ptr_to_mbr_type_die': ([], 166376), 'gen_decl_die': ([25], 166371), 'declare_in_namespace': ([], 166376), 'setup_namespace_context': ([], 166376), 'force_decl_die': ([], 166376), 'gen_subprogram_die': ([], 166376), 'decls_for_scope': ([], 166376), 'gen_block_die': ([], 166376), 'process_scope_var': ([0], 166374), 'dwarf2out_imported_module_or_decl_1': ([26], 166373), 'gen_typedef_die': ([], 166376), 'gen_formal_types_die': ([], 166376), 'gen_formal_parameter_die': ([], 166376), 'dwarf2out_abstract_function': ([], 166376), 'dwarf2out_decl': ([], 166376), 'gen_type_die_for_member': ([], 166376), 'gen_variable_die': ([], 166376), 'add_abstract_origin_attribute': ([], 166376), 'gen_field_die': ([], 166376), 'gen_generic_params_dies': ([8], 166374), 'generic_parameter_die': ([7], 166372), 'subrange_type_die': ([], 166376), 'add_bound_info': ([], 166376), 'add_type_attribute': ([0], 166374), 'gt_ggc_mx_die_struct': ([], 166376), 'gt_ggc_mx_VEC_dw_attr_node_gc': ([], 166376), 'gt_ggc_mx_dw_loc_list_struct': ([], 166376), 'gt_ggc_mx_dw_loc_descr_struct': ([], 166376), 'gt_ggc_mx_comdat_type_struct': ([], 166376), 'gt_ggc_mx_VEC_dcall_entry_gc': ([], 166376), 'gt_ggc_mx_var_loc_node': ([2], 166372), 'gt_ggc_mx_VEC_die_arg_entry_gc': ([], 166376), 'gt_ggc_mx_limbo_die_struct': ([], 166376), 'gt_ggc_mx_VEC_pubname_entry_gc': ([], 166376), 'gt_ggc_mx_VEC_deferred_locations_gc': ([], 166376), 'gt_ggc_mx_queued_reg_save': ([], 166376), 'gt_ggc_mx_dw_cfi_struct': ([], 166376), 'gt_ggc_mx_dw_fde_struct': ([], 166376), 'gt_ggc_m_P10vcall_insn4htab': ([3, 4], 166369), 'gt_ggc_m_P16var_loc_list_def4htab': ([3, 4], 166369), 'gt_ggc_m_P10die_struct4htab': ([3, 4], 166369), 'gt_ggc_m_P15dwarf_file_data4htab': ([3, 4], 166369), 'gt_ggc_m_P20indirect_string_node4htab': ([3, 4], 166369), 'gt_pch_p_19dw_loc_descr_struct': ([], 166376), 'gt_pch_p_19VEC_dw_attr_node_gc': ([], 166376), 'gt_pch_nx_die_struct': ([], 166376), 'gt_pch_nx_VEC_dw_attr_node_gc': ([], 166376), 'gt_pch_nx_dw_loc_list_struct': ([], 166376), 'gt_pch_nx_dw_loc_descr_struct': ([], 166376), 'gt_pch_nx_comdat_type_struct': ([], 166376), 'gt_pch_nx_VEC_dcall_entry_gc': ([], 166376), 'gt_pch_nx_var_loc_node': ([2], 166372), 'gt_pch_nx_VEC_die_arg_entry_gc': ([], 166376), 'gt_pch_nx_limbo_die_struct': ([], 166376), 'gt_pch_nx_VEC_pubname_entry_gc': ([], 166376), 'gt_pch_nx_VEC_deferred_locations_gc': ([], 166376), 'gt_pch_nx_queued_reg_save': ([], 166376), 'gt_pch_nx_dw_cfi_struct': ([], 166376), 'gt_pch_nx_dw_fde_struct': ([], 166376), 'gt_pch_p_P10vcall_insn4htab': ([4], 166371), 'gt_pch_n_P10vcall_insn4htab': ([3, 4], 166369), 'gt_pch_p_P16var_loc_list_def4htab': ([4], 166371), 'gt_pch_n_P16var_loc_list_def4htab': ([3, 4], 166369), 'gt_pch_p_P10die_struct4htab': ([4], 166371), 'gt_pch_n_P10die_struct4htab': ([3, 4], 166369), 'gt_pch_p_P15dwarf_file_data4htab': ([4], 166371), 'gt_pch_n_P15dwarf_file_data4htab': ([3, 4], 166369), 'gt_pch_p_P20indirect_string_node4htab': ([4], 166371), 'gt_pch_n_P20indirect_string_node4htab': ([3, 4], 166369), 'gt_pch_na_fde_table': ([], 166376), 'gt_ggc_ma_fde_table': ([], 166376), 'gt_pch_na_abbrev_die_table': ([], 166376), 'gt_ggc_ma_abbrev_die_table': ([], 166376), 'gt_pch_na_arange_table': ([], 166376), 'gt_ggc_ma_arange_table': ([], 166376), 'lookup_vcall_insn': ([], 166376), 'VEC_vcall_entry_base_space': ([], 166376), 'VEC_vcall_entry_gc_reserve': ([], 166376), 'VEC_vcall_entry_base_quick_push': ([], 166376), 'VEC_vcall_entry_gc_safe_push': ([], 166376), 'dwarf2out_virtual_call': ([], 166376), 'store_vcall_insn': ([], 166376), 'dwarf2out_copy_call_info': ([], 166376), 'dwarf2out_virtual_call_token': ([], 166376), 'VEC_dcall_entry_base_space': ([], 166376), 'VEC_dcall_entry_gc_reserve': ([], 166376), 'VEC_dcall_entry_base_quick_push': ([], 166376), 'VEC_dcall_entry_gc_safe_push': ([], 166376), 'dwarf2out_direct_call': ([], 166376), 'add_var_loc_to_decl': ([], 166376), 'dwarf2out_var_location': ([], 166376), 'dwarf2out_imported_module_or_decl': ([5], 166374), 'dwarf2out_global_decl': ([], 166376), 'dwarf2out_end_source_file': ([], 166376), 'dwarf2out_start_source_file': ([], 166376), 'gen_remaining_tmpl_value_param_die_attribute': ([], 166376), 'add_comp_dir_attribute': ([], 166376), 'resolve_addr_in_expr': ([0], 166370), 'AT_loc': ([], 166376), 'resolve_addr': ([10], 166374), 'VEC_dw_attr_node_base_quick_insert': ([], 166376), 'move_linkage_attr': ([4], 166341), 'verify_marks_clear': ([], 166376), 'premark_types_used_by_global_vars_helper': ([2], 166374), 'prune_unused_types_walk': ([], 166376), 'prune_unused_types_walk_local_classes': ([], 166376), 'prune_unused_types_mark': ([], 166376), 'prune_unused_types_walk_attribs': ([], 166376), 'prune_unused_types_update_strings': ([], 166376), 'prune_unused_types_prune': ([18], 166365), 'prune_unmark_dies': ([], 166376), 'prune_indirect_string': ([], 166376), 'prune_unused_types': ([], 166376), 'is_comdat_die': ([], 166376), 'gen_compile_unit_die': ([], 166376), 'push_new_compile_unit': ([], 166376), 'is_symbol_die': ([], 166376), 'assign_symbol_names': ([], 166376), 'AT_addr': ([], 166376), 'loc_checksum': ([], 166376), 'die_checksum': ([], 166376), 'unmark_all_dies': ([], 166376), 'compute_section_prefix': ([], 166376), 'same_dw_val_p': ([], 166376), 'same_die_p': ([], 166376), 'same_die_p_wrap': ([], 166376), 'check_duplicate_cu': ([], 166376), 'break_out_includes': ([], 166376), 'should_move_die_to_comdat': ([], 166376), 'checksum_uleb128': ([], 166376), 'checksum_die_context': ([], 166376), 'add_AT_data8': ([], 166376), 'collect_checksum_attributes': ([], 166376), 'loc_checksum_ordered': ([], 166376), 'die_checksum_ordered': ([1239, 1242], 166362), 'attr_checksum_ordered': ([], 166376), 'generate_type_signature': ([], 166376), 'clone_die': ([], 166376), 'clone_as_declaration': ([], 166376), 'copy_ancestor_tree': ([], 166376), 'copy_declaration_context': ([], 166376), 'replace_child': ([], 166376), 'generate_skeleton_ancestor_tree': ([], 166376), 'generate_skeleton_bottom_up': ([], 166376), 'generate_skeleton': ([], 166376), 'remove_child_or_replace_with_skeleton': ([], 166376), 'break_out_comdat_types': ([], 166376), 'mark_dies': ([], 166376), 'copy_decls_walk': ([], 166376), 'unmark_dies': ([], 166376), 'add_sibling_attributes': ([10], 166370), 'add_AT_addr': ([], 166376), 'add_ranges_by_labels': ([0], 166355), 'output_loc_list': ([], 166376), 'output_location_lists': ([], 166376), 'add_AT_lineptr': ([], 166376), 'add_AT_macptr': ([], 166376), 'AT_ref_external': ([], 166376), 'gen_label_for_indirect_string': ([], 166376), 'AT_string_form': ([], 166376), 'value_format': ([], 166376), 'build_abbrev_table': ([19], 166374), 'size_of_die': ([], 166376), 'calc_die_sizes': ([], 166376), 'output_die_symbol': ([], 166376), 'output_die': ([], 166376), 'output_comp_unit': ([], 166376), 'output_comdat_type_unit': ([], 166376), 'output_abbrev_section': ([], 166376), 'size_of_pubnames': ([], 166376), 'output_pubnames': ([], 166376), 'size_of_dcall_table': ([], 166376), 'output_dcall_table': ([], 166376), 'size_of_vcall_table': ([], 166376), 'output_vcall_table': ([], 166376), 'get_AT_low_pc': ([], 166376), 'get_AT_hi_pc': ([], 166376), 'output_aranges': ([], 166376), 'output_ranges': ([], 166376), 'output_indirect_string': ([], 166376), 'dwarf2out_finish': ([92], 166374)}, "PosixPath('602/c-pragma.bc')": {'maybe_apply_pending_pragma_weaks': ([], 11635), 'push_alignment': ([], 11635), 'apply_pragma_weak': ([], 11635), 'maybe_apply_pragma_weak': ([0], 11620), 'maybe_apply_renaming_pragma': ([], 11635), 'VEC_int_base_space': ([], 11635), 'VEC_int_heap_reserve': ([], 11635), 'VEC_int_base_quick_push': ([], 11635), 'VEC_int_heap_safe_push': ([], 11635), 'push_visibility': ([], 11635), 'VEC_int_base_last': ([], 11635), 'VEC_int_base_pop': ([], 11635), 'pop_visibility': ([], 11635), 'c_pp_lookup_pragma': ([], 11635), 'VEC_pragma_ns_name_base_space': ([], 11635), 'VEC_pragma_ns_name_heap_reserve': ([], 11635), 'VEC_pragma_ns_name_base_quick_push': ([], 11635), 'VEC_pragma_ns_name_heap_safe_push': ([], 11635), 'VEC_pragma_handler_base_space': ([], 11635), 'VEC_pragma_handler_heap_reserve': ([], 11635), 'VEC_pragma_handler_base_quick_push': ([], 11635), 'VEC_pragma_handler_heap_safe_push': ([], 11635), 'c_register_pragma_1': ([], 11635), 'handle_pragma_message': ([], 11635), 'handle_pragma_extern_prefix': ([], 11635), 'handle_pragma_redefine_extname': ([], 11635), 'handle_stdc_pragma': ([], 11635), 'handle_pragma_float_const_decimal64': ([], 11635), 'handle_pragma_reset_options': ([], 11635), 'handle_pragma_pop_options': ([], 11635), 'handle_pragma_optimize': ([], 11635), 'handle_pragma_target': ([], 11635), 'handle_pragma_diagnostic': ([], 11635), 'handle_pragma_visibility': ([], 11635), 'handle_pragma_weak': ([], 11635), 'pop_alignment': ([], 11635), 'handle_pragma_pack': ([], 11635), 'init_pragma': ([], 11635), 'gt_ggc_mx_opt_stack': ([], 11635), 'gt_ggc_mx_align_stack': ([], 11635), 'gt_pch_nx_opt_stack': ([], 11635), 'gt_pch_nx_align_stack': ([], 11635), 'handle_pragma_push_options': ([], 11635)}, "PosixPath('602/cfgloop.bc')": {'flow_loop_nodes_find': ([], 15165), 'init_loops_structure': ([], 15165), 'rescan_loop_exit': ([], 15165), 'record_loop_exits': ([], 15165), 'merge_latch_edges': ([], 15165), 'flow_loop_nested_p': ([], 15165), 'superloop_at_depth': ([], 15165), 'ei_end_p': ([], 15165), 'ei_cond': ([], 15165), 'VEC_edge_base_space': ([], 15165), 'VEC_edge_heap_reserve': ([], 15165), 'VEC_edge_base_quick_push': ([], 15165), 'VEC_edge_heap_safe_push': ([], 15165), 'ei_next': ([], 15165), 'get_loop_latch_edges': ([], 15165), 'VEC_edge_base_iterate': ([], 15165), 'loop_outer': ([], 15165), 'get_loop_body': ([1], 15162), 'flow_loop_dump': ([], 15165), 'VEC_int_base_quick_push': ([], 15165), 'VEC_int_base_iterate': ([], 15165), 'fel_next': ([], 15165), 'fel_init': ([], 15165), 'flow_loops_cfg_dump': ([], 15165), 'flow_loops_dump': ([], 15165), 'flow_loop_free': ([], 15165), 'VEC_loop_p_base_iterate': ([], 15165), 'flow_loops_free': ([1], 15162), 'VEC_basic_block_base_space': ([], 15165), 'VEC_basic_block_heap_reserve': ([], 15165), 'VEC_basic_block_base_quick_push': ([], 15165), 'VEC_basic_block_heap_safe_push': ([], 15165), 'VEC_basic_block_base_pop': ([], 15165), 'VEC_loop_p_base_space': ([], 15165), 'VEC_loop_p_gc_reserve': ([], 15165), 'VEC_loop_p_base_quick_push': ([], 15165), 'establish_preds': ([], 15165), 'flow_loop_tree_node_remove': ([], 15165), 'alloc_loop': ([], 15165), 'flow_bb_inside_loop_p': ([], 15165), 'flow_loops_find': ([45], 15162), 'find_subloop_latch_edge_by_profile': ([], 15165), 'gsi_stmt': ([], 15165), 'find_subloop_latch_edge_by_ivs': ([], 15165), 'find_subloop_latch_edge': ([], 15165), 'form_subloop': ([], 15165), 'disambiguate_multiple_latches': ([], 15165), 'disambiguate_loops_with_multiple_latches': ([], 15165), 'get_loop_body_in_dom_order': ([2], 15162), 'get_loop_body_in_bfs_order': ([], 15165), 'find_common_loop': ([], 15165), 'loop_exit_free': ([], 15165), 'dump_recorded_exit': ([], 15165), 'release_recorded_exits': ([], 15165), 'get_loop_exit_edges': ([18], 15154), 'num_loop_branches': ([], 15165), 'add_bb_to_loop': ([], 15165), 'remove_bb_from_loops': ([], 15165), 'cancel_loop': ([], 15165), 'cancel_loop_tree': ([], 15165), 'single_succ_edge': ([], 15165), 'loop_latch_edge': ([], 15165), 'get_exit_descriptions': ([], 15165), 'verify_loop_structure': ([117, 219, 222], 15116), 'loop_preheader_edge': ([], 15165), 'loop_exit_edge_p': ([], 15165), 'single_exit': ([], 15165), 'is_loop_exit': ([0], 15152)}, "PosixPath('602/xstrdup.bc')": {}, "PosixPath('602/bitmap.bc')": {'bitmap_obstack_free': ([], 13328), 'bitmap_elt_clear_from': ([], 13328), 'bitmap_obstack_initialize': ([], 13328), 'bitmap_obstack_release': ([], 13328), 'bitmap_initialize_stat': ([], 13328), 'bitmap_obstack_alloc_stat': ([4], 13322), 'bitmap_gc_alloc_stat': ([], 13328), 'bitmap_element_allocate': ([0, 1, 6], 12524), 'bitmap_copy': ([18], 13324), 'bitmap_find_bit': ([], 13328), 'bitmap_element_zerop': ([], 13328), 'bitmap_elem_to_freelist': ([], 13328), 'bitmap_element_free': ([], 13328), 'bitmap_clear_bit': ([], 13328), 'bitmap_element_link': ([], 13328), 'bitmap_set_bit': ([], 13328), 'bitmap_bit_p': ([], 13328), 'bitmap_count_bits': ([], 13328), 'bitmap_first_set_bit': ([], 13328), 'bitmap_last_set_bit': ([], 13328), 'bitmap_elt_insert_after': ([], 13328), 'bitmap_and': ([], 13328), 'bitmap_and_into': ([], 13328), 'bitmap_elt_copy': ([], 13328), 'bitmap_and_compl': ([3, 4], 13311), 'bitmap_and_compl_into': ([2], 13326), 'bitmap_set_range': ([12], 13323), 'bitmap_clear_range': ([], 13328), 'bitmap_compl_and_into': ([1], 13315), 'bitmap_elt_ior': ([1, 2], 13316), 'bitmap_ior': ([0], 13324), 'bitmap_ior_into': ([], 13328), 'bitmap_xor': ([3, 4], 13324), 'bitmap_xor_into': ([4], 13326), 'bitmap_equal_p': ([], 13328), 'bitmap_intersect_p': ([], 13328), 'bitmap_intersect_compl_p': ([], 13328), 'bitmap_ior_and_compl': ([], 13328), 'bitmap_ior_and_compl_into': ([], 13328), 'bitmap_ior_and_into': ([46], 13305), 'debug_bitmap_file': ([], 13328), 'bmp_iter_set_init': ([], 13328), 'bmp_iter_set': ([], 13328), 'bitmap_print': ([], 13328), 'bitmap_hash': ([], 13328)}, "PosixPath('602/caller-save.bc')": {'reg_save_code': ([13, 18], 9480), 'recog_memoized': ([], 9514), 'init_caller_save': ([], 9514), 'init_save_areas': ([], 9514), 'mark_set_regs': ([], 9514), 'new_saved_hard_reg': ([], 9514), 'bmp_iter_set_init': ([], 9514), 'bmp_iter_set': ([], 9514), 'saved_hard_reg_compare_func': ([], 9514), 'setup_save_areas': ([308], 9512), 'mark_referenced_regs': ([12], 9509), 'add_stored_regs': ([], 9514), 'add_used_regs_1': ([], 9514), 'insert_one_insn': ([], 9514), 'insert_restore': ([], 9514), 'insert_save': ([], 9514), 'replace_reg_with_saved_mem': ([8, 9], 9510), 'add_to_hard_reg_set': ([], 9514), 'mark_reg_as_referenced': ([], 9514), 'save_call_clobbered_regs': ([55], 9509)}, "PosixPath('602/tree-vect-generic.bc')": {'bb_seq': ([], 6358), 'gsi_start_bb': ([], 6358), 'gsi_stmt': ([], 6358), 'gimple_ops': ([], 6358), 'gimple_op': ([], 6358), 'gimple_assign_rhs1': ([], 6358), 'gimple_assign_rhs_code': ([], 6358), 'gimple_assign_lhs': ([], 6358), 'gimple_call_fn': ([], 6358), 'gimple_call_return_type': ([], 6358), 'gimple_expr_type': ([], 6358), 'gimple_assign_rhs2': ([], 6358), 'type_for_widest_vector_mode': ([], 6358), 'expand_vector_piecewise': ([], 6358), 'expand_vector_parallel': ([], 6358), 'expand_vector_addition': ([], 6358), 'do_negate': ([], 6358), 'do_plus_minus': ([], 6358), 'expand_vector_operation': ([], 6358), 'expand_vector_operations_1': ([], 6358), 'expand_vector_operations': ([0, 1, 2], 6288)}, "PosixPath('602/sel-sched-ir.bc')": {'insert_in_history_vect': ([], 49930), 'sel_redirect_edge_and_branch': ([], 49930), 'exchange_lv_sets': ([], 49930), 'exchange_av_sets': ([], 49930), '_xlist_add': ([], 49930), 'ilist_copy': ([], 49930), 'ilist_invert': ([], 49930), 'blist_add': ([], 49930), '_list_iter_start': ([], 49930), 'return_regset_to_pool': ([], 49930), 'vinsn_delete': ([], 49930), 'vinsn_detach': ([0], 49924), 'free_history_vect': ([], 49930), '_list_iter_remove': ([], 49930), 'av_set_iter_remove': ([], 49930), '_list_iter_next': ([], 49930), 'av_set_clear': ([], 49930), 'blist_remove': ([], 49930), 'flist_tail_init': ([], 49930), 'flist_lookup': ([], 49930), 'fence_clear': ([], 49930), 'flist_remove': ([], 49930), 'flist_clear': ([], 49930), 'def_list_add': ([], 49930), '_succ_iter_start': ([], 49930), 'VEC_edge_base_iterate': ([], 49930), 'in_current_region_p': ([], 49930), 'sel_bb_head': ([], 49930), 'sel_bb_empty_or_nop_p': ([], 49930), '_eligible_successor_edge_p': ([], 49930), 'ei_end_p': ([], 49930), 'ei_cond': ([], 49930), 'single_succ_edge': ([], 49930), 'inner_loop_header_p': ([], 49930), 'loop_outer': ([], 49930), 'VEC_edge_base_space': ([], 49930), 'VEC_edge_heap_reserve': ([], 49930), 'VEC_edge_base_quick_push': ([], 49930), 'VEC_edge_heap_safe_push': ([], 49930), 'get_loop_exit_edges_unique_dests': ([], 49930), 'VEC_edge_base_ordered_remove': ([], 49930), 'get_all_loop_exits': ([], 49930), 'ei_next': ([], 49930), '_succ_iter_cond': ([], 49930), 'init_fence_for_scheduling': ([], 49930), 'flist_add': ([], 49930), '_succ_iter_next': ([], 49930), 'init_fences': ([], 49930), 'VEC_rtx_base_block_remove': ([], 49930), 'merge_fences': ([6, 94, 114, 143], 49910), 'move_fence_to_fences': ([], 49930), 'add_to_fences': ([], 49930), 'add_clean_fence_to_fences': ([], 49930), 'VEC_rtx_gc_copy': ([], 49930), 'add_dirty_fence_to_fences': ([], 49930), 'get_regset_from_pool': ([], 49930), 'free_regset_pool': ([], 49930), 'vinsn_attach': ([], 49930), 'init_expr': ([], 49930), 'copy_expr_onside': ([], 49930), 'change_vinsn_in_expr': ([], 49930), 'VEC_sel_global_bb_info_def_base_space': ([], 49930), 'VEC_sel_global_bb_info_def_heap_reserve_exact': ([], 49930), 'VEC_sel_global_bb_info_def_heap_safe_grow': ([], 49930), 'VEC_sel_global_bb_info_def_heap_safe_grow_cleared': ([], 49930), 'sel_extend_global_bb_info': ([], 49930), 'VEC_sel_region_bb_info_def_base_space': ([], 49930), 'VEC_sel_region_bb_info_def_heap_reserve_exact': ([], 49930), 'VEC_sel_region_bb_info_def_heap_safe_grow': ([], 49930), 'VEC_sel_region_bb_info_def_heap_safe_grow_cleared': ([], 49930), 'extend_region_bb_info': ([], 49930), 'extend_bb_info': ([], 49930), 'invalidate_av_set': ([], 49930), 'VEC_sel_insn_data_def_base_space': ([], 49930), 'VEC_sel_insn_data_def_heap_reserve_exact': ([], 49930), 'VEC_sel_insn_data_def_heap_safe_grow': ([], 49930), 'VEC_sel_insn_data_def_heap_safe_grow_cleared': ([], 49930), 'extend_insn_data': ([0], 49928), 'VEC_expr_history_def_heap_copy': ([], 49930), 'copy_expr': ([], 49930), 'prepare_insn_expr': ([], 49930), 'setup_id_lhs_rhs': ([], 49930), 'maybe_downgrade_id_to_use': ([], 49930), 'setup_id_reg_sets': ([], 49930), 'init_id_from_df': ([], 49930), 'deps_init_id_note_reg_use': ([], 49930), 'deps_init_id_note_reg_clobber': ([], 49930), 'deps_init_id_note_reg_set': ([], 49930), 'deps_init_id_start_lhs': ([], 49930), 'deps_init_id_finish_insn': ([], 49930), 'deps_init_id': ([], 49930), 'vinsn_init': ([], 49930), 'vinsn_create': ([], 49930), 'eq_transformed_insns': ([], 49930), 'init_first_time_insn_data': ([], 49930), 'init_insn_data': ([], 49930), 'single_pred_edge': ([], 49930), 'cfg_preds_1': ([20], 49926), 'cfg_preds': ([], 49930), 'get_seqno_of_a_pred': ([], 49930), 'init_simplejump_data': ([], 49930), 'sel_init_new_insn': ([], 49930), 'get_nop_from_pool': ([], 49930), 'free_lv_set': ([1], 49928), 'bb_next_bb': ([], 49930), 'ei_safe_edge': ([], 49930), 'move_bb_info': ([], 49930), 'remove_bb_from_region': ([], 49930), 'delete_and_free_basic_block': ([1], 49927), 'sel_remove_bb': ([], 49930), 'remove_empty_bb': ([2, 6], 49923), 'sel_remove_empty_bb': ([], 49930), 'considered_for_pipelining_p': ([], 49930), 'change_loops_latches': ([], 49930), 'sel_recompute_toporder': ([], 49930), 'maybe_tidy_empty_bb': ([], 49930), 'jump_leads_only_to_bb_p': ([], 49930), 'sel_remove_insn': ([], 49930), 'tidy_control_flow': ([], 49930), 'return_nop_to_pool': ([], 49930), 'recog_memoized': ([], 49930), 'create_insn_rtx_from_pattern': ([], 49930), 'create_copy_of_insn_rtx': ([], 49930), 'create_vinsn_from_insn_rtx': ([], 49930), 'vinsn_copy': ([], 49930), 'vinsn_cond_branch_p': ([], 49930), 'sel_insn_rtx_cost': ([], 49930), 'sel_vinsn_cost': ([], 49930), 'sel_gen_insn_from_expr_after': ([], 49930), 'sel_move_insn': ([], 49930), 'skip_unspecs_callback': ([], 49930), 'vinsn_equal_p': ([], 49930), 'find_in_history_vect_1': ([], 49930), 'bmp_iter_set_init': ([], 49930), 'bmp_iter_set': ([], 49930), 'find_in_history_vect': ([], 49930), 'VEC_expr_history_def_base_space': ([], 49930), 'VEC_expr_history_def_heap_reserve': ([], 49930), 'VEC_expr_history_def_base_quick_insert': ([], 49930), 'VEC_expr_history_def_heap_safe_insert': ([], 49930), 'update_target_availability': ([], 49930), 'expr_dest_regno': ([], 49930), 'speculate_expr': ([], 49930), 'update_speculative_bits': ([], 49930), 'merge_expr_data': ([], 49930), 'merge_expr': ([], 49930), 'av_set_lookup': ([], 49930), 'set_unavailable_target_for_expr': ([], 49930), 'mark_unavailable_targets': ([], 49930), 'av_set_add': ([], 49930), 'av_set_lookup_other_equiv_expr': ([], 49930), 'merge_with_other_exprs': ([], 49930), 'av_set_copy': ([], 49930), 'av_set_union_and_clear': ([], 49930), '_list_iter_remove_nofree': ([], 49930), 'av_set_add_nocopy': ([], 49930), 'av_set_union_and_live': ([], 49930), 'av_set_leave_one_nonspec': ([14], 49904), 'av_set_substract_cond_branches': ([], 49930), 'av_set_split_usefulness': ([], 49930), 'av_set_intersect': ([], 49930), 'free_data_for_scheduled_insn': ([], 49930), 'init_global_and_expr_for_insn': ([0], 49925), 'sel_init_global_and_expr': ([], 49930), 'VEC_basic_block_base_quick_push': ([], 49930), 'finish_insns': ([], 49930), 'finish_global_and_expr_insn': ([], 49930), 'sel_finish_global_and_expr': ([], 49930), 'sel_mark_hard_insn': ([], 49930), 'has_dependence_note_reg_use': ([], 49930), 'has_dependence_note_reg_clobber': ([], 49930), 'has_dependence_note_reg_set': ([], 49930), 'has_dependence_p': ([], 49930), 'tick_check_dep_with_dw': ([], 49930), 'tick_check_p': ([1], 49921), 'get_dest_and_mode': ([], 49930), 'sel_num_cfg_preds_gt_1': ([], 49930), 'bookkeeping_can_be_created_if_moved_through_p': ([], 49930), 'sel_is_loop_preheader_p': ([], 49930), 'purge_empty_blocks': ([], 49930), 'get_seqno_by_preds': ([], 49930), 'df_lr_get_bb_info': ([], 49930), 'init_lv_set': ([], 49930), 'init_lv_sets': ([], 49930), 'free_lv_sets': ([], 49930), 'exchange_data_sets': ([], 49930), 'copy_data_sets': ([3, 9], 49919), 'get_av_level': ([], 49930), 'fallthru_bb_of_jump': ([], 49930), 'sel_init_bbs': ([], 49930), 'sel_restore_notes': ([], 49930), 'VEC_basic_block_base_space': ([], 49930), 'VEC_basic_block_heap_reserve': ([], 49930), 'VEC_basic_block_heap_safe_push': ([], 49930), 'sel_create_new_region': ([], 49930), 'VEC_basic_block_base_iterate': ([], 49930), 'sel_add_block_to_region': ([], 49930), 'make_region_from_loop_preheader': ([], 49930), 'sel_remove_loop_preheader': ([74], 49924), 'sel_finish_bbs': ([119], 49924), 'sel_insn_has_single_succ_p': ([], 49930), 'VEC_int_base_block_remove': ([], 49930), 'free_succs_info': ([1], 49928), 'alloc_succs_info': ([], 49930), 'VEC_rtx_base_space': ([], 49930), 'VEC_rtx_heap_reserve': ([], 49930), 'VEC_rtx_base_quick_push': ([], 49930), 'VEC_rtx_heap_safe_push': ([], 49930), 'VEC_int_base_space': ([], 49930), 'VEC_int_heap_reserve': ([], 49930), 'VEC_int_base_quick_push': ([], 49930), 'VEC_int_heap_safe_push': ([], 49930), 'compute_succs_info': ([], 49930), 'bb_ends_ebb_p': ([], 49930), 'in_same_ebb_p': ([], 49930), 'clear_outdated_rtx_info': ([], 49930), 'free_sched_pools': ([], 49930), 'recompute_rev_top_order': ([12], 49925), 'find_place_to_insert_bb': ([], 49930), 'add_block_to_current_region': ([], 49930), 'sel_add_bb': ([], 49930), 'sel_split_edge': ([], 49930), 'copy_lv_set_from': ([], 49930), 'sel_create_recovery_block': ([], 49930), 'sel_create_empty_bb': ([], 49930), 'VEC_rtx_base_pop': ([], 49930), 'get_bb_note_from_pool': ([], 49930), 'sel_create_basic_block': ([], 49930), 'sel_split_block': ([], 49930), 'sel_register_cfg_hooks': ([], 49930), 'setup_nop_and_exit_insns': ([], 49930), 'setup_nop_vinsn': ([], 49930), 'free_nop_vinsn': ([], 49930), 'sel_estimate_number_of_insns': ([], 49930), 'sel_setup_sched_infos': ([], 49930), 'get_loop_nest_for_rgn': ([], 49930), 'VEC_loop_p_base_iterate': ([], 49930), 'VEC_int_base_iterate': ([], 49930), 'fel_next': ([], 49930), 'fel_init': ([], 49930), 'sel_finish_pipelining': ([], 49930), 'bb_top_order_comparator': ([], 49930), 'make_region_from_loop': ([], 49930), 'VEC_loop_p_base_space': ([], 49930), 'VEC_loop_p_heap_reserve': ([], 49930), 'VEC_loop_p_base_quick_push': ([], 49930), 'VEC_loop_p_heap_safe_push': ([], 49930), 'make_regions_from_loop_nest': ([], 49930), 'make_regions_from_the_rest': ([], 49930), 'sel_find_rgns': ([70], 49923), 'sel_add_loop_preheaders': ([], 49930), 'setup_id_for_insn': ([], 49930)}, "PosixPath('602/graphite-sese-to-poly.bc')": {}, "PosixPath('602/toplev.bc')": {'announce_function': ([], 28909), 'wrapup_global_declaration_1': ([0], 28906), 'wrapup_global_declaration_2': ([3], 28905), 'check_global_declaration_1': ([], 28909), 'emit_debug_global_declarations': ([], 28909), 'warn_deprecated_use': ([], 28909), 'setup_core_dumping': ([], 28909), 'decode_d_option': ([], 28909), 'option_affects_pch_p': ([], 28909), 'default_get_pch_validity': ([], 28909), 'default_pch_valid_p': ([], 28909), 'default_tree_printer': ([], 28909), 'general_init': ([], 28909), 'init_local_tick': ([], 28909), 'print_switch_values': ([], 28909), 'process_options': ([], 28909), 'init_asm_output': ([], 28909), 'lang_dependent_init': ([], 28909), 'compile_file': ([], 28909), 'finalize': ([], 28909), 'do_compile': ([], 28909), 'toplev_main': ([], 28909)}, "PosixPath('602/tree-scalar-evolution.bc')": {'chrec_is_positive': ([], 22550), 'initialize_scalar_evolutions_analyzer': ([], 22550), 'tree_operand_length': ([], 22550), 'chrec_contains_symbols_defined_in_loop': ([], 22550), 'get_chrec_loop': ([], 22550), 'number_of_latch_executions': ([], 22550), 'get_instantiated_value': ([], 22550), 'new_scev_info_str': ([], 22550), 'set_instantiated_value': ([], 22550), 'find_var_scev_info': ([], 22550), 'gimple_ops': ([], 22550), 'gimple_op': ([], 22550), 'gimple_assign_lhs': ([], 22550), 'gimple_assign_rhs1': ([], 22550), 'gimple_assign_rhs_code': ([], 22550), 'gimple_assign_rhs2': ([], 22550), 'analyze_initial_condition': ([], 22550), 'build_polynomial_chrec': ([], 22550), 'add_to_evolution_1': ([], 22550), 'add_to_evolution': ([], 22550), 'gimple_call_fn': ([], 22550), 'gimple_call_return_type': ([], 22550), 'gimple_expr_type': ([], 22550), 'set_scalar_evolution': ([], 22550), 'gsi_stmt': ([], 22550), 'loop_closed_phi_def': ([], 22550), 'eq_scev_info': ([], 22550), 'follow_ssa_edge': ([], 22550), 'follow_ssa_edge_inner_loop_phi': ([], 22550), 'follow_ssa_edge_expr': ([], 22550), 'follow_ssa_edge_binary': ([], 22550), 'analyze_scalar_evolution': ([], 22550), 'analyze_scalar_evolution_1': ([], 22550), 'interpret_condition_phi': ([], 22550), 'interpret_loop_phi': ([1], 22529), 'interpret_gimple_assign': ([1], 22524), 'interpret_rhs_expr': ([], 22550), 'compute_overall_effect_of_inner_loop': ([], 22550), 'instantiate_scev_r': ([], 22550), 'instantiate_scev_1': ([], 22550), 'instantiate_scev_2': ([], 22550), 'instantiate_scev_3': ([], 22550), 'instantiate_scev_poly': ([], 22550), 'instantiate_scev_name': ([], 22550), 'evolution_function_is_affine_p': ([], 22550), 'gather_chrec_stats': ([], 22550), 'gather_stats_on_scev_database': ([], 22550), 'VEC_int_base_quick_push': ([], 22550), 'loop_outer': ([], 22550), 'VEC_int_base_iterate': ([], 22550), 'fel_next': ([], 22550), 'fel_init': ([], 22550), 'scev_initialize': ([], 22550), 'scev_reset': ([], 22550), 'analyze_scalar_evolution_in_loop': ([], 22550), 'simple_iv': ([], 22550), 'VEC_gimple_base_space': ([], 22550), 'VEC_gimple_heap_reserve': ([], 22550), 'VEC_gimple_base_quick_push': ([], 22550), 'VEC_gimple_heap_safe_push': ([], 22550), 'get_exit_conditions_rec': ([], 22550), 'VEC_gimple_base_iterate': ([], 22550), 'analyze_scalar_evolution_for_all_loop_phi_nodes': ([], 22550), 'number_of_iterations_for_all_loops': ([], 22550), 'scev_analysis': ([2, 22], 22545), 'expression_expensive_p': ([], 22550), 'bmp_iter_set_init': ([], 22550), 'bmp_iter_set': ([], 22550), 'bb_seq': ([], 22550), 'gsi_start_bb': ([], 22550), 'gsi_after_labels': ([], 22550), 'scev_const_prop': ([], 22550), 'gt_ggc_mx_scev_info_str': ([], 22550), 'gt_ggc_m_P13scev_info_str4htab': ([3, 4], 22543), 'gt_pch_nx_scev_info_str': ([], 22550), 'gt_pch_p_P13scev_info_str4htab': ([4], 22545), 'gt_pch_n_P13scev_info_str4htab': ([3, 4], 22543)}, "PosixPath('602/c-common.bc')": {'handle_aligned_attribute': ([1], 158861), 'c_addr_space_name': ([], 158864), 'start_fname_decls': ([], 158864), 'finish_fname_decls': ([], 158864), 'fname_as_string': ([], 158864), 'fname_decl': ([], 158864), 'fix_string_type': ([], 158864), 'decl_constant_value_for_optimization': ([], 158864), 'overflow_warning': ([], 158864), 'c_fully_fold_internal': ([0, 1, 31, 295], 158808), 'c_fully_fold': ([], 158864), 'warn_logical_operator': ([], 158864), 'strict_aliasing_warning': ([], 158864), 'check_main_parameter_types': ([], 158864), 'vector_targets_convertible_p': ([], 158864), 'vector_types_convertible_p': ([], 158864), 'c_common_signed_or_unsigned_type': ([23], 158863), 'shorten_binary_op': ([3, 27], 158857), 'tree_operand_length': ([], 158864), 'conversion_warning': ([2, 3, 52], 158848), 'warnings_for_convert_and_check': ([], 158864), 'convert_and_check': ([], 158864), 'warning_candidate_p': ([], 158864), 'new_tlist': ([], 158864), 'warn_for_collisions_1': ([], 158864), 'warn_for_collisions': ([], 158864), 'merge_tlist': ([], 158864), 'add_tlist': ([], 158864), 'init_call_expr_arg_iterator': ([], 158864), 'next_call_expr_arg': ([], 158864), 'first_call_expr_arg': ([], 158864), 'verify_tree': ([0, 1, 3], 158850), 'verify_sequence_points': ([], 158864), 'c_common_type_for_size': ([], 158864), 'c_common_type_for_mode': ([], 158864), 'c_common_fixed_point_type_for_size': ([], 158864), 'c_build_bitfield_integer_type': ([], 158864), 'shorten_compare': ([0], 158863), 'pointer_int_sum': ([25], 158860), 'c_wrap_maybe_const': ([], 158864), 'c_save_expr': ([], 158864), 'decl_with_nonnull_addr_p': ([], 158864), 'c_common_truthvalue_conversion': ([], 158864), 'c_apply_type_quals_to_decl': ([], 158864), 'c_type_hash': ([], 158864), 'c_common_get_alias_set': ([0], 158858), 'c_sizeof_or_alignof_type': ([], 158864), 'c_alignof_expr': ([], 158864), 'def_fn_type': ([], 158864), 'builtin_function_disabled_p': ([], 158864), 'def_builtin_1': ([], 158864), 'c_define_builtins': ([], 158864), 'c_common_nodes_and_builtins': ([], 158864), 'set_compound_literal_name': ([], 158864), 'disable_builtin_function': ([], 158864), 'c_promoting_integer_type_p': ([], 158864), 'self_promoting_args_p': ([], 158864), 'strip_pointer_operator': ([], 158864), 'strip_pointer_or_array_types': ([], 158864), 'check_case_value': ([2], 158853), 'check_case_bounds': ([], 158864), 'c_add_case_label': ([], 158864), 'match_case_to_enum_1': ([], 158864), 'match_case_to_enum': ([], 158864), 'c_do_switch_warnings': ([], 158864), 'boolean_increment': ([], 158864), 'c_determine_visibility': ([], 158864), 'VEC_const_char_p_base_space': ([], 158864), 'VEC_const_char_p_gc_reserve': ([], 158864), 'VEC_const_char_p_base_quick_push': ([], 158864), 'VEC_const_char_p_gc_safe_push': ([], 158864), 'parse_optimize_options': ([], 158864), 'get_nonnull_operand': ([], 158864), 'nonnull_check_p': ([], 158864), 'check_function_arguments_recurse': ([0], 158861), 'check_function_nonnull': ([], 158864), 'check_function_sentinel': ([], 158864), 'check_function_arguments': ([], 158864), 'check_builtin_function_arguments': ([], 158864), 'field_decl_cmp': ([], 158864), 'resort_field_decl_cmp': ([], 158864), 'c_cpp_error': ([], 158864), 'fold_offsetof_1': ([], 158864), 'complete_array_type': ([2], 158861), 'sync_resolve_size': ([], 158864), 'sync_resolve_params': ([], 158864), 'resolve_overloaded_builtin': ([], 158864), 'warn_array_subscript_with_type_char': ([], 158864), 'warn_about_parentheses': ([], 158864), 'warn_for_unused_label': ([], 158864), 'warn_for_sign_compare': ([1, 75], 158852), 'set_underlying_type': ([], 158864), 'is_typedef_decl': ([], 158864), 'record_types_used_by_current_var_decl': ([], 158864), 'VEC_tree_gc_vec_base_pop': ([], 158864), 'make_tree_vector': ([], 158864), 'VEC_tree_gc_vec_base_space': ([], 158864), 'VEC_tree_gc_vec_gc_reserve': ([], 158864), 'VEC_tree_gc_vec_base_quick_push': ([], 158864), 'VEC_tree_gc_vec_gc_safe_push': ([], 158864), 'release_tree_vector': ([], 158864), 'VEC_tree_base_quick_push': ([], 158864), 'make_tree_vector_single': ([], 158864), 'VEC_tree_base_space': ([], 158864), 'VEC_tree_gc_reserve': ([], 158864), 'VEC_tree_base_iterate': ([], 158864), 'make_tree_vector_copy': ([], 158864), 'handle_optimize_attribute': ([], 158864), 'handle_hot_attribute': ([], 158864), 'handle_cold_attribute': ([], 158864), 'handle_alloc_size_attribute': ([], 158864), 'handle_type_generic_attribute': ([], 158864), 'handle_sentinel_attribute': ([], 158864), 'handle_nonnull_attribute': ([], 158864), 'handle_tls_model_attribute': ([4], 158833), 'handle_visibility_attribute': ([0], 158861), 'handle_vector_size_attribute': ([0], 158859), 'handle_deprecated_attribute': ([], 158864), 'handle_novops_attribute': ([], 158864), 'handle_pure_attribute': ([], 158864), 'handle_no_limit_stack_attribute': ([], 158864), 'handle_returns_twice_attribute': ([], 158864), 'handle_malloc_attribute': ([], 158864), 'handle_no_instrument_function_attribute': ([], 158864), 'handle_weakref_attribute': ([], 158864), 'handle_alias_attribute': ([], 158864), 'handle_weak_attribute': ([], 158864), 'handle_section_attribute': ([], 158864), 'handle_mode_attribute': ([], 158864), 'handle_destructor_attribute': ([], 158864), 'handle_constructor_attribute': ([], 158864), 'handle_transparent_union_attribute': ([], 158864), 'handle_const_attribute': ([], 158864), 'handle_externally_visible_attribute': ([], 158864), 'handle_unused_attribute': ([], 158864), 'handle_used_attribute': ([], 158864), 'handle_artificial_attribute': ([], 158864), 'handle_gnu_inline_attribute': ([], 158864), 'handle_always_inline_attribute': ([], 158864), 'handle_noinline_attribute': ([], 158864), 'handle_noreturn_attribute': ([], 158864), 'handle_common_attribute': ([], 158864), 'handle_nocommon_attribute': ([], 158864), 'handle_packed_attribute': ([], 158864)}, "PosixPath('602/spec_qsort/spec_qsort.bc')": {'swapfunc': ([], 2866), 'spec_qsort': ([], 2866)}}
sizes per file: {'602/diagnostic.bc:': (8222, 8235), '602/decContext.bc:': (2136, 2136), '602/alloca.bc:': (334, 334), '602/tree-ssa-loop-unswitch.bc:': (2272, 2290), '602/reload.bc:': (50727, 52201), '602/debug.bc:': (576, 576), '602/tree-chrec.bc:': (11631, 11695), '602/cgraphunit.bc:': (16845, 16969), '602/c-omp.bc:': (3232, 3241), '602/make-relative-prefix.bc:': (1514, 1581), '602/dce.bc:': (7532, 7537), '602/regcprop.bc:': (6922, 6927), '602/tree-ssa-structalias.bc:': (44798, 44969), '602/tree-dfa.bc:': (8578, 8587), '602/dbxout.bc:': (27642, 27669), '602/sese.bc:': (14913, 14931), '602/tree-ssa-ifcombine.bc:': (8070, 8111), '602/options.bc:': (114683, 114683), '602/getopt1.bc:': (0, 0), '602/graphite-poly.bc:': (0, 0), '602/print-tree.bc:': (10116, 10267), '602/unlink-if-ordinary.bc:': (146, 146), '602/double-int.bc:': (3514, 3514), '602/tree-switch-conversion.bc:': (6435, 6435), '602/langhooks.bc:': (3200, 3209), '602/tree-ssa-address.bc:': (6103, 6133), '602/tree-ssa-loop-ch.bc:': (1652, 1652), '602/regex.bc:': (25974, 27137), '602/tree-ssa.bc:': (15594, 15727), '602/safe-ctype.bc:': (1024, 1024), '602/partition.bc:': (843, 846), '602/ipa-type-escape.bc:': (13055, 13066), '602/fwprop.bc:': (9314, 9335), '602/expmed.bc:': (43207, 43697), '602/tree-ssa-operands.bc:': (9970, 10028), '602/tree-ssa-loop-im.bc:': (17622, 17643), '602/c-lang.bc:': (775, 775), '602/sdbout.bc:': (536, 536), '602/c-decl.bc:': (84328, 84874), '602/tree-ssanames.bc:': (1761, 1771), '602/insn-recog.bc:': (427812, 428016), '602/tracer.bc:': (3000, 3000), '602/bb-reorder.bc:': (11055, 11153), '602/cfgbuild.bc:': (3540, 3551), '602/sel-sched.bc:': (59936, 60118), '602/ira-emit.bc:': (9597, 9635), '602/cpp_symtab.bc:': (2844, 2848), '602/tree-ssa-uncprop.bc:': (3504, 3504), '602/vasprintf.bc:': (0, 0), '602/varray.bc:': (476, 476), '602/calls.bc:': (23208, 23277), '602/jump.bc:': (8912, 8928), '602/host-ieee64.bc:': (72, 72), '602/varasm.bc:': (48276, 48440), '602/fdmatch.bc:': (150, 150), '602/c-parser.bc:': (61339, 61492), '602/decNumber.bc:': (37754, 37977), '602/fixed-value.bc:': (9765, 9800), '602/tree-eh.bc:': (27837, 27922), '602/tree-phinodes.bc:': (3797, 3804), '602/lto-cgraph.bc:': (6145, 6151), '602/tree-ssa-threadedge.bc:': (4826, 4833), '602/tree-object-size.bc:': (11018, 11046), '602/rtl-error.bc:': (766, 766), '602/vmsdbgout.bc:': (0, 0), '602/tree-ssa-threadupdate.bc:': (5558, 5605), '602/ira-lives.bc:': (11015, 11061), '602/resource.bc:': (8622, 8678), '602/opts.bc:': (17381, 17381), '602/function.bc:': (31839, 31933), '602/cfgloopanal.bc:': (2912, 2923), '602/combine-stack-adj.bc:': (2554, 2557), '602/var-tracking.bc:': (57189, 57653), '602/md5.bc:': (3538, 3538), '602/cgraphbuild.bc:': (2289, 2300), '602/ira.bc:': (18084, 18097), '602/stor-layout.bc:': (16184, 16274), '602/cpp_directives.bc:': (17230, 17376), '602/cp-demangle.bc:': (31246, 31372), '602/genrtl.bc:': (3937, 3937), '602/ipa-prop.bc:': (18325, 18393), '602/tree-vect-stmts.bc:': (44539, 45081), '602/tree-ssa-copyrename.bc:': (2587, 2595), '602/c-semantics.bc:': (756, 756), '602/tree-ssa-math-opts.bc:': (10819, 10935), '602/pointer-set.bc:': (1611, 1621), '602/gimple.bc:': (39987, 40347), '602/stub-objc.bc:': (1156, 1156), '602/tree-loop-distribution.bc:': (10880, 10924), '602/cse.bc:': (44778, 45212), '602/tree-outof-ssa.bc:': (7538, 7544), '602/coverage.bc:': (10351, 10359), '602/sort.bc:': (274, 274), '602/rtlanal.bc:': (29868, 29939), '602/cpp_line-map.bc:': (1819, 1828), '602/tree-ssa-live.bc:': (9856, 9903), '602/lcm.bc:': (4797, 4797), '602/tree-loop-linear.bc:': (3095, 3097), '602/filename_cmp.bc:': (53, 53), '602/tree-iterator.bc:': (1491, 1499), '602/hashtab.bc:': (4900, 4904), '602/getopt.bc:': (0, 0), '602/ifcvt.bc:': (24675, 24757), '602/make-temp-file.bc:': (767, 767), '602/reorg.bc:': (164, 164), '602/cgraph.bc:': (16225, 16258), '602/c-cppbuiltin.bc:': (12733, 12751), '602/modulo-sched.bc:': (18033, 18081), '602/tree-vect-data-refs.bc:': (29321, 29405), '602/lto-symtab.bc:': (4357, 4409), '602/tree-ssa-loop-niter.bc:': (25900, 25975), '602/tree-ssa-loop.bc:': (1855, 1855), '602/reg-stack.bc:': (19989, 21138), '602/loop-init.bc:': (1494, 1497), '602/dse.bc:': (21076, 21186), '602/rtlhooks.bc:': (811, 818), '602/cpp_traditional.bc:': (7112, 7116), '602/tree-mudflap.bc:': (10447, 10468), '602/sched-vis.bc:': (8720, 8722), '602/params.bc:': (625, 625), '602/host-linux.bc:': (32, 32), '602/gimplify.bc:': (49650, 50115), '602/postreload-gcse.bc:': (8199, 8222), '602/crc32.bc:': (1117, 1117), '602/gimple-low.bc:': (5457, 5492), '602/sbitmap.bc:': (7826, 7906), '602/regmove.bc:': (7991, 7991), '602/insn-attrtab.bc:': (863321, 863321), '602/splay-tree.bc:': (2065, 2065), '602/ipa-reference.bc:': (11603, 11647), '602/tree-ssa-loop-manip.bc:': (9907, 9931), '602/cfgcleanup.bc:': (14582, 14593), '602/stringpool.bc:': (1662, 1675), '602/cpp_lex.bc:': (17806, 17847), '602/tree-ssa-loop-ivopts.bc:': (39940, 40061), '602/omega.bc:': (47801, 48143), '602/objalloc.bc:': (778, 778), '602/targhooks.bc:': (3945, 3945), '602/ira-build.bc:': (19551, 19593), '602/gimple-pretty-print.bc:': (23624, 23657), '602/optabs.bc:': (57804, 57921), '602/auto-inc-dec.bc:': (83, 83), '602/attribs.bc:': (2632, 2652), '602/dominance.bc:': (11790, 11862), '602/tree-vect-slp.bc:': (19952, 20009), '602/mcf.bc:': (8980, 8994), '602/sparseset.bc:': (2049, 2051), '602/cpp_init.bc:': (3819, 3825), '602/tree-sra.bc:': (30500, 30666), '602/tree-ssa-sink.bc:': (2872, 2902), '602/insn-peep.bc:': (0, 0), '602/c-convert.bc:': (842, 842), '602/mode-switching.bc:': (3365, 3378), '602/lrealpath.bc:': (53, 53), '602/dojump.bc:': (10260, 10336), '602/lambda-mat.bc:': (7650, 7654), '602/insn-opinit.bc:': (11939, 11939), '602/fold-const.bc:': (150416, 150981), '602/tree-vrp.bc:': (65856, 66176), '602/loop-doloop.bc:': (0, 0), '602/tree-ssa-propagate.bc:': (7320, 7339), '602/cfghooks.bc:': (10247, 10338), '602/decimal64.bc:': (12112, 12159), '602/pretty-print.bc:': (9476, 9741), '602/insn-modes.bc:': (2781, 2781), '602/cppdefault.bc:': (207, 207), '602/tree-ssa-dse.bc:': (3478, 3494), '602/lto-section-out.bc:': (3056, 3059), '602/graphite-ppl.bc:': (0, 0), '602/fopen_unlocked.bc:': (145, 145), '602/tree-tailcall.bc:': (9092, 9157), '602/tree-vect-loop.bc:': (43012, 43295), '602/tree-vect-patterns.bc:': (7559, 7616), '602/reload1.bc:': (58296, 58487), '602/graphite-dependences.bc:': (0, 0), '602/graphite-clast-to-gimple.bc:': (0, 0), '602/intl.bc:': (158, 158), '602/tree-if-conv.bc:': (7750, 7750), '602/value-prof.bc:': (16074, 16201), '602/stmt.bc:': (22413, 22607), '602/domwalk.bc:': (705, 705), '602/alias.bc:': (16523, 16613), '602/tree-data-ref.bc:': (43220, 43530), '602/emit-rtl.bc:': (34150, 34427), '602/haifa-sched.bc:': (36307, 36464), '602/graph.bc:': (2967, 2967), '602/tree-nrv.bc:': (2695, 2759), '602/sha1.bc:': (6050, 6189), '602/final.bc:': (20402, 20504), '602/getruntime.bc:': (111, 111), '602/tree-ssa-alias.bc:': (14061, 14114), '602/gimple-iterator.bc:': (4960, 4962), '602/tree-call-cdce.bc:': (5973, 5973), '602/ira-conflicts.bc:': (7591, 7621), '602/tree-stdarg.bc:': (9189, 9190), '602/tree-affine.bc:': (8284, 8296), '602/ipa-cp.bc:': (10455, 10455), '602/lto-opts.bc:': (2316, 2316), '602/loop-invariant.bc:': (13207, 13231), '602/xmalloc.bc:': (503, 503), '602/xstrndup.bc:': (120, 120), '602/lambda-code.bc:': (25302, 25364), '602/ipa.bc:': (4525, 4550), '602/cfganal.bc:': (10798, 10851), '602/physmem.bc:': (208, 208), '602/insn-emit.bc:': (361942, 362138), '602/lower-subreg.bc:': (7491, 7522), '602/cfg.bc:': (12472, 12531), '602/c-typeck.bc:': (79206, 79805), '602/tree-cfgcleanup.bc:': (6766, 6824), '602/concat.bc:': (1740, 1873), '602/cfgexpand.bc:': (30193, 30263), '602/graphite-blocking.bc:': (0, 0), '602/tree-predcom.bc:': (19045, 19091), '602/fibheap.bc:': (1944, 1944), '602/cpp_identifiers.bc:': (855, 869), '602/c-pretty-print.bc:': (18059, 18070), '602/dyn-string.bc:': (1745, 1745), '602/tree-inline.bc:': (38446, 38550), '602/tree-ssa-phiprop.bc:': (4706, 4726), '602/cpp_files.bc:': (9700, 9727), '602/insn-extract.bc:': (37844, 37844), '602/lto-streamer-in.bc:': (18749, 18762), '602/timevar.bc:': (7087, 7087), '602/profile.bc:': (9869, 9880), '602/sched-deps.bc:': (28240, 28265), '602/mkstemps.bc:': (743, 743), '602/tree-cfg.bc:': (63984, 64324), '602/explow.bc:': (8377, 8402), '602/print-rtl.bc:': (6106, 6132), '602/tree-ssa-ter.bc:': (4088, 4088), '602/spaces.bc:': (194, 194), '602/tree-complex.bc:': (15175, 15182), '602/i386-c.bc:': (3294, 3294), '602/cpp_mkdeps.bc:': (2594, 2603), '602/convert.bc:': (8798, 8815), '602/insn-automata.bc:': (149699, 149699), '602/c-pch.bc:': (3986, 3986), '602/reginfo.bc:': (9110, 9119), '602/gtype-desc.bc:': (54245, 54682), '602/bid2dpd_dpd2bid.bc:': (92005, 92005), '602/plugin.bc:': (5044, 5044), '602/decimal128.bc:': (3518, 3572), '602/lto-wpa-fixup.bc:': (1354, 1354), '602/cfgrtl.bc:': (21548, 21712), '602/dbgcnt.bc:': (2067, 2067), '602/c-objc-common.bc:': (994, 994), '602/varpool.bc:': (3614, 3645), '602/insn-output.bc:': (334740, 334740), '602/tree-ssa-ccp.bc:': (26495, 26543), '602/graphite-interchange.bc:': (0, 0), '602/cpp_charset.bc:': (13934, 13936), '602/tree-ssa-coalesce.bc:': (10221, 10224), '602/regrename.bc:': (12103, 12115), '602/hex.bc:': (305, 305), '602/version.bc:': (21, 21), '602/ipa-utils.bc:': (1221, 1221), '602/ggc-page.bc:': (7261, 7298), '602/strerror.bc:': (7502, 7502), '602/lists.bc:': (1124, 1124), '602/xmemdup.bc:': (108, 108), '602/combine.bc:': (83878, 85062), '602/ira-costs.bc:': (14089, 14188), '602/df-problems.bc:': (34525, 34604), '602/tree-ssa-copy.bc:': (7075, 7129), '602/tree-ssa-dom.bc:': (21684, 21715), '602/sreal.bc:': (1267, 1278), '602/tree-vectorizer.bc:': (1887, 1887), '602/recog.bc:': (21350, 21507), '602/decimal32.bc:': (2669, 2679), '602/lto-section-in.bc:': (2073, 2077), '602/tree-pretty-print.bc:': (22485, 22581), '602/init-regs.bc:': (783, 783), '602/expr.bc:': (74153, 74907), '602/lambda-trans.bc:': (352, 352), '602/tree-optimize.bc:': (2315, 2315), '602/tree-nested.bc:': (16787, 16837), '602/cplus-dem.bc:': (29673, 29959), '602/stack-ptr-mod.bc:': (370, 370), '602/cpp_macro.bc:': (12950, 13088), '602/obstack.bc:': (0, 0), '602/cp-demint.bc:': (880, 882), '602/bt-load.bc:': (10858, 10906), '602/sched-ebb.bc:': (3961, 3965), '602/df-scan.bc:': (35019, 35135), '602/tree-ssa-loop-prefetch.bc:': (8961, 8967), '602/prefix.bc:': (925, 926), '602/tree-ssa-sccvn.bc:': (34325, 34425), '602/regstat.bc:': (4574, 4574), '602/graphite.bc:': (103, 103), '602/mini-gmp.bc:': (33729, 33897), '602/df-core.bc:': (13353, 13370), '602/tree-ssa-pre.bc:': (37503, 37661), '602/tree-ssa-loop-ivcanon.bc:': (5437, 5457), '602/cfglayout.bc:': (8108, 8118), '602/cpp_directives-only.bc:': (1379, 1379), '602/et-forest.bc:': (2905, 2905), '602/main.bc:': (53, 53), '602/ipa-struct-reorg.bc:': (26010, 26036), '602/xatexit.bc:': (274, 274), '602/lto-streamer.bc:': (5782, 5789), '602/vec.bc:': (1599, 1599), '602/cc1-checksum.bc:': (16, 16), '602/dfp.bc:': (4505, 4508), '602/web.bc:': (2616, 2616), '602/lbasename.bc:': (79, 79), '602/ipa-pure-const.bc:': (9525, 9547), '602/tree-parloops.bc:': (17517, 17641), '602/cpp_expr.bc:': (13736, 13810), '602/passes.bc:': (14047, 14061), '602/argv.bc:': (1842, 1844), '602/alloc-pool.bc:': (893, 900), '602/floatformat.bc:': (4409, 4409), '602/ddg.bc:': (8785, 8806), '602/except.bc:': (17351, 17352), '602/tree-ssa-reassoc.bc:': (23218, 23378), '602/ira-color.bc:': (29199, 29326), '602/cpp_errors.bc:': (578, 578), '602/tree-vect-loop-manip.bc:': (16628, 16692), '602/getpwd.bc:': (342, 342), '602/simplify-rtx.bc:': (42173, 42596), '602/opts-common.bc:': (1104, 1114), '602/tree-into-ssa.bc:': (27157, 27162), '602/gcse.bc:': (26159, 26201), '602/loop-unswitch.bc:': (3710, 3713), '602/c-opts.bc:': (13392, 13393), '602/ipa-inline.bc:': (16686, 16780), '602/lto-streamer-out.bc:': (16572, 16586), '602/incpath.bc:': (3094, 3094), '602/predict.bc:': (17102, 17160), '602/tree-profile.bc:': (4318, 4318), '602/real.bc:': (23575, 23732), '602/dwarf2asm.bc:': (10111, 10111), '602/hooks.bc:': (1081, 1081), '602/matrix-reorg.bc:': (18294, 18614), '602/tree-ssa-dce.bc:': (12305, 12348), '602/postreload.bc:': (8907, 8960), '602/cselib.bc:': (13690, 13751), '602/sel-sched-dump.bc:': (11074, 11074), '602/c-errors.bc:': (534, 534), '602/c-lex.bc:': (7407, 7407), '602/df-byte-scan.bc:': (990, 990), '602/tree-dump.bc:': (9662, 9662), '602/i386.bc:': (239758, 240179), '602/integrate.bc:': (2543, 2551), '602/tree-ssa-forwprop.bc:': (19315, 19549), '602/statistics.bc:': (2392, 2397), '602/host-ieee128.bc:': (80, 80), '602/host-ieee32.bc:': (70, 70), '602/xexit.bc:': (72, 72), '602/cpp_pch.bc:': (5277, 5310), '602/c-ppoutput.bc:': (3955, 3956), '602/builtins.bc:': (74305, 74677), '602/insn-preds.bc:': (11497, 11501), '602/c-dump.bc:': (203, 203), '602/rtl.bc:': (8474, 8477), '602/loop-iv.bc:': (20336, 20565), '602/xcoffout.bc:': (0, 0), '602/graphite-scop-detection.bc:': (0, 0), '602/tree-ssa-phiopt.bc:': (10984, 11208), '602/omp-low.bc:': (58620, 58909), '602/c-gimplify.bc:': (775, 775), '602/tree.bc:': (77792, 78191), '602/c-aux-info.bc:': (3256, 3281), '602/ggc-common.bc:': (5149, 5155), '602/ebitmap.bc:': (7919, 7971), '602/c-format.bc:': (60095, 60262), '602/graphds.bc:': (3233, 3277), '602/sched-rgn.bc:': (28539, 28645), '602/loop-unroll.bc:': (15217, 15222), '602/cfgloopmanip.bc:': (14411, 14518), '602/store-motion.bc:': (8177, 8192), '602/xstrerror.bc:': (142, 142), '602/strsignal.bc:': (1350, 1350), '602/dwarf2out.bc:': (165793, 166376), '602/c-pragma.bc:': (11620, 11635), '602/cfgloop.bc:': (15080, 15165), '602/xstrdup.bc:': (109, 109), '602/bitmap.bc:': (12443, 13328), '602/caller-save.bc:': (9464, 9514), '602/tree-vect-generic.bc:': (6288, 6358), '602/sel-sched-ir.bc:': (49816, 49930), '602/graphite-sese-to-poly.bc:': (0, 0), '602/toplev.bc:': (28902, 28909), '602/tree-scalar-evolution.bc:': (22479, 22550), '602/c-common.bc:': (158696, 158864), '602/spec_qsort/spec_qsort.bc:': (2866, 2866)}
result: 7904863 vs 7933383
