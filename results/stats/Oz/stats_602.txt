counts per function per file: {"PosixPath('602/diagnostic.bc')": {'diagnostic_initialize': 44, 'build_message_string': 1, 'diagnostic_report_current_module': 81, 'trim_filename': 15, 'diagnostic_set_info_translated': 22, 'internal_error': 35, 'diagnostic_report_diagnostic': 184, 'diagnostic_action_after_output': 9, 'diagnostic_build_prefix': 35, 'verbatim': 24, 'emit_diagnostic': 69, 'inform': 35, 'inform_n': 35, 'warning': 35, 'warning_at': 35, 'pedwarn': 35, 'permerror': 35, 'error': 35, 'error_n': 35, 'error_at': 35, 'sorry': 35, 'fatal_error': 35}, "PosixPath('602/decContext.bc')": {'decContextSetStatus': 2, 'decContextDefault': 28}, "PosixPath('602/alloca.bc')": {'find_stack_direction': 1, 'C_alloca': 8}, "PosixPath('602/tree-ssa-loop-unswitch.bc')": {'number_of_loops': 2, 'VEC_loop_p_base_iterate': 2, 'VEC_int_base_quick_push': 2, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 41, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 14, 'op_iter_next_tree': 10, 'op_iter_init_tree': 19, 'gimple_ops': 1, 'gimple_op': 2, 'tree_may_unswitch_on': 48, 'single_pred_p': 1, 'single_pred_edge': 3, 'simplify_using_entry_checks': 22, 'tree_unswitch_loop': 4, 'tree_unswitch_single_loop': 61, 'tree_ssa_unswitch_loops': 61}, "PosixPath('602/reload.bc')": {'find_reloads_address': 143, 'push_reload': 1567, 'push_secondary_reload': 307, 'find_reloads': 16938, 'find_reloads_toplev': 129, 'copy_replacements': 6, 'find_reloads_subreg_address': 76, 'scratch_reload_class': 5, 'secondary_reload_class': 4, 'reload_inner_reg_of_subreg': 4, 'find_valid_class': 2, 'refers_to_mem_for_reload_p': 4, 'refers_to_regno_for_reload_p': 52, 'reg_overlap_mentioned_for_reload_p': 21, 'find_reusable_reload': 110, 'remove_address_replacements': 28, 'df_lr_get_bb_info': 3, 'hard_reg_set_here_p': 4, 'find_dummy_reload': 69, 'find_equiv_reg': 110, 'recog_memoized': 3, 'can_reload_into': 7, 'regno_ok_for_base_p': 1, 'regno_clobbered_p': 9, 'subst_reg_equivs': 10, 'copy_replacements_1': 80, 'find_inc_amount': 14, 'form_sum': 10, 'subst_indexed_address': 30, 'get_secondary_mem': 29, 'find_reloads_address_1': 370, 'find_reloads_address_part': 16, 'transfer_replacements': 2, 'operands_match_p': 46, 'decompose': 67, 'immune_p': 52, 'safe_from_earlyclobber': 2, 'skip_alternative': 2, 'alternative_allows_const_pool_ref': 2, 'push_replacement': 10, 'dup_replacements': 25, 'combine_reloads': 485, 'reload_adjust_reg_for_mode': 2, 'subst_reloads': 49, 'move_replacements': 5, 'find_replacement': 31, 'debug_reload_to_stream': 54}, "PosixPath('602/debug.bc')": {}, "PosixPath('602/tree-chrec.bc')": {'tree_fold_binomial': 44, 'get_loop': 1, 'tree_operand_length': 3, 'evolution_function_is_invariant_rec_p': 7, 'evolution_function_is_affine_p': 5, 'get_chrec_loop': 3, 'initial_condition': 2, 'hide_evolution_in_other_loops_than_loop': 12, 'build_polynomial_chrec': 3, 'chrec_convert_1': 42, 'convert_affine_scev': 7, 'chrec_fold_plus_1': 75, 'chrec_fold_multiply': 39, 'chrec_evaluate': 15, 'chrec_apply': 1, 'chrec_replace_initial_condition': 7, 'chrec_component_in_loop_num': 16, 'reset_evolution_in_loop': 26, 'eq_evolutions_p': 8, 'is_multivariate_chrec_rec': 7, 'is_multivariate_chrec': 7, 'evolution_function_is_affine_multivariate_p': 8, 'evolution_function_is_univariate_p': 13, 'nb_vars_in_chrec': 2, 'chrec_convert_aggressive': 12, 'for_each_scev_op': 1, 'scev_is_linear_expression': 8, 'evolution_function_right_is_integer_cst': 5}, "PosixPath('602/cgraphunit.bc')": {'cgraph_build_static_cdtor': 20, 'cgraph_copy_node_for_versioning': 51, 'save_inline_function_body': 83, 'init_lowered_empty_function': 12, 'cgraph_decide_is_function_needed': 75, 'cgraph_reset_node': 13, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 10, 'record_cdtor_fn': 1, 'cgraph_finalize_function': 19, 'cgraph_lower_function': 4, 'bb_seq': 2, 'gsi_start_bb': 4, 'thunk_adjust': 5, 'gimple_ops': 1, 'gimple_set_op': 2, 'single_succ_p': 1, 'single_succ_edge': 3, 'gsi_last_bb': 4, 'assemble_thunk': 112, 'cgraph_expand_function': 112, 'cgraph_process_new_functions': 13, 'gsi_stmt': 1, 'gimple_call_fndecl': 3, 'gsi_next': 1, 'verify_cgraph_node': 192, 'verify_cgraph': 4, 'build_cdtor': 2, 'cgraph_build_cdtor_fns': 9, 'process_function_and_variable_attributes': 19, 'cgraph_analyze_functions': 75, 'cgraph_materialize_clone': 37, 'gimple_vdef': 2, 'cgraph_redirect_edge_call_stmt_to_callee': 34, 'cgraph_materialize_all_clones': 84, 'cgraph_mark_functions_to_output': 45, 'cgraph_output_in_order': 28, 'cgraph_output_pending_asms': 4, 'cgraph_expand_all_functions': 2, 'cgraph_optimize': 175, 'cgraph_finalize_compilation_unit': 7, 'VEC_cgraph_edge_p_base_iterate': 2, 'update_call_expr': 8, 'cgraph_function_versioning': 61}, "PosixPath('602/c-omp.bc')": {'c_finish_omp_critical': 7, 'c_finish_omp_atomic': 6, 'check_omp_for_incr_expr': 16, 'c_finish_omp_for': 94, 'c_split_parallel_clauses': 4}, "PosixPath('602/make-relative-prefix.bc')": {'split_directories': 14, 'make_relative_prefix_1': 107}, "PosixPath('602/dce.bc')": {'marked_insn_p': 1, 'VEC_rtx_base_space': 2, 'VEC_rtx_heap_reserve': 2, 'VEC_rtx_base_quick_push': 2, 'VEC_rtx_heap_safe_push': 6, 'deletable_insn_p': 12, 'find_call_stack_args': 186, 'mark_insn': 31, 'prescan_insns_for_dce': 31, 'ei_next': 2, 'bb_has_eh_pred': 14, 'df_byte_lr_get_bb_info': 3, 'byte_dce_process_block': 144, 'df_lr_get_bb_info': 3, 'dce_process_block': 131, 'delete_corresponding_reg_eq_notes': 9, 'delete_unmarked_insns': 36, 'fast_dce': 784, 'df_scan_get_bb_info': 3, 'df_get_artificial_uses': 6, 'mark_artificial_uses': 32, 'VEC_rtx_base_pop': 2, 'mark_reg_dependencies': 15, 'rest_of_handle_ud_dce': 76}, "PosixPath('602/regcprop.bc')": {'debug_value_data': 37, 'single_pred_p': 1, 'single_pred_edge': 3, 'init_value_data': 8, 'regno_ok_for_base_p': 1, 'mode_change_ok': 2, 'maybe_mode_change': 5, 'find_oldest_value_reg': 28, 'replace_oldest_value_reg': 23, 'replace_oldest_value_addr': 20, 'free_debug_insn_changes': 8, 'kill_value_one_regno': 17, 'kill_value': 6, 'set_value_regno': 3, 'copy_value': 18, 'kill_set_value': 5, 'kill_autoinc_value': 7, 'apply_debug_insn_changes': 7, 'cprop_find_used_regs_1': 2, 'copyprop_hardreg_forward_1': 317, 'copyprop_hardreg_forward': 572}, "PosixPath('602/tree-ssa-structalias.bc')": {'heapvar_insert': 5, 'create_variable_info_for': 204, 'get_constraint_for_ptr_offset': 74, 'do_structure_copy': 213, 'get_constraint_for_ssa_var': 29, 'init_graph': 39, 'build_pred_graph': 129, 'rewrite_constraints': 47, 'solve_graph': 1230, 'condense_visit': 763, 'scc_visit': 326, 'do_complex_constraint': 318, 'dump_constraint': 10, 'VEC_constraint_t_base_iterate': 2, 'dump_constraints': 2, 'dump_constraint_edge': 21, 'dump_constraint_graph': 39, 'find': 2, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'dump_solution_for_var': 86, 'pt_solution_reset': 1, 'is_global_var': 2, 'pt_solution_set': 74, 'pt_solution_includes_global': 1, 'pt_solution_includes_1': 9, 'pt_solution_empty_p': 4, 'pt_solutions_intersect_1': 7, 'pt_solutions_same_restrict_base': 6, 'VEC_varinfo_t_base_space': 2, 'VEC_varinfo_t_heap_reserve': 2, 'VEC_varinfo_t_base_quick_push': 2, 'VEC_varinfo_t_heap_safe_push': 6, 'new_var_info': 25, 'new_constraint': 7, 'VEC_constraint_t_base_space': 2, 'VEC_constraint_t_heap_reserve': 4, 'VEC_constraint_t_base_quick_push': 2, 'VEC_constraint_t_heap_safe_push': 2, 'new_scalar_tmp_constraint_exp': 11, 'process_constraint': 11, 'init_base_vars': 83, 'init_alias_vars': 54, 'heapvar_map_eq': 6, 'type_could_have_pointers': 2, 'heapvar_map_hash': 3, 'heapvar_lookup': 4, 'get_var_ann': 2, 'gimple_referenced_vars': 1, 'alias_get_name': 7, 'var_can_have_subvars': 2, 'bitpos_of_field': 2, 'VEC_fieldoff_s_base_space': 2, 'VEC_fieldoff_s_heap_reserve': 4, 'VEC_fieldoff_s_heap_safe_push': 8, 'push_fields_onto_fieldstack': 58, 'make_constraint_from_heapvar': 11, 'fieldoff_compare': 6, 'get_vi_for_tree': 165, 'intra_create_variable_infos': 19, 'gsi_stmt': 1, 'VEC_ce_s_base_space': 2, 'VEC_ce_s_heap_reserve': 4, 'VEC_ce_s_base_quick_push': 3, 'VEC_ce_s_heap_safe_push': 10, 'do_deref': 10, 'ref_contains_array_ref': 4, 'get_constraint_for_1': 201, 'get_constraint_for_address_of': 4, 'get_constraint_for': 1, 'gimple_ops': 1, 'gimple_op': 2, 'gimple_call_fndecl': 2, 'first_or_preceding_vi_for_offset': 6, 'process_all_all_constraints': 14, 'make_constraint_to': 6, 'handle_const_call': 17, 'handle_pure_call': 8, 'handle_rhs_call': 18, 'handle_lhs_call': 32, 'first_vi_for_offset': 8, 'gimple_asm_output_op': 2, 'find_func_aliases': 731, 'gsi_next': 1, 'bb_seq': 2, 'gsi_start_bb': 7, 'add_pred_graph_edge': 2, 'add_implicit_graph_edge': 2, 'init_scc_info': 5, 'VEC_unsigned_base_last': 2, 'VEC_unsigned_base_pop': 2, 'VEC_unsigned_base_space': 2, 'VEC_unsigned_heap_reserve': 4, 'VEC_unsigned_base_quick_push': 2, 'VEC_unsigned_heap_safe_push': 11, 'equiv_class_lookup': 2, 'equiv_class_add': 2, 'label_visit': 237, 'equiv_class_label_eq': 6, 'perform_var_substitution': 413, 'unite': 3, 'merge_graph_nodes': 14, 'constraint_less': 14, 'constraint_equal': 30, 'constraint_vec_find': 2, 'VEC_constraint_t_base_quick_insert': 3, 'VEC_constraint_t_heap_safe_insert': 4, 'constraint_set_union': 69, 'merge_node_constraints': 131, 'unify_nodes': 141, 'find_equivalent_node': 13, 'add_graph_edge': 4, 'build_succ_graph': 32, 'free_scc_info': 2, 'free_var_substitution_info': 15, 'insert_into_complex': 18, 'move_complex_constraints': 26, 'unite_pointer_equivalences': 18, 'find_indirect_cycles': 7, 'remove_preds_and_fake_succs': 23, 'topo_visit': 79, 'compute_topo_order': 4, 'VEC_unsigned_base_iterate': 2, 'eliminate_indirect_cycles': 101, 'solution_set_expand': 90, 'do_ds_constraint': 145, 'do_sd_constraint': 146, 'solution_set_add': 76, 'set_union_with_increment': 82, 'free_topo_info': 1, 'solve_constraints': 1922, 'set_uids_in_ptset': 80, 'shared_bitmap_lookup': 2, 'shared_bitmap_add': 1, 'find_what_var_points_to': 292, 'VEC_varinfo_t_base_iterate': 2, 'find_what_p_points_to': 2, 'compute_points_to_sets': 56, 'delete_points_to_sets': 28, 'compute_may_aliases': 56, 'count_num_arguments': 4, 'insert_into_field_list_sorted': 10, 'create_function_info_for': 79, 'ipa_pta_execute': 103, 'gate_ipa_pta': 2}, "PosixPath('602/tree-dfa.bc')": {'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gsi_next': 1, 'renumber_gimple_stmt_uids': 18, 'renumber_gimple_stmt_uids_in_blocks': 19, 'gimple_referenced_vars': 1, 'get_var_ann': 2, 'referenced_var_check_and_insert': 9, 'add_referenced_var': 9, 'find_vars_r': 2, 'make_rename_temp': 5, 'first_htab_element': 8, 'first_referenced_var': 8, 'end_htab_p': 2, 'end_referenced_vars_p': 2, 'var_ann': 2, 'is_global_var': 2, 'may_be_aliased': 7, 'is_call_clobbered': 3, 'gimple_default_def': 22, 'dump_variable': 11, 'next_htab_element': 4, 'next_referenced_var': 2, 'dump_referenced_vars': 4, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 29, 'op_iter_next_tree': 10, 'num_ssa_operands': 1, 'collect_dfa_stats': 147, 'dump_dfa_stats': 38, 'gimple_ops': 1, 'gimple_op_ptr': 1, 'find_referenced_vars_in': 8, 'referenced_var_lookup': 5, 'set_default_def': 41, 'remove_referenced_var': 34, 'get_virtual_var': 5, 'mark_symbols_for_renaming': 6, 'find_new_referenced_vars_1': 1, 'get_ref_base_and_extent': 24, 'op_iter_next_use': 8, 'stmt_references_abnormal_ssa_name': 2, 'find_referenced_vars': 20}, "PosixPath('602/dbxout.bc')": {'dbxout_init': 38, 'dbxout_end_source_file': 6, 'dbxout_symbol': 139, 'dbxout_type': 923, 'stabstr_D': 17, 'stabstr_U': 10, 'dbxout_int': 5, 'dbxout_stab_value_internal_label': 1, 'dbxout_stab_value_internal_label_diff': 1, 'emit_pending_bincls': 20, 'emit_pending_bincls_if_required': 20, 'VEC_tree_base_iterate': 2, 'output_types_sort': 6, 'VEC_tree_base_quick_push': 2, 'output_used_types_helper': 12, 'output_used_types': 7, 'dbxout_type_index': 2, 'print_int_cst_bounds_in_octal_p': 3, 'stabstr_O': 30, 'dbxout_type_name': 6, 'dbxout_range_type': 17, 'dbxout_finish_complex_stabs': 4, 'dbxout_class_name_qualifiers': 11, 'dbxout_symbol_name': 8, 'dbxout_expand_expr': 24, 'dbxout_common_check': 20, 'dbxout_symbol_location': 64, 'dbxout_syms': 1, 'dbxout_parms': 125, 'dbxout_reg_parms': 33, 'dbxout_start_source_file': 18, 'dbxout_global_decl': 2, 'dbxout_block': 18, 'dbxout_function_end': 6, 'dbxout_function_decl': 11, 'dbxout_begin_function': 5, 'dbxout_source_line': 5, 'dbxout_typedefs': 8}, "PosixPath('602/sese.bc')": {'create_if_region_on_edge': 88, 'bb_in_sese_p': 6, 'sese_contains_loop': 1, 'VEC_loop_p_base_space': 2, 'VEC_loop_p_heap_reserve': 4, 'VEC_loop_p_base_quick_push': 2, 'VEC_loop_p_heap_safe_push': 10, 'sese_record_loop': 9, 'VEC_loop_p_base_iterate': 2, 'build_sese_loop_nests': 56, 'new_sese': 3, 'free_sese': 3, 'gsi_stmt': 1, 'sese_build_liveouts_use': 4, 'gsi_next': 1, 'ei_next': 2, 'bb_seq': 2, 'gsi_start_bb': 4, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 29, 'op_iter_next_use': 8, 'sese_build_liveouts_bb': 49, 'sese_bad_liveouts_use': 2, 'gimple_ops': 1, 'gimple_set_op': 2, 'sese_reset_debug_liveouts_bb': 12, 'sese_build_liveouts': 148, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'sese_insert_phis_for_liveouts': 153, 'new_rename_map_elt': 2, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 33, 'get_rename': 1, 'rename_variables_in_expr': 6, 'rename_nb_iterations': 59, 'VEC_tree_base_iterate': 2, 'rename_sese_parameters': 6, 'gimple_vuse_op': 2, 'get_vdef_before_sese': 33, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 15, 'sese_adjust_vphi': 8, 'sese_adjust_liveout_phis': 24, 'get_true_edge_from_guard_bb': 14, 'get_false_edge_from_guard_bb': 14, 'VEC_rename_map_elt_base_iterate': 2, 'name_defined_in_loop_p': 2, 'expr_defined_in_loop_p': 12, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'next_readonly_imm_use': 4, 'alive_after_loop': 7, 'close_phi_not_yet_inserted_p': 1, 'single_pred_p': 1, 'single_pred_edge': 3, 'VEC_rename_map_elt_base_space': 2, 'VEC_rename_map_elt_heap_reserve': 4, 'VEC_rename_map_elt_base_quick_push': 2, 'VEC_rename_map_elt_heap_safe_push': 10, 'add_loop_exit_phis': 33, 'insert_loop_close_phis': 4, 'convert_for_phi_arg': 4, 'add_guard_exit_phis': 16, 'insert_guard_phis': 6, 'single_succ_p': 1, 'single_succ_edge': 3, 'gimple_vop': 2, 'op_iter_next_def': 6, 'op_iter_init_def': 11, 'graphite_copy_stmts_from_block': 64, 'gsi_last_bb': 4, 'gsi_after_labels': 16, 'is_parameter': 1, 'gimple_call_fndecl': 2, 'VEC_tree_base_quick_push': 2, 'expand_scalar_variables_stmt': 7, 'expand_scalar_variables_expr': 17, 'expand_scalar_variables_ssa_name': 8, 'expand_scalar_variables': 14, 'rename_variables_in_stmt': 10, 'rename_variables': 24, 'copy_bb_and_scalar_dependences': 87, 'if_region_entry': 1, 'if_region_get_condition_block': 3, 'if_region_set_false_region': 37, 'set_ifsese_condition': 21, 'block_before_sese': 1, 'loop_depth': 1, 'scalar_evolution_in_region': 2}, "PosixPath('602/tree-ssa-ifcombine.bc')": {'tree_ssa_ifcombine_bb': 175, 'recognize_if_then_else': 35, 'single_pred_p': 1, 'single_pred_edge': 3, 'single_pred': 1, 'gsi_stmt': 1, 'gsi_next': 1, 'same_phi_args_p': 6, 'bb_seq': 2, 'gsi_start_bb': 7, 'gimple_vuse': 2, 'bb_no_side_effects_p': 12, 'gimple_ops': 1, 'gimple_op': 2, 'has_single_use': 4, 'get_name_for_bit_test': 8, 'recognize_single_bit_test': 1, 'ifcombine_ifandif': 48, 'ifcombine_iforif': 109, 'tree_ssa_ifcombine': 265}, "PosixPath('602/options.bc')": {'cl_optimization_save': 21591, 'cl_optimization_restore': 5537, 'cl_optimization_print': 11313, 'cl_target_option_save': 3, 'cl_target_option_restore': 4, 'cl_target_option_print': 4}, "PosixPath('602/getopt1.bc')": {}, "PosixPath('602/graphite-poly.bc')": {}, "PosixPath('602/print-tree.bc')": {'print_node': 400, 'print_node_brief': 42, 'init_call_expr_arg_iterator': 3, 'next_call_expr_arg': 4, 'first_call_expr_arg': 3, 'tree_operand_length': 3, 'tsi_next': 1, 'debug_tree': 1}, "PosixPath('602/unlink-if-ordinary.bc')": {'unlink_if_ordinary': 2}, "PosixPath('602/double-int.bc')": {'dump_double_int': 11, 'tree_to_double_int': 2, 'double_int_mul': 1, 'double_int_add': 1, 'double_int_neg': 1, 'double_int_divmod': 1, 'double_int_mod': 1, 'double_int_to_tree': 2, 'double_int_fits_to_tree_p': 2, 'double_int_split_digit': 17, 'mpz_set_double_int': 5, 'mpz_get_double_int': 12}, "PosixPath('602/tree-switch-conversion.bc')": {'gimple_ops': 1, 'gimple_op': 2, 'check_range': 4, 'single_pred_p': 1, 'single_succ_p': 1, 'single_succ_edge': 3, 'check_process_case': 16, 'gsi_stmt': 1, 'single_pred_edge': 3, 'single_pred': 1, 'gsi_next': 1, 'check_final_bb': 48, 'create_temp_arrays': 4, 'gather_default_values': 16, 'build_constructors': 50, 'build_one_array': 23, 'build_arrays': 63, 'gen_def_assigns': 4, 'bb_seq': 2, 'gsi_start_bb': 7, 'fix_phi_nodes': 6, 'gen_inbound_check': 177, 'free_temp_arrays': 6, 'process_switch': 392, 'do_switchconv': 355}, "PosixPath('602/langhooks.bc')": {'add_builtin_function_common': 8, 'lhd_warn_unused_global_decl': 5, 'lhd_set_decl_assembler_name': 16, 'lhd_decl_printable_name': 2, 'lhd_dwarf_name': 1, 'lhd_tree_dump_type_quals': 2, 'lhd_print_error_function': 42}, "PosixPath('602/tree-ssa-address.bc')": {'VEC_mem_addr_template_base_space': 2, 'VEC_mem_addr_template_gc_reserve_exact': 2, 'VEC_mem_addr_template_gc_safe_grow': 4, 'VEC_mem_addr_template_gc_safe_grow_cleared': 4, 'gen_addr_rtx': 2, 'addr_for_mem_ref': 62, 'tree_mem_ref_addr': 21, 'fixed_address_object_p': 4, 'move_fixed_address_to_symbol': 11, 'most_expensive_mult_to_index': 18, 'move_hint_to_base': 11, 'move_pointer_to_base': 4, 'add_to_parts': 5, 'addr_to_parts': 78, 'gimplify_mem_ref_parts': 2, 'create_mem_ref_raw': 23, 'create_mem_ref': 232, 'get_address_description': 5, 'copy_mem_ref_info': 3, 'maybe_fold_tmr': 80, 'dump_mem_address': 11}, "PosixPath('602/tree-ssa-loop-ch.bc')": {'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 42, 'single_succ_p': 1, 'single_pred_p': 1, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gsi_next': 1, 'should_duplicate_loop_header_p': 21, 'single_pred_edge': 3, 'gimple_ops': 1, 'gimple_op': 2, 'gimple_assign_rhs1': 2, 'gimple_assign_rhs_code': 3, 'copy_loop_headers': 239}, "PosixPath('602/regex.bc')": {'byte_re_match_2_internal': 1030, 'byte_re_compile_fastmap': 85, 'xre_set_registers': 10, 'byte_group_match_null_string_p': 45, 'byte_alt_match_null_string_p': 17, 'byte_common_op_match_null_string_p': 30, 'byte_bcmp_translate': 5, 'byte_re_search_2': 28, 'xre_search_2': 27, 'init_syntax_once': 1, 'byte_at_begline_loc_p': 2, 'byte_at_endline_loc_p': 3, 'byte_store_op1': 4, 'byte_insert_op1': 4, 'byte_compile_range': 3, 'byte_store_op2': 11, 'byte_insert_op2': 11, 'byte_regex_compile': 764, 'xre_compile_pattern': 3, 'xre_comp': 4, 'xregcomp': 34, 'xregexec': 40, 'xregfree': 8}, "PosixPath('602/tree-ssa.bc')": {'insert_debug_temp_for_var_def': 123, 'first_imm_use_on_stmt': 3, 'next_imm_use_on_stmt': 4, 'init_tree_ssa': 1, 'delete_tree_ssa': 44, 'VEC_edge_var_map_base_space': 2, 'VEC_edge_var_map_heap_reserve': 4, 'VEC_edge_var_map_base_quick_push': 3, 'VEC_edge_var_map_heap_safe_push': 10, 'redirect_edge_var_map_add': 16, 'VEC_edge_var_map_heap_copy': 2, 'redirect_edge_var_map_dup': 4, 'gsi_stmt': 1, 'gsi_next': 1, 'ssa_redirect_edge': 5, 'flush_pending_stmts': 10, 'target_for_debug_bind': 2, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'gimple_ops': 1, 'next_readonly_imm_use': 4, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'move_use_after_head': 6, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 29, 'gimple_vuse_op': 2, 'link_use_stmts_after': 43, 'first_imm_use_stmt': 14, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 8, 'gimple_set_op': 2, 'gimple_debug_bind_reset_value': 2, 'next_imm_use_stmt': 6, 'find_released_ssa_name': 1, 'op_iter_init_phidef': 2, 'op_iter_next_def': 6, 'op_iter_init_def': 11, 'insert_debug_temps_for_defs': 40, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'release_defs_bitset': 94, 'gimple_vop': 2, 'verify_ssa_name': 8, 'verify_def': 2, 'ei_next': 2, 'verify_use': 12, 'verify_phi_args': 25, 'bb_seq': 2, 'gsi_start_bb': 7, 'gimple_vdef_op': 2, 'op_iter_next_tree': 10, 'verify_ssa': 122, 'gimple_referenced_vars': 1, 'first_htab_element': 8, 'first_referenced_var': 8, 'end_htab_p': 2, 'end_referenced_vars_p': 2, 'is_global_var': 2, 'var_ann': 2, 'next_htab_element': 4, 'next_referenced_var': 1, 'useless_type_conversion_p': 114, 'tree_ssa_useless_type_conversion': 4, 'walk_use_def_chains_1': 5, 'walk_use_def_chains': 2, 'ssa_undefined_value_p': 4, 'gimple_references_memory_p': 2, 'execute_update_addresses_taken': 94, 'single_succ_p': 1, 'single_succ_edge': 3, 'single_succ': 1, 'warn_uninit': 23, 'warn_uninitialized_var': 28, 'warn_uninitialized_vars': 69, 'warn_uninitialized_phi': 2, 'execute_late_warn_uninitialized': 12}, "PosixPath('602/safe-ctype.bc')": {}, "PosixPath('602/partition.bc')": {'partition_new': 7, 'partition_union': 28, 'partition_print': 2}, "PosixPath('602/ipa-type-escape.bc')": {'ipa_type_escape_star_count_of_interesting_type': 2, 'ipa_type_escape_star_count_of_interesting_or_array_type': 2, 'type_to_consider': 2, 'get_name_of_type': 3, 'discover_unique_type': 12, 'get_canon_type': 23, 'ipa_type_escape_field_does_not_clobber_p': 7, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_next_tree': 10, 'single_ssa_tree_operand': 1, 'gimple_ops': 1, 'gimple_op': 2, 'count_stars': 2, 'VEC_tree_base_iterate': 2, 'parent_type_p': 20, 'check_cast_type': 4, 'is_malloc_result': 2, 'check_cast': 18, 'look_for_casts': 8, 'look_for_casts_stmt': 2, 'op_iter_next_use': 8, 'is_cast_from_non_pointer': 13, 'is_array_access_through_pointer_and_index': 72, 'compare_type_brand': 6, 'check_function_parameter_and_return_types': 4, 'has_proper_scope_for_analysis': 4, 'check_tree': 6, 'analyze_variable': 2, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'okay_pointer_operation': 28, 'mark_interesting_addressof': 2, 'look_for_address_of': 7, 'check_rhs_var': 5, 'gimple_call_fndecl': 2, 'check_call': 7, 'gimple_asm_output_op': 2, 'check_asm': 2, 'scan_for_refs': 11, 'gsi_next': 1, 'analyze_function': 44, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'close_type_seen': 9, 'bmp_iter_next': 2, 'close_type_exposed_parameter': 7, 'close_type_full_escape': 127, 'close_addressof_down': 54, 'type_escape_execute': 245, 'gate_type_escape_vars': 2}, "PosixPath('602/fwprop.bc')": {'propagate_rtx': 16, 'propagate_rtx_1': 157, 'VEC_df_ref_base_space': 2, 'VEC_df_ref_heap_reserve_exact': 4, 'VEC_df_ref_heap_safe_grow': 7, 'VEC_df_ref_heap_safe_grow_cleared': 7, 'VEC_df_ref_base_pop': 2, 'single_def_use_leave_block': 7, 'df_md_get_bb_info': 3, 'df_lr_get_bb_info': 3, 'VEC_df_ref_heap_reserve': 4, 'VEC_df_ref_base_quick_push': 2, 'VEC_df_ref_heap_safe_push': 10, 'df_scan_get_bb_info': 3, 'df_get_artificial_uses': 6, 'process_uses': 17, 'df_get_artificial_defs': 6, 'process_defs': 15, 'single_def_use_enter_block': 64, 'build_single_def_use_links': 45, 'fwprop_init': 48, 'loop_outer': 3, 'local_ref_killed_between_p': 10, 'single_pred_p': 1, 'single_pred_edge': 3, 'single_pred': 1, 'use_killed_between': 67, 'all_uses_available_at': 17, 'can_simplify_addr': 2, 'canonicalize_address': 8, 'forward_propagate_asm': 27, 'find_occurrence': 5, 'update_df': 37, 'try_fwprop_subst': 10, 'forward_propagate_and_simplify': 74, 'forward_propagate_subreg': 12, 'forward_propagate_into': 103, 'fwprop_addr': 25, 'fwprop': 25}, "PosixPath('602/expmed.bc')": {'choose_mult_variant': 78, 'choose_multiplier': 23, 'synth_mult': 528, 'init_expmed': 1300, 'mode_for_extraction': 1, 'check_predicate_volatile_ok': 1, 'make_tree': 31, 'expand_shift': 29, 'extract_fixed_bit_field': 14, 'extract_split_bit_field': 13, 'store_fixed_bit_field': 6, 'store_split_bit_field': 14, 'store_bit_field_1': 71, 'convert_extracted_bit_field': 1, 'extract_bit_field_1': 69, 'extract_low_bits': 8, 'expand_mult_const': 9, 'expand_mult': 47, 'emit_cstore': 14, 'emit_store_flag': 58, 'emit_store_flag_1': 19, 'emit_store_flag_force': 45, 'extract_high_half': 3, 'expand_mult_highpart_optab': 86, 'expand_mult_highpart': 30, 'expand_divmod': 421}, "PosixPath('602/tree-ssa-operands.bc')": {'init_ssa_operands': 27, 'create_vop_var': 8, 'fini_ssa_operands': 56, 'first_imm_use_on_stmt': 3, 'next_imm_use_on_stmt': 4, 'ssa_operands_active': 1, 'gimple_def_ops': 2, 'gimple_use_ops': 2, 'delink_imm_use': 5, 'free_stmt_operands': 20, 'start_ssa_stmt_operands': 5, 'gimple_ops': 1, 'gimple_asm_output_op': 2, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 3, 'gimple_vop': 2, 'add_stmt_operand': 6, 'get_expr_operands': 6, 'gimple_asm_clobber_op': 4, 'get_asm_expr_operands': 57, 'parse_ssa_operands': 2, 'gimple_vdef': 2, 'VEC_tree_base_quick_insert': 3, 'VEC_tree_heap_safe_insert': 4, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'link_imm_use_to_list': 6, 'move_use_after_head': 6, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_init_use': 34, 'gimple_vuse_op': 2, 'link_use_stmts_after': 101, 'first_imm_use_stmt': 14, 'link_imm_use': 8, 'next_imm_use_stmt': 6, 'unlink_stmt_vdef': 84, 'ssa_operand_alloc': 39, 'alloc_def': 3, 'add_def_op': 9, 'finalize_ssa_defs': 94, 'alloc_use': 3, 'link_imm_use_stmt': 2, 'add_use_op': 11, 'finalize_ssa_uses': 81, 'cleanup_build_arrays': 5, 'finalize_ssa_stmt_operands': 225, 'build_ssa_operands': 255, 'update_stmt_operands': 249, 'swap_tree_operands': 18, 'verify_imm_links': 23, 'has_zero_uses': 1, 'has_single_use': 4, 'num_imm_uses': 2, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'next_readonly_imm_use': 4, 'dump_immediate_uses_for': 13, 'dump_immediate_uses': 7}, "PosixPath('602/tree-ssa-loop-im.bc')": {'for_each_index': 5, 'gimple_vdef': 2, 'gimple_ops': 1, 'movement_possibility': 2, 'lsm_tmp_name_add': 2, 'gen_lsm_tmp_name': 8, 'get_lsm_tmp_name': 4, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gsi_next': 1, 'ei_next': 2, 'fill_always_executed_in': 19, 'tree_ssa_lim_initialize': 40, 'number_of_loops': 2, 'VEC_bitmap_base_quick_push': 2, 'VEC_htab_t_base_quick_push': 2, 'gimple_vuse': 2, 'mem_ref_alloc': 5, 'VEC_mem_ref_p_base_space': 2, 'VEC_mem_ref_p_heap_reserve': 2, 'VEC_mem_ref_p_base_quick_push': 2, 'VEC_mem_ref_p_heap_safe_push': 7, 'loop_outer': 3, 'mark_ref_stored': 6, 'VEC_mem_ref_locs_p_base_space': 2, 'VEC_mem_ref_locs_p_heap_reserve_exact': 4, 'VEC_mem_ref_locs_p_heap_safe_grow': 7, 'VEC_mem_ref_locs_p_heap_safe_grow_cleared': 7, 'VEC_mem_ref_loc_p_base_space': 2, 'VEC_mem_ref_loc_p_heap_reserve': 4, 'VEC_mem_ref_loc_p_base_quick_push': 2, 'VEC_mem_ref_loc_p_heap_safe_push': 10, 'record_mem_ref_loc': 22, 'gather_mem_refs_stmt': 81, 'VEC_int_base_quick_push': 2, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 51, 'gather_mem_refs_in_loops': 249, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_and_compl_init': 95, 'bmp_iter_and_compl': 122, 'bmp_iter_next': 2, 'add_vop_ref_mapping': 65, 'create_vop_ref_mapping_loop': 272, 'create_vop_ref_mapping': 300, 'vtoe_free': 2, 'VEC_mem_ref_locs_p_base_iterate': 2, 'VEC_mem_ref_loc_p_base_iterate': 2, 'free_mem_ref_locs': 3, 'memref_free': 16, 'analyze_memory_references': 469, 'loop_depth': 1, 'outermost_invariant_loop': 3, 'gimple_set_op': 2, 'rewrite_reciprocal': 9, 'has_single_use': 4, 'single_imm_use': 4, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 15, 'rewrite_bittest': 55, 'gimple_use_ops': 2, 'op_iter_init': 14, 'op_iter_next_tree': 10, 'op_iter_init_tree': 17, 'add_dependency': 7, 'mem_ref_in_stmt': 3, 'cannot_overlap_p': 4, 'mem_refs_may_alias_p': 21, 'refs_independent_p': 63, 'record_indep_loop': 2, 'ref_indep_loop_p_1': 293, 'ref_indep_loop_p': 262, 'outermost_indep_loop': 3, 'gimple_references_memory_p': 2, 'gimple_call_fndecl': 2, 'stmt_cost': 4, 'determine_max_movement': 133, 'set_level': 3, 'determine_invariantness_stmt': 223, 'determine_invariantness': 3, 'VEC_edge_base_iterate': 2, 'loop_suitable_for_sm': 1, 'get_all_locs_in_loop': 16, 'ref_always_accessed_p': 18, 'may_move_till': 4, 'can_sm_ref_p': 23, 'find_refs_for_sm': 92, 'rewrite_mem_refs': 9, 'force_move_till_op': 2, 'force_move_till': 7, 'execute_sm': 27, 'hoist_memory_references': 160, 'store_motion_loop': 287, 'store_motion': 1, 'move_computations_stmt': 21, 'move_computations': 3, 'VEC_bitmap_base_iterate': 2, 'VEC_htab_t_base_iterate': 2, 'tree_ssa_lim_finalize': 21, 'tree_ssa_lim': 610}, "PosixPath('602/c-lang.bc')": {}, "PosixPath('602/sdbout.bc')": {}, "PosixPath('602/c-decl.bc')": {'push_scope': 29, 'pop_scope': 493, 'c_bindings_end_stmt_expr': 55, 'pushdecl': 156, 'implicitly_declare': 84, 'groktypename': 16, 'grokdeclarator': 786, 'start_decl': 181, 'build_compound_literal': 20, 'parser_xref_tag': 50, 'finish_struct': 419, 'finish_enum': 97, 'start_function': 398, 'merge_decls': 788, 'grokparms': 45, 'add_stmt': 6, 'c_print_identifier': 6, 'c_finish_incomplete_decl': 10, 'record_inline_static': 15, 'objc_mark_locals_volatile': 2, 'update_spot_bindings': 5, 'decl_jump_unsafe': 5, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 10, 'VEC_c_goto_bindings_p_base_iterate': 2, 'update_label_decls': 83, 'set_type_context': 2, 'free_binding_and_advance': 5, 'bind': 30, 'push_file_scope': 4, 'check_inline_statics': 13, 'pop_file_scope': 17, 'c_bindings_start_stmt_expr': 34, 'locate_old_decl': 10, 'match_builtin_function_types': 17, 'diagnose_arglist_conflict': 12, 'validate_proto_after_old_defn': 8, 'diagnose_mismatched_decls': 626, 'duplicate_decls': 1498, 'warn_if_shadowing': 20, 'pushdecl_top_level': 7, 'set_spot_bindings': 9, 'make_label': 3, 'bind_label': 5, 'lookup_label': 18, 'VEC_c_goto_bindings_p_base_space': 2, 'VEC_c_goto_bindings_p_gc_reserve': 4, 'VEC_c_goto_bindings_p_base_quick_push': 2, 'VEC_c_goto_bindings_p_gc_safe_push': 10, 'VEC_tree_base_iterate': 2, 'lookup_label_for_goto': 50, 'declare_label': 14, 'check_earlier_gotos': 41, 'lookup_name': 3, 'define_label': 109, 'c_get_switch_bindings': 8, 'c_release_switch_bindings': 2, 'c_check_switch_jump_warnings': 4, 'add_flexible_array_elts_to_size': 19, 'finish_decl': 256, 'c_make_fname_decl': 10, 'c_builtin_function': 13, 'c_builtin_function_ext_scope': 13, 'lookup_tag': 23, 'pushtag': 26, 'shadow_tag_warned': 108, 'quals_from_declspecs': 22, 'build_array_declarator': 51, 'flexible_array_type_p': 11, 'check_bitfield_type_and_width': 18, 'identifier_global_value': 3, 'grokparm': 14, 'push_parm_decl': 15, 'mark_forward_parm_decls': 6, 'get_parm_info': 126, 'xref_tag': 2, 'start_struct': 22, 'VEC_c_binding_ptr_base_space': 2, 'VEC_c_binding_ptr_heap_reserve': 4, 'VEC_c_binding_ptr_base_quick_push': 2, 'VEC_c_binding_ptr_heap_safe_push': 10, 'grokfield': 44, 'detect_field_duplicates': 12, 'VEC_c_binding_ptr_base_iterate': 2, 'warn_cxx_compat_finish_struct': 23, 'VEC_tree_heap_reserve': 4, 'VEC_tree_heap_safe_push': 10, 'start_enum': 25, 'build_enumerator': 15, 'lookup_name_in_scope': 4, 'store_parm_decls_newstyle': 50, 'store_parm_decls_oldstyle': 90, 'store_parm_decls': 142, 'finish_function': 103, 'check_for_loop_decls': 8, 'c_push_function_context': 95, 'c_pop_function_context': 76, 'build_c_parm': 10, 'build_attrs_declarator': 9, 'build_function_declarator': 9, 'build_id_declarator': 17, 'make_pointer_declarator': 9, 'build_null_declspecs': 31, 'declspecs_add_addrspace': 3, 'declspecs_add_qual': 19, 'declspecs_add_type': 229, 'declspecs_add_scspec': 25, 'declspecs_add_attrs': 3, 'finish_declspecs': 64, 'c_write_global_declarations_1': 7, 'c_write_global_declarations_2': 1, 'c_write_global_declarations': 17, 'tree_operand_length': 3, 'gt_ggc_mx_lang_tree_node': 1635, 'gt_ggc_mx_c_binding': 16, 'gt_ggc_mx_c_label_vars': 11, 'gt_ggc_mx_c_goto_bindings': 2, 'gt_ggc_mx_c_scope': 16, 'gt_ggc_mx_lang_type': 7, 'gt_ggc_mx_c_inline_static': 5, 'gt_ggc_mx_language_function': 4, 'gt_pch_p_14lang_tree_node': 2, 'gt_pch_nx_lang_tree_node': 1634, 'gt_pch_nx_c_binding': 15, 'gt_pch_nx_c_label_vars': 11, 'gt_pch_nx_c_goto_bindings': 2, 'gt_pch_nx_c_scope': 15, 'gt_pch_nx_lang_type': 4, 'gt_pch_nx_c_inline_static': 5, 'gt_pch_nx_language_function': 4}, "PosixPath('602/tree-ssanames.bc')": {'init_ssanames': 8, 'release_ssa_name': 50, 'VEC_tree_base_quick_push': 2, 'fini_ssanames': 2, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 4, 'VEC_tree_gc_safe_push': 10, 'make_ssa_name_fn': 72, 'delink_imm_use': 5, 'duplicate_ssa_name_ptr_info': 2, 'duplicate_ssa_name': 1, 'gimple_def_ops': 2, 'op_iter_init': 6, 'op_iter_next_tree': 10, 'op_iter_init_tree': 9, 'release_defs': 24, 'replace_ssa_name_symbol': 2, 'gimple_referenced_vars': 1, 'first_htab_element': 8, 'first_referenced_var': 8, 'end_htab_p': 2, 'end_referenced_vars_p': 1, 'next_htab_element': 4, 'next_referenced_var': 2, 'release_dead_ssa_names': 18}, "PosixPath('602/insn-recog.bc')": {'recog_1': 85, 'recog_2': 134, 'recog_3': 111, 'recog_4': 128, 'recog_5': 55, 'recog_6': 132, 'recog_7': 197, 'recog_8': 158, 'recog_9': 151, 'recog_10': 113, 'recog_11': 555, 'recog_12': 254, 'recog_13': 193, 'recog_14': 115, 'recog_15': 126, 'recog_16': 467, 'recog_17': 121, 'recog_18': 319, 'recog_19': 325, 'recog_20': 635, 'recog_21': 298, 'recog_22': 657, 'recog_23': 1579, 'recog_24': 305, 'recog_25': 303, 'recog_26': 1028, 'recog_27': 263, 'recog_28': 483, 'recog_29': 816, 'recog_30': 87, 'recog_31': 67, 'recog_32': 7390, 'recog_33': 232, 'recog_34': 221, 'recog_35': 597, 'recog_36': 177, 'recog_37': 158, 'recog_38': 186, 'recog_39': 208, 'recog_40': 132, 'recog_41': 98, 'recog_42': 143, 'recog_43': 2578, 'recog_44': 205, 'recog_45': 944, 'recog_46': 165, 'recog_47': 542, 'recog_48': 108, 'recog': 306, 'satisfies_constraint_K': 2, 'split_1': 1396, 'split_2': 530, 'split_3': 438, 'split_4': 526, 'split_insns': 528, 'peephole2_insns': 804}, "PosixPath('602/tracer.bc')": {'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gsi_next': 1, 'count_insns': 8, 'bb_seen_p': 1, 'better_p': 56, 'ei_next': 2, 'find_best_predecessor': 20, 'find_best_successor': 11, 'find_trace': 36, 'mark_bb_seen': 10, 'tail_duplicate': 216, 'tracer': 206}, "PosixPath('602/bb-reorder.bc')": {'reorder_basic_blocks': 1879, 'connect_traces': 937, 'find_traces_1_round': 1147, 'mark_bb_visited': 13, 'copy_bb': 125, 'ei_next': 2, 'bb_to_key': 77, 'push_to_next_round_p': 2, 'better_edge_p': 8, 'copy_bb_p': 19, 'single_succ_p': 1, 'single_succ_edge': 3, 'rotate_loop': 303, 'single_pred_p': 1, 'find_traces': 1117, 'verify_hot_cold_block_grouping': 27, 'find_rarely_executed_basic_blocks_and_crossing_edges': 167, 'add_labels_and_missing_jumps': 25, 'fix_up_fall_thru_edges': 176, 'add_reg_crossing_jump_notes': 63, 'fix_edges_for_rarely_executed_code': 227, 'partition_hot_cold_basic_blocks': 314, 'rest_of_handle_partition_blocks': 328, 'gate_handle_partition_blocks': 1, 'insert_section_boundary_note': 11, 'rest_of_handle_reorder_blocks': 21, 'duplicate_computed_gotos': 161}, "PosixPath('602/cfgbuild.bc')": {'find_many_sub_basic_blocks': 752, 'find_bb_boundaries': 87, 'compute_outgoing_frequencies': 102, 'inside_basic_block_p': 5, 'control_flow_insn_p': 8, 'make_label_edge': 4, 'rtl_make_eh_edge': 3, 'mark_tablejump_edge': 4, 'ei_next': 2, 'purge_dead_tablejump_edges': 48, 'make_edges': 240, 'single_succ_p': 1, 'single_succ_edge': 3}, "PosixPath('602/sel-sched.bc')": {'create_block_for_bookkeeping': 347, 'compute_av_set_inside_bb': 170, 'fill_vec_av_set': 1488, 'hard_reg_set_iter_init': 17, 'move_cond_jump': 33, 'advance_state_on_fence': 57, 'find_ebb_boundaries': 77, 'ei_next': 2, 'propagate_lv_set': 5, 'compute_live': 40, 'compute_live_after_bb': 65, 'sel_add_to_insn_priority': 17, 'current_region_empty_p': 11, 'sel_setup_region_sched_flags': 2, 'VEC_basic_block_base_quick_push': 2, 'bitmap_initialize_stat': 2, 'sel_region_init': 71, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, '_succ_iter_start': 114, 'VEC_edge_base_iterate': 2, 'sel_bb_empty_or_nop_p': 3, '_eligible_successor_edge_p': 37, 'single_succ_p': 1, 'single_succ_edge': 3, 'single_succ': 1, 'loop_depth': 1, 'inner_loop_header_p': 8, 'loop_outer': 3, 'VEC_edge_base_space': 2, 'VEC_edge_heap_reserve': 4, 'VEC_edge_base_quick_push': 2, 'VEC_edge_heap_safe_push': 10, 'get_loop_exit_edges_unique_dests': 45, 'VEC_edge_base_ordered_remove': 3, 'get_all_loop_exits': 106, '_succ_iter_cond': 124, '_succ_iter_next': 11, 'init_seqno_1': 56, 'init_seqno': 122, 'find_min_max_seqno': 20, '_xlist_is_in_p': 2, 'is_ineligible_successor': 74, '_xlist_add': 2, 'VEC_rtx_base_iterate': 2, '_list_iter_start': 4, '_list_iter_next': 3, 'try_bitmap_cache': 40, 'try_transformation_cache': 73, 'block_valid_for_bookkeeping_p': 8, 'find_block_for_bookkeeping': 46, 'moving_insn_creates_bookkeeping_block_p': 140, 'can_substitute_through_p': 7, 'count_occurrences_1': 7, 'count_occurrences_equiv': 3, 'rtx_ok_for_substitution_p': 3, 'substitute_reg_in_expr': 45, 'moveup_expr': 46, 'update_bitmap_cache': 9, 'update_transformation_cache': 23, 'moveup_expr_cached': 221, 'moveup_set_expr': 13, 'compute_av_set_at_bb_end': 246, 'compute_av_set_on_boundaries': 49, 'remove_insns_that_need_bookkeeping': 71, 'remove_insns_for_debug': 37, 'process_pipelined_exprs': 34, 'process_spec_exprs': 62, 'recog_memoized': 3, 'process_use_exprs': 74, 'VEC_expr_t_base_block_remove': 2, 'VEC_expr_t_base_space': 2, 'VEC_expr_t_heap_reserve': 2, 'VEC_expr_t_base_quick_push': 2, 'VEC_expr_t_heap_safe_push': 6, 'sel_target_adjust_priority': 27, 'VEC_expr_t_base_unordered_remove': 4, 'VEC_vinsn_t_base_iterate': 2, 'vinsn_vec_has_expr_p': 8, 'equal_after_moveup_path_p': 1, 'replace_dest_with_reg_in_expr': 3, 'find_sequential_best_exprs': 46, 'identical_copy_p': 8, 'undo_transformations': 138, 'code_motion_path_driver': 252, 'get_reg_class': 13, 'init_regs_for_mode': 9, 'hard_reg_set_iter_set': 29, 'init_hard_regno_rename': 1, 'sel_hard_regno_rename_ok': 1, 'hard_reg_set_iter_next': 2, 'mark_unavailable_hard_regs': 261, 'fur_orig_expr_not_found': 27, 'compute_live_below_insn': 8, 'fur_orig_expr_found': 38, 'fur_on_enter': 7, 'find_used_regs': 573, 'collect_unavailable_regs_from_bnds': 692, 'verify_target_availability': 20, 'choose_best_reg_1': 98, 'choose_best_reg': 101, 'choose_best_pseudo_reg': 19, 'replace_src_with_reg_ok_p': 20, 'replace_dest_with_reg_ok_p': 8, 'try_replace_dest_reg': 76, 'vinsn_writes_one_of_regs_p': 68, 'find_best_reg_for_expr': 1093, 'VEC_expr_t_base_iterate': 2, 'sel_rank_for_schedule': 107, 'convert_vec_av_set_to_ready': 9, 'fill_ready_list': 184, 'invoke_reorder_hooks': 13, 'find_expr_for_ready': 1, 'invoke_dfa_lookahead_guard': 5, 'calculate_privileged_insns': 11, 'get_expr_cost': 3, 'choose_best_insn': 21, 'VEC_rtx_base_unordered_remove': 4, 'debug_state': 3, 'advance_one_cycle': 91, 'sel_dfa_new_cycle': 41, 'invoke_aftermath_hooks': 58, 'find_best_expr': 805, 'stall_for_cycles': 3, 'prepare_place_to_insert': 8, 'get_dest_from_orig_ops': 6, 'single_pred_p': 1, 'single_pred_edge': 3, 'find_place_for_bookkeeping': 52, 'find_seqno_for_bookkeeping': 20, 'emit_insn_from_expr_after': 6, 'emit_bookkeeping_insn': 7, 'generate_bookkeeping_insn': 37, 'VEC_vinsn_t_base_space': 2, 'VEC_vinsn_t_heap_reserve': 4, 'VEC_vinsn_t_base_quick_push': 2, 'VEC_vinsn_t_heap_safe_push': 10, 'vinsn_vec_add': 10, 'update_and_record_unavailable_insns': 23, 'move_op_at_first_insn': 35, 'move_op_ascend': 1, 'move_op_merge_succs': 12, 'track_scheduled_insns_and_blocks': 31, 'maybe_emit_renaming_copy': 18, 'get_spec_check_type_for_insn': 8, 'create_speculation_check': 25, 'maybe_emit_speculative_check': 37, 'handle_emitting_transformations': 70, 'need_nop_to_preserve_insn_bb': 8, 'VEC_insn_t_base_space': 2, 'VEC_insn_t_heap_reserve': 2, 'VEC_insn_t_base_quick_push': 2, 'VEC_insn_t_heap_safe_push': 6, 'remove_insn_from_stream': 14, 'move_op_orig_expr_found': 140, 'move_op': 29, 'move_exprs_to_boundary': 370, 'VEC_insn_t_base_iterate': 2, 'VEC_insn_t_base_block_remove': 2, 'remove_temp_moveop_nops': 3, 'schedule_expr_on_boundary': 447, 'VEC_rtx_base_space': 2, 'VEC_rtx_gc_reserve': 4, 'VEC_rtx_base_quick_push': 2, 'VEC_rtx_gc_safe_push': 10, 'update_fence_and_insn': 150, 'update_boundaries': 60, 'fill_insns': 1409, 'VEC_vinsn_t_base_block_remove': 2, 'vinsn_vec_clear': 10, 'schedule_on_fences': 14, 'extract_new_fences_from': 96, 'calculate_new_fences': 40, 'update_seqnos_and_stage': 59, 'sel_sched_region_2': 225, 'sel_sched_region_1': 92, 'simplify_changed_insns': 64, 'bb_next_bb': 12, 'reset_sched_cycles_in_current_ebb': 52, 'put_TImodes': 63, 'sel_region_target_finish': 24, 'sel_region_finish': 168, 'sel_sched_region': 298, 'init_hard_regs_data': 1, 'sel_global_init': 1, 'run_selective_scheduling': 4}, "PosixPath('602/ira-emit.bc')": {'ira_emit': 1398, 'emit_moves': 248, 'modify_move_list': 307, 'add_range_and_copies_from_move_list': 202, 'print_move_list': 16, 'ira_debug_move_list': 16, 'ira_allocno_iter_cond': 1, 'set_allocno_somewhere_renamed_p': 15, 'VEC_loop_p_base_iterate': 2, 'ei_next': 2, 'entered_from_non_parent_p': 69, 'setup_entered_from_non_parent_p': 87, 'df_lr_get_bb_info': 3, 'bmp_iter_set_init': 20, 'bmp_iter_set': 25, 'store_can_be_removed_p': 8, 'create_move': 22, 'add_to_edge_list': 1, 'bmp_iter_next': 2, 'generate_edge_moves': 312, 'eq_move_lists_p': 18, 'eq_edge_move_lists_p': 17, 'free_move_list': 2, 'unify_moves': 90, 'VEC_move_t_base_space': 2, 'VEC_move_t_heap_reserve': 2, 'VEC_move_t_base_quick_push': 2, 'VEC_move_t_heap_safe_push': 6, 'traverse_moves': 4, 'VEC_move_t_base_last': 2, 'create_new_reg': 11, 'recog_memoized': 3, 'ira_get_register_move_cost': 1, 'emit_move_list': 80, 'update_costs': 61, 'add_ranges_and_copies': 292, 'change_regs': 10, 'set_allocno_reg': 12, 'change_loop': 427}, "PosixPath('602/cpp_symtab.bc')": {'ht_create': 4, 'ht_destroy': 20, 'calc_hash': 2, 'ht_expand': 19, 'ht_lookup_with_hash': 160, 'ht_lookup': 2, 'ht_forall': 7, 'ht_purge': 6, 'ht_load': 8, 'ht_dump_statistics': 13}, "PosixPath('602/tree-ssa-uncprop.bc')": {'gsi_start': 9, 'bb_seq': 2, 'gsi_last_bb': 7, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 2, 'associate_equivalences_with_edges': 180, 'ei_next': 2, 'VEC_tree_base_pop': 2, 'remove_equivalence': 5, 'uncprop_leave_block': 2, 'single_incoming_edge_ignoring_loop_edges': 20, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 10, 'record_equiv': 5, 'phi_nodes': 2, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 15, 'gsi_next': 1, 'uncprop_into_successor_phis': 146, 'uncprop_enter_block': 174, 'tree_ssa_uncprop': 330}, "PosixPath('602/vasprintf.bc')": {}, "PosixPath('602/varray.bc')": {'varray_init': 7, 'varray_grow': 4, 'varray_clear': 5}, "PosixPath('602/calls.bc')": {'expand_call': 1322, 'initialize_argument_information': 157, 'precompute_arguments': 27, 'emit_library_call_value_1': 355, 'special_function_p': 13, 'gimple_ops': 1, 'gimple_op': 2, 'gimple_call_fn': 2, 'gimple_call_fndecl': 5, 'gimple_alloca_call_p': 4, 'alloca_call_p': 4, 'flags_from_decl_or_type': 2, 'call_expr_flags': 2, 'shift_return_value': 3, 'init_call_expr_arg_iterator': 3, 'next_call_expr_arg': 4, 'first_call_expr_arg': 3, 'split_complex_types': 4, 'finalize_must_preallocate': 18, 'compute_argument_block_size': 8, 'compute_argument_addresses': 29, 'rtx_for_function_call': 2, 'precompute_register_parameters': 39, 'save_fixed_argument_area': 1, 'mem_overlaps_already_clobbered_arg_p': 19, 'store_one_arg': 401, 'check_sibcall_argument_overlap_1': 6, 'check_sibcall_argument_overlap': 21, 'load_register_parameters': 31, 'emit_call_1': 2, 'avoid_likely_spilled_reg': 2, 'fixup_tail_calls': 2, 'must_pass_in_stack_var_size': 2, 'must_pass_in_stack_var_size_or_pad': 2}, "PosixPath('602/jump.bc')": {'init_label_info': 12, 'mark_jump_label': 6, 'mark_jump_label_1': 15, 'pc_set': 4, 'mark_all_labels': 38, 'rebuild_jump_labels': 63, 'cleanup_barriers': 2, 'reversed_comparison_code_parts': 11, 'reversed_comparison_code': 4, 'reversed_comparison': 2, 'simplejump_p': 6, 'condjump_p': 14, 'condjump_in_parallel_p': 21, 'any_condjump_p': 4, 'condjump_label': 11, 'onlyjump_p': 4, 'delete_related_insns': 55, 'delete_for_peephole': 5, 'redirect_exp_1': 9, 'redirect_jump_1': 5, 'invert_exp_1': 7, 'redirect_jump_2': 2, 'rtx_renumbered_equal_p': 79, 'true_regnum': 14, 'reg_or_subregno': 2}, "PosixPath('602/host-ieee64.bc')": {}, "PosixPath('602/varasm.bc')": {'emutls_decl': 76, 'force_const_mem': 118, 'output_constructor': 113, 'compute_reloc_for_rtx': 3, 'output_constructor_bitfield': 1, 'default_emutls_var_fields': 8, 'prefix_name': 3, 'get_emutls_object_type': 9, 'make_decl_one_only': 5, 'emutls_common_1': 7, 'emutls_finish': 2, 'get_unnamed_section': 9, 'get_section': 4, 'initialize_cold_section_name': 3, 'get_named_section': 3, 'unlikely_text_section_p': 2, 'resolve_unique_section': 2, 'hot_function_section': 1, 'default_function_rodata_section': 15, 'mergeable_constant_section': 4, 'set_user_assembler_name': 2, 'decode_reg_name': 19, 'align_variable': 16, 'bss_initializer_p': 4, 'contains_pointers_p': 7, 'compute_reloc_for_constant': 13, 'get_variable_section': 35, 'hash_section': 2, 'get_block_for_decl': 7, 'change_symbol_block': 2, 'use_blocks_for_decl_p': 4, 'create_block_symbol': 15, 'make_decl_rtl': 100, 'make_decl_rtl_for_debug': 9, 'assemble_asm': 3, 'switch_to_section': 12, 'notice_global_symbol': 58, 'copy_constant': 24, 'get_constant_section': 2, 'build_constant_desc': 10, 'get_constant_size': 2, 'VEC_rtx_base_space': 2, 'VEC_rtx_gc_reserve': 4, 'VEC_rtx_base_quick_push': 2, 'VEC_rtx_gc_safe_push': 3, 'place_block_symbol': 27, 'ultimate_transparent_alias_target': 4, 'assemble_name': 9, 'assemble_real': 2, 'array_size_for_constructor': 16, 'assemble_string': 7, 'output_constant': 40, 'output_constant_def_contents': 3, 'output_constant_def': 34, 'const_hash_1': 36, 'decode_addr_const': 8, 'output_addressed_constants': 10, 'mark_constant': 4, 'mark_constants': 5, 'output_constant_pool_2': 14, 'output_constant_pool_1': 8, 'output_constant_pool_contents': 19, 'globalize_decl': 11, 'assemble_start_function': 26, 'default_emutls_var_init': 19, 'get_emutls_init_templ_addr': 33, 'assemble_variable_contents': 6, 'assemble_variable': 69, 'incorporeal_function_p': 2, 'assemble_external_real': 8, 'process_pending_assemble_externals': 8, 'assemble_external': 10, 'mark_decl_referenced': 2, 'assemble_static_space': 2, 'assemble_trampoline_template': 4, 'lookup_constant_def': 2, 'const_desc_rtx_eq': 6, 'create_constant_pool': 4, 'const_rtx_hash_1': 11, 'const_rtx_hash': 1, 'get_pool_constant': 2, 'get_pool_constant_mark': 2, 'get_pool_mode': 2, 'constructor_static_from_elts_p': 4, 'initializer_constant_valid_p_1': 86, 'narrowing_initializer_constant_valid_p': 72, 'initializer_constant_valid_for_bitfield_p': 6, 'mark_weak': 9, 'merge_weak': 9, 'weak_finish_1': 1, 'weak_finish': 9, 'VEC_alias_pair_base_unordered_remove': 4, 'remove_unreachable_alias_pairs': 13, 'finish_aliases_1': 7, 'do_assemble_alias': 27, 'finish_aliases_2': 4, 'VEC_alias_pair_base_space': 2, 'VEC_alias_pair_gc_reserve': 2, 'VEC_alias_pair_gc_safe_push': 4, 'assemble_alias': 28, 'default_assemble_visibility': 4, 'get_noswitch_section': 2, 'asm_output_aligned_bss': 2, 'emit_bss': 3, 'compare_constant': 93, 'const_desc_eq': 6, 'categorize_decl_for_section': 16, 'default_section_type_flags': 5, 'default_elf_asm_named_section': 6, 'default_coff_asm_named_section': 2, 'default_select_section': 2, 'mergeable_string_section': 18, 'compute_reloc_for_rtx_1': 3, 'default_encode_section_info': 10, 'default_asm_output_anchor': 2, 'default_use_anchors_for_symbol_p': 6, 'default_binds_local_p_1': 13, 'default_globalize_decl_name': 1, 'VEC_rtx_base_quick_insert': 3, 'VEC_rtx_gc_safe_insert': 4, 'get_section_anchor': 20, 'VEC_rtx_base_iterate': 2, 'output_object_block': 27, 'output_object_block_htab': 22, 'elf_record_gcc_switches': 21, 'gt_ggc_mx_constant_descriptor_rtx': 11, 'gt_ggc_m_P23constant_descriptor_rtx4htab': 6, 'gt_ggc_mx_rtx_constant_pool': 4, 'gt_pch_nx_constant_descriptor_rtx': 10, 'gt_pch_p_P23constant_descriptor_rtx4htab': 5, 'gt_pch_n_P23constant_descriptor_rtx4htab': 6, 'gt_pch_nx_rtx_constant_pool': 4}, "PosixPath('602/fdmatch.bc')": {'fdmatch': 9}, "PosixPath('602/c-parser.bc')": {'disable_extension_diagnostics': 15, 'c_parser_binary_expression': 239, 'c_parser_postfix_expression_after_primary': 160, 'c_parser_postfix_expression': 117, 'c_parser_struct_declaration': 41, 'c_parse_init': 10, 'c_lex_one_token': 15, 'c_parser_consume_token': 10, 'pragma_lex': 2, 'c_parser_consume_pragma': 11, 'c_parser_set_source_position_from_token': 2, 'c_parser_error': 7, 'c_parser_skip_to_pragma_eol': 3, 'restore_extension_diagnostics': 15, 'c_parser_skip_until_found': 2, 'c_token_starts_typename': 1, 'c_parser_peek_2nd_token': 2, 'c_parser_objc_selector': 2, 'c_token_starts_declspecs': 1, 'c_parser_skip_to_end_of_block_or_statement': 4, 'c_parser_skip_to_end_of_parameter': 2, 'c_parser_omp_variable_list': 12, 'c_parser_omp_threadprivate': 33, 'c_parser_asm_goto_operands': 4, 'check_no_duplicate_clause': 3, 'c_parser_omp_clause_default': 2, 'c_parser_omp_clause_reduction': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 4, 'VEC_tree_gc_safe_push': 10, 'c_parser_omp_sections_scope': 8, 'c_parser_label': 4, 'c_parser_expr_no_commas': 77, 'c_parser_conditional_expression': 116, 'c_parser_cast_expression': 45, 'c_parser_type_name': 7, 'c_parser_declspecs': 204, 'c_parser_pragma': 72, 'c_parser_omp_for_loop': 92, 'c_parser_omp_all_clauses': 113, 'c_parser_unary_expression': 162, 'c_parser_postfix_expression_after_paren_type': 43, 'c_parser_compound_statement_nostart': 7, 'c_parser_statement_after_labels': 43, 'c_parser_asm_operands': 21, 'c_parser_expression_conv': 7, 'c_parser_declaration_or_fndef': 44, 'c_parser_braced_init': 321, 'c_parser_initval': 14, 'c_parser_objc_message_args': 2, 'c_parser_direct_declarator_inner': 11, 'c_parser_parms_declarator': 59, 'c_parser_parms_list_declarator': 48, 'c_parser_parameter_declaration': 8, 'c_parser_attributes': 9, 'c_parser_expr_list': 77, 'c_parser_expression': 40, 'c_parser_objc_type_name': 2, 'c_parser_objc_methodprotolist': 4, 'c_parse_file': 3}, "PosixPath('602/decNumber.bc')": {'decNumberCopy': 26, 'decNumberFMA': 104, 'decNumberZero': 7, 'decGetDigits': 2, 'decNumberFromUInt32': 10, 'decNumberToInt32': 17, 'decNumberToUInt32': 26, 'decToString': 46, 'decBiStr': 4, 'decSetCoeff': 103, 'decSetMaxValue': 16, 'decSetOverflow': 38, 'decUnitAddSub': 7, 'decApplyRound': 88, 'decShiftToMost': 28, 'decSetSubnormal': 47, 'decUnitCompare': 13, 'decCompare': 85, 'decFinalize': 62, 'decStatus': 11, 'decNumberFromString': 141, 'decDecap': 5, 'decNaNs': 40, 'decCopyFit': 9, 'decAddOp': 218, 'decNumberAbs': 30, 'decNumberAdd': 2, 'decNumberAnd': 51, 'decCompareOp': 82, 'decNumberCompare': 2, 'decNumberCompareSignal': 2, 'decNumberCompareTotal': 2, 'decNumberCompareTotalMag': 39, 'decShiftToLeast': 16, 'decDivideOp': 506, 'decNumberDivide': 2, 'decNumberDivideInteger': 2, 'decCheckMath': 27, 'decMultiplyOp': 396, 'decExpOp': 492, 'decNumberExp': 3, 'decNumberInvert': 24, 'decGetInt': 22, 'decLnOp': 574, 'decNumberLn': 3, 'decNumberLogB': 32, 'decNumberLog10': 91, 'decNumberMax': 2, 'decNumberMaxMag': 2, 'decNumberMin': 2, 'decNumberMinMag': 2, 'decNumberMinus': 23, 'decNumberNextMinus': 37, 'decNumberNextPlus': 39, 'decNumberIsNormal': 12, 'decNumberNextToward': 62, 'decNumberOr': 51, 'decNumberPlus': 23, 'decNumberMultiply': 2, 'decNumberPower': 307, 'decQuantizeOp': 89, 'decNumberQuantize': 2, 'decTrim': 51, 'decNumberReduce': 18, 'decNumberRescale': 2, 'decNumberRemainder': 2, 'decNumberRemainderNear': 2, 'decReverse': 1, 'decNumberRotate': 63, 'decNumberSameQuantum': 13, 'decNumberScaleB': 41, 'decNumberShift': 32, 'decNumberSquareRoot': 661, 'decNumberSubtract': 2, 'decNumberToIntegralExact': 47, 'decNumberToIntegralValue': 4, 'decNumberXor': 51, 'decNumberClass': 4, 'decNumberGetBCD': 5, 'decNumberSetBCD': 1, 'decNumberIsSubnormal': 12, 'decNumberTrim': 2}, "PosixPath('602/fixed-value.bc')": {'do_fixed_neg': 13, 'do_fixed_add': 18, 'do_fixed_multiply': 170, 'do_fixed_divide': 231, 'fixed_saturate2': 11, 'fixed_saturate1': 11, 'fixed_convert_from_int': 128, 'fixed_convert_from_real': 32, 'fixed_identical': 14, 'fixed_hash': 2, 'check_real_for_fixed_mode': 24, 'fixed_from_string': 20, 'fixed_to_decimal': 23, 'do_fixed_shift': 117, 'fixed_arithmetic': 259, 'fixed_compare': 29, 'fixed_convert': 173, 'real_convert_from_fixed': 23, 'fixed_isneg': 7}, "PosixPath('602/tree-eh.bc')": {'gsi_start': 9, 'lower_eh_must_not_throw': 23, 'lower_resx': 105, 'first_imm_use_on_stmt': 3, 'next_imm_use_on_stmt': 4, 'add_stmt_to_eh_lp_fn': 2, 'lookup_stmt_eh_lp_fn': 3, 'make_eh_dispatch_edges': 9, 'make_eh_edges': 1, 'ei_next': 2, 'redirect_eh_edge_1': 34, 'redirect_eh_dispatch_edge': 9, 'operation_could_trap_helper_p': 1, 'operation_could_trap_p': 6, 'tree_could_trap_p': 21, 'gimple_ops': 1, 'stmt_could_throw_1_p': 48, 'stmt_could_throw_p': 49, 'tree_could_throw_p': 6, 'maybe_duplicate_eh_stmt_fn': 4, 'verify_eh_edges': 35, 'verify_eh_dispatch_edge': 84, 'bb_seq': 2, 'gsi_start_bb': 4, 'gsi_stmt': 1, 'gsi_one_before_end_p': 1, 'gsi_next': 1, 'VEC_eh_region_base_iterate': 2, 'VEC_eh_landing_pad_base_iterate': 2, 'remove_unreachable_handlers': 104, 'gsi_after_labels': 15, 'gsi_next_nondebug': 9, 'phi_nodes': 2, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'move_use_after_head': 6, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_init_use': 34, 'gimple_vuse_op': 2, 'link_use_stmts_after': 100, 'first_imm_use_stmt': 14, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 8, 'next_imm_use_stmt': 6, 'unsplit_eh': 211, 'unsplit_all_eh': 186, 'cleanup_empty_eh_merge_phis': 124, 'cleanup_empty_eh_unsplit': 13, 'gsi_last_bb': 4, 'cleanup_empty_eh_move_lp': 30, 'cleanup_empty_eh': 211, 'cleanup_all_empty_eh': 194, 'remove_unreachable_handlers_no_lp': 18, 'execute_cleanup_eh': 457, 'gate_cleanup_eh': 1, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 10, 'single_succ_p': 1, 'single_succ_edge': 3, 'gimple_set_op': 2, 'lower_eh_dispatch': 113, 'execute_lower_eh_dispatch': 143, 'gate_lower_eh_dispatch': 1, 'execute_lower_resx': 107, 'same_handler_p': 18, 'optimize_double_finally': 67, 'refactor_eh_r': 99, 'record_in_finally_tree': 4, 'collect_finally_tree_1': 10, 'gimple_call_fndecl': 2, 'record_stmt_eh_region': 6, 'note_eh_region_may_contain_throw': 3, 'outside_finally_tree': 2, 'record_in_goto_queue': 24, 'record_in_goto_queue_label': 12, 'lower_try_finally_dup_block': 1, 'gimple_try_catch_is_cleanup': 1, 'gimple_seq_first_stmt': 1, 'emit_post_landing_pad': 2, 'do_return_redirection': 8, 'do_goto_redirection': 8, 'find_goto_replacement': 13, 'gimple_seq_singleton_p': 2, 'replace_goto_queue_cond_clause': 6, 'replace_goto_queue_stmt_list': 12, 'replace_goto_queue': 2, 'lower_try_finally_fallthru_label': 8, 'gimple_seq_last_stmt': 1, 'frob_into_branch_around': 17, 'honor_protect_cleanup_actions': 24, 'lower_eh_constructs_1': 557, 'lower_eh_constructs': 6}, "PosixPath('602/tree-phinodes.bc')": {'gsi_last': 9, 'relink_imm_use': 16, 'gsi_start': 9, 'VEC_gimple_base_pop': 2, 'allocate_phi_node': 11, 'make_phi_node': 18, 'delink_imm_use': 5, 'VEC_gimple_base_space': 2, 'VEC_gimple_gc_reserve': 4, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_gc_safe_push': 10, 'release_phi_node': 18, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'relink_imm_use_stmt': 2, 'resize_phi_node': 8, 'set_ssa_use_from_ptr': 8, 'gsi_next': 1, 'reserve_phi_args_for_new_edge': 9, 'phi_nodes': 2, 'gsi_stmt': 1, 'set_phi_nodes': 3, 'add_phi_node_to_bb': 10, 'create_phi_node': 1, 'add_phi_arg': 12, 'remove_phi_args': 6, 'remove_phi_nodes': 2}, "PosixPath('602/lto-cgraph.bc')": {'lto_cgraph_encoder_new': 2, 'VEC_cgraph_node_ptr_base_space': 2, 'VEC_cgraph_node_ptr_heap_reserve': 4, 'VEC_cgraph_node_ptr_base_quick_push': 2, 'VEC_cgraph_node_ptr_heap_safe_push': 10, 'lto_cgraph_encoder_encode': 4, 'output_profile_summary': 8, 'csi_end_p': 1, 'cgraph_node_in_set_p': 1, 'lto_cgraph_encoder_size': 1, 'lto_output_node': 44, 'lto_output_edge': 1, 'output_cgraph': 102, 'input_profile_summary': 2, 'input_edge': 2, 'lto_file_decl_data_get_fn_decl': 4, 'input_overwrite_node': 37, 'input_node': 67, 'VEC_cgraph_node_ptr_base_iterate': 2, 'input_cgraph_1': 98, 'input_cgraph': 135}, "PosixPath('602/tree-ssa-threadedge.bc')": {'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve_exact': 2, 'VEC_tree_heap_safe_grow': 4, 'VEC_tree_heap_safe_grow_cleared': 4, 'set_ssa_name_value': 5, 'threadedge_initialize_values': 3, 'single_succ_p': 1, 'single_pred_p': 1, 'bb_seq': 2, 'gsi_last_bb': 4, 'gsi_stmt': 1, 'potentially_threadable_block': 12, 'gimple_use_ops': 2, 'op_iter_init': 7, 'op_iter_next_use': 8, 'VEC_tree_heap_reserve': 4, 'VEC_tree_base_quick_push': 2, 'record_temporary_equivalence': 22, 'gsi_next': 1, 'record_temporary_equivalences_from_phis': 16, 'gsi_start_bb': 4, 'gimple_ops': 1, 'gimple_call_fndecl': 2, 'op_iter_next_tree': 10, 'num_ssa_operands': 18, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 15, 'fold_assignment_stmt': 3, 'record_temporary_equivalences_from_stmts_at_dest': 59, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'next_readonly_imm_use': 4, 'lhs_of_dominating_assert': 1, 'gimple_set_op': 2, 'simplify_control_stmt_condition': 19, 'VEC_tree_base_pop': 2, 'remove_temporary_equivalences': 6, 'thread_across_edge': 117}, "PosixPath('602/tree-object-size.bc')": {'check_for_plus_in_loops_1': 50, 'gimple_ops': 1, 'gimple_op': 2, 'unknown_object_size': 20, 'gimple_call_fndecl': 2, 'alloc_object_size': 2, 'call_object_size': 35, 'compute_object_offset': 9, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'check_for_plus_in_loops': 7, 'bmp_iter_next': 2, 'compute_builtin_object_size': 644, 'addr_object_size': 101, 'collect_object_sizes_for': 201, 'cond_expr_object_size': 13, 'expr_object_size': 36, 'merge_object_sizes': 41, 'init_object_sizes': 7, 'fini_object_sizes': 4, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gsi_next': 1, 'compute_object_sizes': 62}, "PosixPath('602/rtl-error.bc')": {'location_for_asm': 7, 'diagnostic_for_asm': 7}, "PosixPath('602/vmsdbgout.bc')": {}, "PosixPath('602/tree-ssa-threadupdate.bc')": {'lookup_redirection_data': 19, 'redirect_edges': 145, 'create_block_for_threading': 4, 'thread_single_edge': 77, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bb_seq': 2, 'gsi_start_bb': 4, 'gsi_stmt': 1, 'gsi_next': 1, 'redirection_block_p': 5, 'ei_next': 2, 'bmp_iter_next': 2, 'mark_threaded_blocks': 188, 'gsi_last_bb': 4, 'remove_ctrl_stmt_and_useless_edges': 31, 'single_succ_p': 1, 'single_succ_edge': 3, 'create_edge_and_update_destination_phis': 40, 'fixup_template_block': 1, 'create_duplicates': 5, 'redirection_data_hash': 3, 'thread_block': 139, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 34, 'determine_bb_domination_status': 47, 'single_pred_p': 1, 'thread_through_loop_header': 305, 'loops_state_set': 1, 'thread_through_all_blocks': 848, 'VEC_edge_base_space': 2, 'VEC_edge_heap_reserve': 2, 'VEC_edge_base_quick_push': 2, 'VEC_edge_heap_safe_push': 6}, "PosixPath('602/ira-lives.bc')": {'process_bb_node_lives': 790, 'set_allocno_live': 121, 'ira_implicitly_set_insn_hard_regs': 36, 'ira_allocno_iter_cond': 1, 'create_start_finish_chains': 46, 'ira_print_live_range_list': 2, 'print_allocno_live_ranges': 2, 'print_live_ranges': 4, 'df_lr_get_bb_info': 3, 'sparseset_clear': 2, 'bmp_iter_set_init': 20, 'bmp_iter_set': 25, 'sparseset_bit_p': 10, 'sparseset_insert_bit': 3, 'sparseset_set_bit': 5, 'sparseset_iter_init': 4, 'sparseset_iter_p': 4, 'sparseset_iter_elm': 3, 'sparseset_iter_next': 2, 'make_regno_born': 44, 'bmp_iter_next': 2, 'mark_reg_live': 47, 'mark_ref_live': 2, 'single_reg_class': 12, 'single_reg_operand_class': 1, 'ira_get_register_move_cost': 1, 'ira_allocate_and_set_costs': 2, 'process_single_reg_class_operands': 119, 'update_allocno_pressure_excess_length': 18, 'clear_allocno_live': 80, 'make_regno_dead': 2, 'mark_reg_dead': 132, 'mark_ref_dead': 4, 'make_pseudo_conflict': 5, 'check_and_make_def_use_conflict': 2, 'check_and_make_def_conflict': 45, 'make_early_clobber_and_input_conflicts': 14, 'mark_hard_reg_early_clobbers': 7, 'ei_next': 2, 'bb_has_eh_pred': 14, 'bb_has_abnormal_pred': 14, 'bb_has_abnormal_call_pred': 14, 'remove_some_program_points_and_update_live_ranges': 50, 'ira_compress_allocno_live_ranges': 48}, "PosixPath('602/resource.bc')": {'add_to_hard_reg_set': 1, 'mark_referenced_resources': 53, 'mark_set_resources': 63, 'return_insn_p': 5, 'find_basic_block': 8, 'df_lr_get_bb_info': 3, 'remove_from_hard_reg_set': 1, 'next_insn_no_annul': 7, 'find_dead_or_set_registers': 181, 'update_live_status': 7, 'mark_target_live_regs': 704, 'init_resource_info': 11, 'free_resource_info': 20, 'clear_hashed_info_for_insn': 3, 'incr_ticks_for_insn': 1}, "PosixPath('602/opts.bc')": {'set_struct_debug_option': 5, 'base_of_path': 2, 'matches_main_base': 7, 'should_emit_struct_debug': 20, 'VEC_const_char_p_base_pop': 2, 'print_ignored_options': 3, 'VEC_char_p_base_iterate': 2, 'flag_instrument_functions_exclude_p': 8, 'VEC_const_char_p_base_space': 2, 'VEC_const_char_p_heap_reserve': 2, 'VEC_const_char_p_base_quick_push': 2, 'VEC_const_char_p_heap_safe_push': 6, 'postpone_unknown_option_warning': 5, 'write_langs': 1, 'integral_argument': 2, 'set_option': 15, 'wrap_help': 6, 'option_enabled': 9, 'print_filtered_help': 43, 'print_specific_help': 34, 'enable_warning_as_error': 1, 'VEC_char_p_base_space': 2, 'VEC_char_p_heap_reserve': 4, 'VEC_char_p_base_quick_push': 2, 'VEC_char_p_heap_safe_push': 10, 'add_comma_separated_to_vector': 5, 'common_handle_option': 77, 'handle_option': 395, 'handle_options': 283, 'decode_options': 387, 'fast_math_flags_struct_set_p': 11, 'get_option_state': 8}, "PosixPath('602/function.bc')": {'allocate_struct_function': 14, 'assign_stack_temp_for_type': 157, 'expand_function_end': 67, 'split_complex_args': 35, 'aggregate_value_p': 13, 'VEC_function_p_base_space': 2, 'VEC_function_p_heap_reserve': 4, 'VEC_function_p_base_quick_push': 2, 'VEC_function_p_heap_safe_push': 10, 'VEC_function_p_base_pop': 2, 'pop_function_context': 2, 'free_after_compilation': 2, 'cut_slot_from_list': 5, 'insert_slot_to_list': 4, 'VEC_temp_slot_p_base_space': 2, 'VEC_temp_slot_p_gc_reserve_exact': 2, 'VEC_temp_slot_p_gc_safe_grow': 5, 'VEC_temp_slot_p_gc_safe_grow_cleared': 4, 'temp_slots_at_level': 4, 'temp_slot_address_compute_hash': 3, 'insert_temp_slot_address': 3, 'assign_temp': 13, 'find_temp_slot_from_address': 23, 'update_temp_slot_address': 5, 'mark_temp_addr_taken': 2, 'move_slot_to_level': 9, 'preserve_temp_slots': 28, 'make_slot_available': 12, 'remove_unused_temp_slot_addresses_1': 2, 'combine_temp_slots': 58, 'free_temp_slots': 3, 'pop_temp_slots': 1, 'instantiate_virtual_regs_in_rtx': 10, 'instantiate_decl_rtl': 5, 'use_register_for_decl': 15, 'pass_by_reference': 6, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 3, 'VEC_tree_base_quick_insert': 3, 'VEC_tree_heap_safe_insert': 4, 'VEC_tree_base_iterate': 2, 'assign_parms_augmented_arg_list': 62, 'assign_parm_find_data_types': 69, 'gimplify_parm_type': 3, 'gimplify_parameters': 38, 'pad_to_arg_alignment': 7, 'locate_and_pad_parm': 37, 'regno_clobbered_at_setjmp': 2, 'setjmp_vars_warning': 8, 'setjmp_args_warning': 6, 'generate_setjmp_warnings': 9, 'clear_block_marks': 2, 'VEC_tree_base_pop': 2, 'blocks_nreverse': 1, 'reorder_blocks_1': 24, 'reorder_blocks': 41, 'all_blocks': 2, 'number_blocks': 3, 'debug_find_var_in_block_tree': 2, 'pop_cfun': 2, 'assign_parms_setup_varargs': 7, 'assign_parm_find_entry_rtl': 57, 'assign_parm_is_stack_parm': 23, 'assign_parm_find_stack_rtl': 31, 'assign_parm_adjust_entry_rtl': 16, 'assign_parm_adjust_stack_rtl': 44, 'assign_parm_setup_block_p': 2, 'assign_parm_setup_block': 11, 'assign_parm_setup_reg': 77, 'assign_parm_setup_stack': 29, 'assign_parms_unsplit_complex': 16, 'assign_parms': 584, 'expand_function_start': 551, 'expand_dummy_function_end': 1, 'diddle_return_value': 7, 'clobber_return_register': 4, 'do_warn_unused_parameter': 7, 'contains': 5, 'ei_next': 2, 'reposition_prologue_and_epilogue_notes': 69, 'used_types_insert_helper': 3, 'used_types_insert': 49, 'hash_types_used_by_vars_entry': 2, 'types_used_by_vars_eq': 6, 'types_used_by_var_decl_insert': 5, 'gt_ggc_mx_temp_slot': 7, 'gt_ggc_mx_temp_slot_address_entry': 2, 'gt_ggc_m_P23temp_slot_address_entry4htab': 6, 'gt_pch_nx_temp_slot': 7, 'gt_pch_nx_temp_slot_address_entry': 2, 'gt_pch_p_P23temp_slot_address_entry4htab': 5, 'gt_pch_n_P23temp_slot_address_entry4htab': 6, 'match_asm_constraints_1': 40, 'rest_of_match_asm_constraints': 29, 'set_insn_locators': 2, 'single_succ_p': 1, 'single_succ_edge': 3, 'thread_prologue_and_epilogue_insns': 269, 'rest_of_handle_thread_prologue_and_epilogue': 213, 'safe_insn_predicate': 3, 'recog_memoized': 3, 'instantiate_virtual_regs_in_insn': 128, 'instantiate_expr': 3, 'instantiate_decls_1': 16, 'instantiate_decls': 14, 'instantiate_virtual_regs': 157}, "PosixPath('602/cfgloopanal.bc')": {'just_once_each_iteration_p': 2, 'number_of_loops': 2, 'ei_next': 2, 'loop_depth': 1, 'loops_state_set': 1, 'mark_irreducible_loops': 358, 'num_loop_insns': 4, 'average_num_loop_insns': 16, 'expected_loop_iterations_unbounded': 90, 'seq_cost': 3, 'init_set_costs': 1, 'estimate_reg_pressure_cost': 9, 'loop_outer': 3, 'mark_loop_exit_edges': 65}, "PosixPath('602/combine-stack-adj.bc')": {'single_set_for_csa': 11, 'try_apply_stack_adjustment': 11, 'adjust_frame_related_expr': 21, 'stack_memref_p': 6, 'record_one_stack_ref': 9, 'record_stack_refs': 10, 'combine_stack_adjustments_for_block': 63, 'combine_stack_adjustments': 95, 'rest_of_handle_stack_adjustments': 84}, "PosixPath('602/var-tracking.bc')": {'vt_initialize': 1122, 'dataflow_set_merge': 94, 'variable_union': 1027, 'dataflow_set_clear_at_call': 6, 'delete_debug_insns': 20, 'dataflow_set_init': 9, 'stack_adjust_offset_pre_post': 24, 'insn_stack_adjust_offset_pre_post': 5, 'ei_next': 2, 'vt_stack_adjustments': 151, 'VEC_rtx_base_space': 2, 'VEC_rtx_heap_reserve': 4, 'VEC_rtx_base_quick_push': 2, 'VEC_rtx_heap_safe_push': 10, 'var_debug_decl': 2, 'attrs_list_insert': 10, 'dv_uid': 3, 'dv_htab_hash': 2, 'shared_hash_find_slot_1': 2, 'shared_hash_find_slot': 2, 'vars_copy_1': 3, 'dv_onepart_p': 1, 'variable_htab_free': 16, 'shared_hash_unshare': 3, 'shared_hash_find_slot_unshare_1': 8, 'loc_cmp': 17, 'shared_var_p': 4, 'unshare_variable': 255, 'find_variable_location_part': 2, 'add_value_chain': 29, 'add_value_chains': 5, 'set_dv_changed': 1, 'variable_was_changed': 41, 'set_slot_part': 249, 'var_reg_decl_set': 5, 'vt_init_cfa_base': 13, 'single_succ_p': 1, 'single_succ_edge': 3, 'single_succ': 1, 'single_pred_p': 1, 'log_op_type': 14, 'VEC_micro_operation_base_space': 2, 'VEC_micro_operation_heap_reserve': 4, 'VEC_micro_operation_base_quick_push': 3, 'VEC_micro_operation_heap_safe_push': 10, 'use_narrower_mode': 3, 'adjust_mems': 34, 'adjust_insn': 28, 'contains_symbol_ref': 1, 'track_expr_p': 28, 'find_use_val': 6, 'get_address_mode': 2, 'track_loc_p': 4, 'use_type': 14, 'var_lowpart': 2, 'same_variable_part_p': 7, 'replace_expr_with_values': 2, 'reverse_op': 14, 'add_stores': 283, 'add_uses': 348, 'add_with_sets': 189, 'fp_setter': 8, 'vt_get_decl_and_offset': 6, 'vt_add_function_parameters': 94, 'attrs_list_clear': 2, 'shared_hash_destroy': 2, 'vt_finalize': 19, 'dataflow_set_clear': 1, 'attrs_list_copy': 29, 'dataflow_set_copy': 36, 'attrs_list_member': 4, 'attrs_list_mpdv_union': 11, 'variable_union_info_cmp_pos': 6, 'onepart_variable_different_p': 6, 'find_loc_in_1pdv': 6, 'insert_into_intersection': 13, 'intersect_loc_chains': 41, 'remove_value_chain': 19, 'remove_value_chains': 5, 'delete_slot_part': 80, 'clobber_slot_part': 45, 'clobber_variable_part': 1, 'canonicalize_values_star': 73, 'variable_merge_over_cur': 217, 'variable_merge_over_src': 5, 'canonicalize_vars_star': 41, 'val_reset': 32, 'variable_post_merge_perm_vals': 38, 'remove_duplicate_values': 12, 'variable_post_merge_new_vals': 116, 'dataflow_post_merge_adjust': 10, 'attrs_list_union': 9, 'dataflow_set_union': 28, 'var_regno_delete': 7, 'may_be_aliased': 7, 'is_global_var': 2, 'mem_dies_at_call': 11, 'dataflow_set_remove_mem_locs': 54, 'find_mem_expr_in_1pdv': 9, 'dataflow_set_preserve_mem_locs': 182, 'var_reg_set': 2, 'var_mem_set': 2, 'val_resolve': 8, 'val_store': 3, 'var_reg_delete': 12, 'var_mem_delete': 2, 'get_init_value': 6, 'find_src_status': 3, 'find_src_set_src': 11, 'var_reg_delete_and_set': 23, 'var_mem_delete_and_set': 2, 'dataflow_set_equiv_regs': 67, 'dump_var': 16, 'variable_part_different_p': 7, 'variable_different_p': 9, 'dataflow_set_different': 7, 'canonicalize_values_mark': 18, 'compute_bb_dataflow': 355, 'dump_attrs_list': 1, 'dump_dataflow_set': 3, 'vt_find_locations': 893, 'dump_dataflow_sets': 13, 'VEC_rtx_base_iterate': 2, 'add_cselib_value_chains': 3, 'VEC_variable_base_pop': 2, 'dv_changed_p': 1, 'VEC_variable_base_space': 2, 'VEC_variable_heap_reserve': 2, 'VEC_variable_base_quick_push': 2, 'VEC_variable_heap_safe_push': 6, 'check_changed_vars_0': 11, 'check_changed_vars_2': 2, 'VEC_rtx_base_pop': 2, 'vt_expand_loc_callback': 31, 'vt_expand_loc': 7, 'vt_expand_loc_dummy': 7, 'emit_note_insn_var_location': 359, 'check_changed_vars_3': 42, 'check_changed_vars_1': 3, 'emit_notes_for_changes': 21, 'emit_notes_for_differences_2': 9, 'emit_notes_for_differences_1': 82, 'emit_notes_for_differences': 8, 'emit_notes_in_bb': 119, 'vt_emit_notes': 175, 'variable_tracking_main_1': 182, 'variable_tracking_main': 183}, "PosixPath('602/md5.bc')": {'md5_init_ctx': 22, 'md5_read_ctx': 4, 'md5_process_block': 123, 'md5_finish_ctx': 20, 'md5_process_bytes': 7, 'md5_stream': 34, 'md5_buffer': 23}, "PosixPath('602/cgraphbuild.bc')": {'reset_inline_failed': 20, 'compute_call_stmt_bb_frequency': 8, 'record_reference': 4, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_call_fndecl': 2, 'gsi_next': 1, 'rebuild_cgraph_edges': 41, 'build_cgraph_edges': 58}, "PosixPath('602/ira.bc')": {'setup_class_subset_and_memory_move_costs': 36, 'update_equiv_regs': 397, 'fix_reg_equiv_init': 40, 'ira_print_disposition': 11, 'print_class_cover': 4, 'ira_debug_class_cover': 4, 'ira_init_register_move_cost': 28, 'ira_init_once': 3, 'free_register_move_costs': 4, 'setup_reg_mode_hard_regset': 3, 'setup_class_hard_regs': 27, 'setup_available_class_regs': 7, 'setup_alloc_regs': 31, 'setup_reg_subclasses': 25, 'setup_cover_and_important_classes': 90, 'setup_class_translate': 114, 'comp_reg_classes_func': 8, 'reorder_important_classes': 10, 'setup_reg_class_relations': 258, 'find_reg_class_closure': 587, 'setup_hard_regno_cover_class': 6, 'setup_reg_class_nregs': 3, 'setup_prohibited_class_mode_regs': 9, 'ira_init': 991, 'compute_regs_asm_clobbered': 48, 'ira_setup_eliminable_regset': 253, 'df_lr_get_bb_info': 3, 'mark_elimination': 25, 'recog_memoized': 3, 'setup_prohibited_mode_move_regs': 9, 'no_equiv': 11, 'validate_equiv_mem_from_store': 2, 'validate_equiv_mem': 13, 'equiv_init_varies_p': 8, 'equiv_init_movable_p': 18, 'contains_replace_regs': 5, 'memref_referenced_p': 12, 'memref_used_between_p': 3, 'df_live_get_bb_info': 3, 'adjust_cleared_regs': 3, 'find_reg_equiv_invariant_const': 2, 'ira_allocno_iter_cond': 1, 'setup_allocno_assignment_flags': 21, 'setup_reg_renumber': 31, 'calculate_allocation_cost': 96, 'VEC_rtx_base_space': 2, 'VEC_rtx_gc_reserve_exact': 2, 'VEC_rtx_gc_safe_grow': 4, 'bmp_iter_set_init': 20, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'pseudo_for_reload_consideration_p': 1, 'init_live_subregs': 5, 'build_insn_chain': 327, 'ira': 991}, "PosixPath('602/stor-layout.bc')": {'start_record_layout': 20, 'place_field': 116, 'finalize_type_size': 139, 'finish_builtin_struct': 10, 'layout_type': 152, 'initialize_sizetypes': 11, 'set_sizetype': 41, 'VEC_tree_base_iterate': 2, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 6, 'copy_self_referential_tree_r': 3, 'self_referential_size': 60, 'variable_size': 59, 'finalize_size_functions': 2, 'mode_for_size': 6, 'smallest_mode_for_size': 6, 'int_mode_for_mode': 1, 'vector_type_mode': 6, 'do_type_align': 3, 'layout_decl': 219, 'relayout_decl': 12, 'debug_rli': 7, 'rli_size_unit_so_far': 2, 'rli_size_so_far': 2, 'update_alignment_for_field': 28, 'place_union_field': 20, 'compute_record_mode': 18, 'finalize_record_size': 19, 'finish_record_layout': 22, 'set_min_and_max_values_for_integral_type': 2, 'fixup_unsigned_type': 2, 'make_fract_type': 4, 'make_accum_type': 4, 'get_best_mode': 20}, "PosixPath('602/cpp_directives.bc')": {'_cpp_handle_directive': 343, 'do_pragma_push_macro': 19, 'destringize_and_run': 70, 'do_pragma': 92, 'start_directive': 11, 'check_eol': 1, 'do_ident': 3, 'parse_answer': 17, 'parse_assertion': 39, 'find_answer': 10, 'do_unassert': 6, 'do_assert': 36, 'check_eol_return_comments': 1, 'cpp_in_primary_file': 1, 'do_diagnostic': 9, 'lookup_pragma_entry': 2, 'do_elif': 12, 'strtolinenum': 3, 'skip_rest_of_line': 4, '_cpp_do_file_change': 1, 'do_line': 60, 'lex_macro_node': 7, 'do_undef': 10, 'push_conditional': 167, 'do_ifndef': 11, 'do_else': 27, 'do_if': 2, 'do_ifdef': 11, 'do_endif': 63, 'do_define': 4, 'parse_include': 14, 'do_include_common': 51, 'do_include_next': 1, 'directive_diagnostics': 75, 'prepare_directive_trad': 18, 'end_directive': 43, 'read_flag': 4, 'do_linemarker': 54, 'new_pragma_entry': 2, 'register_pragma_1': 11, 'cpp_register_pragma': 2, 'cpp_register_deferred_pragma': 4, 'register_pragma_internal': 2, 'do_pragma_dependency': 5, 'do_pragma_system_header': 1, 'do_pragma_poison': 4, 'get__Pragma_string': 2, 'cpp_pop_definition': 18, 'do_pragma_pop_macro': 25, 'cpp_push_definition': 2, 'do_pragma_once': 2, 'count_registered_pragmas': 4, 'save_registered_pragmas': 8, 'restore_registered_pragmas': 3, 'cpp_push_buffer': 83, '_cpp_pop_buffer': 26, '_cpp_test_assertion': 6, 'run_directive': 22, 'cpp_define': 4, 'cpp_define_formatted': 1, 'handle_assertion': 1, 'cpp_get_deps': 1, '_cpp_init_directives': 1}, "PosixPath('602/cp-demangle.bc')": {'cplus_demangle_type': 87, 'd_print_flush': 4, 'd_print_cast': 18, 'cplus_demangle_fill_name': 4, 'cplus_demangle_fill_extended_operator': 4, 'cplus_demangle_fill_ctor': 4, 'cplus_demangle_fill_dtor': 4, 'd_make_empty': 4, 'd_make_comp': 4, 'd_cv_qualifiers': 13, 'd_add_substitution': 6, 'd_make_builtin_type': 2, 'd_number': 1, 'd_make_name': 4, 'd_identifier': 13, 'd_source_name': 13, 'd_make_extended_operator': 4, 'd_make_operator': 2, 'd_ctor_dtor_name': 21, 'd_compact_number': 2, 'd_unnamed_type': 4, 'd_make_sub': 4, 'd_substitution': 42, 'd_make_template_param': 2, 'd_template_param': 3, 'd_make_function_param': 2, 'd_make_default_arg': 4, 'd_make_character': 2, 'd_java_resource': 8, 'is_ctor_dtor_or_conversion': 2, 'has_return_type': 5, 'd_unqualified_name': 24, 'd_operator_name': 10, 'd_template_args': 21, 'd_expression': 24, 'd_exprlist': 7, 'd_expr_primary': 15, 'cplus_demangle_mangled_name': 2, 'd_encoding': 25, 'd_parmlist': 37, 'd_name': 13, 'd_print_init': 22, 'd_append_char': 3, 'd_print_java_identifier': 11, 'd_index_template_argument': 3, 'd_lookup_template_argument': 1, 'd_append_num': 1, 'd_find_pack': 3, 'd_pack_length': 4, 'd_print_comp': 437, 'd_print_expr_op': 4, 'd_print_function_type': 24, 'd_print_mod_list': 83, 'd_print_array_type': 4, 'd_print_mod': 5, 'cplus_demangle_print_callback': 22, 'd_growable_string_resize': 6, 'd_growable_string_append_buffer': 11, 'd_growable_string_callback_adapter': 10, 'cplus_demangle_print': 5, 'cplus_demangle_init_info': 56, 'd_demangle_callback': 116, 'd_demangle': 5, 'cplus_demangle_v3': 1, 'java_demangle_v3': 1, 'is_ctor_or_dtor': 117, 'is_gnu_v3_mangled_ctor': 4, 'is_gnu_v3_mangled_dtor': 4}, "PosixPath('602/genrtl.bc')": {'gen_rtx_fmt_0_stat': 2, 'gen_rtx_fmt_ee_stat': 4, 'gen_rtx_fmt_ue_stat': 4, 'gen_rtx_fmt_E_stat': 2, 'gen_rtx_fmt_e_stat': 2, 'gen_rtx_fmt_iuuBieie_stat': 37, 'gen_rtx_fmt_iuuBieie0_stat': 46, 'gen_rtx_fmt_iuuBieiee_stat': 46, 'gen_rtx_fmt_iuu00000_stat': 11, 'gen_rtx_fmt_iuuB00is_stat': 30, 'gen_rtx_fmt_si_stat': 4, 'gen_rtx_fmt_ssiEEEi_stat': 29, 'gen_rtx_fmt_Ei_stat': 4, 'gen_rtx_fmt_eEee0_stat': 16, 'gen_rtx_fmt_eee_stat': 7, 'gen_rtx_fmt_w_stat': 2, 'gen_rtx_fmt_www_stat': 7, 'gen_rtx_fmt_s_stat': 2, 'gen_rtx_fmt_i00_stat': 4, 'gen_rtx_fmt_ei_stat': 4, 'gen_rtx_fmt_e0_stat': 4, 'gen_rtx_fmt_u_stat': 2, 'gen_rtx_fmt_s00_stat': 4, 'gen_rtx_fmt_tei_stat': 7, 'gen_rtx_fmt_iss_stat': 7, 'gen_rtx_fmt_is_stat': 4, 'gen_rtx_fmt_isE_stat': 7, 'gen_rtx_fmt_i_stat': 2, 'gen_rtx_fmt_iE_stat': 4, 'gen_rtx_fmt_ss_stat': 4, 'gen_rtx_fmt_sEss_stat': 11, 'gen_rtx_fmt_eE_stat': 4, 'gen_rtx_fmt_Ess_stat': 7, 'gen_rtx_fmt_ses_stat': 7, 'gen_rtx_fmt_sss_stat': 7, 'gen_rtx_fmt_sse_stat': 7, 'gen_rtx_fmt_sies_stat': 11, 'gen_rtx_fmt_sE_stat': 4, 'gen_rtx_fmt_ii_stat': 4, 'gen_rtx_fmt_Ee_stat': 4}, "PosixPath('602/ipa-prop.bc')": {'ipa_push_func_to_list_1': 3, 'ipa_init_func_list': 14, 'ipa_populate_param_decls': 3, 'ipa_initialize_node_params': 8, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gsi_next': 1, 'ipa_get_param': 1, 'ipa_get_param_decl_index': 5, 'ipa_detect_param_modifications': 24, 'VEC_ipa_edge_args_t_base_space': 2, 'VEC_ipa_edge_args_t_gc_reserve_exact': 2, 'VEC_ipa_edge_args_t_gc_safe_grow': 4, 'VEC_ipa_edge_args_t_gc_safe_grow_cleared': 4, 'ipa_count_arguments': 10, 'ipa_edge_args_info_available_for_edge_p': 2, 'ipa_print_node_jump_functions': 23, 'gimple_ops': 1, 'compute_complex_pass_through': 30, 'compute_scalar_jump_functions': 43, 'type_like_member_ptr_p': 8, 'compute_pass_through_member_ptrs': 6, 'gsi_prev': 1, 'get_ssa_def_if_simple_copy': 2, 'fill_member_ptr_cst_jump_function': 4, 'determine_cst_member_ptr': 16, 'compute_cst_member_ptr_arguments': 28, 'ipa_compute_jump_functions': 110, 'ipa_note_param_call': 23, 'ipa_get_member_ptr_load_param': 20, 'ipa_get_stmt_member_ptr_load_param': 10, 'single_pred_p': 1, 'single_succ_p': 1, 'single_pred_edge': 3, 'single_pred': 1, 'single_succ_edge': 3, 'single_succ': 1, 'ipa_analyze_call_uses': 40, 'ipa_analyze_stmt_uses': 29, 'ipa_analyze_params_uses': 73, 'print_edge_addition_message': 3, 'VEC_cgraph_edge_p_base_space': 2, 'VEC_cgraph_edge_p_heap_reserve': 4, 'VEC_cgraph_edge_p_base_quick_push': 2, 'VEC_cgraph_edge_p_heap_safe_push': 10, 'update_call_notes_after_inlining': 67, 'update_jump_functions_after_inlining': 23, 'propagate_info_to_inlined_callees': 141, 'ipa_free_node_params_substructures': 2, 'VEC_ipa_node_params_t_base_space': 2, 'VEC_ipa_node_params_t_heap_reserve_exact': 2, 'VEC_ipa_node_params_t_heap_safe_grow': 4, 'VEC_ipa_node_params_t_heap_safe_grow_cleared': 4, 'ipa_check_create_node_params': 3, 'ipa_node_duplication_hook': 42, 'ipa_edge_duplication_hook': 8, 'ipa_edge_removal_hook': 1, 'ipa_print_node_params': 13, 'VEC_tree_base_quick_push': 2, 'ipa_get_vector_of_formal_parms': 2, 'get_vector_of_formal_parm_types': 2, 'ipa_modify_formal_parameters': 56, 'gimple_call_fndecl': 2, 'gimple_set_op': 2, 'ipa_modify_call_arguments': 70, 'VEC_ipa_parm_adjustment_t_base_quick_push': 3, 'ipa_combine_adjustments': 92, 'ipa_dump_param_adjustments': 13, 'csi_end_p': 1, 'ipa_write_jump_function': 7, 'ipa_write_param_call_note': 8, 'ipa_write_node_info': 52, 'ipa_prop_write_jump_functions': 81, 'ipa_read_param_call_note': 5, 'ipa_read_node_info': 27, 'ipa_prop_read_section': 36, 'ipa_prop_read_jump_functions': 52, 'ipa_update_after_lto_read': 58, 'lto_ipa_fixup_call_notes': 8}, "PosixPath('602/tree-vect-stmts.bc')": {'vect_mark_stmts_to_be_vectorized': 374, 'gsi_stmt': 1, 'vinfo_for_stmt': 1, 'gimple_vdef': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_init_phidef': 2, 'gimple_def_ops': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_next_def': 6, 'op_iter_init_def': 11, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'next_readonly_imm_use': 4, 'vect_stmt_relevant_p': 132, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 4, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 10, 'vect_mark_relevant': 42, 'gsi_next': 1, 'bb_seq': 2, 'gsi_start_bb': 7, 'VEC_gimple_base_pop': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'gimple_ops': 1, 'vect_is_simple_use': 7, 'process_use': 39, 'cost_for_stmt': 1, 'stmt_vinfo_set_inside_of_loop_cost': 1, 'stmt_vinfo_set_outside_of_loop_cost': 1, 'vect_model_simple_cost': 9, 'vect_cost_strided_group_size': 4, 'vect_model_store_cost': 19, 'vect_model_load_cost': 22, 'gimple_set_op': 2, 'is_loop_header_bb_p': 5, 'new_stmt_vec_info': 74, 'VEC_vec_void_p_base_space': 2, 'VEC_vec_void_p_heap_reserve': 2, 'VEC_vec_void_p_base_quick_push': 2, 'VEC_vec_void_p_heap_safe_push': 6, 'set_vinfo_for_stmt': 5, 'vect_finish_stmt_generation': 2, 'gsi_after_labels': 16, 'vect_init_vector': 37, 'get_vectype_for_scalar_type': 40, 'vect_get_vec_def_for_operand': 46, 'vect_get_vec_def_for_stmt_copy': 2, 'gimple_call_fndecl': 2, 'vectorizable_function': 4, 'vect_is_simple_cond': 44, 'vectorizable_condition': 175, 'VEC_tree_base_quick_push': 2, 'supportable_widening_operation': 45, 'VEC_tree_base_iterate': 2, 'VEC_tree_heap_copy': 2, 'VEC_tree_base_pop': 2, 'vect_create_vectorized_promotion_stmts': 31, 'vectorizable_type_promotion': 584, 'supportable_narrowing_operation': 24, 'vect_get_loop_based_defs': 8, 'vect_create_vectorized_demotion_stmts': 14, 'vectorizable_type_demotion': 275, 'vect_get_vec_defs': 6, 'vect_get_vec_defs_for_stmt_copy': 14, 'vectorizable_conversion': 298, 'vectorizable_operation': 200, 'vectorizable_assignment': 92, 'vectorizable_load': 277, 'vectorizable_call': 62, 'vectorizable_store': 279, 'vect_analyze_stmt': 36, 'vect_transform_stmt': 87}, "PosixPath('602/tree-ssa-copyrename.bc')": {'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 2, 'partition_to_var': 14, 'copy_rename_partition_coalesce': 32, 'gsi_next': 1, 'rename_ssa_copies': 74}, "PosixPath('602/c-semantics.bc')": {'pop_stmt_list': 22, 'build_stmt': 32}, "PosixPath('602/tree-ssa-math-opts.bc')": {'first_imm_use_on_stmt': 3, 'next_imm_use_on_stmt': 4, 'execute_cse_sincos_1': 77, 'find_bswap_1': 35, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gsi_next': 1, 'gsi_after_labels': 40, 'gimple_ops': 1, 'do_shift_rotate': 3, 'verify_symbolic_number_p': 2, 'find_bswap': 3, 'gimple_set_op': 2, 'execute_optimize_bswap': 62, 'gimple_call_fndecl': 2, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'move_use_after_head': 6, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'gimple_vuse_op': 2, 'link_use_stmts_after': 46, 'first_imm_use_stmt': 14, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 4, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 10, 'next_imm_use_stmt': 6, 'VEC_gimple_base_iterate': 2, 'execute_cse_sincos': 95, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'occ_new': 5, 'insert_bb': 6, 'register_division_in': 16, 'next_readonly_imm_use': 4, 'compute_merit': 17, 'insert_reciprocals': 48, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 8, 'replace_reciprocal': 10, 'free_bb': 8, 'execute_cse_reciprocals_1': 135, 'op_iter_next_tree': 10, 'single_ssa_tree_operand': 1, 'execute_cse_reciprocals': 173}, "PosixPath('602/pointer-set.bc')": {'pointer_map_create': 5, 'pointer_set_create': 4, 'pointer_set_contains': 4, 'pointer_set_insert': 28, 'pointer_set_traverse': 6, 'pointer_map_contains': 7, 'pointer_map_insert': 48, 'pointer_map_traverse': 8}, "PosixPath('602/gimple.bc')": {'gsi_last': 9, 'gsi_start': 9, 'gimple_size': 1, 'gimple_alloc_stat': 4, 'gimple_ops': 1, 'gimple_set_op': 2, 'is_gimple_reg': 9, 'is_gimple_constant': 2, 'strip_invariant_refs': 13, 'is_gimple_invariant_address': 2, 'is_gimple_val': 3, 'gimple_build_call': 6, 'gimple_build_call_from_tree': 5, 'gimple_build_assign_stat': 9, 'gimple_seq_last_stmt': 1, 'gimplify_assign': 1, 'gimple_cond_get_ops_from_tree': 4, 'gimple_build_cond_from_tree': 6, 'gimple_cond_set_condition_from_tree': 9, 'gimple_build_bind': 2, 'gimple_build_asm_1': 7, 'gimple_asm_set_output_op': 2, 'gimple_asm_set_clobber_op': 4, 'gimple_asm_set_label_op': 4, 'gimple_build_asm_vec': 21, 'gimple_build_catch': 2, 'gimple_build_eh_filter': 2, 'gimple_build_try': 2, 'gimple_switch_set_index': 2, 'gimple_build_switch_nlabels': 2, 'gimple_build_switch': 5, 'gimple_build_debug_bind_stat': 2, 'gimple_build_omp_critical': 2, 'gimple_build_omp_for': 5, 'gimple_build_omp_parallel': 7, 'gimple_build_omp_task': 22, 'gimple_build_omp_continue': 2, 'gimple_build_omp_sections': 2, 'gimple_build_omp_single': 2, 'gimple_build_omp_atomic_load': 2, 'gimple_seq_alloc': 1, 'gimple_seq_free': 3, 'gimple_seq_add_stmt': 9, 'gimple_seq_add_seq': 9, 'gsi_stmt': 1, 'gsi_next': 1, 'empty_body_p': 10, 'gimple_omp_for_cond': 2, 'gimple_omp_for_set_cond': 2, 'gimple_omp_for_index': 2, 'gimple_omp_for_set_index': 2, 'gimple_omp_for_initial': 2, 'gimple_omp_for_set_initial': 2, 'gimple_omp_for_final': 2, 'gimple_omp_for_set_final': 2, 'gimple_omp_for_incr': 2, 'gimple_omp_for_set_incr': 2, 'gimple_vdef': 2, 'gimple_vuse': 2, 'gimple_call_fndecl': 2, 'gimple_call_flags': 2, 'VEC_gimple_base_space': 2, 'VEC_gimple_gc_reserve': 4, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_gc_safe_push': 10, 'gimple_set_modified': 10, 'gimple_seq_copy': 7, 'gimple_copy': 39, 'is_gimple_addressable': 1, 'is_gimple_lvalue': 1, 'gimple_asm_output_op': 2, 'gimple_asm_label_op': 4, 'walk_gimple_asm': 55, 'gimple_omp_for_index_ptr': 2, 'gimple_omp_for_initial_ptr': 2, 'gimple_omp_for_final_ptr': 2, 'gimple_omp_for_incr_ptr': 2, 'walk_gimple_op': 7, 'walk_gimple_seq': 11, 'walk_gimple_stmt': 19, 'gimple_has_body_p': 2, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_gc_reserve_exact': 4, 'VEC_basic_block_gc_safe_grow': 7, 'VEC_basic_block_gc_safe_grow_cleared': 7, 'gimple_set_bb': 26, 'gimple_assign_set_rhs_with_ops': 2, 'gimple_assign_set_rhs_from_tree': 9, 'gimple_has_side_effects': 3, 'gimple_rhs_has_side_effects': 4, 'gimple_could_trap_p_1': 9, 'is_gimple_address': 2, 'is_gimple_ip_invariant_address': 2, 'is_gimple_stmt': 5, 'is_gimple_non_addressable': 2, 'is_gimple_asm_val': 2, 'is_gimple_min_lval': 1, 'get_call_expr_in': 3, 'get_base_address': 2, 'tree_operand_length': 3, 'recalculate_side_effects': 4, 'canonicalize_cond_expr_cond': 18, 'VEC_tree_base_quick_push': 2, 'gimple_call_copy_skip_args': 7, 'compare_field_offset': 7, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 4, 'VEC_tree_heap_safe_push': 10, 'iterative_hash_name': 2, 'VEC_tree_base_pop': 2, 'iterative_hash_gimple_type': 116, 'visit': 29, 'gimple_type_hash': 14, 'type_pair_eq': 14, 'type_pair_hash': 2, 'lookup_type_pair': 20, 'compare_type_names_p': 4, 'gimple_types_compatible_p': 84, 'gimple_register_type': 33, 'print_gimple_types_stats': 4, 'gimple_signed_or_unsigned_type': 343, 'gimple_get_alias_set': 19, 'gimple_use_ops': 2, 'op_iter_init': 14, 'op_iter_next_tree': 10, 'op_iter_init_tree': 19, 'count_ptr_derefs': 16, 'count_uses_and_derefs': 144, 'get_base_loadstore': 1, 'walk_stmt_load_store_addr_ops': 69, 'gimple_ior_addresses_taken_1': 2, 'gimple_decl_printable_name': 7}, "PosixPath('602/stub-objc.bc')": {}, "PosixPath('602/tree-loop-distribution.bc')": {'rdg_flag_vertex_and_dependent': 69, 'gsi_start': 9, 'first_imm_use_on_stmt': 3, 'next_imm_use_on_stmt': 4, 'VEC_bitmap_base_iterate': 2, 'dump_rdg_partitions': 2, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 45, 'VEC_gimple_base_iterate': 2, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 4, 'VEC_int_heap_safe_push': 11, 'predecessor_has_mem_write': 20, 'has_anti_dependence': 4, 'mark_nodes_having_upstream_mem_writes': 57, 'VEC_rdgc_base_space': 2, 'VEC_rdgc_heap_reserve': 4, 'VEC_rdgc_base_quick_push': 2, 'VEC_rdgc_heap_safe_push': 10, 'rdg_build_components': 32, 'VEC_rdgc_base_iterate': 2, 'gimple_vuse_op': 2, 'gimple_ops': 1, 'gimple_op': 2, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'next_readonly_imm_use': 4, 'rdg_cannot_recompute_vertex_p': 3, 'rdg_flag_vertex': 18, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'rdg_has_similar_memory_accesses': 9, 'rdg_flag_all_uses': 1, 'VEC_int_base_unordered_remove': 4, 'bmp_iter_next': 2, 'rdg_flag_similar_memory_accesses': 177, 'VEC_edge_base_iterate': 2, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 4, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 10, 'collect_condition_stmts': 15, 'VEC_gimple_base_pop': 2, 'rdg_flag_loop_exits': 148, 'build_rdg_partition_for_component': 334, 'VEC_bitmap_base_space': 2, 'VEC_bitmap_heap_reserve': 4, 'VEC_bitmap_base_quick_push': 2, 'VEC_bitmap_heap_safe_push': 10, 'free_rdg_components': 2, 'rdg_build_partitions': 680, 'number_of_rw_in_rdg': 13, 'number_of_rw_in_partition': 73, 'partition_contains_all_rw': 117, 'gsi_next': 1, 'bb_seq': 2, 'gsi_start_bb': 4, 'gsi_stmt': 1, 'gsi_last_bb': 4, 'build_size_arg_loc': 2, 'generate_memset_zero': 33, 'phi_nodes': 2, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'move_use_after_head': 6, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_init_use': 33, 'link_use_stmts_after': 92, 'first_imm_use_stmt': 14, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 8, 'next_imm_use_stmt': 6, 'prop_phis': 106, 'generate_builtin': 179, 'update_phis_for_loop_copy': 14, 'copy_loop_before': 12, 'generate_loops_for_partition': 24, 'generate_code_for_partition': 203, 'ldist_gen': 820, 'distribute_loop': 865, 'tree_loop_distribution': 978}, "PosixPath('602/cse.bc')": {'cse_extended_basic_block': 663, 'get_cse_reg_info_1': 15, 'cse_insn': 1281, 'make_regs_eqv': 102, 'make_new_qty': 31, 'dump_class': 3, 'get_cse_reg_info': 14, 'hash_rtx_string': 2, 'hash_rtx_cb': 109, 'exp_equiv_p': 67, 'init_cse_reg_info': 6, 'single_pred_p': 1, 'single_succ_p': 1, 'single_succ_edge': 3, 'cse_find_path': 196, 'cse_prescan_path': 17, 'cse_dump_path': 6, 'new_basic_block': 9, 'ei_next': 2, 'bb_has_eh_pred': 14, 'df_scan_get_bb_info': 3, 'df_get_artificial_defs': 6, 'delete_reg_equiv': 22, 'lookup_for_remove': 9, 'remove_from_table': 84, 'remove_pseudo_from_table': 9, 'cse_rtx_varies_p': 71, 'check_dependence': 5, 'invalidate': 44, 'canon_reg': 15, 'cse_process_notes': 20, 'lookup': 4, 'lookup_as_function': 4, 'equiv_constant': 22, 'notreg_cost': 12, 'fold_rtx': 430, 'find_comparison_args': 30, 'remove_invalid_refs': 3, 'remove_invalid_subreg_refs': 10, 'rehash_using_reg': 22, 'insert_regs': 262, 'mention_regs': 38, 'approx_reg_cost_1': 6, 'approx_reg_cost': 1, 'add_to_hard_reg_set': 1, 'fixed_base_plus_p': 5, 'insert_with_costs': 330, 'merge_equiv_classes': 15, 'use_related_value': 8, 'find_reg_offset_for_const': 27, 'try_const_anchors': 84, 'invalidate_from_clobbers': 10, 'invalidate_memory': 2, 'invalidate_for_call': 15, 'insert_const_anchor': 4, 'insert_const_anchors': 20, 'have_eh_succ_edges': 14, 'record_jump_cond': 33, 'record_jump_equiv': 65, 'check_for_label_ref': 5, 'cse_main': 994, 'count_reg_usage': 27, 'is_dead_reg': 2, 'insn_live_p': 8, 'delete_trivially_dead_insns': 20, 'cse_change_cc_mode': 6, 'cse_change_cc_mode_insn': 2, 'cse_change_cc_mode_insns': 2, 'cse_cc_succs': 285, 'cse_condition_code_reg': 28, 'rest_of_handle_cse2': 26}, "PosixPath('602/tree-outof-ssa.bc')": {'expand_phi_nodes': 684, 'phi_nodes': 2, 'clear_elim_graph': 9, 'gsi_stmt': 1, 'var_to_partition': 8, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 4, 'VEC_int_base_quick_push': 2, 'VEC_int_heap_safe_push': 11, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 10, 'VEC_source_location_base_space': 2, 'VEC_source_location_heap_reserve': 4, 'VEC_source_location_base_quick_push': 2, 'VEC_source_location_heap_safe_push': 11, 'VEC_int_base_iterate': 2, 'elim_graph_add_node': 1, 'eliminate_name': 1, 'gsi_next': 1, 'eliminate_build': 42, 'elim_graph_size': 1, 'elim_forward': 19, 'VEC_int_base_pop': 2, 'elim_unvisited_predecessor': 17, 'partition_to_var': 14, 'get_temp_reg': 3, 'bb_seq': 2, 'gsi_last_bb': 4, 'gsi_prev': 1, 'single_pred_p': 1, 'single_pred_edge': 3, 'set_location_for_edge': 30, 'emit_partition_copy': 2, 'insert_part_to_rtx_on_edge': 6, 'insert_partition_copy_on_edge': 7, 'elim_backward': 30, 'insert_rtx_to_part_on_edge': 6, 'elim_graph_remove_succ_edge': 16, 'elim_create': 161, 'VEC_tree_base_pop': 2, 'VEC_source_location_base_pop': 2, 'insert_value_copy_on_edge': 19, 'eliminate_phi': 573, 'ei_next': 2, 'set_phi_nodes': 2, 'delete_elim_graph': 1, 'finish_out_of_ssa': 2, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'gsi_start_bb': 4, 'maybe_renumber_stmts_bb': 4, 'next_readonly_imm_use': 4, 'trivially_conflicts_p': 33, 'gimple_ops': 1, 'gimple_set_op': 4, 'gimple_assign_set_lhs': 3, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 15, 'insert_backedge_copies': 126, 'has_zero_uses': 1, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'remove_gimple_phi_args': 33, 'eliminate_useless_phis': 20, 'remove_ssa_form': 10, 'rewrite_out_of_ssa': 253}, "PosixPath('602/coverage.bc')": {'coverage_counter_alloc': 40, 'coverage_end_function': 35, 'build_ctr_info_value': 28, 'gcov_write_string': 1, 'gcov_write_tag': 2, 'gcov_read_words': 1, 'gcov_read_counter': 2, 'coverage_checksum_string': 2, 'compute_checksum': 2, 'get_coverage_counts': 30, 'tree_coverage_counter_ref': 8, 'tree_coverage_counter_addr': 9, 'coverage_begin_output': 7, 'htab_counts_entry_eq': 6, 'htab_counts_entry_hash': 2, 'read_counts_file': 144, 'coverage_init': 196, 'build_fn_info_value': 1, 'build_gcov_info': 59, 'create_coverage': 86, 'coverage_finish': 88}, "PosixPath('602/sort.bc')": {'sort_pointers': 11}, "PosixPath('602/rtlanal.bc')": {'rtx_unstable_p': 3, 'rtx_varies_p': 6, 'rtx_addr_can_trap_p_1': 24, 'nonzero_address_p': 19, 'rtx_addr_varies_p': 3, 'get_integer_term': 6, 'get_related_value': 9, 'offset_within_block_p': 11, 'split_const': 6, 'count_occurrences': 12, 'reg_mentioned_p': 7, 'subreg_get_info': 96, 'subreg_regno_offset': 1, 'subreg_regno': 6, 'subreg_nregs_with_regno': 9, 'refers_to_regno_p': 16, 'reg_overlap_mentioned_p': 10, 'find_regno_fusage': 8, 'find_reg_fusage': 8, 'reg_used_between_p': 1, 'reg_referenced_p': 16, 'note_stores': 9, 'set_of': 7, 'reg_set_p': 3, 'modified_between_p': 4, 'modified_in_p': 4, 'find_reg_note': 9, 'side_effects_p': 1, 'single_set_2': 7, 'multiple_sets': 4, 'set_noop_p': 17, 'noop_move_p': 7, 'find_last_value': 4, 'note_uses': 14, 'find_regno_note': 8, 'covers_regno_no_parallel_p': 4, 'covers_regno_p': 2, 'dead_or_set_regno_p': 6, 'dead_or_set_p': 3, 'find_reg_equal_equiv_note': 6, 'find_constant_src': 2, 'remove_reg_equal_equiv_notes': 5, 'in_expr_list_p': 2, 'remove_node_from_expr_list': 4, 'volatile_insn_p': 1, 'volatile_refs_p': 1, 'may_trap_p_1': 199, 'inequality_comparisons_p': 3, 'replace_rtx': 8, 'for_each_rtx_1': 4, 'for_each_rtx': 1, 'rtx_referenced_p_1': 2, 'replace_label': 12, 'tablejump_p': 4, 'computed_jump_p_1': 6, 'computed_jump_p': 20, 'regno_use_in': 3, 'commutative_operand_precedence': 2, 'auto_inc_p': 2, 'loc_mentioned_in_p': 1, 'subreg_lsb': 4, 'subreg_offset_representable_p': 1, 'simplify_subreg_regno': 12, 'parms_set': 5, 'find_first_parameter_load': 35, 'keep_with_call_p': 15, 'label_is_jump_target_p': 6, 'rtx_cost': 22, 'cached_nonzero_bits': 12, 'nonzero_bits1': 123, 'cached_num_sign_bit_copies': 12, 'num_sign_bit_copies1': 70, 'insn_rtx_cost': 2, 'canonicalize_condition': 36, 'get_condition': 4, 'truncated_to_mode': 2, 'init_num_sign_bit_copies_in_rep': 29, 'init_rtlanal': 26, 'low_bitmask_len': 1}, "PosixPath('602/cpp_line-map.bc')": {'linemap_init': 37, 'linemap_check_files_exited': 11, 'trace_include': 2, 'linemap_add': 225, 'linemap_line_start': 53, 'linemap_position_for_column': 17, 'linemap_lookup': 12}, "PosixPath('602/tree-ssa-live.bc')": {'init_var_map': 17, 'var_map_base_fini': 4, 'var_union': 14, 'has_zero_uses': 1, 'partition_view_init': 70, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'partition_view_fini': 92, 'partition_to_var': 14, 'var_ann': 2, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 10, 'var_map_base_init': 38, 'partition_view_bitmap': 64, 'dump_scope_block': 12, 'mark_scope_block_unused': 2, 'gimple_referenced_vars': 1, 'first_htab_element': 8, 'first_referenced_var': 8, 'end_htab_p': 2, 'end_referenced_vars_p': 2, 'next_htab_element': 4, 'next_referenced_var': 2, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op_ptr': 1, 'get_var_ann': 2, 'set_is_used': 2, 'mark_all_vars_used_1': 5, 'gsi_next': 1, 'is_global_var': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 4, 'ei_next': 2, 'remove_unused_scope_block_p': 61, 'remove_unused_locals': 359, 'delete_tree_live_info': 4, 'var_to_partition': 8, 'live_on_entry': 16, 'calculate_live_on_exit': 256, 'new_tree_live_info': 15, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'next_readonly_imm_use': 4, 'set_var_live_on_entry': 40, 'loe_visit_block': 97, 'live_worklist': 40, 'calculate_live_ranges': 122, 'dump_var_map': 92, 'dump_live_info': 220}, "PosixPath('602/lcm.bc')": {'ei_next': 2, 'compute_available': 162, 'compute_antinout_edge': 163, 'compute_earliest': 47, 'compute_laterin': 199, 'compute_insert_delete': 56, 'pre_edge_lcm': 292, 'compute_farthest': 47, 'compute_nearerout': 161, 'compute_rev_insert_delete': 55, 'pre_edge_rev_lcm': 266}, "PosixPath('602/tree-loop-linear.bc')": {'perfect_loop_nest_depth': 1, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 46, 'VEC_loop_p_base_space': 2, 'VEC_loop_p_heap_reserve': 4, 'VEC_loop_p_base_quick_push': 2, 'VEC_loop_p_heap_safe_push': 10, 'loop_depth': 1, 'VEC_ddr_p_base_iterate': 2, 'VEC_data_reference_p_base_iterate': 2, 'VEC_loop_p_base_iterate': 2, 'am_vector_index_for_loop': 2, 'gather_interchange_stats': 172, 'try_interchange_loops': 239, 'VEC_gimple_base_iterate': 2, 'linear_transform_loops': 665}, "PosixPath('602/filename_cmp.bc')": {}, "PosixPath('602/tree-iterator.bc')": {'alloc_stmt_list': 4, 'free_stmt_list': 4, 'tsi_link_before': 33, 'tsi_link_after': 29, 'tsi_delink': 16, 'expr_first': 2, 'expr_last': 2}, "PosixPath('602/hashtab.bc')": {'htab_elements': 2, 'higher_prime_index': 2, 'htab_create_alloc': 23, 'htab_create_alloc_ex': 30, 'htab_set_functions_ex': 16, 'htab_create': 28, 'htab_try_create': 28, 'htab_delete': 18, 'htab_empty': 31, 'htab_mod': 2, 'htab_mod_m2': 2, 'htab_find_with_hash': 51, 'find_empty_slot_for_expand': 11, 'htab_expand': 81, 'htab_find_slot_with_hash': 86, 'htab_remove_elt_with_hash': 4, 'htab_clear_slot': 10, 'htab_traverse_noresize': 5, 'htab_traverse': 4, 'htab_collisions': 2, 'htab_hash_string': 2, 'iterative_hash': 142}, "PosixPath('602/getopt.bc')": {}, "PosixPath('602/ifcvt.bc')": {'single_pred_p': 1, 'single_succ_p': 1, 'single_succ_edge': 3, 'noce_get_condition': 6, 'first_active_insn': 9, 'last_active_insn': 6, 'noce_operand_ok': 2, 'noce_mem_write_may_trap_or_fault_p': 5, 'noce_can_store_speculate_p': 3, 'recog_memoized': 3, 'noce_emit_move_insn': 22, 'noce_try_move': 43, 'noce_emit_store_flag': 20, 'noce_try_store_flag': 16, 'noce_try_bitop': 24, 'noce_get_alt_condition': 40, 'noce_try_minmax': 56, 'noce_try_abs': 51, 'noce_emit_cmove': 4, 'noce_try_cmove': 12, 'noce_try_store_flag_constants': 14, 'noce_try_addcc': 16, 'noce_try_store_flag_mask': 17, 'noce_try_cmove_arith': 72, 'noce_try_sign_mask': 14, 'noce_process_if_block': 333, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 4, 'VEC_int_base_quick_push': 2, 'VEC_int_heap_safe_push': 11, 'check_cond_move_block': 30, 'VEC_int_base_iterate': 2, 'cond_move_convert_if_block': 10, 'cond_move_process_if_block': 97, 'noce_find_if_block': 173, 'single_pred_edge': 3, 'ei_next': 2, 'block_jumps_and_fallthru_p': 46, 'cond_exec_get_condition': 8, 'count_bb_insns': 4, 'block_fallthru': 19, 'cond_exec_process_insns': 7, 'merge_if_block': 63, 'cond_exec_process_if_block': 96, 'cond_exec_find_if_block': 226, 'block_has_only_trap': 16, 'find_cond_trap': 17, 'cheap_bb_rtx_cost_p': 7, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'dead_or_predicable': 177, 'find_if_case_1': 38, 'find_if_case_2': 28, 'find_if_header': 1531, 'if_convert': 1346}, "PosixPath('602/make-temp-file.bc')": {'choose_tmpdir': 4, 'make_temp_file': 3}, "PosixPath('602/reorg.bc')": {}, "PosixPath('602/cgraph.bc')": {'cgraph_node': 13, 'cgraph_remove_node': 579, 'cgraph_create_edge': 139, 'cgraph_clone_node': 119, 'cgraph_make_decl_local': 24, 'cgraph_add_edge_removal_hook': 6, 'cgraph_add_node_removal_hook': 6, 'cgraph_add_function_insertion_hook': 6, 'cgraph_call_function_insertion_hooks': 2, 'cgraph_add_edge_duplication_hook': 6, 'cgraph_add_node_duplication_hook': 6, 'cgraph_allocate_node': 2, 'cgraph_create_node': 30, 'cgraph_same_body_alias_1': 33, 'cgraph_get_node': 4, 'cgraph_call_node_removal_hooks': 2, 'cgraph_call_edge_removal_hooks': 2, 'cgraph_edge_remove_caller': 50, 'cgraph_free_edge': 8, 'cgraph_node_remove_callers': 9, 'cgraph_edge_remove_callee': 16, 'cgraph_node_remove_callees': 12, 'cgraph_remove_same_body_alias': 40, 'cgraph_release_function_body': 13, 'cgraph_add_thunk': 18, 'cgraph_node_for_asm': 13, 'cgraph_edge': 12, 'cgraph_set_call_stmt': 20, 'cgraph_set_call_stmt_including_clones': 5, 'initialize_inline_failed': 4, 'cgraph_create_edge_including_clones': 8, 'cgraph_remove_edge': 8, 'cgraph_redirect_edge_callee': 12, 'gimple_ops': 1, 'gimple_op': 2, 'gimple_call_fn': 2, 'gimple_call_fndecl': 5, 'cgraph_update_edges_for_call_stmt_node': 17, 'cgraph_update_edges_for_call_stmt': 5, 'cgraph_remove_node_and_inline_clones': 4, 'cgraph_mark_reachable_node': 7, 'cgraph_mark_needed_node': 2, 'cgraph_global_info': 1, 'cgraph_function_body_availability': 7, 'dump_cgraph_node': 157, 'change_decl_assembler_name': 3, 'cgraph_add_asm_node': 10, 'cgraph_call_edge_duplication_hooks': 2, 'cgraph_clone_edge': 24, 'VEC_cgraph_edge_p_base_iterate': 2, 'cgraph_call_node_duplication_hooks': 2, 'clone_function_name': 13, 'cgraph_create_virtual_clone': 74, 'cgraph_unnest_node': 2, 'cgraph_add_new_function': 21, 'cgraph_node_can_be_local_p': 7, 'cgraph_make_node_local': 4, 'cgraph_set_nothrow_flag': 1, 'cgraph_set_readonly_flag': 1, 'cgraph_set_pure_flag': 1, 'cgraph_set_looping_const_or_pure_flag': 1}, "PosixPath('602/c-cppbuiltin.bc')": {'c_cpp_builtins_optimize_pragma': 18, 'define__GNUC__': 3, 'type_suffix': 8, 'builtin_define_type_minmax': 3, 'builtin_define_with_hex_fp_value': 2, 'builtin_define_float_constants': 150, 'builtin_define_decimal_float_constants': 18, 'builtin_define_fixed_point_constants': 43, 'builtin_define_std': 17, 'c_cpp_builtins': 6}, "PosixPath('602/modulo-sched.bc')": {'set_node_sched_params': 10, 'sbitmap_iter_init': 22, 'ps_insn_find_column': 34, 'print_partial_schedule': 6, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 33, 'loop_single_full_bb_p': 24, 'loop_canon_p': 13, 'calculate_order_params': 135, 'sbitmap_iter_cond': 38, 'sbitmap_iter_next': 3, 'find_max_asap': 66, 'find_max_hv_min_mob': 103, 'find_max_dv_min_mob': 90, 'order_nodes_in_scc': 470, 'order_nodes_of_sccs': 7, 'check_nodes_order': 1, 'sms_order_nodes': 163, 'res_MII': 4, 'create_partial_schedule': 16, 'get_sched_window': 333, 'calculate_must_precede_follow': 72, 'verify_partial_schedule': 53, 'create_ps_insn': 8, 'add_node_to_ps': 69, 'ps_has_conflicts': 18, 'ps_insn_advance_column': 43, 'remove_node_from_ps': 17, 'ps_add_node_check_conflicts': 152, 'try_scheduling_node_in_cycle': 129, 'free_ps_insns': 9, 'reset_partial_schedule': 7, 'compute_split_row': 71, 'normalize_sched_times': 78, 'rotate_partial_schedule': 19, 'ps_insert_empty_row': 123, 'sms_schedule_by_order': 564, 'set_columns_for_ps': 11, 'ei_next': 2, 'canon_loop': 60, 'permute_partial_schedule': 12, 'generate_reg_moves': 506, 'print_node_sched_params': 8, 'duplicate_insns_of_cycles': 51, 'generate_prolog_epilog': 6, 'sms_schedule': 2003, 'rest_of_handle_sms': 15}, "PosixPath('602/tree-vect-data-refs.bc')": {'vect_analyze_data_refs': 133, 'vect_update_interleaving_chain': 21, 'gimple_ops': 1, 'vect_get_smallest_scalar_type': 1, 'vinfo_for_stmt': 1, 'VEC_ddr_p_base_iterate': 2, 'vect_equal_offsets': 5, 'vect_insert_into_interleaving_chain': 3, 'vect_check_interleaving': 24, 'VEC_ddr_p_base_space': 2, 'VEC_ddr_p_heap_reserve': 4, 'VEC_ddr_p_base_quick_push': 2, 'VEC_ddr_p_heap_safe_push': 10, 'vect_mark_for_runtime_alias_test': 11, 'VEC_loop_p_base_iterate': 2, 'index_in_loop_nest': 5, 'VEC_lambda_vector_base_iterate': 2, 'VEC_dr_p_base_space': 2, 'VEC_dr_p_heap_reserve': 4, 'VEC_dr_p_base_quick_push': 2, 'VEC_dr_p_heap_safe_push': 10, 'vect_analyze_data_ref_dependence': 136, 'vect_analyze_data_ref_dependences': 153, 'VEC_data_reference_p_base_iterate': 2, 'vect_supportable_dr_alignment': 104, 'vect_verify_datarefs_alignment': 6, 'vector_alignment_reachable_p': 34, 'VEC_dr_p_base_iterate': 2, 'vect_update_misalignment_for_peel': 30, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 4, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 10, 'VEC_gimple_base_iterate': 2, 'vect_enhance_data_refs_alignment': 119, 'vect_can_force_dr_alignment_p': 2, 'vect_compute_data_ref_alignment': 45, 'vect_compute_data_refs_alignment': 48, 'vect_analyze_data_refs_alignment': 48, 'vect_analyze_group_access': 20, 'vect_analyze_data_ref_access': 29, 'vect_analyze_data_ref_accesses': 37, 'vect_same_range_drs': 6, 'vect_vfa_range_equal': 2, 'VEC_ddr_p_base_ordered_remove': 3, 'vect_prune_runtime_alias_test_list': 20, 'vect_create_addr_base_for_vector_ref': 31, 'gimple_set_op': 2, 'gsi_stmt': 1, 'VEC_vec_void_p_base_space': 2, 'VEC_vec_void_p_heap_reserve': 2, 'VEC_vec_void_p_base_quick_push': 2, 'VEC_vec_void_p_heap_safe_push': 6, 'set_vinfo_for_stmt': 5, 'vect_create_data_ref_ptr': 68, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 14, 'op_iter_next_use': 8, 'op_iter_init_use': 19, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 15, 'bump_vector_ptr': 81, 'vect_create_destination_var': 2, 'vect_strided_store_supported': 2, 'VEC_tree_heap_copy': 2, 'vect_permute_store_chain': 1, 'vect_setup_realignment': 73, 'vect_strided_load_supported': 2, 'vect_permute_load_chain': 2, 'VEC_tree_base_iterate': 2, 'vect_transform_strided_load': 14}, "PosixPath('602/lto-symtab.bc')": {'lto_symtab_register_decl': 21, 'lto_symtab_get': 1, 'lto_symtab_get_resolution': 5, 'lto_symtab_resolve_can_prevail_p': 6, 'lto_symtab_resolve_replaceable_p': 10, 'lto_symtab_resolve_symbols': 63, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 6, 'lto_symtab_merge': 7, 'VEC_tree_heap_reserve': 4, 'VEC_tree_heap_safe_push': 10, 'VEC_tree_base_iterate': 2, 'lto_symtab_merge_decls_2': 37, 'lto_symtab_merge_decls_1': 244, 'lto_cgraph_replace_node': 19, 'lto_symtab_merge_cgraph_nodes_1': 74, 'lto_symtab_prevailing_decl': 4, 'gt_ggc_mx_lto_symtab_entry_def': 7, 'gt_ggc_m_P20lto_symtab_entry_def4htab': 6, 'gt_pch_nx_lto_symtab_entry_def': 7, 'gt_pch_p_P20lto_symtab_entry_def4htab': 5, 'gt_pch_n_P20lto_symtab_entry_def4htab': 6}, "PosixPath('602/tree-ssa-loop-niter.bc')": {'tree_operand_length': 3, 'single_pred_p': 1, 'single_pred_edge': 3, 'gimple_ops': 1, 'gimple_op': 2, 'expand_simple_operations': 6, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gsi_next': 1, 'loop_only_exit_p': 12, 'split_to_var_and_offset': 4, 'refine_bounds_using_guard': 56, 'bound_difference': 158, 'number_of_iterations_ne_max': 6, 'number_of_iterations_ne': 29, 'number_of_iterations_lt_to_ne': 12, 'assert_no_overflow_lt': 6, 'assert_loop_rolls_lt': 9, 'number_of_iterations_lt': 89, 'number_of_iterations_le': 1, 'number_of_iterations_cond': 236, 'simplify_using_outer_evolutions': 3, 'tree_simplify_using_condition_1': 14, 'simplify_using_initial_conditions': 8, 'number_of_iterations_exit': 271, 'VEC_edge_base_iterate': 2, 'find_loop_niter': 13, 'finite_loop_p': 22, 'gimple_vuse': 2, 'gimple_references_memory_p': 2, 'gimple_use_ops': 2, 'op_iter_init': 14, 'op_iter_next_tree': 10, 'op_iter_init_tree': 18, 'single_ssa_tree_operand': 30, 'chain_of_csts_start': 73, 'loop_niter_by_eval': 177, 'find_loop_niter_by_eval': 5, 'array_at_struct_end_p': 6, 'record_niter_bound': 31, 'record_estimate': 17, 'derive_constant_upper_bound': 8, 'derive_constant_upper_bound_ops': 2, 'idx_infer_loop_bounds': 2, 'infer_loop_bounds_from_ref': 6, 'infer_loop_bounds_from_array': 2, 'infer_loop_bounds_from_signedness': 5, 'infer_loop_bounds_from_undefined': 36, 'estimate_numbers_of_iterations_loop': 95, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 51, 'estimate_numbers_of_iterations': 3, 'stmt_dominates_stmt_p': 17, 'n_of_executions_at_most': 4, 'scev_probably_wraps_p': 4, 'free_numbers_of_iterations_estimates_loop': 6, 'free_numbers_of_iterations_estimates': 3}, "PosixPath('602/tree-ssa-loop.bc')": {'number_of_loops': 2}, "PosixPath('602/reg-stack.bc')": {'VEC_char_base_space': 2, 'VEC_char_heap_reserve_exact': 2, 'VEC_char_heap_safe_grow': 4, 'VEC_char_heap_safe_grow_cleared': 4, 'stack_regs_mentioned_p': 3, 'stack_regs_mentioned': 7, 'ei_next': 2, 'df_lr_get_bb_info': 3, 'convert_regs_entry': 47, 'stack_result': 7, 'convert_regs_exit': 19, 'better_edge': 142, 'propagate_stack': 31, 'print_stack': 2, 'get_hard_regnum': 4, 'emit_pop_insn': 9, 'get_true_reg': 16, 'emit_swap_insn': 92, 'change_stack': 210, 'straighten_stack': 9, 'get_asm_operands_in_out': 4, 'check_asm_stack_operands': 238, 'replace_reg': 5, 'subst_asm_stack_regs': 653, 'move_nan_for_stack_reg': 6, 'move_for_stack_reg': 26, 'next_flags_user': 10, 'swap_rtx_condition_1': 4, 'recog_memoized': 3, 'swap_rtx_condition': 34, 'pop_stack': 5, 'remove_regno_note': 8, 'compare_for_stack_reg': 17, 'swap_to_top': 7, 'subst_stack_regs_pat': 243, 'subst_stack_regs': 31, 'subst_stack_regs_in_debug_insn': 2, 'convert_regs_1': 444, 'convert_regs_2': 523, 'compensate_edge': 50, 'compensate_edges': 168, 'convert_regs': 342, 'reg_to_stack': 509, 'rest_of_handle_stack_regs': 489}, "PosixPath('602/loop-init.bc')": {'loop_optimizer_finalize': 97, 'loops_state_set': 1, 'loop_optimizer_init': 8, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 42, 'loops_state_satisfies_p': 1}, "PosixPath('602/dse.bc')": {'dse_step1': 715, 'dse_step2_init': 26, 'dse_step7': 52, 'record_store': 970, 'check_mem_read_rtx': 386, 'canon_address': 59, 'sbitmap_iter_init': 22, 'dse_record_singleton_alias_set': 9, 'VEC_group_info_t_base_space': 2, 'VEC_group_info_t_heap_reserve': 2, 'VEC_group_info_t_base_quick_push': 2, 'VEC_group_info_t_heap_safe_push': 6, 'get_group_info': 28, 'invariant_group_base_hash': 1, 'dse_step0': 1, 'df_lr_get_bb_info': 3, 'add_wild_read': 9, 'dump_insn_info': 2, 'get_call_args': 30, 'clear_rhs_from_active_local_stores': 5, 'clear_alias_set_lookup': 2, 'set_usage_bits': 17, 'set_all_positions_unneeded': 7, 'all_positions_needed_p': 3, 'find_shift_sequence': 10, 'get_stored_val': 18, 'set_position_unneeded': 4, 'any_positions_needed_p': 8, 'replace_inc_dec': 5, 'replace_inc_dec_mem': 4, 'check_for_inc_dec': 1, 'free_store_info': 22, 'delete_dead_store_insn': 11, 'look_for_hardregs': 2, 'replace_read': 27, 'scan_insn': 386, 'single_succ_p': 1, 'single_succ_edge': 3, 'single_succ': 1, 'remove_useless_values': 11, 'VEC_group_info_t_base_iterate': 2, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'dse_step2_nospill': 252, 'dse_step3_exit_block_scan': 18, 'find_insn_before_first_wild_read': 6, 'get_bitmap_index': 5, 'scan_stores_spill': 4, 'scan_reads_spill': 7, 'scan_stores_nospill': 21, 'scan_reads_nospill': 78, 'dse_step3_scan': 44, 'ei_next': 2, 'mark_reachable_blocks': 6, 'sbitmap_iter_cond': 38, 'sbitmap_iter_next': 3, 'dse_step3': 221, 'dse_transfer_function': 16, 'dse_confluence_n': 14, 'dse_confluence_0': 4, 'dse_step4': 13, 'dse_step5_nospill': 175, 'dse_step2_spill': 117, 'dse_step5_spill': 99, 'dse_step6': 51, 'rest_of_handle_dse': 1681}, "PosixPath('602/rtlhooks.bc')": {'gen_lowpart_general': 4}, "PosixPath('602/cpp_traditional.bc')": {'_cpp_scan_out_logical_line': 461, 'check_output_buffer': 5, '_cpp_copy_replacement_text': 22, '_cpp_create_trad_definition': 36, '_cpp_overlay_buffer': 41, '_cpp_remove_overlay': 21, 'skip_macro_block_comment': 7, 'copy_comment': 80, 'lex_identifier': 4, 'maybe_start_funlike': 17, 'recursive_macro': 9, 'push_replacement_text': 7, 'save_replacement_text': 53, 'save_argument': 8, 'replace_args_and_push': 48, '_cpp_read_logical_line_trad': 4, '_cpp_replacement_text_len': 18, 'scan_parameters': 7, '_cpp_expansions_different_trad': 39}, "PosixPath('602/tree-mudflap.bc')": {'gsi_start': 9, 'mf_build_check_statement_for': 157, 'mf_make_mf_cache_struct_type': 2, 'mf_make_builtin': 3, 'mudflap_init': 2, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 6, 'mudflap_enqueue_decl': 9, 'mf_build_string': 3, 'mudflap_enqueue_constant': 3, 'VEC_tree_base_iterate': 2, 'mf_varname_tree': 13, 'mudflap_finish_file': 14, 'ei_next': 2, 'insert_edge_copies_seq': 19, 'mf_decl_cache_locals': 53, 'bb_seq': 2, 'gsi_start_bb': 4, 'gsi_stmt': 1, 'gimple_ops': 1, 'mf_decl_eligible_p': 6, 'gsi_prev': 1, 'gsi_last_bb': 4, 'mf_file_function_line_tree': 17, 'mf_xform_derefs_1': 207, 'gimple_call_fndecl': 2, 'gsi_next': 1, 'mf_xform_statements': 67, 'execute_mudflap_function_ops': 135, 'mx_register_decls': 34, 'mx_xfn_xform_decls': 13, 'mf_xform_decls': 7, 'execute_mudflap_function_decls': 18}, "PosixPath('602/sched-vis.bc')": {'print_exp': 1074, 'safe_concat': 2, 'print_value': 30, 'print_pattern': 94, 'print_insn': 57, 'dump_insn_slim': 4, 'print_rtl_slim': 2, 'debug_bb_slim': 2, 'debug_bb_n_slim': 1}, "PosixPath('602/params.bc')": {'set_param_value': 6}, "PosixPath('602/host-linux.bc')": {}, "PosixPath('602/gimplify.bc')": {'create_tmp_var_raw': 6, 'gsi_start': 9, 'gsi_last': 9, 'gimplify_cond_expr': 2, 'gimplify_switch_expr': 1, 'gimplify_asm_expr': 296, 'gimplify_cleanup_point_expr': 2, 'gimplify_statement_list': 1, 'gimplify_omp_atomic': 3, 'force_gimple_operand': 56, 'mark_addressable': 1, 'push_gimplify_context': 3, 'declare_vars': 5, 'pop_gimplify_context': 9, 'VEC_gimple_base_last': 2, 'gimple_current_bind_expr': 3, 'append_to_statement_list_1': 4, 'gimplify_seq_add_seq': 9, 'is_global_var': 2, 'omp_notice_variable': 42, 'omp_add_variable': 7, 'omp_firstprivatize_type_sizes': 10, 'omp_firstprivatize_variable': 4, 'gimplify_var_or_parm_decl': 26, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 10, 'VEC_tree_base_pop': 2, 'canonicalize_component_ref': 15, 'tree_operand_length': 3, 'generic_expr_could_trap_p': 3, 'gimple_boolify': 33, 'create_tmp_var_name': 13, 'force_constant_size': 3, 'gimple_seq_first_stmt': 1, 'gimple_add_tmp_var': 36, 'create_tmp_var': 2, 'build_and_jump': 1, 'shortcut_cond_r': 49, 'shortcut_cond_expr': 154, 'gimple_pop_condition': 3, 'gimplify_seq_add_stmt': 9, 'gimple_tree_eq': 4, 'lookup_tmp_var': 8, 'gimple_seq_last_stmt': 1, 'maybe_with_size_expr': 3, 'VEC_constructor_elt_gc_copy': 2, 'optimize_compound_literals_in_ctor': 7, 'gimplify_init_ctor_preeval_1': 12, 'zero_sized_field_decl': 2, 'force_labels_r': 2, 'gimple_fold_indirect_ref': 36, 'voidify_wrapper_expr': 35, 'zero_sized_type': 2, 'gimple_ops': 1, 'gimple_set_op': 2, 'canonicalize_addr_expr': 6, 'gimplify_conversion': 28, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 4, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 10, 'gimple_push_bind_expr': 15, 'VEC_gimple_base_pop': 2, 'gimple_pop_bind_expr': 1, 'VEC_tree_base_ordered_remove': 3, 'gimplify_exit_expr': 1, 'gimplify_case_label_expr': 2, 'VEC_tree_gc_reserve': 4, 'VEC_tree_gc_safe_push': 10, 'gimple_try_set_catch_is_cleanup': 1, 'gsi_stmt': 1, 'gsi_one_before_end_p': 1, 'gsi_next': 1, 'new_omp_context': 9, 'omp_check_private': 7, 'gimplify_adjust_omp_clauses_1': 19, 'gimplify_adjust_omp_clauses': 18, 'omp_is_private': 10, 'gimple_omp_for_set_index': 2, 'gimple_omp_for_set_initial': 2, 'gimple_omp_for_set_cond': 2, 'gimple_omp_for_set_final': 2, 'gimple_omp_for_set_incr': 2, 'goa_lhs_expr_p': 7, 'gimplify_scalar_mode_aggregate_compare': 12, 'gimplify_variable_sized_compare': 9, 'annotate_one_with_location': 2, 'annotate_all_with_location_after': 13, 'annotate_all_with_location': 6, 'goa_stabilize_expr': 7, 'gimplify_expr': 1835, 'gimplify_and_return_first': 7, 'gimplify_scan_omp_clauses': 117, 'gimplify_vla_decl': 2, 'gimplify_type_sizes': 21, 'gimplify_one_sizepos': 6, 'gimplify_modify_expr_rhs': 29, 'gimplify_init_constructor': 113, 'gimplify_init_ctor_eval': 24, 'gimplify_init_ctor_preeval': 6, 'internal_get_tmp_var': 24, 'gimplify_stmt': 1, 'gimplify_body': 52, 'gimplify_function_tree': 35, 'gimple_asm_output_op': 2, 'gimple_call_fndecl': 2, 'gimple_referenced_vars': 1, 'gimple_regimplify_operands': 189, 'force_gimple_operand_gsi': 14}, "PosixPath('602/postreload-gcse.bc')": {'alloc_mem': 24, 'reset_opr_set_tables': 3, 'record_last_reg_set_info': 12, 'record_last_reg_set_info_regno': 4, 'record_last_mem_set_info': 7, 'record_last_set_info': 6, 'record_opr_changes': 36, 'reg_changed_after_insn_p': 5, 'find_mem_conflicts': 2, 'load_killed_in_block_p': 29, 'oprs_unchanged_p': 12, 'insert_expr_in_table': 62, 'hash_scan_set': 9, 'compute_hash_table': 143, 'ei_next': 2, 'bb_has_well_behaved_predecessors': 61, 'lookup_expr_in_table': 20, 'get_bb_avail_insn': 2, 'get_avail_load_store_reg': 4, 'reg_killed_on_edge': 2, 'reg_used_on_edge': 3, 'eliminate_partially_redundant_load': 405, 'eliminate_partially_redundant_loads': 655, 'delete_redundant_insns_1': 7, 'free_mem': 1, 'gcse_after_reload_main': 840, 'rest_of_handle_gcse2': 838}, "PosixPath('602/crc32.bc')": {'xcrc32': 5}, "PosixPath('602/gimple-low.bc')": {'lower_function_body': 169, 'try_catch_may_fallthru': 1, 'gsi_start': 9, 'gsi_last': 9, 'gimple_ops': 1, 'gimple_call_fndecl': 2, 'gimple_check_call_args': 7, 'tsi_next': 1, 'block_may_fallthru': 10, 'gimple_seq_last_stmt': 1, 'gsi_stmt': 1, 'gsi_next': 1, 'gimple_stmt_may_fallthru': 17, 'gimple_seq_may_fallthru': 1, 'record_vars_into': 10, 'gimple_seq_first_stmt': 1, 'VEC_return_statements_t_base_space': 2, 'VEC_return_statements_t_heap_reserve': 4, 'VEC_return_statements_t_base_quick_push': 3, 'VEC_return_statements_t_heap_safe_push': 10, 'lower_gimple_return': 21, 'lower_builtin_setjmp': 8, 'lower_gimple_bind': 10, 'lower_sequence': 191, 'gimple_set_op': 2, 'gimple_call_set_lhs': 2}, "PosixPath('602/sbitmap.bc')": {'sbitmap_iter_init': 22, 'sbitmap_alloc': 4, 'sbitmap_resize': 28, 'sbitmap_realloc': 3, 'sbitmap_vector_alloc': 6, 'sbitmap_copy': 6, 'sbitmap_copy_n': 4, 'sbitmap_range_empty_p': 2, 'sbitmap_zero': 4, 'sbitmap_ones': 13, 'sbitmap_vector_zero': 4, 'sbitmap_union_of_diff_cg': 11, 'sbitmap_union_of_diff': 23, 'sbitmap_not': 12, 'sbitmap_difference': 16, 'sbitmap_any_common_bits': 10, 'sbitmap_a_and_b_cg': 9, 'sbitmap_a_and_b': 9, 'sbitmap_a_xor_b_cg': 9, 'sbitmap_a_xor_b': 9, 'sbitmap_a_or_b_cg': 9, 'sbitmap_a_or_b': 9, 'sbitmap_a_subset_b_p': 7, 'sbitmap_a_or_b_and_c_cg': 11, 'sbitmap_a_or_b_and_c': 8, 'sbitmap_a_and_b_or_c_cg': 11, 'sbitmap_a_and_b_or_c': 3, 'sbitmap_intersection_of_succs': 118, 'sbitmap_intersection_of_preds': 114, 'sbitmap_union_of_succs': 121, 'sbitmap_union_of_preds': 117, 'sbitmap_iter_cond': 38, 'sbitmap_first_set_bit': 2, 'dump_sbitmap': 2, 'dump_sbitmap_file': 3, 'sbitmap_popcount': 9}, "PosixPath('602/regmove.bc')": {'regmove_backward_pass': 646, 'optimize_reg_copy_1': 44, 'optimize_reg_copy_2': 33, 'optimize_reg_copy_3': 11, 'regmove_forward_pass': 183, 'find_matches': 58, 'fixup_match_2': 31, 'reg_is_remote_constant_p': 71, 'copy_src_to_dest': 24, 'regmove_optimize': 1067}, "PosixPath('602/insn-attrtab.bc')": {'recog_memoized': 3, 'insn_current_length': 12}, "PosixPath('602/splay-tree.bc')": {'splay_tree_delete_helper': 53, 'splay_tree_insert': 46, 'splay_tree_new_with_allocator': 22, 'splay_tree_new': 22, 'splay_tree_delete': 65, 'rotate_left': 1, 'rotate_right': 1, 'splay_tree_splay': 71, 'splay_tree_remove': 29, 'splay_tree_lookup': 3, 'splay_tree_predecessor': 5, 'splay_tree_successor': 5}, "PosixPath('602/ipa-reference.bc')": {'get_reference_vars_info': 4, 'VEC_ipa_reference_vars_info_t_base_space': 2, 'VEC_ipa_reference_vars_info_t_heap_reserve_exact': 2, 'VEC_ipa_reference_vars_info_t_heap_safe_grow': 4, 'VEC_ipa_reference_vars_info_t_heap_safe_grow_cleared': 4, 'set_reference_vars_info': 10, 'duplicate_node_data': 14, 'clean_function_local_data': 8, 'clean_function': 14, 'gsi_stmt': 1, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'add_static_var': 4, 'has_proper_scope_for_analysis': 11, 'mark_address_taken': 1, 'gsi_next': 1, 'bb_seq': 2, 'gsi_start_bb': 7, 'gimple_ops': 1, 'gimple_op': 2, 'gimple_call_fndecl': 2, 'check_call': 4, 'gimple_asm_clobber_op': 4, 'check_asm_memory_clobber': 10, 'mark_address': 2, 'scan_stmt_for_static_refs': 15, 'analyze_function': 149, 'lto_file_decl_data_get_var_decl': 4, 'ipa_reference_read_summary': 3, 'csi_end_p': 1, 'write_node_summary_p': 2, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'ipa_reference_write_summary': 253, 'varpool_first_static_initializer': 2, 'analyze_variable': 5, 'varpool_next_static_initializer': 2, 'generate_summary': 409, 'propagate_bits': 17, 'propagate': 618, 'gate_reference': 2}, "PosixPath('602/tree-ssa-loop-manip.bc')": {'tree_transform_and_unroll_loop': 208, 'create_iv': 15, 'loops_state_set': 1, 'number_of_loops': 2, 'ei_next': 2, 'get_loops_exits': 65, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'gsi_stmt': 1, 'loop_outer': 3, 'find_uses_to_rename_use': 9, 'gsi_next': 1, 'bb_seq': 2, 'gsi_start_bb': 4, 'gimple_use_ops': 2, 'op_iter_init': 7, 'op_iter_next_tree': 10, 'op_iter_init_tree': 11, 'find_uses_to_rename_stmt': 6, 'find_uses_to_rename_bb': 58, 'bmp_iter_next': 2, 'find_uses_to_rename': 71, 'bmp_iter_and_init': 45, 'bmp_iter_and': 128, 'add_exit_phis_edge': 37, 'add_exit_phis_var': 119, 'add_exit_phis': 282, 'rewrite_into_loop_closed_ssa': 505, 'check_loop_closed_ssa_stmt': 3, 'verify_loop_closed_ssa': 94, 'single_succ_p': 1, 'single_succ_edge': 3, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 15, 'split_loop_exit_edge': 5, 'single_pred_p': 1, 'single_pred_edge': 3, 'ip_normal_pos': 10, 'gsi_last_bb': 4, 'standard_iv_increment_position': 12, 'loops_state_satisfies_p': 1, 'copy_phi_node_args': 32, 'gimple_duplicate_loop_to_header_edge': 22, 'can_unroll_loop_p': 2, 'determine_exit_conditions': 9, 'VEC_edge_base_iterate': 2, 'gimple_ops': 1, 'gimple_set_op': 4, 'gsi_after_labels': 16, 'rewrite_phi_with_iv': 7, 'rewrite_all_phi_nodes_with_iv': 49, 'canonicalize_loop_ivs': 95}, "PosixPath('602/cfgcleanup.bc')": {'try_crossjump_to_edge': 1167, 'VEC_basic_block_base_pop': 2, 'delete_unreachable_blocks': 61, 'delete_dead_jumptables': 45, 'update_forwarder_flag': 2, 'trivially_empty_bb_p': 4, 'single_succ_p': 1, 'single_succ_edge': 3, 'single_pred_p': 1, 'single_pred_edge': 3, 'ei_next': 2, 'merge_blocks_move_successor_nojumps': 28, 'merge_blocks_move_predecessor_nojumps': 5, 'merge_blocks_move': 173, 'try_simplify_condjump': 47, 'mark_effect': 10, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'mentions_nonequal_regs': 2, 'thread_jump': 101, 'try_forward_edges': 535, 'old_insns_match_p': 40, 'outgoing_edges_match': 437, 'merge_memattrs': 37, 'flow_find_cross_jump': 11, 'try_crossjump_bb': 135, 'try_optimize_cfg': 951, 'cleanup_cfg': 943}, "PosixPath('602/stringpool.bc')": {'init_stringpool': 4, 'gt_pch_save_stringpool': 15, 'ggc_alloc_string': 1, 'gt_pch_restore_stringpool': 4, 'gt_ggc_mx_string_pool_data': 5, 'gt_pch_p_16string_pool_data': 11, 'gt_pch_nx_string_pool_data': 5}, "PosixPath('602/cpp_lex.bc')": {'_cpp_clean_line': 61, 'add_line_note': 22, 'next_tokenrun': 2, 'lex_raw_string': 381, 'store_comment': 20, 'cpp_ideq': 2, 'warn_in_comment': 13, '_cpp_process_line_notes': 248, '_cpp_skip_block_comment': 79, 'lex_identifier_intern': 15, '_cpp_lex_identifier': 15, '_cpp_init_tokenrun': 4, '_cpp_get_fresh_line': 29, 'skip_whitespace': 33, 'forms_identifier_p': 20, 'new_buff': 7, '_cpp_get_buff': 16, '_cpp_unaligned_alloc': 10, 'lex_number': 24, 'cpp_token_len': 7, 'utf8_to_ucn': 2, 'cpp_spell_token': 30, 'warn_about_normalization': 5, 'create_literal': 4, '_cpp_append_extend_buff': 8, 'bufring_append': 3, '_cpp_release_buff': 2, 'lex_string': 377, 'lex_identifier': 36, 'cpp_in_system_header': 1, 'skip_line_comment': 8, 'save_comment': 32, '_cpp_lex_direct': 862, '_cpp_lex_token': 182, 'cpp_peek_token': 18, '_cpp_temp_token': 30, 'cpp_output_token': 32, '_cpp_equiv_tokens': 42, 'name_p': 10, 'cpp_avoid_paste': 58, '_cpp_extend_buff': 5, '_cpp_free_buff': 2, '_cpp_aligned_alloc': 10, 'cpp_token_val_index': 2}, "PosixPath('602/tree-ssa-loop-ivopts.bc')": {'multiply_by_cost': 12, 'constant_multiple_of': 94, 'get_computation_aff': 91, 'set_use_iv_cost': 35, 'iv_ca_set_no_cp': 47, 'iv_ca_set_cp': 52, 'create_new_iv': 54, 'rewrite_use_nonlinear_expr': 79, 'dump_iv': 2, 'n_iv_uses': 1, 'dump_uses': 3, 'dump_cand': 11, 'idx_contains_abnormal_ssa_name_p': 4, 'loop_depth': 1, 'tree_operand_length': 3, 'expr_invariant_in_loop_p': 5, 'gimple_ops': 1, 'stmt_invariant_in_loop_p': 1, 'tree_int_cst_sign_bit': 2, 'seq_cost': 3, 'mbc_entry_eq': 6, 'mbc_entry_hash': 2, 'VEC_sbitmap_base_space': 2, 'VEC_sbitmap_heap_reserve_exact': 2, 'VEC_sbitmap_heap_safe_grow': 4, 'VEC_sbitmap_heap_safe_grow_cleared': 4, 'multiplier_allowed_in_address_p': 13, 'tree_ssa_iv_optimize_init': 7, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 34, 'gsi_stmt': 1, 'determine_biv_step': 3, 'determine_base_object': 4, 'alloc_iv': 26, 'set_iv': 6, 'gsi_next': 1, 'find_bivs': 11, 'bb_seq': 2, 'gsi_start_bb': 4, 'find_givs_in_stmt': 6, 'find_givs_in_bb': 14, 'find_givs': 24, 'get_iv': 12, 'mark_bivs': 16, 'niter_for_exit': 5, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'find_induction_variables': 177, 'record_invariant': 23, 'VEC_iv_use_p_base_space': 2, 'VEC_iv_use_p_heap_reserve': 4, 'VEC_iv_use_p_base_quick_push': 2, 'VEC_iv_use_p_heap_safe_push': 9, 'record_use': 27, 'find_interesting_uses_op': 9, 'find_interesting_uses_outside': 6, 'ei_next': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 14, 'op_iter_init_use': 19, 'find_invariants_stmt': 3, 'extract_cond_operands': 4, 'may_be_nonaddressable_p': 6, 'idx_find_step': 38, 'find_interesting_uses_address': 47, 'find_interesting_uses_stmt': 23, 'find_interesting_uses': 169, 'n_iv_cands': 1, 'VEC_iv_cand_p_base_space': 2, 'VEC_iv_cand_p_heap_reserve': 4, 'VEC_iv_cand_p_base_quick_push': 2, 'VEC_iv_cand_p_heap_safe_push': 10, 'find_depends': 15, 'add_candidate_1': 162, 'add_autoinc_candidates': 6, 'add_candidate': 9, 'add_old_iv_candidates': 7, 'add_old_ivs_candidates': 113, 'strip_offset_1': 26, 'add_iv_value_candidates': 6, 'add_derived_ivs_candidates': 21, 'split_address_cost': 25, 'produce_memory_decl_rtl': 2, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 6, 'prepare_decl_rtl': 17, 'computation_cost': 18, 'add_cost': 3, 'force_expr_to_var_cost': 23, 'force_var_cost': 3, 'ptr_difference_cost': 75, 'difference_cost': 140, 'stmt_after_inc_pos': 4, 'VEC_address_cost_data_base_space': 2, 'VEC_address_cost_data_heap_reserve_exact': 2, 'VEC_address_cost_data_heap_safe_grow': 4, 'VEC_address_cost_data_heap_safe_grow_cleared': 4, 'get_address_cost': 30, 'determine_common_wider_type': 6, 'get_computation_at': 3, 'get_computation_cost_at': 149, 'get_computation_cost': 142, 'autoinc_possible_for_pair': 5, 'set_autoinc_for_original_candidates': 74, 'record_important_candidates': 38, 'find_iv_candidates': 396, 'determine_iv_cost': 7, 'determine_iv_costs': 44, 'alloc_use_cost_map': 100, 'determine_use_iv_cost_generic': 9, 'determine_use_iv_cost_address': 10, 'cand_value_at': 15, 'may_eliminate_iv': 89, 'determine_use_iv_cost_condition': 151, 'determine_use_iv_cost': 183, 'determine_use_iv_costs': 292, 'ivopts_global_cost_for_size': 2, 'determine_set_costs': 140, 'iv_ca_new': 12, 'get_use_iv_cost': 16, 'cheaper_cost_pair': 8, 'iv_ca_set_remove_invariants': 67, 'iv_ca_recount_cost': 8, 'iv_ca_set_add_invariants': 67, 'iv_ca_add_use': 87, 'iv_ca_cost': 2, 'iv_ca_cand_for_use': 2, 'iv_ca_delta_add': 7, 'iv_ca_cand_used_p': 2, 'iv_ca_has_deps': 62, 'iv_ca_delta_reverse': 10, 'iv_ca_delta_commit': 16, 'iv_ca_extend': 34, 'try_add_cand_for': 481, 'iv_ca_free': 1, 'get_initial_solution': 732, 'iv_ca_dump': 8, 'bmp_iter_and_init': 45, 'bmp_iter_and': 128, 'iv_ca_narrow': 648, 'iv_ca_prune': 821, 'try_improve_iv_set': 87, 'find_optimal_iv_set': 921, 'gsi_last_bb': 4, 'create_new_ivs': 185, 'gsi_after_labels': 16, 'idx_remove_ssa_names': 11, 'copy_ref_info': 6, 'rewrite_use_address': 30, 'iv_elimination_compare': 6, 'gimple_set_op': 2, 'rewrite_use_compare': 34, 'rewrite_use': 157, 'rewrite_uses': 203, 'remove_unused_ivs': 92, 'VEC_tree_base_iterate': 2, 'free_loop_data': 233, 'tree_ssa_iv_optimize_loop': 2780, 'tree_ssa_iv_optimize_finalize': 4, 'tree_ssa_iv_optimize': 285}, "PosixPath('602/omega.bc')": {'omega_pretty_print_problem': 314, 'omega_convert_eq_to_geqs': 32, 'omega_solve_eq': 392, 'omega_solve_geq': 25, 'normalize_omega_problem': 1403, 'omega_unprotect_variable': 518, 'omega_unprotect_1': 139, 'omega_constrain_variable_sign': 128, 'omega_alloc_problem': 46, 'omega_do_mod': 36, 'omega_delete_variable': 190, 'omega_substitute': 424, 'omega_variable_to_str': 1, 'omega_print_eqn': 30, 'omega_initialize_variables': 11, 'omega_print_vars': 3, 'omega_print_term': 15, 'omega_print_problem': 8, 'omega_count_red_equations': 69, 'omega_print_red_equations': 40, 'omega_copy_eqn': 23, 'omega_init_eqn_zero': 7, 'adding_equality_constraint': 136, 'omega_delete_geq': 3, 'omega_copy_problem': 319, 'omega_negate_geq': 16, 'omega_alloc_eqns': 12, 'setup_packing': 6, 'omega_substitute_red_1': 22, 'omega_wildcard_p': 1, 'omega_substitute_red': 44, 'omega_do_elimination': 293, 'omega_name_wild_card': 3, 'omega_add_new_wild_card': 237, 'coalesce': 127, 'chain_unprotect': 29, 'omega_free_eliminations': 156, 'single_var_geq': 1, 'omega_delete_geq_extra': 3, 'omega_eliminate_redundant': 493, 'omega_solve_problem': 3308, 'omega_problem_reduced': 136, 'omega_simplify_problem': 174, 'verify_omega_pb': 30, 'omega_eliminate_red': 241, 'free_red_eliminations': 174, 'omega_problem_has_red_equations': 288, 'omega_simplify_approximate': 4, 'omega_constrain_variable_value': 67, 'omega_query_variable': 121, 'query_coupled_variable': 110, 'omega_query_variable_bounds': 28, 'omega_query_variable_signs': 12, 'omega_initialize': 31}, "PosixPath('602/objalloc.bc')": {'_objalloc_alloc': 28, 'objalloc_create': 8, 'objalloc_free': 1, 'objalloc_free_block': 19}, "PosixPath('602/targhooks.bc')": {'default_stack_protect_guard': 4, 'default_external_stack_protect_fail': 8, 'default_hidden_stack_protect_fail': 8, 'default_unspec_may_trap_p': 5, 'default_return_in_memory': 2, 'default_cxx_get_cookie_size': 4, 'default_scalar_mode_supported_p': 1, 'default_invalid_within_doloop': 2, 'default_static_chain': 2, 'default_secondary_reload': 1}, "PosixPath('602/ira-build.bc')": {'ira_create_allocno': 227, 'ira_flattening': 2486, 'ira_build': 1135, 'create_loop_tree_nodes': 226, 'remove_low_level_allocnos': 128, 'VEC_ira_allocno_t_base_space': 2, 'VEC_ira_allocno_t_heap_reserve': 4, 'VEC_ira_allocno_t_base_quick_push': 2, 'VEC_ira_allocno_t_heap_safe_push': 10, 'ira_set_allocno_cover_class': 8, 'ira_conflict_vector_profitable_p': 2, 'ira_allocate_allocno_conflict_vec': 11, 'allocate_allocno_conflict_bit_vec': 6, 'ira_allocate_allocno_conflicts': 6, 'add_to_allocno_conflicts': 61, 'ira_print_expanded_allocno': 11, 'ira_create_allocno_live_range': 7, 'ira_copy_allocno_live_range_list': 6, 'ira_merge_allocno_live_ranges': 33, 'ira_allocno_live_ranges_intersect_p': 13, 'ira_free_allocno_updated_costs': 5, 'VEC_ira_copy_t_base_space': 2, 'VEC_ira_copy_t_heap_reserve': 2, 'VEC_ira_copy_t_base_quick_push': 2, 'VEC_ira_copy_t_heap_safe_push': 6, 'ira_create_copy': 57, 'ira_add_allocno_copy_to_list': 62, 'ira_remove_allocno_copy_from_list': 83, 'ira_swap_allocno_copy_ends_if_necessary': 43, 'find_allocno_copy': 18, 'ira_add_allocno_copy': 25, 'print_copy': 44, 'ira_copy_iter_cond': 1, 'print_copies': 4, 'print_allocno_copies': 32, 'ira_debug_allocno_copies': 32, 'ira_traverse_loop_tree': 10, 'ira_allocno_iter_cond': 1, 'change_allocno_in_range_list': 2, 'copy_info_to_removed_store_destinations': 201, 'clear_allocno_conflicts': 14, 'sparseset_bit_p': 10, 'sparseset_insert_bit': 3, 'sparseset_set_bit': 12, 'sparseset_iter_init': 4, 'sparseset_iter_p': 4, 'sparseset_iter_elm': 3, 'sparseset_iter_next': 2, 'compress_allocno_conflict_vec': 17, 'compress_conflict_vecs': 43, 'finish_allocno': 21, 'VEC_loop_p_base_iterate': 2, 'rebuild_regno_allocno_maps': 42, 'initiate_cost_vectors': 4, 'ei_next': 2, 'VEC_edge_base_iterate': 2, 'loop_outer': 3, 'add_loop_to_tree': 38, 'setup_loop_tree_level': 2, 'form_loop_tree': 109, 'propagate_modified_regnos': 3, 'create_insn_allocnos': 77, 'df_lr_get_bb_info': 3, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'create_bb_allocnos': 76, 'create_loop_allocnos': 132, 'create_loop_tree_node_allocnos': 122, 'loop_depth': 1, 'mark_all_loops_for_removal': 50, 'low_pressure_loop_node_p': 3, 'loop_compare_func': 63, 'mark_loops_for_removal': 72, 'VEC_ira_loop_tree_node_t_base_space': 2, 'VEC_ira_loop_tree_node_t_heap_reserve': 4, 'VEC_ira_loop_tree_node_t_base_quick_push': 2, 'VEC_ira_loop_tree_node_t_heap_safe_push': 10, 'VEC_ira_loop_tree_node_t_base_pop': 2, 'remove_uneccesary_loop_nodes_from_loop_tree': 51, 'ira_allocate_and_accumulate_costs': 7, 'propagate_some_info_from_allocno': 198, 'regno_allocno_order_compare_func': 10, 'ira_rebuild_regno_allocno_list': 22, 'remove_unnecessary_allocnos': 77, 'finish_loop_tree_node': 2, 'remove_unnecessary_regions': 335, 'bitmap_initialize_stat': 2, 'update_bad_spill_attribute': 73, 'more_one_region_p': 2, 'propagate_allocno_info': 171, 'ira_allocate_and_copy_costs': 1, 'create_cap_allocno': 143, 'create_caps': 35, 'setup_min_max_allocno_live_range_point': 139, 'allocno_range_compare_func': 42, 'sort_conflict_id_allocno_map': 19, 'setup_min_max_conflict_allocno_ids': 77, 'finish_loop_tree_nodes': 6, 'finish_copies': 11, 'finish_allocnos': 6, 'finish_cost_vectors': 1, 'ira_destroy': 46}, "PosixPath('602/gimple-pretty-print.bc')": {'gsi_start': 9, 'maybe_init_pretty_print': 2, 'gimple_vdef': 2, 'gimple_vuse': 2, 'gimple_references_memory_p': 2, 'dump_gimple_mem_ops': 5, 'gsi_stmt': 1, 'gsi_one_before_end_p': 1, 'gsi_next': 1, 'gimple_ops': 1, 'gimple_op': 2, 'gimple_asm_output_op': 2, 'gimple_asm_clobber_op': 4, 'gimple_asm_label_op': 4, 'dump_unary_rhs': 1, 'dump_gimple_call_args': 3, 'gimple_seq_first_stmt': 1, 'gimple_omp_for_index': 2, 'gimple_omp_for_initial': 2, 'gimple_omp_for_final': 2, 'gimple_omp_for_cond': 2, 'gimple_omp_for_incr': 2, 'gimple_omp_subcode': 1, 'dump_gimple_stmt': 211, 'dump_gimple_phi': 23, 'dump_gimple_fmt': 51, 'dump_gimple_seq': 6, 'bb_seq': 2, 'gsi_start_bb': 7, 'get_lineno': 1, 'ei_next': 2, 'dump_bb_header': 67, 'dump_phi_nodes': 1, 'dump_implicit_edges': 54, 'dump_bb_end': 41, 'gimple_dump_bb_buff': 183, 'gimple_dump_bb': 183}, "PosixPath('602/optabs.bc')": {'set_optab_libfunc': 18, 'set_conv_libfunc': 18, 'gen_cond_trap': 24, 'convert_optab_libfunc': 8, 'optab_libfunc': 10, 'optab_for_tree_code': 67, 'expand_widen_pattern_expr': 58, 'expand_ternary_op': 16, 'avoid_expensive_constant': 2, 'add_equal_note': 8, 'can_compare_p': 10, 'prepare_operand': 3, 'no_conflict_move_test': 6, 'emit_libcall_block': 48, 'prepare_float_lib_cmp': 10, 'prepare_cmp_insn': 128, 'emit_conditional_move': 46, 'expand_binop': 136, 'expand_subword_shift': 2, 'expand_binop_directly': 14, 'expand_vec_shift_expr': 18, 'sign_expand_binop': 4, 'expand_twoval_unop': 9, 'expand_twoval_binop': 9, 'emit_cmp_and_jump_insn_1': 10, 'emit_cmp_and_jump_insns': 26, 'expand_absneg_bit': 13, 'expand_unop': 107, 'expand_unop_direct': 7, 'expand_abs_nojump': 13, 'expand_abs': 4, 'expand_one_cmpl_abs_nojump': 1, 'maybe_emit_unop_insn': 5, 'expand_copysign_absneg': 4, 'expand_copysign_bit': 2, 'expand_copysign': 46, 'emit_conditional_add': 46, 'gen_add2_insn': 12, 'gen_add3_insn': 11, 'have_add2_insn': 7, 'gen_sub2_insn': 12, 'gen_sub3_insn': 11, 'have_sub2_insn': 7, 'gen_extend_insn': 2, 'expand_float': 30, 'can_fix_p': 4, 'expand_fix': 31, 'expand_sfix_optab': 1, 'have_insn_for': 1, 'build_libfunc_function': 4, 'init_optab': 1, 'gen_interclass_conv_libfunc': 82, 'gen_fractuns_conv_libfunc': 1, 'gen_intraclass_conv_libfunc': 85, 'gen_fract_conv_libfunc': 1, 'gen_trunc_conv_libfunc': 4, 'gen_extend_conv_libfunc': 4, 'gen_libfunc': 23, 'gen_fp_libfunc': 2, 'gen_int_libfunc': 2, 'gen_intv_fp_libfunc': 4, 'eq_libfunc': 14, 'hash_libfunc': 4, 'init_optabs': 769, 'debug_optab_libfuncs': 13, 'vector_compare_rtx': 10, 'expand_vec_cond_expr': 31, 'expand_val_compare_and_swap_1': 9, 'expand_bool_compare_and_swap': 6, 'expand_compare_and_swap_loop': 7, 'expand_sync_operation': 13, 'expand_sync_fetch_operation': 33, 'expand_sync_lock_test_and_set': 12, 'gt_ggc_m_P13libfunc_entry4htab': 6, 'gt_pch_p_P13libfunc_entry4htab': 5, 'gt_pch_n_P13libfunc_entry4htab': 6}, "PosixPath('602/auto-inc-dec.bc')": {}, "PosixPath('602/attribs.bc')": {'register_attribute': 11, 'decl_attributes': 168, 'substring_hash': 1, 'extract_attribute_substring': 6, 'lookup_attribute_spec': 31, 'eq_attr': 4, 'hash_attr': 1, 'init_attributes': 2}, "PosixPath('602/dominance.bc')": {'calc_dfs_tree': 211, 'calc_idoms': 824, 'free_dominance_info': 6, 'init_dom_info': 18, 'ei_next': 2, 'calc_dfs_tree_nonrec': 223, 'compress': 22, 'eval': 27, 'link_roots': 98, 'assign_dfs_numbers': 8, 'compute_dom_fast_query': 14, 'calculate_dominance_info': 78, 'get_immediate_dominator': 2, 'set_immediate_dominator': 4, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_heap_reserve': 4, 'VEC_basic_block_base_quick_push': 2, 'VEC_basic_block_heap_safe_push': 10, 'get_dominated_by': 14, 'first_dom_son': 1, 'next_dom_son': 7, 'get_dominated_by_region': 20, 'get_all_dominated_blocks': 9, 'redirect_immediate_dominators': 3, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'nearest_common_dominator_for_set': 32, 'dominated_by_p': 25, 'bb_dom_dfs_in': 2, 'bb_dom_dfs_out': 2, 'verify_dominators': 31, 'recompute_dominator': 39, 'VEC_basic_block_base_iterate': 2, 'single_pred_p': 1, 'single_pred_edge': 3, 'single_pred': 1, 'VEC_basic_block_base_unordered_remove': 4, 'prune_bbs_to_update_dominators': 90, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 4, 'VEC_int_base_quick_push': 2, 'VEC_int_heap_safe_push': 11, 'VEC_int_base_iterate': 2, 'determine_dominators_for_sons': 110, 'iterate_fix_dominators': 284, 'add_to_dominance_info': 2, 'delete_from_dominance_info': 8, 'debug_dominance_info': 7}, "PosixPath('602/tree-vect-slp.bc')": {'vect_analyze_slp_instance': 278, 'vect_schedule_slp_instance': 41, 'vect_build_slp_tree': 513, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gsi_next': 1, 'find_bb_location': 12, 'vect_free_slp_tree': 2, 'VEC_gimple_base_iterate': 2, 'vinfo_for_stmt': 1, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 4, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 10, 'gimple_ops': 1, 'vect_get_and_check_slp_defs': 102, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 4, 'VEC_int_base_quick_push': 2, 'VEC_int_heap_safe_push': 11, 'VEC_slp_tree_base_space': 2, 'VEC_slp_tree_heap_reserve': 4, 'VEC_slp_tree_base_quick_push': 2, 'VEC_slp_tree_heap_safe_push': 10, 'VEC_int_base_iterate': 2, 'VEC_slp_tree_base_iterate': 2, 'vect_get_mask_element': 11, 'VEC_tree_base_quick_push': 2, 'gimple_set_op': 2, 'gimple_call_set_lhs': 2, 'vect_create_mask_and_perm': 23, 'vect_transform_slp_perm_load': 86, 'vect_supported_slp_permutation_p': 37, 'vect_supported_load_permutation_p': 47, 'get_earlier_stmt': 1, 'vect_find_first_load_in_slp_instance': 20, 'VEC_slp_instance_base_space': 2, 'VEC_slp_instance_heap_reserve': 4, 'VEC_slp_instance_base_quick_push': 2, 'VEC_slp_instance_heap_safe_push': 10, 'vect_print_slp_tree': 5, 'vect_analyze_slp': 271, 'VEC_slp_instance_base_iterate': 2, 'vect_mark_slp_stmts': 13, 'vect_make_slp_decision': 5, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'move_use_after_head': 6, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_init_use': 34, 'gimple_vuse_op': 2, 'link_use_stmts_after': 102, 'first_imm_use_stmt': 14, 'next_imm_use_stmt': 6, 'vect_detect_hybrid_slp_stmts': 80, 'vect_detect_hybrid_slp': 2, 'VEC_vec_void_p_base_space': 2, 'VEC_vec_void_p_heap_reserve': 2, 'VEC_vec_void_p_base_quick_push': 2, 'VEC_vec_void_p_heap_safe_push': 6, 'set_vinfo_for_stmt': 5, 'new_bb_vec_info': 10, 'destroy_bb_vec_info': 6, 'vect_mark_slp_stmts_relevant': 11, 'vect_slp_analyze_node_operations': 6, 'VEC_slp_instance_base_ordered_remove': 3, 'vect_slp_analyze_operations': 6, 'vect_slp_analyze_bb': 51, 'vect_update_slp_costs_according_to_vf': 10, 'vect_get_slp_vect_defs': 9, 'VEC_tree_base_iterate': 2, 'vect_get_constant_vectors': 31, 'vect_get_slp_defs': 16, 'vect_schedule_slp': 6, 'gimple_vop': 2, 'vect_slp_transform_bb': 9}, "PosixPath('602/mcf.bc')": {'create_fixup_graph': 356, 'adjust_cfg_counts': 393, 'ei_next': 2, 'sum_edge_counts': 27, 'print_basic_block': 2, 'dump_fixup_edge': 8, 'VEC_fixup_edge_p_base_space': 2, 'VEC_fixup_edge_p_heap_reserve': 4, 'VEC_fixup_edge_p_base_quick_push': 2, 'VEC_fixup_edge_p_heap_safe_push': 10, 'add_edge': 40, 'add_fixup_edge': 4, 'VEC_fixup_edge_p_base_iterate': 2, 'find_fixup_edge': 6, 'dump_fixup_graph': 17, 'add_rfixup_edge': 4, 'compute_residual_flow': 43, 'init_augmenting_path': 2, 'init_queue': 2, 'enqueue': 7, 'is_empty': 2, 'dequeue': 5, 'find_augmenting_path': 55, 'find_max_flow': 274, 'cancel_negative_cycle': 151, 'find_minimum_cost_flow': 501, 'delete_fixup_graph': 4, 'mcf_smooth_cfg': 1161}, "PosixPath('602/sparseset.bc')": {'sparseset_clear': 2, 'sparseset_alloc': 11, 'sparseset_bit_p': 10, 'sparseset_insert_bit': 3, 'sparseset_swap': 12, 'sparseset_clear_bit': 38, 'sparseset_copy': 31, 'sparseset_iter_init': 4, 'sparseset_iter_p': 4, 'sparseset_iter_elm': 3, 'sparseset_iter_next': 2, 'sparseset_set_bit': 5, 'sparseset_and': 16, 'sparseset_and_compl': 23, 'sparseset_ior': 10, 'sparseset_equal_p': 5}, "PosixPath('602/cpp_init.bc')": {'cpp_set_lang': 114, 'cpp_create_reader': 276, 'cpp_destroy': 38, 'cpp_named_operator2name': 2, 'cpp_init_special_builtins': 33, 'cpp_init_builtins': 16, 'post_options': 50, 'mark_named_operators': 11, 'cpp_post_options': 132, 'read_original_directory': 19, 'read_original_filename': 1, 'cpp_read_main_file': 11, 'cpp_finish': 12}, "PosixPath('602/tree-sra.bc')": {'sra_modify_assign': 129, 'make_fancy_name_1': 15, 'make_fancy_decl_name': 14, 'load_assign_lhs_subreplacements': 60, 'gsi_start': 9, 'first_imm_use_on_stmt': 3, 'next_imm_use_on_stmt': 4, 'build_ref_for_offset_1': 11, 'build_ref_for_offset': 5, 'ipa_sra_preliminary_function_checks': 25, 'has_zero_uses': 1, 'is_unused_scalar_param': 1, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'move_use_after_head': 6, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_init_use': 34, 'gimple_vuse_op': 2, 'link_use_stmts_after': 102, 'first_imm_use_stmt': 14, 'gimple_ops': 1, 'next_imm_use_stmt': 6, 'ptr_parm_has_direct_uses': 48, 'type_internals_preclude_sra_p': 9, 'find_param_candidates': 83, 'callsite_has_enough_arguments_p': 1, 'all_callers_have_enough_arguments_p': 2, 'gsi_stmt': 1, 'gsi_next': 1, 'bb_seq': 2, 'gsi_start_bb': 7, 'gimple_call_fndecl': 2, 'get_ssa_base_param': 2, 'disqualify_base_of_expr': 3, 'gimple_asm_output_op': 2, 'scan_function': 117, 'VEC_access_p_base_quick_push': 2, 'unmodified_by_ref_scalar_representative': 17, 'access_precludes_ipa_sra_p': 2, 'compare_access_positions': 38, 'splice_param_accesses': 79, 'splice_all_param_accesses': 110, 'dump_dereferences_table': 21, 'VEC_basic_block_base_quick_push': 2, 'VEC_basic_block_base_pop': 2, 'ei_next': 2, 'propagate_dereference_distances': 189, 'analyze_caller_dereference_legality': 194, 'analyze_modified_params': 25, 'decide_one_param_reduction': 20, 'turn_representatives_into_adjustments': 77, 'analyze_all_param_acesses': 696, 'create_abstract_origin': 5, 'gimple_set_op': 2, 'sra_ipa_reset_debug_stmts': 5, 'convert_callers': 32, 'get_adjustment_for_base': 2, 'get_var_ann': 2, 'get_replaced_param_substitute': 5, 'replace_removed_params_ssa_names': 15, 'sra_ipa_modify_expr': 59, 'modify_function': 60, 'contains_view_convert_expr_p': 2, 'mark_parm_dereference': 9, 'VEC_access_p_base_space': 2, 'VEC_access_p_heap_reserve': 4, 'VEC_access_p_heap_safe_push': 10, 'create_access_1': 25, 'create_access': 48, 'build_access_from_expr_1': 65, 'add_link_to_rhs': 10, 'build_accesses_from_assign': 27, 'ipa_early_sra': 1008, 'gimple_referenced_vars': 1, 'first_htab_element': 8, 'first_referenced_var': 8, 'end_htab_p': 2, 'end_referenced_vars_p': 1, 'next_htab_element': 4, 'next_referenced_var': 2, 'find_var_candidates': 9, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'type_consists_of_records_p': 5, 'completely_scalarize_record': 16, 'bmp_iter_next': 2, 'relink_to_new_repr': 28, 'add_access_to_work_queue': 6, 'sort_and_splice_var_accesses': 136, 'build_access_subtree': 13, 'build_access_trees': 2, 'pop_access_from_work_queue': 5, 'child_would_conflict_in_lacc': 10, 'create_artificial_child_access': 70, 'propagate_subaccesses_across_link': 143, 'propagate_all_subaccesses': 19, 'expr_with_var_bounded_array_refs_p': 2, 'analyze_access_subtree': 31, 'dump_access_tree_1': 4, 'analyze_all_variable_accesses': 425, 'create_access_replacement': 33, 'get_access_replacement': 37, 'generate_subtree_copies': 37, 'single_succ_p': 1, 'single_succ_edge': 3, 'initialize_parameter_reductions': 45, 'find_access_in_subtree': 14, 'get_var_base_offset_size_access': 5, 'get_access_for_expr': 19, 'init_subtree_with_zero': 2, 'sra_modify_constructor_assign': 5, 'sra_modify_expr': 35, 'ref_expr_for_all_replacements_p': 8, 'handle_unscalarized_data_in_subtree': 7, 'perform_intra_sra': 492}, "PosixPath('602/tree-ssa-sink.bc')": {'gimple_vdef': 2, 'is_global_var': 2, 'is_hidden_global_store': 4, 'ei_next': 2, 'bb_seq': 2, 'gsi_last_bb': 4, 'gsi_stmt': 1, 'gimple_def_ops': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 29, 'op_iter_next_tree': 10, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'next_readonly_imm_use': 4, 'gimple_ops': 1, 'gimple_op': 2, 'gimple_assign_lhs': 2, 'op_iter_next_def': 6, 'op_iter_init_def': 11, 'op_iter_next_use': 8, 'all_immediate_uses_same_place': 3, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'nearest_common_dominator_of_uses': 34, 'gsi_start_bb': 4, 'gsi_next': 1, 'gsi_after_labels': 34, 'find_bb_for_arg': 4, 'statement_sink_location': 231, 'gsi_prev': 1, 'sink_code_in_bb': 555, 'execute_sink_code': 1, 'do_sink': 1}, "PosixPath('602/insn-peep.bc')": {}, "PosixPath('602/c-convert.bc')": {'convert': 28}, "PosixPath('602/mode-switching.bc')": {'ei_next': 2, 'new_seginfo': 11, 'remove_from_hard_reg_set': 1, 'reg_dies': 2, 'make_preds_opaque': 41, 'add_to_hard_reg_set': 1, 'reg_becomes_live': 2, 'optimize_mode_switching': 771, 'rest_of_handle_mode_switching': 713}, "PosixPath('602/lrealpath.bc')": {}, "PosixPath('602/dojump.bc')": {'clear_pending_stack_adjust': 2, 'split_comparison': 10, 'do_jump_by_parts_equality_rtx': 1, 'do_jump_by_parts_zero_rtx': 1, 'do_compare_rtx_and_jump': 90, 'do_jump_by_parts_equality': 2, 'do_compare_and_jump': 14, 'do_jump_by_parts_greater': 4, 'prefer_and_bit_test': 2, 'do_jump': 75, 'do_jump_1': 26}, "PosixPath('602/lambda-mat.bc')": {'lambda_matrix_inverse': 35, 'lambda_matrix_copy': 2, 'lambda_matrix_id': 2, 'lambda_matrix_id_p': 7, 'lambda_matrix_transpose': 5, 'lambda_matrix_add': 9, 'lambda_matrix_add_mc': 9, 'lambda_matrix_mult': 18, 'lambda_matrix_delete_rows': 1, 'lambda_matrix_row_exchange': 1, 'lambda_matrix_row_add': 11, 'lambda_matrix_row_mc': 4, 'lambda_matrix_col_exchange': 7, 'lambda_matrix_col_add': 5, 'lambda_matrix_col_negate': 3, 'lambda_matrix_col_mc': 3, 'lambda_vector_min_nz': 1, 'lambda_matrix_inverse_hard': 2, 'lambda_matrix_hermite': 4, 'lambda_matrix_right_hermite': 15, 'lambda_matrix_left_hermite': 9, 'lambda_matrix_get_column': 2, 'lambda_matrix_project_to_null': 2, 'lambda_matrix_vector_mult': 9, 'print_lambda_matrix': 1}, "PosixPath('602/insn-opinit.bc')": {}, "PosixPath('602/fold-const.bc')": {'div_and_round_double': 256, 'make_range': 216, 'fold_binary_loc': 4722, 'fold_truthop': 456, 'fold_convert_const_int_from_fixed': 145, 'fit_double_type': 2, 'force_fit_type_double': 25, 'neg_double': 2, 'encode': 7, 'decode': 3, 'mul_double_with_sign': 128, 'rshift_double': 2, 'lshift_double': 2, 'lrotate_double': 25, 'rrotate_double': 25, 'div_if_zero_remainder': 63, 'fold_undefer_overflow_warnings': 3, 'may_negate_without_overflow_p': 9, 'int_const_binop': 87, 'int_binop_types_match_p': 6, 'fold_abs_const': 10, 'fold_convert_const_int_from_int': 11, 'fold_convert_const_int_from_real': 44, 'fold_convert_const_real_from_real': 170, 'fold_convert_const_real_from_fixed': 6, 'fold_convert_const_fixed_from_fixed': 7, 'fold_convert_const_fixed_from_int': 13, 'fold_convert_const_fixed_from_real': 7, 'fold_convert_const': 328, 'init_const_call_expr_arg_iterator': 3, 'next_const_call_expr_arg': 4, 'first_const_call_expr_arg': 3, 'operand_equal_p': 247, 'fold_ignored_result': 8, 'fold_negate_const': 11, 'negate_expr_p': 518, 'fold_truth_not_expr': 186, 'tree_swap_operands_p': 9, 'sign_bit_p': 21, 'native_encode_int': 6, 'native_encode_real': 11, 'native_encode_string': 8, 'native_encode_expr': 39, 'native_interpret_int': 2, 'native_interpret_real': 15, 'native_interpret_expr': 25, 'tree_simple_nonnegative_warnv_p': 2, 'tree_expr_nonnegative_warnv_p': 19, 'tree_invalid_nonnegative_warnv_p': 25, 'tree_call_nonnegative_warnv_p': 100, 'tree_single_nonnegative_warnv_p': 8, 'tree_unary_nonnegative_warnv_p': 4, 'tree_binary_nonnegative_warnv_p': 23, 'tree_expr_nonnegative_p': 1, 'fold_not_const': 6, 'fold_real_zero_addition_p': 368, 'get_pointer_modulus_and_residue': 47, 'tree_operand_length': 3, 'simple_operand_p': 2, 'pointer_may_wrap_p': 8, 'twoval_comparison_p': 12, 'tree_expr_nonzero_warnv_p': 16, 'tree_single_nonzero_warnv_p': 11, 'tree_binary_nonzero_warnv_p': 5, 'tree_expr_nonzero_p': 1, 'maybe_canonicalize_comparison_1': 15, 'merge_ranges': 15, 'range_predecessor': 2, 'range_successor': 2, 'fold_indirect_ref_1': 44, 'fold_read_from_constant_string': 39, 'size_binop_loc': 1, 'fold_single_bit_test_into_sign_test': 5, 'fold_comparison': 1321, 'build_range_check': 11, 'range_binop': 2, 'eval_subst': 17, 'optimize_minmax_comparison': 4, 'make_bit_field_ref': 4, 'unextend': 2, 'decode_field_reference': 19, 'combine_comparisons': 67, 'fold_to_nonsharp_ineq_using_bound': 23, 'fold_minmax': 8, 'omit_two_operands_loc': 4, 'distribute_bit_expr': 8, 'fold_mult_zconjz': 7, 'extract_muldiv': 147, 'multiple_of_p': 16, 'ptr_difference_const': 20, 'split_address_to_core_and_offset': 25, 'associate_trees': 1, 'split_tree': 18, 'distribute_real_division': 27, 'fold_plusminus_mult_expr': 29, 'fold_binary_op_with_conditional_arg': 8, 'fold_convert_loc': 28, 'fold_unary_loc': 475, 'fold_strip_sign_ops': 97, 'omit_one_operand_loc': 5, 'build_fold_addr_expr_with_type_loc': 2, 'fold_ternary_loc': 189, 'fold_cond_expr_with_comparison': 735, 'negate_expr': 4, 'fold_negate_expr': 540, 'operand_equal_for_comparison_p': 17, 'fold_relational_const': 27, 'const_binop': 305, 'fold_convertible_p': 10, 'fold_single_bit_test': 11, 'fold': 45, 'fold_build_cleanup_point_expr': 4, 'fold_indirect_ref_loc': 2, 'round_up_loc': 10, 'round_down_loc': 4}, "PosixPath('602/tree-vrp.bc')": {'vrp_finalize': 258, 'find_assert_locations': 329, 'first_imm_use_on_stmt': 3, 'next_imm_use_on_stmt': 4, 'nonnull_arg_p': 7, 'set_value_range': 11, 'set_value_range_to_varying': 5, 'get_value_range': 15, 'vrp_val_min': 2, 'vrp_val_is_min': 2, 'is_negative_overflow_infinity': 2, 'vrp_val_max': 2, 'vrp_val_is_max': 2, 'is_positive_overflow_infinity': 2, 'operand_less_p': 19, 'compare_values_warnv': 14, 'ssa_name_nonnegative_p': 3, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'dump_value_range': 96, 'dump_all_value_ranges': 14, 'gsi_stmt': 1, 'dump_asserts_for': 11, 'dump_all_asserts': 74, 'gimple_ops': 1, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_next_tree': 10, 'zero_ssa_operands': 1, 'extract_code_and_val_from_cond_with_ops': 4, 'live_on_edge': 3, 'has_single_use': 4, 'register_new_assert_for': 128, 'register_edge_assert_for_2': 65, 'register_edge_assert_for_1': 15, 'register_edge_assert_for': 14, 'ei_next': 2, 'find_conditional_asserts': 29, 'compare_case_labels': 4, 'find_switch_asserts': 18, 'bb_seq': 2, 'gsi_start_bb': 4, 'infer_value_range': 29, 'gsi_next': 1, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'find_assert_locations_1': 168, 'build_assert_expr_for': 4, 'process_assert_insertions_for': 56, 'process_assert_insertions': 208, 'insert_range_assertions': 534, 'gimple_call_fndecl': 2, 'stmt_interesting_for_vrp': 6, 'vrp_initialize': 53, 'check_array_ref': 15, 'search_for_addr_array': 3, 'check_array_bounds': 9, 'check_all_array_refs': 84, 'VEC_edge_base_iterate': 2, 'gsi_last_bb': 4, 'is_overflow_infinity': 2, 'usable_range_p': 15, 'overflow_infinity_range_p': 2, 'compare_ranges': 12, 'compare_range_with_value': 3, 'get_vr_for_comparison': 17, 'compare_names': 278, 'compare_name_with_value': 100, 'vrp_evaluate_conditional_warnv_with_ops': 294, 'vrp_evaluate_conditional': 18, 'identify_jump_threads': 130, 'gimple_set_op': 2, 'fold_predicate_in': 1, 'simplify_truth_ops_using_ranges': 18, 'simplify_div_or_mod_using_ranges': 5, 'simplify_abs_using_ranges': 7, 'test_for_singularity': 2, 'simplify_cond_using_ranges': 2, 'find_case_label_range': 13, 'VEC_edge_base_space': 2, 'VEC_edge_heap_reserve': 2, 'VEC_edge_base_quick_push': 2, 'VEC_edge_heap_safe_push': 6, 'VEC_switch_update_base_space': 2, 'VEC_switch_update_heap_reserve': 2, 'VEC_switch_update_base_quick_push': 3, 'VEC_switch_update_heap_safe_push': 8, 'simplify_switch_using_ranges': 143, 'simplify_stmt_using_ranges': 155, 'vrp_fold_stmt': 160, 'end_imm_use_stmt_p': 2, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'move_use_after_head': 6, 'gimple_vuse_op': 2, 'link_use_stmts_after': 19, 'first_imm_use_stmt': 14, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 8, 'next_imm_use_stmt': 6, 'remove_range_assertions': 131, 'copy_value_range': 7, 'value_ranges_intersect_p': 2, 'vrp_meet': 33, 'avoid_overflow_infinity': 4, 'valid_value_p': 4, 'get_loop': 1, 'get_chrec_loop': 3, 'adjust_range_with_scev': 11, 'loop_outer': 3, 'vrp_var_may_overflow': 7, 'supports_overflow_infinity': 4, 'negative_overflow_infinity': 2, 'positive_overflow_infinity': 2, 'update_value_range': 23, 'vrp_visit_phi_node': 368, 'gimple_call_nonnegative_warnv_p': 1, 'gimple_stmt_nonnegative_warnv_p': 2, 'range_is_nonnull': 2, 'vrp_stmt_computes_nonzero': 2, 'extract_range_basic': 11, 'add_equivalence': 3, 'set_and_canonicalize_value_range': 4, 'extract_range_from_assert': 52, 'op_with_constant_singleton_value_range': 4, 'set_value_range_to_undefined': 5, 'range_is_null': 2, 'vrp_int_const_binop': 4, 'abs_extent_range': 4, 'extract_range_from_binary_expr': 662, 'extract_range_from_unary_expr': 191, 'extract_range_from_cond_expr': 19, 'extract_range_from_assignment': 867, 'vrp_visit_assignment_or_call': 24, 'vrp_visit_cond_stmt': 16, 'vrp_visit_switch_stmt': 45, 'vrp_visit_stmt': 93, 'execute_vrp': 981}, "PosixPath('602/loop-doloop.bc')": {}, "PosixPath('602/tree-ssa-propagate.bc')": {'valid_gimple_rhs_p': 6, 'valid_gimple_call_p': 2, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 29, 'op_iter_next_tree': 10, 'move_ssa_defining_stmt_for_defs': 11, 'gsi_stmt': 1, 'gimple_ops': 1, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve_exact': 4, 'VEC_tree_heap_safe_grow': 7, 'gimple_set_op': 2, 'update_call_from_tree': 13, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_heap_reserve_exact': 2, 'VEC_basic_block_heap_safe_grow': 4, 'bb_seq': 2, 'gsi_start_bb': 4, 'gsi_next': 1, 'ei_next': 2, 'cfg_blocks_add': 84, 'add_control_edge': 122, 'ssa_prop_init': 100, 'cfg_blocks_get': 13, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'VEC_gimple_base_space': 2, 'VEC_gimple_gc_reserve': 4, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_gc_safe_push': 10, 'next_readonly_imm_use': 4, 'add_ssa_edge': 1, 'simulate_stmt': 46, 'simulate_block': 71, 'VEC_gimple_base_pop': 2, 'process_ssa_edge_worklist': 17, 'ssa_prop_fini': 4, 'ssa_propagate': 247, 'stmt_makes_single_store': 2, 'replace_phi_args_in': 25, 'gsi_last_bb': 4, 'gsi_prev': 1, 'has_zero_uses': 1, 'op_iter_next_use': 8, 'replace_uses_in': 19, 'substitute_and_fold': 446}, "PosixPath('602/cfghooks.bc')": {'ei_next': 2, 'verify_flow_info': 387, 'dump_bb': 43, 'redirect_edge_and_branch': 4, 'can_remove_branch_p': 10, 'remove_branch': 10, 'single_pred_p': 1, 'single_pred_edge': 3, 'single_succ_p': 1, 'single_succ_edge': 3, 'redirect_edge_and_branch_force': 8, 'split_block': 29, 'move_block_after': 4, 'delete_basic_block': 20, 'split_edge': 90, 'create_basic_block': 4, 'can_merge_blocks_p': 4, 'predict_edge': 4, 'predicted_by_p': 3, 'merge_blocks': 49, 'VEC_basic_block_base_quick_push': 2, 'loop_outer': 3, 'make_forwarder_block': 173, 'tidy_fallthru_edges': 43, 'can_duplicate_block_p': 11, 'duplicate_block': 136, 'block_ends_with_call_p': 4, 'block_ends_with_condjump_p': 4, 'flow_call_edges_add': 4, 'cfg_hook_duplicate_loop_to_header_edge': 2, 'extract_cond_bb_edges': 2, 'lv_add_condition_to_bb': 2}, "PosixPath('602/decimal64.bc')": {'__dpd64FromNumber': 239, 'decDigitsToDPD': 83, 'decDigitsFromDPD': 11, '__dpd64ToNumber': 39, '__dpd64ToString': 33, 'decimal64FromNumber': 1, 'decimal64ToNumber': 1}, "PosixPath('602/pretty-print.bc')": {'pp_append_r': 47, 'pp_construct': 10, 'pp_base_formatted_text': 22, 'pp_base_clear_output_area': 27, 'pp_write_text_to_stream': 1, 'pp_base_remaining_character_count_for_line': 4, 'pp_base_newline': 20, 'pp_base_character': 28, 'pp_set_verbatim_wrapping_': 2, 'pp_base_emit_prefix': 8, 'pp_base_append_text': 3, 'pp_wrap_text': 14, 'pp_maybe_wrap_text': 14, 'pp_base_string': 15, 'pp_clear_state': 2, 'pp_base_format': 804, 'pp_base_output_formatted_text': 32, 'pp_base_format_verbatim': 2, 'pp_base_flush': 8, 'pp_set_real_maximum_length': 4, 'pp_base_set_prefix': 2, 'pp_base_last_position_in_text': 7, 'pp_printf': 9, 'pp_verbatim': 9, 'decode_utf8_char': 1, 'identifier_to_locale': 6, 'pp_base_tree_identifier': 2}, "PosixPath('602/insn-modes.bc')": {}, "PosixPath('602/cppdefault.bc')": {}, "PosixPath('602/tree-ssa-dse.bc')": {'gsi_last': 9, 'VEC_void_p_base_last': 2, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'dse_leave_block': 31, 'bb_seq': 2, 'gsi_stmt': 1, 'gimple_vdef': 2, 'gimple_ops': 1, 'gimple_op': 2, 'gimple_call_fndecl': 2, 'record_voperand_set': 1, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'move_use_after_head': 6, 'gimple_def_ops': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_init_use': 34, 'gimple_vuse_op': 2, 'link_use_stmts_after': 100, 'first_imm_use_stmt': 14, 'next_imm_use_stmt': 6, 'dse_possible_dead_store_p': 78, 'get_stmt_uid': 5, 'dse_optimize_stmt': 77, 'gsi_prev': 1, 'gsi_next': 1, 'dse_enter_block': 141, 'dse_initialize_block_local_data': 4, 'tree_ssa_dse': 23}, "PosixPath('602/lto-section-out.bc')": {'lto_write_stream': 7, 'append_block': 25, 'lto_output_1_stream': 7, 'lto_output_data_stream': 9, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 10, 'lto_output_decl_index': 33, 'lto_output_field_decl_index': 2, 'lto_output_fn_decl_index': 2, 'lto_output_namespace_decl_index': 2, 'lto_output_var_decl_index': 2, 'lto_output_type_decl_index': 2, 'lto_output_type_ref_index': 2, 'VEC_lto_out_decl_state_ptr_base_last': 2, 'lto_get_out_decl_state': 2, 'lto_create_simple_output_block': 7, 'lto_destroy_simple_output_block': 23, 'lto_init_tree_ref_encoder': 4, 'lto_new_out_decl_state': 4, 'lto_destroy_tree_ref_encoder': 2, 'lto_delete_out_decl_state': 2, 'VEC_lto_out_decl_state_ptr_base_space': 2, 'VEC_lto_out_decl_state_ptr_heap_reserve': 4, 'VEC_lto_out_decl_state_ptr_base_quick_push': 2, 'VEC_lto_out_decl_state_ptr_heap_safe_push': 10, 'VEC_lto_out_decl_state_ptr_base_pop': 2, 'lto_pop_out_decl_state': 2, 'lto_record_function_out_decl_state': 1}, "PosixPath('602/graphite-ppl.bc')": {}, "PosixPath('602/fopen_unlocked.bc')": {}, "PosixPath('602/tree-tailcall.bc')": {'single_succ_p': 1, 'single_succ_edge': 3, 'gimple_referenced_vars': 1, 'first_htab_element': 8, 'first_referenced_var': 8, 'end_htab_p': 2, 'end_referenced_vars_p': 2, 'is_global_var': 2, 'may_be_aliased': 7, 'is_call_clobbered': 3, 'is_call_used': 3, 'next_htab_element': 4, 'next_referenced_var': 2, 'suitable_for_tail_opt_p': 18, 'suitable_for_tail_call_opt_p': 3, 'bb_seq': 2, 'gsi_last_bb': 4, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_vuse': 2, 'gimple_references_memory_p': 2, 'gsi_prev': 1, 'ei_next': 2, 'gimple_call_fndecl': 2, 'gsi_next': 1, 'propagate_through_phis': 8, 'gsi_start_bb': 4, 'independent_of_stmt_p': 90, 'process_assignment': 9, 'find_tail_calls': 300, 'single_pred_p': 1, 'phi_nodes': 2, 'var_ann': 2, 'arg_needs_copy_p': 6, 'single_pred_edge': 3, 'decrease_profile': 9, 'gimple_set_op': 2, 'add_successor_phi_arg': 6, 'eliminate_tail_call': 151, 'optimize_tail_call': 150, 'gimple_seq_last_stmt': 1, 'adjust_return_value': 4, 'add_virtual_phis': 4, 'tree_optimize_tail_calls_1': 483}, "PosixPath('602/tree-vect-loop.bc')": {'vect_analyze_loop_form': 146, 'new_loop_vec_info': 77, 'first_imm_use_on_stmt': 3, 'next_imm_use_on_stmt': 4, 'gsi_stmt': 1, 'gsi_next': 1, 'bb_seq': 2, 'gsi_start_bb': 7, 'vinfo_for_stmt': 1, 'VEC_slp_instance_base_iterate': 2, 'destroy_loop_vec_info': 45, 'phi_nodes': 2, 'single_pred_p': 1, 'VEC_vec_void_p_base_space': 2, 'VEC_vec_void_p_heap_reserve': 2, 'VEC_vec_void_p_base_quick_push': 2, 'VEC_vec_void_p_heap_safe_push': 6, 'set_vinfo_for_stmt': 5, 'loop_outer': 3, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 4, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 10, 'VEC_gimple_base_pop': 2, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'next_readonly_imm_use': 4, 'gimple_ops': 1, 'is_loop_header_bb_p': 5, 'vect_is_simple_reduction': 41, 'vect_analyze_scalar_cycles_1': 46, 'vect_determine_vectorization_factor': 25, 'vect_model_induction_cost': 7, 'gsi_after_labels': 16, 'gimple_set_op': 2, 'get_initial_def_for_induction': 93, 'vectorizable_induction': 122, 'vect_estimate_min_profitable_iters': 203, 'vect_analyze_loop_operations': 87, 'vect_analyze_loop': 94, 'get_initial_def_for_reduction': 44, 'tree_operand_length': 3, 'vect_model_reduction_cost': 31, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 8, 'VEC_gimple_base_iterate': 2, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'move_use_after_head': 6, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'gimple_vuse_op': 2, 'link_use_stmts_after': 46, 'first_imm_use_stmt': 14, 'next_imm_use_stmt': 6, 'vect_create_epilog_for_reduction': 127, 'vectorizable_reduction': 502, 'vectorizable_live_operation': 24, 'op_iter_init_phidef': 2, 'op_iter_next_def': 6, 'op_iter_init_def': 11, 'vect_loop_kill_debug_uses': 87, 'vect_transform_loop': 143}, "PosixPath('602/tree-vect-patterns.bc')": {'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'vinfo_for_stmt': 1, 'gimple_ops': 1, 'VEC_vec_void_p_base_space': 2, 'VEC_vec_void_p_heap_reserve': 2, 'VEC_vec_void_p_base_quick_push': 2, 'VEC_vec_void_p_heap_safe_push': 6, 'set_vinfo_for_stmt': 5, 'vect_pattern_recog_1': 59, 'gsi_next': 1, 'gimple_call_fndecl': 2, 'gimple_set_op': 2, 'gimple_call_set_lhs': 2, 'vect_recog_pow_pattern': 7, 'widened_name_p': 21, 'vect_recog_dot_prod_pattern': 84, 'vect_recog_widen_sum_pattern': 16, 'vect_recog_widen_mult_pattern': 18, 'vect_pattern_recog': 118}, "PosixPath('602/reload1.bc')": {'init_elim_table': 48, 'mark_not_eliminable': 33, 'finish_spills': 373, 'eliminate_regs_in_insn': 485, 'copy_reloads': 15, 'find_reload_regs': 1099, 'find_reg': 593, 'bitmap_initialize_stat': 2, 'new_insn_chain': 24, 'bmp_iter_set_init': 20, 'bmp_iter_set': 25, 'add_to_hard_reg_set': 1, 'bmp_iter_next': 2, 'compute_use_by_pseudos': 54, 'mark_home_live': 1, 'ei_next': 2, 'has_nonexceptional_receiver': 104, 'scan_paradoxical_subregs': 12, 'function_invariant_p': 6, 'alter_reg': 56, 'maybe_fix_stack_asms': 19, 'spill_hard_reg': 7, 'set_initial_elim_offsets': 14, 'set_offsets_for_label': 20, 'set_label_offsets': 83, 'set_initial_label_offsets': 2, 'eliminate_regs_1': 137, 'recog_memoized': 3, 'delete_dead_insn': 2, 'elimination_effects': 230, 'check_eliminable_occurrences': 14, 'update_eliminable_offsets': 12, 'calculate_needs_all_insns': 330, 'verify_initial_elim_offsets': 6, 'update_eliminables': 106, 'count_pseudo': 11, 'order_regs_for_reload': 30, 'reloads_unique_chain_p': 18, 'VEC_rtx_p_base_space': 2, 'VEC_rtx_p_heap_reserve': 2, 'VEC_rtx_p_base_quick_push': 2, 'VEC_rtx_p_heap_safe_push': 6, 'substitute': 10, 'VEC_rtx_p_base_pop': 2, 'gen_reload_chain_without_interm_reg_p': 40, 'reloads_conflict': 66, 'count_spilled_pseudo': 12, 'reload_reg_class_lower': 28, 'select_reload_regs': 1026, 'delete_caller_save_insns': 13, 'mark_reload_reg_in_use': 84, 'choose_reload_regs_init': 81, 'reload_reg_free_for_value_p': 79, 'free_for_value_p': 89, 'reload_reg_free_p': 31, 'set_reload_reg': 27, 'allocate_reload_reg': 83, 'failed_reload': 6, 'clear_reload_reg_in_use': 18, 'choose_reload_regs': 1956, 'merge_assigned_reloads': 127, 'delete_address_reloads_1': 24, 'delete_address_reloads': 21, 'delete_output_reload': 99, 'inc_for_reload': 9, 'conflicts_with_override': 1, 'reload_adjust_reg_for_temp': 6, 'gen_reload': 33, 'emit_input_reload_insns': 600, 'do_input_reload': 759, 'forget_old_reloads_1': 30, 'emit_output_reload_insns': 177, 'do_output_reload': 222, 'reload_reg_reaches_end_p': 113, 'inherit_piecemeal_p': 3, 'emit_reload_insns': 2328, 'forget_marked_reloads': 45, 'reload_as_needed': 5412, 'replace_pseudos_in': 16, 'fixup_abnormal_edges': 110, 'reload': 3438, 'elimination_target_reg_p': 2, 'deallocate_reload_reg': 11}, "PosixPath('602/graphite-dependences.bc')": {}, "PosixPath('602/graphite-clast-to-gimple.bc')": {}, "PosixPath('602/intl.bc')": {}, "PosixPath('602/tree-if-conv.bc')": {'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 42, 'ei_next': 2, 'pred_blocks_visited_p': 25, 'get_loop_body_in_if_conv_order': 63, 'if_convertible_bb_p': 33, 'bb_seq': 2, 'gsi_start_bb': 4, 'gsi_stmt': 1, 'gimple_ops': 1, 'bb_with_exit_edge_p': 10, 'if_convertible_gimple_assign_stmt_p': 1, 'if_convertible_stmt_p': 1, 'gsi_next': 1, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'next_readonly_imm_use': 4, 'if_convertible_phi_p': 15, 'if_convertible_loop_p': 282, 'gimple_set_op': 2, 'ifc_temp_var': 2, 'add_to_predicate_list': 3, 'tree_if_convert_cond_stmt': 10, 'tree_if_convert_stmt': 23, 'single_succ_p': 1, 'single_succ_edge': 3, 'single_succ': 1, 'gsi_after_labels': 16, 'find_phi_replacement_condition': 15, 'replace_phi_with_cond_gimple_assign_stmt': 5, 'set_phi_nodes': 2, 'process_phi_nodes': 94, 'gsi_last_bb': 4, 'set_bb_seq': 2, 'combine_blocks': 246, 'clean_predicate_lists': 29, 'tree_if_conversion': 667, 'main_tree_if_conversion': 725}, "PosixPath('602/value-prof.bc')": {'gimple_mod_subtract_transform': 114, 'gimple_divmod_fixed_value_transform': 82, 'gimple_stringops_transform': 94, 'gimple_ic_transform': 146, 'gimple_histogram_value': 1, 'set_histogram_value': 7, 'gimple_remove_histogram_value': 5, 'gimple_histogram_value_of_type': 2, 'dump_histogram_value': 39, 'gimple_alloc_histogram_value': 4, 'gimple_duplicate_stmt_histograms': 8, 'gimple_move_stmt_histograms': 2, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gsi_next': 1, 'verify_histograms': 24, 'stringop_block_profile': 12, 'gimple_ops': 1, 'VEC_histogram_value_base_space': 2, 'VEC_histogram_value_heap_reserve': 4, 'VEC_histogram_value_base_quick_push': 2, 'gimple_divmod_values_to_profile': 10, 'gimple_call_fndecl': 2, 'VEC_histogram_value_heap_safe_push': 3, 'gimple_stringops_values_to_profile': 5, 'gimple_indirect_call_to_profile': 2, 'gimple_values_to_profile': 28, 'VEC_histogram_value_base_iterate': 2, 'gimple_find_values_to_profile': 87, 'find_values_to_profile': 83, 'check_counter': 5, 'gimple_mod_subtract': 33, 'gimple_divmod_fixed_value': 21, 'gimple_mod_pow2': 21, 'gimple_mod_pow2_value_transform': 63, 'gimple_set_op': 2, 'gimple_stringop_fixed_value': 24, 'init_pid_map': 7, 'find_func_by_pid': 8, 'gimple_ic': 21, 'gimple_value_profile_transformations': 549, 'value_profile_transformations': 574}, "PosixPath('602/stmt.bc')": {'label_rtx': 6, 'expand_nl_goto_receiver': 2, 'expand_label': 20, 'parse_output_constraint': 12, 'parse_input_constraint': 11, 'decl_overlaps_hard_reg_set_p': 11, 'gimple_ops': 1, 'gimple_op': 2, 'gimple_asm_output_op': 2, 'gimple_asm_clobber_op': 4, 'gimple_asm_label_op': 4, 'expand_asm_loc': 2, 'n_occurrences': 2, 'check_operand_nalternatives': 4, 'check_unique_operand_names': 6, 'resolve_operand_name_1': 7, 'resolve_asm_operand_names': 12, 'expand_asm_operands': 1082, 'expand_asm_stmt': 24, 'expand_expr_stmt': 7, 'tree_operand_length': 3, 'warn_if_unused_value': 24, 'expand_value_return': 9, 'expand_return': 67, 'expand_decl': 40, 'add_case_node': 23, 'case_bit_test_cmp': 6, 'emit_case_bit_tests': 41, 'estimate_case_costs': 12, 'balance_case_nodes': 49, 'node_has_low_bound': 3, 'node_has_high_bound': 3, 'emit_case_nodes': 58, 'expand_case': 198}, "PosixPath('602/domwalk.bc')": {'VEC_void_p_base_pop': 2, 'VEC_void_p_base_space': 2, 'VEC_void_p_heap_reserve': 4, 'VEC_void_p_base_quick_push': 2, 'VEC_void_p_heap_safe_push': 10, 'walk_dominator_tree': 96, 'init_walk_dominator_tree': 2, 'fini_walk_dominator_tree': 5}, "PosixPath('602/alias.bc')": {'alias_set_subset_of': 3, 'alias_sets_conflict_p': 6, 'walk_mems_2': 2, 'get_deref_alias_set_1': 4, 'VEC_alias_set_entry_base_space': 2, 'VEC_alias_set_entry_gc_reserve': 2, 'VEC_alias_set_entry_base_quick_push': 2, 'VEC_alias_set_entry_gc_safe_push': 6, 'VEC_tree_base_iterate': 2, 'insert_subset_children': 2, 'record_alias_subset': 17, 'get_alias_set': 54, 'record_component_aliases': 13, 'component_uses_parent_alias_set': 6, 'get_deref_alias_set': 2, 'get_reg_known_equiv_p': 1, 'canon_rtx': 14, 'find_base_term': 20, 'get_addr': 8, 'nonoverlapping_component_refs_p': 4, 'nonoverlapping_memrefs_p': 76, 'base_alias_check': 20, 'addr_side_effect_eval': 3, 'rtx_equal_for_memref_p': 19, 'memrefs_conflict_p': 63, 'mems_in_disjoint_alias_sets_p': 4, 'fixed_scalar_and_varying_struct_p': 5, 'ao_ref_from_mem': 62, 'rtx_refs_may_alias_p': 1, 'true_dependence': 20, 'canon_true_dependence': 17, 'write_dependence_p': 25, 'init_alias_target': 1, 'memory_modified_in_insn_p': 2, 'VEC_rtx_base_space': 2, 'VEC_rtx_gc_reserve_exact': 2, 'VEC_rtx_gc_safe_grow': 4, 'VEC_rtx_gc_safe_grow_cleared': 4, 'find_base_value': 35, 'record_set': 83, 'init_alias_analysis': 112, 'end_alias_analysis': 1, 'gt_pch_na_reg_known_value': 1, 'gt_ggc_ma_reg_known_value': 1}, "PosixPath('602/tree-data-ref.bc')": {'split_constant_offset_1': 196, 'initialize_data_dependence_relation': 93, 'compute_self_dependence': 26, 'create_rdg_vertices': 64, 'build_rdg': 314, 'subscript_dependence_tester_1': 489, 'init_omega_for_ddr_1': 179, 'omega_add_zero_geq': 30, 'omega_extract_distance_vectors': 94, 'create_rdg_edge_for_ddr': 72, 'create_rdg_edges_for_scalar': 7, 'VEC_data_reference_p_base_iterate': 2, 'dump_data_reference': 1, 'dump_data_references': 2, 'VEC_ddr_p_base_iterate': 2, 'VEC_tree_base_iterate': 2, 'dump_affine_function': 2, 'dump_conflict_function': 3, 'dump_subscript': 3, 'VEC_loop_p_base_iterate': 2, 'dump_data_dependence_relation': 33, 'dump_data_dependence_relations': 2, 'VEC_lambda_vector_base_iterate': 2, 'print_dir_vectors': 2, 'print_dist_vectors': 2, 'dump_dist_dir_vectors': 29, 'dump_ddrs': 2, 'gimple_ops': 1, 'split_constant_offset': 27, 'canonicalize_base_object_address': 4, 'dr_analyze_innermost': 106, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 10, 'dr_analyze_indices': 46, 'dr_analyze_alias': 4, 'create_data_ref': 77, 'VEC_tree_base_pop': 2, 'disjoint_objects_p': 54, 'dr_may_alias_p': 121, 'estimated_loop_iterations_int': 3, 'VEC_subscript_p_base_iterate': 2, 'free_conflict_function': 1, 'affine_fn_cst': 2, 'conflict_fn': 8, 'VEC_lambda_vector_base_space': 2, 'VEC_lambda_vector_heap_reserve': 4, 'VEC_lambda_vector_base_quick_push': 2, 'VEC_lambda_vector_heap_safe_push': 10, 'save_dist_v': 8, 'save_dir_v': 8, 'object_address_invariant_in_loop_p': 5, 'VEC_subscript_p_base_space': 2, 'VEC_subscript_p_heap_reserve': 4, 'VEC_subscript_p_base_quick_push': 2, 'VEC_subscript_p_heap_safe_push': 10, 'VEC_ddr_p_base_space': 2, 'VEC_ddr_p_heap_reserve': 4, 'VEC_ddr_p_base_quick_push': 2, 'VEC_ddr_p_heap_safe_push': 10, 'access_functions_are_affine_or_constant_p': 6, 'analyze_ziv_subscript': 8, 'siv_subscript_p': 4, 'evolution_function_is_affine_in_loop': 2, 'get_loop': 1, 'get_chrec_loop': 3, 'analyze_siv_subscript_cst_affine': 26, 'initialize_matrix_A': 8, 'affine_fn_univar': 5, 'affine_fn_op': 17, 'compute_overlap_steps_for_affine_1_2': 271, 'analyze_subscript_affine_affine': 107, 'build_polynomial_chrec': 6, 'can_use_analyze_subscript_affine_affine': 4, 'analyze_siv_subscript': 35, 'estimated_loop_iterations_tree': 3, 'gcd_of_steps_may_divide_p': 2, 'analyze_miv_subscript': 46, 'analyze_overlapping_iterations': 126, 'free_subscripts': 3, 'finalize_ddr_dependent': 2, 'common_affine_function': 11, 'affine_function_constant_p': 2, 'compute_subscript_distance': 10, 'same_access_functions': 11, 'constant_access_functions': 21, 'insert_innermost_unit_dist_vector': 1, 'add_distance_for_zero_overlaps': 19, 'index_in_loop_nest': 5, 'add_outer_distances': 2, 'add_multivariate_self_dist': 10, 'add_other_self_distances': 47, 'build_classic_dist_vector_1': 30, 'build_classic_dist_vector': 181, 'build_classic_dir_vector': 11, 'subscript_dependence_tester': 297, 'omega_init_eqn_zero': 7, 'omega_add_zero_eq': 23, 'init_omega_eq_with_af': 28, 'omega_setup_subscript': 14, 'omega_copy_eqn': 23, 'omega_copy_problem': 319, 'omega_free_problem': 6, 'init_omega_for_ddr': 11, 'ddr_consistent_p': 103, 'compute_affine_dependence': 147, 'compute_all_dependences': 578, 'gimple_vuse': 2, 'VEC_data_ref_loc_base_space': 2, 'VEC_data_ref_loc_heap_reserve': 4, 'VEC_data_ref_loc_heap_safe_push': 8, 'get_references_in_stmt': 11, 'dr_address_invariant_p': 3, 'VEC_data_reference_p_base_space': 2, 'VEC_data_reference_p_heap_reserve': 4, 'VEC_data_reference_p_base_quick_push': 2, 'VEC_data_reference_p_heap_safe_push': 10, 'find_data_references_in_stmt': 13, 'graphite_find_data_references_in_stmt': 8, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gsi_next': 1, 'find_data_references_in_bb': 4, 'find_data_references_in_loop': 2, 'VEC_loop_p_base_space': 2, 'VEC_loop_p_heap_reserve': 4, 'VEC_loop_p_base_quick_push': 2, 'VEC_loop_p_heap_safe_push': 10, 'compute_data_dependences_for_loop': 2, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'fel_next': 25, 'fel_init': 46, 'free_dependence_relation': 4, 'free_dependence_relations': 3, 'free_data_refs': 2, 'analyze_all_data_dependences': 19, 'tree_check_data_deps': 112, 'dump_rdg_vertex': 10, 'dump_rdg_component': 7, 'dump_rdg': 3, 'rdg_vertex_for_stmt': 2, 'VEC_gimple_base_iterate': 2, 'known_dependences_p': 1, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 4, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 10, 'stmts_from_loop': 13, 'ddr_dependence_level': 22, 'clear_and_done_ssa_iter': 2, 'op_iter_init_phidef': 2, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'op_iter_init': 11, 'op_iter_next_def': 6, 'op_iter_init_def': 38, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'next_readonly_imm_use': 4, 'create_rdg_edges': 238, 'free_rdg': 4, 'stores_from_loop': 13, 'rdg_defs_used_in_other_loops_p': 81, 'ref_base_address': 5, 'have_similar_memory_accesses': 15, 'VEC_gimple_base_ordered_remove': 3, 'ref_base_address_1': 6, 'remove_similar_memory_refs': 8, 'access_matrix_get_index_for_parameter': 5}, "PosixPath('602/emit-rtl.bc')": {'set_mem_attributes_minus_bitpos': 62, 'set_mem_attrs_for_spill': 11, 'init_virtual_regs': 25, 'gen_rtx_CONST_INT': 5, 'lookup_const_double': 1, 'const_double_from_real_value': 4, 'lookup_const_fixed': 1, 'const_fixed_from_fixed_value': 6, 'immed_double_const': 8, 'gen_rtx_REG': 6, 'get_mem_attrs': 28, 'set_mem_alias_set': 10, 'validate_subreg': 29, 'gen_rtvec': 5, 'gen_reg_rtx': 5, 'get_reg_attrs': 4, 'update_reg_offset': 2, 'mark_reg_pointer': 3, 'set_reg_attrs_from_value': 15, 'set_reg_attrs_for_parm': 11, 'subreg_lowpart_p': 4, 'set_reg_attrs_for_decl_rtl': 26, 'mark_user_reg': 2, 'maybe_set_first_label_num': 1, 'gen_lowpart_common': 10, 'gen_highpart': 2, 'change_address_1': 15, 'adjust_address_1': 18, 'operand_subword': 3, 'get_mem_align_offset': 13, 'set_mem_addr_space': 11, 'set_mem_align': 11, 'set_mem_expr': 10, 'set_mem_offset': 10, 'set_mem_size': 13, 'change_address': 14, 'offset_address': 11, 'widen_memory_access': 8, 'get_spill_slot_decl': 3, 'set_new_first_and_last_insn': 4, 'reset_used_flags': 8, 'set_used_flags': 7, 'set_used_decls': 6, 'copy_rtx_if_shared_1': 11, 'copy_rtx_if_shared': 1, 'unshare_all_rtl_in_chain': 4, 'unshare_all_rtl_again': 5, 'verify_rtx_sharing': 17, 'verify_rtl_sharing': 13, 'make_safe_from': 4, 'get_last_insn_anywhere': 2, 'next_insn': 4, 'get_first_nonnote_insn': 4, 'previous_insn': 6, 'get_last_nonnote_insn': 6, 'next_nonnote_insn_bb': 2, 'prev_nonnote_insn_bb': 2, 'last_call_insn': 2, 'active_insn_p': 2, 'skip_consecutive_labels': 2, 'mark_label_nuses': 6, 'emit_insn_after_1': 8, 'make_insn_raw': 8, 'add_insn_after': 27, 'emit_insn_after_setloc': 1, 'try_split': 36, 'make_debug_insn_raw': 10, 'make_jump_insn_raw': 8, 'add_insn': 2, 'add_insn_before': 25, 'set_insn_deleted': 3, 'remove_insn': 34, 'add_function_usage_to': 2, 'reorder_insns_nobb': 3, 'reorder_insns': 8, 'make_call_insn_raw': 8, 'emit_note_before': 4, 'emit_note_after': 4, 'emit_insn_after': 3, 'emit_jump_insn_after_setloc': 1, 'emit_jump_insn_after': 3, 'emit_call_insn_after_setloc': 1, 'emit_call_insn_after': 3, 'emit_debug_insn_after_setloc': 1, 'emit_debug_insn_after': 2, 'emit_insn_before_setloc': 2, 'emit_insn_before': 3, 'emit_jump_insn_before_setloc': 1, 'emit_jump_insn_before': 3, 'emit_call_insn_before_setloc': 1, 'emit_call_insn_before': 3, 'emit_debug_insn_before_setloc': 1, 'emit_debug_insn_before': 2, 'emit_note_copy': 4, 'emit_note': 4, 'emit_clobber': 2, 'start_sequence': 12, 'end_sequence': 11, 'emit_use': 2, 'classify_insn': 11, 'emit': 11, 'push_topmost_sequence': 5, 'pop_topmost_sequence': 5, 'copy_insn_1': 110, 'init_emit': 48, 'gen_rtx_CONST_VECTOR': 10, 'init_emit_regs': 6, 'gen_const_vector': 4, 'reg_attrs_htab_eq': 6, 'reg_attrs_htab_hash': 2, 'mem_attrs_htab_eq': 62, 'mem_attrs_htab_hash': 16, 'const_double_htab_eq': 8, 'const_double_htab_hash': 4, 'init_emit_once': 1008, 'emit_copy_of_insn_after': 17}, "PosixPath('602/haifa-sched.bc')": {'remove_notes': 12, 'restore_other_notes': 14, 'schedule_block': 710, 'schedule_insn': 316, 'priority': 71, 'haifa_sched_init': 22, 'sd_iterator_cond': 9, 'init_h_i_d': 13, 'create_check_block_twin': 291, 'may_trap_exp': 7, 'haifa_classify_rtx': 6, 'recog_memoized': 3, 'insn_cost': 1, 'dep_cost_1': 5, 'increase_insn_priority': 3, 'ready_lastpos': 7, 'ready_element': 5, 'dying_use_p': 3, 'setup_insn_reg_pressure_info': 124, 'sd_iterator_start': 7, 'dep_list_size': 37, 'rank_for_schedule': 96, 'swap_sort': 8, 'ready_sort': 160, 'setup_ref_regs': 8, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'mark_regno_birth_or_death': 12, 'bmp_iter_next': 2, 'initiate_reg_pressure_info': 26, 'ei_next': 2, 'bb_has_eh_pred': 14, 'initiate_bb_reg_pressure_info': 43, 'save_reg_pressure': 10, 'update_register_pressure': 9, 'restore_reg_pressure': 10, 'setup_insn_max_reg_pressure': 119, 'sched_setup_bb_reg_pressure_info': 44, 'concat_note_lists': 1, 'get_ebb_head_tail': 14, 'no_real_insns_p': 2, 'bb_note': 2, 'reemit_notes': 3, 'max_issue': 138, 'dump_new_block_header': 3, 'ready_remove_first': 11, 'ready_remove': 10, 'queue_insn': 8, 'restore_bb_notes': 35, 'ready_add': 19, 'queue_to_ready': 41, 'debug_ready_list': 16, 'fix_jump_move': 30, 'move_succs': 19, 'move_block_after_check': 32, 'move_insn': 147, 'update_reg_and_insn_max_reg_pressure': 14, 'sched_speculate_insn': 1, 'haifa_speculate_insn': 13, 'haifa_change_pattern': 5, 'queue_remove': 11, 'change_queue_index': 23, 'fix_tick_ready': 58, 'try_ready': 329, 'bitmap_initialize_stat': 2, 'fix_recovery_deps': 151, 'print_curr_reg_pressure': 10, 'ok_for_early_queue_removal': 3, 'early_queue_to_ready': 28, 'choose_ready': 56, 'find_fallthru_edge': 57, 'VEC_basic_block_base_iterate': 2, 'init_insns_in_bb': 5, 'VEC_rtx_base_iterate': 2, 'sched_scan': 21, 'luids_init_insn': 2, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve_exact': 2, 'VEC_int_heap_safe_grow': 4, 'VEC_int_heap_safe_grow_cleared': 4, 'luids_extend_insn': 3, 'sched_init_luids': 2, 'VEC_haifa_insn_data_def_base_space': 2, 'VEC_haifa_insn_data_def_heap_reserve_exact': 2, 'VEC_haifa_insn_data_def_heap_safe_grow': 4, 'VEC_haifa_insn_data_def_heap_safe_grow_cleared': 4, 'extend_h_i_d': 6, 'haifa_init_h_i_d': 2, 'sched_extend_bb': 12, 'init_before_recovery': 53, 'sched_create_recovery_block': 63, 'sched_extend_ready_list': 1, 'sched_create_recovery_edges': 4, 'process_insn_forw_deps_be_in_spec': 31, 'contributes_to_priority_p': 5, 'VEC_rtx_base_space': 2, 'VEC_rtx_heap_reserve': 4, 'VEC_rtx_base_quick_push': 2, 'VEC_rtx_heap_safe_push': 10, 'clear_priorities': 54, 'calc_priorities': 2, 'begin_speculative_block': 6, 'add_to_speculative_block': 406, 'generate_recovery_code': 275, 'fix_inter_tick': 122, 'set_priorities': 14, 'sched_init': 40, 'VEC_basic_block_base_quick_push': 2, 'sched_split_block_1': 2, 'haifa_finish_h_i_d': 2, 'sched_finish': 1, 'haifa_sched_finish': 5, 'sched_finish_ready_list': 9, 'unlink_bb_notes': 35}, "PosixPath('602/graph.bc')": {'node_data': 8, 'ei_next': 2, 'print_rtl_graph_with_bb': 82, 'clean_graph_dump_file': 3, 'finish_graph_dump_file': 3}, "PosixPath('602/tree-nrv.bc')": {'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 2, 'gimple_call_fndecl': 2, 'is_global_var': 2, 'may_be_aliased': 7, 'is_call_clobbered': 3, 'is_call_used': 3, 'dest_safe_for_nrv_p': 10, 'gsi_next': 1, 'execute_return_slot_opt': 29, 'var_ann': 2, 'finalize_nrv_r': 5, 'tree_nrv': 177}, "PosixPath('602/sha1.bc')": {'sha1_init_ctx': 29, 'sha1_read_ctx': 5, 'sha1_process_block': 512, 'sha1_finish_ctx': 20, 'sha1_process_bytes': 7, 'sha1_stream': 42, 'sha1_buffer': 30}, "PosixPath('602/final.bc')": {'rest_of_handle_final': 26, 'init_insn_lengths': 9, 'asm_insn_count': 2, 'get_attr_length_1': 12, 'label_to_alignment': 5, 'label_to_max_skip': 5, 'align_fuzz': 22, 'insn_current_reference_address': 36, 'ei_next': 2, 'compute_alignments': 174, 'final_addr_vec_align': 2, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve_exact': 2, 'VEC_int_heap_safe_grow': 4, 'shorten_branches': 578, 'add_debug_prefix_map': 6, 'remap_debug_filename': 14, 'final_start_function': 4, 'final_end_function': 10, 'asm_fprintf': 208, 'profile_function': 10, 'profile_after_prologue': 9, 'output_alternate_entry_point': 2, 'notice_source_line': 5, 'get_mem_expr_from_op': 25, 'output_asm_operand_names': 16, 'output_asm_name': 7, 'output_asm_label': 6, 'alter_subreg': 8, 'walk_alter_subreg': 1, 'output_address': 2, 'output_addr_const': 16, 'mark_symbol_ref_as_used': 2, 'output_operand': 10, 'output_asm_insn': 126, 'recog_memoized': 3, 'cleanup_subreg_operands': 29, 'get_insn_template': 5, 'call_from_call_insn': 5, 'final_scan_insn': 340, 'final': 7, 'split_double': 13, 'leaf_function_p': 12, 'final_forward_branch_p': 3, 'debug_flush_symbol_queue': 17, 'debug_queue_symbol': 5, 'debug_free_queue': 2, 'rest_of_clean_state': 13}, "PosixPath('602/getruntime.bc')": {'get_run_time': 6}, "PosixPath('602/tree-ssa-alias.bc')": {'ptr_deref_may_alias_global_p': 2, 'gimple_referenced_vars': 1, 'first_htab_element': 8, 'first_referenced_var': 8, 'end_htab_p': 2, 'end_referenced_vars_p': 2, 'may_be_aliased': 7, 'next_htab_element': 4, 'next_referenced_var': 2, 'dump_points_to_solution': 2, 'dump_points_to_info_for': 1, 'dump_alias_info': 14, 'get_ptr_info': 2, 'ao_ref_init': 4, 'ao_ref_base': 2, 'ao_ref_alias_set': 2, 'ao_ref_init_from_ptr_and_size': 25, 'decl_refs_may_alias_p': 4, 'gimple_ops': 1, 'gimple_op': 2, 'ptr_deref_may_alias_decl_p': 13, 'same_type_for_tbaa': 4, 'aliasing_component_refs_p': 62, 'ptr_derefs_may_alias_p': 18, 'refs_may_alias_p_1': 88, 'refs_may_alias_p': 16, 'refs_anti_dependent_p': 16, 'refs_output_dependent_p': 16, 'is_global_var': 2, 'gimple_call_fndecl': 2, 'is_call_clobbered': 3, 'ref_maybe_used_by_call_p_1': 20, 'ref_maybe_used_by_call_p': 54, 'ref_maybe_used_by_stmt_p': 48, 'ptr_deref_may_alias_ref_p_1': 3, 'call_may_clobber_ref_p_1': 17, 'stmt_may_clobber_ref_p_1': 35, 'stmt_may_clobber_ref_p': 3, 'gimple_vuse': 2, 'get_continuation_for_phi': 8, 'maybe_skip_until': 4, 'walk_non_aliased_vuses': 9, 'walk_aliased_vdefs_1': 6, 'walk_aliased_vdefs': 4}, "PosixPath('602/gimple-iterator.bc')": {'gsi_start': 9, 'update_bb_for_stmts': 1, 'gsi_insert_seq_nodes_before': 36, 'gsi_insert_seq_before_without_update': 4, 'gsi_stmt': 1, 'gsi_next': 1, 'update_modified_stmts': 4, 'gsi_insert_seq_nodes_after': 29, 'gsi_insert_seq_after_without_update': 4, 'gsi_split_seq_after': 18, 'gsi_split_seq_before': 26, 'gimple_ops': 1, 'gimple_op': 2, 'gimple_call_lhs': 2, 'gimple_has_lhs': 2, 'gimple_use_ops': 2, 'op_iter_init': 7, 'op_iter_next_use': 8, 'op_iter_init_use': 11, 'delink_imm_use': 5, 'delink_stmt_imm_use': 30, 'gsi_replace': 4, 'gsi_insert_before_without_update': 3, 'gsi_insert_after_without_update': 3, 'gsi_remove': 23, 'phi_nodes': 2, 'bb_seq': 2, 'gsi_start_bb': 4, 'gsi_for_stmt': 29, 'gsi_last_bb': 4, 'gsi_move_to_bb_end': 3, 'single_pred_p': 1, 'single_succ_p': 1, 'single_pred_edge': 3, 'gimple_find_edge_insert_loc': 94, 'gsi_insert_on_edge_immediate': 5, 'gsi_insert_seq_on_edge_immediate': 5, 'single_succ_edge': 3, 'gsi_commit_one_edge_insert': 4, 'ei_next': 2, 'gsi_commit_edge_inserts': 14}, "PosixPath('602/tree-call-cdce.bc')": {'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_call_fndecl': 2, 'check_target_format': 2, 'check_pow': 20, 'is_call_dce_candidate': 23, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 4, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 9, 'gsi_next': 1, 'gimple_set_op': 2, 'gimple_assign_set_lhs': 2, 'gen_one_condition': 13, 'gen_conditions_for_domain': 2, 'gen_conditions_for_pow_cst_base': 7, 'gen_conditions_for_pow_int_base': 9, 'gen_conditions_for_pow': 17, 'gen_shrink_wrap_conditions': 26, 'shrink_wrap_one_built_in_call': 93, 'shrink_wrap_conditional_dead_built_in_calls': 67, 'gimple_vop': 2, 'tree_call_cdce': 162}, "PosixPath('602/ira-conflicts.bc')": {'ira_build_conflicts': 1466, 'ira_allocno_set_iter_init': 20, 'ira_allocno_iter_cond': 1, 'ira_allocno_conflict_iter_init': 49, 'ira_allocno_conflict_iter_cond': 73, 'ira_allocno_conflict_iter_next': 8, 'print_conflicts': 204, 'sparseset_bit_p': 10, 'sparseset_insert_bit': 3, 'sparseset_set_bit': 12, 'sparseset_iter_init': 4, 'sparseset_iter_p': 4, 'sparseset_iter_elm': 3, 'sparseset_iter_next': 2, 'build_conflict_bit_table': 558, 'ira_allocno_set_iter_cond': 47, 'ira_allocno_set_iter_next': 3, 'build_allocno_conflicts': 395, 'build_conflicts': 6, 'ira_copy_iter_cond': 1, 'propagate_copies': 209, 'go_through_subreg': 9, 'ira_get_register_move_cost': 1, 'ira_allocate_and_set_costs': 2, 'process_regs_for_copy': 159, 'get_dup_num': 6, 'process_reg_shuffles': 6, 'add_insn_allocno_copies': 142, 'add_copies': 210}, "PosixPath('602/tree-stdarg.bc')": {'execute_optimize_stdarg': 594, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 2, 'gimple_call_fndecl': 2, 'is_global_var': 2, 'gsi_next': 1, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'VEC_edge_base_space': 2, 'VEC_edge_heap_reserve': 4, 'VEC_edge_base_quick_push': 2, 'VEC_edge_heap_safe_push': 10, 'ei_next': 2, 'VEC_edge_base_pop': 2, 'reachable_at_most_once': 139, 'va_list_counter_bump': 27, 'va_list_ptr_read': 36, 'va_list_ptr_write': 4, 'check_va_list_escapes': 41, 'va_list_counter_op': 32, 'va_list_counter_struct_op': 6, 'gimple_use_ops': 2, 'op_iter_init': 7, 'op_iter_next_tree': 10, 'op_iter_init_tree': 11, 'check_all_va_list_escapes': 128, 'find_va_list_reference': 2}, "PosixPath('602/tree-affine.bc')": {'aff_combination_scale': 60, 'aff_combination_add_elt': 36, 'aff_combination_convert': 48, 'aff_combination_remove_elt': 22, 'aff_combination_zero': 4, 'aff_combination_const': 5, 'aff_combination_elt': 23, 'aff_combination_add_cst': 3, 'aff_combination_add': 9, 'aff_combination_to_tree': 19, 'tree_to_aff_combination': 109, 'unshare_aff_combination': 6, 'aff_combination_add_product': 18, 'aff_combination_mult': 18, 'gimple_ops': 1, 'gimple_op': 2, 'aff_combination_expand': 212, 'double_int_constant_multiple_p': 10, 'aff_combination_find_elt': 2, 'aff_combination_constant_multiple_p': 44, 'print_aff': 5, 'get_inner_reference_aff': 4}, "PosixPath('602/ipa-cp.bc')": {'VEC_ipa_node_params_t_base_space': 2, 'VEC_ipa_node_params_t_heap_reserve_exact': 2, 'VEC_ipa_node_params_t_heap_safe_grow': 4, 'VEC_ipa_node_params_t_heap_safe_grow_cleared': 4, 'ipa_check_create_node_params': 3, 'VEC_ipa_edge_args_t_base_space': 2, 'VEC_ipa_edge_args_t_gc_reserve_exact': 2, 'VEC_ipa_edge_args_t_gc_safe_grow': 4, 'VEC_ipa_edge_args_t_gc_safe_grow_cleared': 4, 'ipa_check_create_edge_args': 3, 'ipcp_init_stage': 44, 'ipcp_generate_summary': 44, 'cgraph_only_called_directly_p': 2, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 2, 'gimple_call_fn': 2, 'gimple_call_fndecl': 5, 'gsi_next': 1, 'ipcp_versionable_function_p': 56, 'ipcp_cloning_candidate_p': 14, 'ipcp_initialize_node_lattices': 36, 'ipcp_compute_node_scale': 20, 'ipcp_print_all_lattices': 11, 'ipcp_get_node_scale': 1, 'ipcp_function_scale_print': 3, 'ipcp_lattice_from_jfunc': 38, 'ipcp_lats_are_equal': 6, 'ipa_lattice_meet': 14, 'ipcp_propagate_stage': 848, 'ipa_get_param': 1, 'ipcp_change_tops_to_bottom': 26, 'ipcp_iterate_stage': 163, 'ipcp_const_param_count': 11, 'ipcp_get_orig_node': 1, 'ipcp_need_redirect_p': 50, 'ipcp_estimate_growth': 23, 'ipcp_estimate_cloning_cost': 20, 'build_const_val': 2, 'ipcp_create_replace_map': 9, 'VEC_ipa_replace_map_p_base_space': 2, 'VEC_ipa_replace_map_p_gc_reserve': 4, 'VEC_ipa_replace_map_p_base_quick_push': 2, 'VEC_ipa_replace_map_p_gc_safe_push': 10, 'VEC_cgraph_edge_p_base_quick_push': 2, 'ipcp_node_is_clone': 1, 'ipcp_update_callgraph': 47, 'ipcp_update_profiling': 67, 'ipcp_insert_stage': 221, 'ipcp_driver': 439}, "PosixPath('602/lto-opts.bc')": {'output_options': 12, 'VEC_opt_t_base_space': 2, 'VEC_opt_t_heap_reserve': 4, 'VEC_opt_t_base_quick_push': 3, 'VEC_opt_t_heap_safe_push': 10, 'lto_register_user_option': 9, 'clear_options': 3, 'concatenate_options': 1, 'output_string_stream': 4, 'lto_write_options': 38, 'input_string_block': 4, 'input_options': 25, 'lto_read_file_options': 56, 'lto_reissue_options': 32}, "PosixPath('602/loop-invariant.bc')": {'calculate_loop_reg_pressure': 763, 'free_inv_motion_data': 16, 'find_exits': 69, 'set_move_mark': 73, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 55, 'bitmap_initialize_stat': 2, 'df_lr_get_bb_info': 3, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'get_regno_cover_class': 2, 'change_pressure': 15, 'bmp_iter_next': 2, 'mark_ref_regs': 9, 'mark_reg_death': 2, 'loop_depth': 1, 'mark_regno_live': 3, 'mark_reg_store': 11, 'ei_next': 2, 'compute_always_reached': 3, 'check_invariant_table_size': 1, 'find_defs': 3, 'may_assign_reg_p': 2, 'check_maybe_invariant': 1, 'check_dependency': 9, 'check_dependencies': 6, 'VEC_invariant_p_base_space': 2, 'VEC_invariant_p_heap_reserve': 2, 'VEC_invariant_p_base_quick_push': 2, 'VEC_invariant_p_heap_safe_push': 6, 'create_new_invariant': 116, 'find_invariant_insn': 120, 'invariant_for_use': 13, 'record_use': 34, 'record_uses': 4, 'find_invariants_insn': 132, 'find_invariants_bb': 153, 'find_invariants_body': 176, 'VEC_invariant_p_base_iterate': 2, 'hash_invariant_expr_1': 7, 'find_or_insert_inv': 13, 'find_identical_invariants': 150, 'invariant_expr_equal_p': 7, 'eq_invariant_expr': 22, 'merge_identical_invariants': 2, 'find_invariants': 257, 'get_cover_class_and_nregs': 6, 'get_inv_cost': 412, 'gain_for_invariant': 24, 'best_gain_for_invariant': 115, 'find_invariants_to_move': 264, 'move_invariant_reg': 133, 'move_invariants': 6, 'move_single_loop_invariants': 551, 'move_loop_invariants': 1100}, "PosixPath('602/xmalloc.bc')": {}, "PosixPath('602/xstrndup.bc')": {'xstrndup': 1}, "PosixPath('602/lambda-code.bc')": {'first_imm_use_on_stmt': 3, 'next_imm_use_on_stmt': 4, 'build_access_matrix': 26, 'replace_uses_equiv_to_x_with_y': 30, 'lambda_body_vector_new': 42, 'lambda_vector_matrix_mult': 6, 'lambda_body_vector_compute_new': 17, 'print_lambda_body_vector': 2, 'lambda_linear_expression_new': 43, 'print_linear_expression': 1, 'print_lambda_loop': 2, 'lambda_loopnest_new': 66, 'print_lambda_loopnest': 7, 'lambda_lattice_new': 42, 'lambda_lattice_compute_base': 197, 'lle_equal': 46, 'compute_nest_using_fourier_motzkin': 142, 'lambda_compute_auxillary_space': 269, 'lambda_vector_min_nz': 1, 'lambda_compute_step_signs': 5, 'lambda_compute_target_space': 210, 'lambda_loopnest_transform': 565, 'gimple_ops': 1, 'bb_seq': 2, 'gsi_start_bb': 4, 'gsi_stmt': 1, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_next_tree': 10, 'single_ssa_tree_operand': 1, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'phi_loop_edge_uses_def': 3, 'next_readonly_imm_use': 4, 'stmt_is_bumper_for_loop': 7, 'gsi_next': 1, 'perfect_nest_p': 17, 'op_iter_next_use': 8, 'clear_and_done_ssa_iter': 2, 'op_iter_init_phiuse': 6, 'cannot_convert_modify_to_perfect_nest': 50, 'exit_phi_for_loop_p': 4, 'can_put_in_inner_loop': 2, 'can_put_after_inner_loop': 3, 'cannot_convert_bb_to_perfect_nest': 64, 'can_convert_to_perfect_nest': 79, 'VEC_tree_base_iterate': 2, 'gcc_tree_to_linear_expression': 26, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 4, 'loop_depth': 1, 'loop_outer': 3, 'invariant_in_loop_and_outer_loops': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 3, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 4, 'VEC_int_base_quick_push': 2, 'VEC_int_heap_safe_push': 11, 'gcc_loop_to_lambda_loop': 41, 'VEC_lambda_loop_base_space': 2, 'VEC_lambda_loop_heap_reserve': 4, 'VEC_lambda_loop_base_quick_push': 2, 'VEC_lambda_loop_heap_safe_push': 9, 'VEC_source_location_base_space': 2, 'VEC_source_location_heap_reserve': 4, 'VEC_source_location_base_quick_push': 2, 'single_succ_p': 1, 'single_succ_edge': 3, 'VEC_tree_base_pop': 2, 'VEC_source_location_base_pop': 2, 'single_pred_p': 1, 'single_pred_edge': 3, 'gimple_set_op': 2, 'gsi_last_bb': 4, 'gsi_after_labels': 16, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 7, 'gimple_vop': 2, 'perfect_nestify': 443, 'VEC_lambda_loop_base_iterate': 2, 'gcc_loopnest_to_lambda_loopnest': 694, 'end_imm_use_stmt_p': 2, 'move_use_after_head': 6, 'gimple_vuse_op': 2, 'link_use_stmts_after': 18, 'first_imm_use_stmt': 14, 'next_imm_use_stmt': 6, 'remove_iv': 9, 'build_linear_expr': 4, 'lle_to_gcc_expression': 15, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 4, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 10, 'lambda_loopnest_to_gcc_loopnest': 203, 'VEC_ddr_p_base_iterate': 2, 'lambda_transform_legal_p': 67, 'VEC_data_reference_p_base_iterate': 2, 'tree_operand_length': 3, 'lambda_collect_parameters_from_af': 3, 'lambda_collect_parameters': 8, 'VEC_loop_p_base_iterate': 2, 'am_vector_index_for_loop': 2, 'av_for_af_base': 13, 'av_for_af': 9, 'VEC_lambda_vector_base_quick_push': 2, 'lambda_compute_access_matrices': 32}, "PosixPath('602/ipa.bc')": {'cgraph_remove_unreachable_nodes': 180, 'cgraph_only_called_directly_p': 2, 'cgraph_postorder': 31, 'cgraph_can_remove_if_no_direct_calls_p': 4, 'update_inlined_to_pointer': 4, 'cgraph_node_set_new': 2, 'VEC_cgraph_node_ptr_base_space': 2, 'VEC_cgraph_node_ptr_gc_reserve': 4, 'VEC_cgraph_node_ptr_base_quick_push': 2, 'VEC_cgraph_node_ptr_gc_safe_push': 10, 'cgraph_node_set_add': 30, 'VEC_cgraph_node_ptr_base_pop': 2, 'cgraph_node_set_remove': 22, 'cgraph_node_set_find': 6, 'csi_end_p': 1, 'dump_cgraph_node_set': 3, 'cgraph_externally_visible_p': 24, 'function_and_variable_visibility': 244, 'whole_program_function_and_variable_visibility': 25}, "PosixPath('602/cfganal.bc')": {'set_edge_can_fallthru_flag': 96, 'sbitmap_iter_init': 22, 'single_succ_p': 1, 'flow_active_insn_p': 2, 'forwarder_block_p': 14, 'ei_next': 2, 'can_fallthru': 65, 'could_fall_through': 42, 'mark_dfs_back_edges': 49, 'find_unreachable_blocks': 60, 'create_edge_list': 82, 'print_edge_list': 28, 'find_edge_index': 9, 'verify_edge_list': 177, 'find_edge': 36, 'sbitmap_iter_cond': 38, 'sbitmap_iter_next': 3, 'flow_nodes_print': 2, 'flow_edge_list_print': 8, 'remove_fake_predecessors': 7, 'remove_fake_edges': 1, 'remove_fake_exit_edges': 1, 'add_noreturn_fake_exit_edges': 18, 'flow_dfs_compute_reverse_init': 9, 'flow_dfs_compute_reverse_add_bb': 7, 'flow_dfs_compute_reverse_execute': 78, 'flow_dfs_compute_reverse_finish': 1, 'connect_infinite_loops_to_exit': 141, 'post_order_compute': 67, 'dfs_find_deadend': 16, 'inverted_post_order_compute': 220, 'pre_and_rev_post_order_compute': 35, 'dfs_enumerate_from': 107, 'compute_dominance_frontiers_1': 92, 'compute_dominance_frontiers': 64, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'VEC_int_base_quick_push': 2, 'bmp_iter_next': 2, 'VEC_int_base_pop': 2, 'bmp_iter_and_compl_init': 84, 'bmp_iter_and_compl': 121, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 4, 'VEC_int_heap_safe_push': 11, 'compute_idf': 177}, "PosixPath('602/physmem.bc')": {}, "PosixPath('602/insn-emit.bc')": {'gen_movti': 2, 'gen_split_1883': 6, 'gen_split_1884': 6, 'gen_split_1885': 6, 'gen_split_1891': 3, 'gen_split_1895': 3, 'gen_split_1908': 13, 'gen_split_1992': 4, 'gen_split_1993': 4, 'gen_split_1996': 4, 'gen_split_1997': 4, 'gen_split_2036': 8, 'gen_split_2037': 7, 'gen_split_2038': 9, 'gen_split_2039': 9, 'gen_split_2076': 18, 'gen_split_2087': 9, 'gen_split_2095': 6, 'gen_split_2104': 6, 'gen_split_2105': 6, 'gen_split_2121': 13, 'gen_split_2182': 4, 'gen_split_2183': 4, 'gen_peephole2_2202': 10, 'gen_peephole2_2203': 10, 'gen_split_2220': 8, 'gen_split_2225': 5, 'gen_split_2236': 7, 'gen_split_2237': 7, 'gen_split_2238': 7, 'gen_split_2239': 7, 'gen_split_2405': 13, 'gen_split_2418': 17, 'gen_split_2420': 3, 'gen_split_2421': 3, 'gen_split_2422': 9, 'gen_peephole2_2429': 4, 'gen_peephole2_2430': 4, 'gen_peephole2_2443': 9, 'gen_split_2598': 4, 'gen_split_2599': 4, 'gen_smaxv16qi3': 45, 'gen_smaxv4si3': 45, 'gen_umaxv4si3': 45, 'gen_sminv16qi3': 45, 'gen_sminv4si3': 45, 'gen_uminv8hi3': 45, 'gen_uminv4si3': 45, 'gen_split_2926': 4, 'gen_split_2927': 4, 'gen_split_2928': 4, 'gen_split_2929': 4, 'gen_split_1848': 4, 'gen_split_1849': 4, 'gen_split_1850': 4, 'gen_split_1851': 4, 'gen_split_1852': 4, 'gen_split_1853': 7, 'gen_split_1854': 7, 'gen_movsi': 1, 'gen_movhi': 1, 'gen_movqi': 1, 'gen_movdi': 1, 'gen_movoi': 1, 'gen_movsf': 1, 'gen_split_1868': 2, 'gen_movdf': 1, 'gen_movxf': 1, 'gen_split_1876': 2, 'gen_movtf': 1, 'gen_split_1881': 7, 'gen_split_1882': 7, 'gen_split_1890': 2, 'gen_split_1894': 2, 'gen_split_1899': 4, 'gen_split_1901': 4, 'gen_split_1902': 5, 'gen_split_1903': 4, 'gen_split_1905': 2, 'gen_split_1906': 2, 'gen_split_1912': 20, 'gen_split_1914': 4, 'gen_split_1917': 4, 'gen_split_1918': 4, 'gen_split_1919': 2, 'gen_split_1920': 2, 'gen_peephole2_1936': 2, 'gen_peephole2_1937': 2, 'gen_peephole2_1938': 2, 'gen_peephole2_1939': 2, 'gen_peephole2_1940': 4, 'gen_peephole2_1941': 4, 'gen_peephole2_1942': 4, 'gen_peephole2_1943': 4, 'gen_split_1944': 5, 'gen_split_1945': 5, 'gen_split_1946': 5, 'gen_split_1947': 7, 'gen_split_1948': 7, 'gen_split_1949': 7, 'gen_split_1950': 4, 'gen_split_1951': 4, 'gen_split_1952': 4, 'gen_split_1953': 15, 'gen_split_1954': 15, 'gen_split_1955': 15, 'gen_split_1956': 16, 'gen_split_1957': 11, 'gen_split_1958': 11, 'gen_split_1959': 11, 'gen_split_1960': 7, 'gen_split_1961': 7, 'gen_split_1965': 4, 'gen_split_1966': 4, 'gen_split_1967': 4, 'gen_split_1968': 4, 'gen_split_1969': 4, 'gen_split_1970': 4, 'gen_split_1971': 2, 'gen_split_1972': 2, 'gen_split_1973': 2, 'gen_split_1980': 4, 'gen_split_1981': 12, 'gen_split_1982': 4, 'gen_split_1983': 12, 'gen_split_1984': 4, 'gen_split_1985': 12, 'gen_split_1986': 2, 'gen_split_1987': 2, 'gen_split_1988': 4, 'gen_split_1989': 4, 'gen_split_1990': 17, 'gen_split_1991': 17, 'gen_split_1994': 14, 'gen_split_1995': 14, 'gen_split_1998': 2, 'gen_split_1999': 2, 'gen_split_2000': 4, 'gen_split_2001': 4, 'gen_split_2002': 2, 'gen_split_2003': 2, 'gen_split_2004': 4, 'gen_split_2005': 4, 'gen_split_2006': 4, 'gen_split_2007': 4, 'gen_split_2008': 4, 'gen_split_2009': 4, 'gen_split_2010': 2, 'gen_split_2011': 2, 'gen_split_2012': 2, 'gen_split_2013': 2, 'gen_split_2014': 2, 'gen_split_2015': 2, 'gen_split_2016': 7, 'gen_split_2017': 7, 'gen_split_2018': 7, 'gen_split_2019': 2, 'gen_split_2020': 2, 'gen_split_2021': 2, 'gen_split_2022': 4, 'gen_split_2023': 4, 'gen_split_2024': 4, 'gen_split_2025': 5, 'gen_split_2026': 5, 'gen_split_2027': 5, 'gen_addqi3': 3, 'gen_addhi3': 3, 'gen_addsi3': 3, 'gen_adddi3': 3, 'gen_split_2035': 16, 'gen_subqi3': 3, 'gen_subhi3': 3, 'gen_subsi3': 3, 'gen_subdi3': 3, 'gen_split_2044': 16, 'gen_split_2077': 34, 'gen_split_2080': 7, 'gen_split_2081': 7, 'gen_split_2085': 20, 'gen_split_2086': 8, 'gen_andqi3': 3, 'gen_andhi3': 3, 'gen_andsi3': 3, 'gen_split_2094': 5, 'gen_iorqi3': 3, 'gen_xorqi3': 3, 'gen_iorhi3': 3, 'gen_xorhi3': 3, 'gen_iorsi3': 3, 'gen_xorsi3': 3, 'gen_split_2102': 5, 'gen_split_2103': 5, 'gen_negqi2': 1, 'gen_neghi2': 1, 'gen_negsi2': 1, 'gen_negdi2': 1, 'gen_split_2111': 7, 'gen_abssf2': 1, 'gen_negsf2': 1, 'gen_absdf2': 1, 'gen_negdf2': 1, 'gen_absxf2': 1, 'gen_negxf2': 1, 'gen_abstf2': 1, 'gen_negtf2': 1, 'gen_split_2120': 2, 'gen_split_2122': 3, 'gen_split_2123': 3, 'gen_split_2124': 3, 'gen_copysignsf3': 3, 'gen_copysigndf3': 3, 'gen_copysigntf3': 3, 'gen_one_cmplqi2': 1, 'gen_one_cmplhi2': 1, 'gen_one_cmplsi2': 1, 'gen_split_2137': 7, 'gen_split_2138': 7, 'gen_split_2139': 7, 'gen_split_2140': 7, 'gen_split_2141': 7, 'gen_ashldi3': 3, 'gen_ashlsi3': 3, 'gen_split_2148': 6, 'gen_split_2149': 3, 'gen_ashlhi3': 3, 'gen_ashlqi3': 3, 'gen_ashrdi3': 3, 'gen_ashrsi3': 3, 'gen_ashrhi3': 3, 'gen_ashrqi3': 3, 'gen_lshrdi3': 3, 'gen_lshrsi3': 3, 'gen_lshrhi3': 3, 'gen_lshrqi3': 3, 'gen_split_2168': 7, 'gen_rotlsi3': 3, 'gen_rotlhi3': 3, 'gen_rotlqi3': 3, 'gen_split_2174': 7, 'gen_rotrsi3': 3, 'gen_rotrhi3': 3, 'gen_rotrqi3': 3, 'gen_split_2184': 2, 'gen_split_2185': 2, 'gen_split_2186': 4, 'gen_split_2187': 4, 'gen_split_2188': 3, 'gen_split_2189': 5, 'gen_split_2190': 8, 'gen_split_2191': 7, 'gen_split_2192': 8, 'gen_split_2193': 7, 'gen_split_2194': 11, 'gen_split_2195': 16, 'gen_split_2196': 13, 'gen_split_2197': 13, 'gen_split_2198': 18, 'gen_split_2199': 18, 'gen_untyped_call': 4, 'gen_split_2227': 7, 'gen_split_2232': 16, 'gen_split_2234': 7, 'gen_split_2235': 2, 'gen_fmodsf3': 2, 'gen_fmoddf3': 2, 'gen_remaindersf3': 2, 'gen_remainderdf3': 2, 'gen_split_2249': 2, 'gen_split_2250': 2, 'gen_split_2251': 2, 'gen_split_2252': 2, 'gen_split_2253': 2, 'gen_split_2254': 2, 'gen_asinxf2': 30, 'gen_acosxf2': 30, 'gen_expNcorexf3': 78, 'gen_expm1xf2': 133, 'gen_split_2316': 5, 'gen_split_2317': 7, 'gen_split_2318': 4, 'gen_split_2319': 4, 'gen_split_2320': 4, 'gen_split_2321': 4, 'gen_split_2322': 4, 'gen_split_2323': 2, 'gen_split_2324': 2, 'gen_split_2332': 7, 'gen_split_2336': 15, 'gen_split_2337': 15, 'gen_split_2338': 15, 'gen_split_2339': 16, 'gen_split_2340': 11, 'gen_split_2341': 11, 'gen_split_2342': 11, 'gen_split_2343': 7, 'gen_split_2344': 7, 'gen_split_2350': 7, 'gen_split_2354': 15, 'gen_split_2355': 15, 'gen_split_2356': 15, 'gen_split_2357': 16, 'gen_split_2358': 11, 'gen_split_2359': 11, 'gen_split_2360': 11, 'gen_split_2361': 7, 'gen_split_2362': 7, 'gen_split_2368': 7, 'gen_split_2372': 7, 'gen_split_2376': 5, 'gen_split_2377': 5, 'gen_strset': 1, 'gen_cmpstrnsi': 2, 'gen_peephole2_2399': 22, 'gen_peephole2_2400': 22, 'gen_movqicc': 6, 'gen_movhicc': 6, 'gen_movsicc': 6, 'gen_movsfcc': 6, 'gen_movdfcc': 6, 'gen_movxfcc': 6, 'gen_split_2409': 29, 'gen_peephole2_2410': 13, 'gen_addqicc': 6, 'gen_addhicc': 6, 'gen_addsicc': 6, 'gen_split_2417': 14, 'gen_split_2419': 11, 'gen_peephole2_2423': 4, 'gen_peephole2_2424': 4, 'gen_peephole2_2425': 4, 'gen_peephole2_2426': 4, 'gen_peephole2_2427': 4, 'gen_peephole2_2428': 2, 'gen_peephole2_2431': 4, 'gen_peephole2_2432': 4, 'gen_peephole2_2433': 4, 'gen_peephole2_2434': 7, 'gen_peephole2_2435': 2, 'gen_peephole2_2436': 2, 'gen_peephole2_2437': 2, 'gen_peephole2_2438': 7, 'gen_peephole2_2439': 7, 'gen_peephole2_2440': 7, 'gen_peephole2_2441': 7, 'gen_peephole2_2442': 7, 'gen_peephole2_2444': 7, 'gen_peephole2_2445': 7, 'gen_peephole2_2446': 7, 'gen_peephole2_2450': 2, 'gen_peephole2_2451': 2, 'gen_peephole2_2452': 2, 'gen_peephole2_2453': 2, 'gen_peephole2_2454': 2, 'gen_peephole2_2455': 2, 'gen_peephole2_2461': 2, 'gen_peephole2_2464': 2, 'gen_peephole2_2466': 7, 'gen_peephole2_2472': 2, 'gen_peephole2_2475': 2, 'gen_peephole2_2477': 4, 'gen_peephole2_2478': 4, 'gen_peephole2_2479': 7, 'gen_peephole2_2480': 7, 'gen_peephole2_2481': 7, 'gen_peephole2_2482': 5, 'gen_peephole2_2483': 5, 'gen_peephole2_2484': 5, 'gen_peephole2_2485': 14, 'gen_prefetch': 4, 'gen_movv8qi': 1, 'gen_movv4hi': 1, 'gen_movv2si': 1, 'gen_movv1di': 1, 'gen_movv2sf': 1, 'gen_movmisalignv8qi': 1, 'gen_movmisalignv4hi': 1, 'gen_movmisalignv2si': 1, 'gen_movmisalignv1di': 1, 'gen_movmisalignv2sf': 1, 'gen_mmx_addv2sf3': 6, 'gen_mmx_mulv2sf3': 6, 'gen_mmx_smaxv2sf3': 10, 'gen_mmx_sminv2sf3': 10, 'gen_mmx_eqv2sf3': 6, 'gen_split_2524': 3, 'gen_split_2525': 2, 'gen_mmx_addv8qi3': 6, 'gen_mmx_subv8qi3': 6, 'gen_mmx_addv4hi3': 6, 'gen_mmx_subv4hi3': 6, 'gen_mmx_addv2si3': 6, 'gen_mmx_subv2si3': 6, 'gen_mmx_addv1di3': 6, 'gen_mmx_subv1di3': 6, 'gen_mmx_ssaddv8qi3': 6, 'gen_mmx_usaddv8qi3': 6, 'gen_mmx_sssubv8qi3': 6, 'gen_mmx_ussubv8qi3': 6, 'gen_mmx_ssaddv4hi3': 6, 'gen_mmx_usaddv4hi3': 6, 'gen_mmx_sssubv4hi3': 6, 'gen_mmx_ussubv4hi3': 6, 'gen_mmx_mulv4hi3': 6, 'gen_mmx_smulv4hi3_highpart': 6, 'gen_mmx_umulv4hi3_highpart': 6, 'gen_mmx_pmaddwd': 12, 'gen_mmx_pmulhrwv4hi3': 6, 'gen_sse2_umulv1siv1di3': 9, 'gen_mmx_smaxv4hi3': 6, 'gen_mmx_sminv4hi3': 6, 'gen_mmx_umaxv8qi3': 6, 'gen_mmx_uminv8qi3': 6, 'gen_mmx_eqv8qi3': 6, 'gen_mmx_eqv4hi3': 6, 'gen_mmx_eqv2si3': 6, 'gen_mmx_andv8qi3': 6, 'gen_mmx_iorv8qi3': 6, 'gen_mmx_xorv8qi3': 6, 'gen_mmx_andv4hi3': 6, 'gen_mmx_iorv4hi3': 6, 'gen_mmx_xorv4hi3': 6, 'gen_mmx_andv2si3': 6, 'gen_mmx_iorv2si3': 6, 'gen_mmx_xorv2si3': 6, 'gen_split_2569': 3, 'gen_split_2570': 2, 'gen_mmx_uavgv8qi3': 6, 'gen_mmx_uavgv4hi3': 6, 'gen_movv32qi': 1, 'gen_movv16hi': 1, 'gen_movv8si': 1, 'gen_movv4di': 1, 'gen_movv8sf': 1, 'gen_movv4df': 1, 'gen_movv16qi': 1, 'gen_movv8hi': 1, 'gen_movv4si': 1, 'gen_movv2di': 1, 'gen_movv1ti': 1, 'gen_movv4sf': 1, 'gen_movv2df': 1, 'gen_split_2597': 4, 'gen_movmisalignv32qi': 1, 'gen_movmisalignv16hi': 1, 'gen_movmisalignv8si': 1, 'gen_movmisalignv4di': 1, 'gen_movmisalignv8sf': 1, 'gen_movmisalignv4df': 1, 'gen_movmisalignv16qi': 1, 'gen_movmisalignv8hi': 1, 'gen_movmisalignv4si': 1, 'gen_movmisalignv2di': 1, 'gen_movmisalignv1ti': 1, 'gen_movmisalignv4sf': 1, 'gen_movmisalignv2df': 1, 'gen_absv4sf2': 1, 'gen_negv4sf2': 1, 'gen_absv2df2': 1, 'gen_negv2df2': 1, 'gen_addv8sf3': 6, 'gen_subv8sf3': 6, 'gen_addv4df3': 6, 'gen_subv4df3': 6, 'gen_addv4sf3': 6, 'gen_subv4sf3': 6, 'gen_addv2df3': 6, 'gen_subv2df3': 6, 'gen_mulv8sf3': 6, 'gen_mulv4df3': 6, 'gen_mulv4sf3': 6, 'gen_mulv2df3': 6, 'gen_divv8sf3': 6, 'gen_divv4df3': 6, 'gen_smaxv8sf3': 10, 'gen_sminv8sf3': 10, 'gen_smaxv4df3': 10, 'gen_sminv4df3': 10, 'gen_smaxv4sf3': 10, 'gen_sminv4sf3': 10, 'gen_smaxv2df3': 10, 'gen_sminv2df3': 10, 'gen_vcondv4sf': 15, 'gen_vcondv2df': 15, 'gen_andv8sf3': 6, 'gen_iorv8sf3': 6, 'gen_xorv8sf3': 6, 'gen_andv4df3': 6, 'gen_iorv4df3': 6, 'gen_xorv4df3': 6, 'gen_andv4sf3': 6, 'gen_iorv4sf3': 6, 'gen_xorv4sf3': 6, 'gen_andv2df3': 6, 'gen_iorv2df3': 6, 'gen_xorv2df3': 6, 'gen_sse2_cvtudq2ps': 46, 'gen_vec_unpacks_hi_v8hi': 3, 'gen_vec_unpacks_lo_v8hi': 3, 'gen_vec_unpacku_hi_v8hi': 3, 'gen_vec_unpacku_lo_v8hi': 3, 'gen_vec_unpacku_float_hi_v4si': 80, 'gen_vec_unpacku_float_lo_v4si': 64, 'gen_sse_movhlps_exp': 6, 'gen_sse_movlhps_exp': 6, 'gen_sse_loadhps_exp': 12, 'gen_sse_loadlps_exp': 12, 'gen_split_2721': 3, 'gen_split_2728': 4, 'gen_vec_interleave_highv2df': 7, 'gen_vec_interleave_lowv2df': 7, 'gen_split_2740': 3, 'gen_split_2759': 2, 'gen_split_2760': 3, 'gen_sse2_loadhpd_exp': 9, 'gen_split_2762': 2, 'gen_sse2_loadlpd_exp': 9, 'gen_split_2764': 2, 'gen_addv16qi3': 6, 'gen_subv16qi3': 6, 'gen_addv8hi3': 6, 'gen_subv8hi3': 6, 'gen_addv4si3': 6, 'gen_subv4si3': 6, 'gen_addv2di3': 6, 'gen_subv2di3': 6, 'gen_sse2_ssaddv16qi3': 6, 'gen_sse2_usaddv16qi3': 6, 'gen_sse2_sssubv16qi3': 6, 'gen_sse2_ussubv16qi3': 6, 'gen_sse2_ssaddv8hi3': 6, 'gen_sse2_usaddv8hi3': 6, 'gen_sse2_sssubv8hi3': 6, 'gen_sse2_ussubv8hi3': 6, 'gen_mulv8hi3': 6, 'gen_split_2785': 33, 'gen_smulv8hi3_highpart': 6, 'gen_umulv8hi3_highpart': 6, 'gen_sse2_umulv2siv2di3': 12, 'gen_sse4_1_mulv2siv2di3': 12, 'gen_sse2_pmaddwd': 18, 'gen_mulv4si3': 12, 'gen_split_2793': 4, 'gen_split_2794': 9, 'gen_umaxv16qi3': 6, 'gen_uminv16qi3': 6, 'gen_smaxv8hi3': 6, 'gen_sminv8hi3': 6, 'gen_umaxv8hi3': 11, 'gen_smaxv2di3': 15, 'gen_umaxv2di3': 15, 'gen_sminv2di3': 15, 'gen_uminv2di3': 15, 'gen_sse2_eqv16qi3': 6, 'gen_sse2_eqv8hi3': 6, 'gen_sse2_eqv4si3': 6, 'gen_sse4_1_eqv2di3': 6, 'gen_vcondv16qi': 15, 'gen_vcondv8hi': 15, 'gen_vcondv4si': 15, 'gen_vcondv2di': 15, 'gen_vconduv16qi': 15, 'gen_vconduv8hi': 15, 'gen_vconduv4si': 15, 'gen_vconduv2di': 15, 'gen_andv16qi3': 6, 'gen_iorv16qi3': 6, 'gen_xorv16qi3': 6, 'gen_andv8hi3': 6, 'gen_iorv8hi3': 6, 'gen_xorv8hi3': 6, 'gen_andv4si3': 6, 'gen_iorv4si3': 6, 'gen_xorv4si3': 6, 'gen_andv2di3': 6, 'gen_iorv2di3': 6, 'gen_xorv2di3': 6, 'gen_andtf3': 6, 'gen_iortf3': 6, 'gen_xortf3': 6, 'gen_split_2867': 2, 'gen_split_2868': 4, 'gen_split_2870': 2, 'gen_vec_unpacku_hi_v16qi': 3, 'gen_vec_unpacks_hi_v16qi': 3, 'gen_vec_unpacku_lo_v16qi': 3, 'gen_vec_unpacks_lo_v16qi': 3, 'gen_vec_unpacku_hi_v4si': 3, 'gen_vec_unpacks_hi_v4si': 3, 'gen_vec_unpacku_lo_v4si': 3, 'gen_vec_unpacks_lo_v4si': 3, 'gen_sse2_uavgv16qi3': 6, 'gen_sse2_uavgv8hi3': 6, 'gen_ssse3_pmulhrswv8hi3': 6, 'gen_ssse3_pmulhrswv4hi3': 6, 'gen_split_2891': 41, 'gen_split_2892': 16, 'gen_split_2893': 7, 'gen_split_2894': 7, 'gen_rotlv2di3': 2, 'gen_rotrv2di3': 2, 'gen_ashrv16qi3': 2, 'gen_ashrv2di3': 4, 'gen_avx_vpermilv8sf': 36, 'gen_avx_vperm2f128v8sf3': 2, 'gen_split_2930': 5, 'gen_avx_vpermilv4df': 10, 'gen_avx_vperm2f128v4df3': 2, 'gen_split_2931': 5, 'gen_avx_vpermilv2df': 3, 'gen_avx_vpermilv4sf': 10, 'gen_avx_vperm2f128v8si3': 2}, "PosixPath('602/lower-subreg.bc')": {'sbitmap_iter_init': 22, 'VEC_bitmap_base_space': 2, 'VEC_bitmap_heap_reserve_exact': 2, 'VEC_bitmap_heap_safe_grow': 4, 'find_decomposable_shift_zext': 39, 'recog_memoized': 3, 'simple_move_operand': 2, 'simple_move': 10, 'find_pseudo_copy': 11, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'propagate_pseudo_copies': 83, 'decompose_register': 3, 'resolve_subreg_p': 2, 'simplify_subreg_concatn': 4, 'simplify_gen_subreg_concatn': 18, 'resolve_subreg_use': 4, 'resolve_reg_notes': 8, 'resolve_clobber': 2, 'adjust_decomposed_uses': 4, 'can_decompose_p': 5, 'resolve_simple_move': 46, 'resolve_shift_zext': 10, 'sbitmap_iter_cond': 38, 'sbitmap_iter_next': 3, 'VEC_bitmap_base_iterate': 2, 'find_decomposable_subregs': 24, 'decompose_multiword_subregs': 545}, "PosixPath('602/cfg.bc')": {'init_flow': 21, 'unlink_block': 5, 'free_edge': 1, 'ei_next': 2, 'clear_edges': 108, 'link_block': 5, 'compact_blocks': 64, 'expunge_block': 23, 'VEC_edge_base_space': 2, 'VEC_edge_gc_reserve': 4, 'VEC_edge_base_quick_push': 2, 'VEC_edge_gc_safe_push': 10, 'connect_dest': 1, 'unchecked_make_edge': 8, 'cached_make_edge': 15, 'make_single_succ_edge': 3, 'VEC_edge_base_unordered_remove': 4, 'disconnect_src': 16, 'disconnect_dest': 18, 'redirect_edge_succ_nodup': 17, 'clear_bb_flags': 4, 'check_bb_profile': 89, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'dump_regset': 12, 'dump_edge_info': 24, 'dump_bb_info': 38, 'dump_reg_info': 33, 'dump_flow_info': 4, 'alloc_aux_for_block': 7, 'clear_aux_for_blocks': 2, 'alloc_aux_for_edge': 7, 'alloc_aux_for_edges': 61, 'clear_aux_for_edges': 44, 'debug_bb_n': 3, 'dump_cfg_bb_info': 22, 'brief_dump_cfg': 53, 'update_bb_profile_for_threading': 113, 'scale_bbs_frequencies_int': 29, 'scale_bbs_frequencies_gcov_type': 67, 'copy_original_table_set': 7, 'get_bb_original': 9, 'get_bb_copy': 9, 'copy_original_table_clear': 1, 'set_loop_copy': 5, 'get_loop': 1, 'get_loop_copy': 9}, "PosixPath('602/c-typeck.bc')": {'parser_build_unary_op': 17, 'parser_build_binary_op': 109, 'push_string': 13, 'push_member_name': 16, 'push_array_bounds': 13, 'push_range_stack': 46, 'c_incomplete_type_error': 3, 'require_complete_type': 1, 'c_type_promotes_to': 6, 'c_vla_type_p': 2, 'c_build_qualified_type': 19, 'qualify_type': 13, 'same_translation_unit_p': 8, 'alloc_tagged_tu_seen_cache': 8, 'type_lists_compatible_p': 44, 'comptypes_internal': 122, 'tagged_types_tu_compatible_p': 61, 'composite_type': 79, 'c_common_type': 139, 'common_type': 4, 'decl_constant_value': 2, 'lvalue_p': 4, 'remove_c_maybe_const_expr': 2, 'perform_integral_promotions': 17, 'default_conversion': 13, 'note_integer_operands': 3, 'c_objc_common_truthvalue_conversion': 9, 'c_size_in_bytes': 7, 'readonly_error': 6, 'c_mark_addressable': 10, 'comp_target_types': 20, 'common_pointer_type': 20, 'null_pointer_constant_p': 6, 'array_to_pointer_conversion': 15, 'build_unary_op': 102, 'build_binary_op': 426, 'function_to_pointer_conversion': 11, 'default_function_array_conversion': 31, 'lookup_field': 14, 'build_component_ref': 9, 'build_indirect_ref': 17, 'build_array_ref': 27, 'record_maybe_used_decl': 13, 'build_external_ref': 79, 'pop_maybe_used': 5, 'c_expr_sizeof_expr': 37, 'c_expr_sizeof_type': 45, 'VEC_tree_base_quick_push': 2, 'VEC_tree_base_iterate': 2, 'convert_for_assignment': 59, 'convert_arguments': 64, 'build_function_call': 2, 'build_function_call_vec': 115, 'build_conditional_expr': 138, 'build_compound_expr': 36, 'spelling_length': 4, 'print_spelling': 11, 'maybe_warn_string_init': 8, 'valid_compound_expr_initializer': 2, 'digest_init': 114, 'handle_warn_cast_qual': 20, 'build_c_cast': 149, 'c_cast_expr': 15, 'build_modify_expr': 22, 'store_init_value': 31, 'start_init': 164, 'finish_init': 111, 'really_start_incremental_init': 494, 'add_pending_init': 440, 'set_nonincremental_init': 24, 'VEC_constructor_elt_base_space': 2, 'VEC_constructor_elt_gc_reserve': 2, 'VEC_constructor_elt_gc_safe_push': 4, 'output_init_element': 141, 'output_pending_init_elements': 45, 'find_init_member': 7, 'set_nonincremental_init_from_string': 52, 'push_init_level': 742, 'pop_init_level': 436, 'process_init_element': 635, 'set_designator': 13, 'set_init_index': 22, 'set_init_label': 12, 'build_asm_expr': 32, 'c_finish_return': 33, 'c_start_case': 13, 'do_case': 8, 'c_finish_case': 10, 'c_finish_if_stmt': 4, 'c_finish_loop': 3, 'c_finish_bc_stmt': 2, 'emit_side_effect_warnings': 2, 'c_process_expr_stmt': 5, 'c_end_compound_stmt': 2, 'tsi_next': 1, 'c_finish_stmt_expr': 39, 'c_expr_to_decl': 2, 'c_finish_omp_parallel': 7, 'c_finish_omp_task': 7, 'bitmap_initialize_stat': 2, 'c_finish_omp_clauses': 105}, "PosixPath('602/tree-cfgcleanup.bc')": {'VEC_gimple_base_pop': 2, 'ei_next': 2, 'remove_fallthru_edge': 17, 'split_bbs_on_noreturn_calls': 28, 'single_pred_p': 1, 'single_pred_edge': 3, 'cleanup_omp_return': 3, 'bb_seq': 2, 'gsi_last_bb': 4, 'gsi_stmt': 1, 'single_succ_p': 1, 'gimple_ops': 1, 'gimple_op': 2, 'single_succ_edge': 3, 'cleanup_control_expr_graph': 76, 'cleanup_control_flow_bb': 107, 'phi_nodes': 2, 'gsi_prev': 1, 'tree_forwarder_block_p': 91, 'has_abnormal_incoming_edge_p': 14, 'gsi_next': 1, 'phi_alternatives_equal': 3, 'gsi_start_bb': 4, 'gsi_after_labels': 16, 'remove_forwarder_block': 193, 'cleanup_tree_cfg_bb': 230, 'cleanup_tree_cfg_1': 13, 'loops_state_set': 1, 'cleanup_tree_cfg_noloop': 13, 'loops_state_satisfies_p': 1, 'loops_state_clear': 1, 'repair_loop_structures': 2, 'cleanup_tree_cfg': 25, 'has_zero_uses': 1, 'single_imm_use': 4, 'remove_forwarder_block_with_phi': 14, 'merge_phi_nodes': 67}, "PosixPath('602/concat.bc')": {'concat_copy2': 1, 'vconcat_length': 9, 'concat_length': 2, 'vconcat_copy': 4, 'concat': 1, 'reconcat': 2}, "PosixPath('602/cfgexpand.bc')": {'add_stack_var': 21, 'expand_used_vars': 502, 'expand_gimple_basic_block': 659, 'construct_exit_block': 208, 'union_stack_vars': 127, 'gsi_last': 9, 'gsi_start': 9, 'first_imm_use_on_stmt': 3, 'next_imm_use_on_stmt': 4, 'expand_gimple_cond': 123, 'expand_gimple_tailcall': 130, 'gimple_ops': 1, 'gimple_op': 2, 'gimple_assign_rhs_to_tree': 20, 'clear_tree_used': 4, 'init_vars_expansion': 4, 'var_to_partition': 8, 'set_rtl': 4, 'expand_one_register_var': 4, 'expand_one_stack_var_at': 6, 'expand_one_stack_var': 3, 'expand_one_var': 66, 'account_used_vars_for_block': 4, 'account_stack_vars': 16, 'fini_vars_expansion': 13, 'estimated_stack_frame_size': 25, 'bb_seq': 2, 'gsi_start_bb': 4, 'gsi_stmt': 1, 'gsi_next': 1, 'discover_nonconstant_array_refs_r': 8, 'discover_nonconstant_array_refs': 17, 'partition_to_var': 14, 'add_stack_var_conflict': 3, 'expand_used_vars_for_block': 11, 'aggregate_contains_union_type': 7, 'add_alias_set_conflicts': 5, 'stack_protect_classify_type': 15, 'add_stack_protection_conflicts': 4, 'stack_var_conflict_p': 2, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'add_partitioned_vars_to_ptset': 78, 'update_alias_info_with_stack_vars': 33, 'stack_var_size_cmp': 15, 'partition_stack_vars': 318, 'dump_stack_var_partition': 23, 'expand_stack_vars': 66, 'construct_init_block': 91, 'ei_next': 2, 'single_succ_p': 1, 'single_succ_edge': 3, 'gimple_call_fndecl': 2, 'expand_call_stmt': 4, 'expand_gimple_stmt_1': 48, 'expand_gimple_stmt': 55, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_next_tree': 10, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'next_readonly_imm_use': 4, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'move_use_after_head': 6, 'gimple_vuse_op': 2, 'link_use_stmts_after': 45, 'first_imm_use_stmt': 14, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 8, 'next_imm_use_stmt': 6, 'gimple_cond_single_var_p': 1, 'label_rtx_for_bb': 9, 'delink_stmt_imm_use': 1, 'op_iter_next_def': 6, 'op_iter_init_def': 11, 'single_ssa_def_operand': 19, 'expand_debug_expr': 286, 'expand_debug_locations': 5, 'expand_stack_alignment': 3, 'set_block_levels': 2, 'gimple_expand_cfg': 1958}, "PosixPath('602/graphite-blocking.bc')": {}, "PosixPath('602/tree-predcom.bc')": {'replace_phis_by_defined_names': 14, 'combine_chains': 428, 'combinable_refs_p': 17, 'reassociate_to_the_same_stmt': 81, 'initialize_root_vars_lm': 20, 'dump_dref': 7, 'VEC_tree_base_iterate': 2, 'VEC_dref_base_iterate': 2, 'dump_chain': 19, 'VEC_chain_p_base_iterate': 2, 'dump_chains': 2, 'dump_component': 3, 'gimple_vuse': 2, 'gimple_vop': 2, 'mark_virtual_ops_for_renaming': 6, 'number_of_loops': 2, 'VEC_loop_p_base_iterate': 2, 'VEC_int_base_quick_push': 2, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 41, 'VEC_edge_base_iterate': 2, 'last_always_executed_block': 3, 'VEC_data_reference_p_base_iterate': 2, 'suitable_reference_p': 2, 'component_of': 1, 'merge_comps': 2, 'VEC_ddr_p_base_iterate': 2, 'aff_combination_dr_offset': 4, 'determine_offset': 25, 'VEC_dref_base_quick_push': 2, 'split_data_refs_to_components': 88, 'suitable_component_p': 18, 'filter_suitable_components': 61, 'VEC_dref_base_space': 2, 'VEC_dref_heap_reserve': 4, 'VEC_dref_heap_safe_push': 3, 'make_invariant_chain': 6, 'VEC_chain_p_base_space': 2, 'VEC_chain_p_heap_reserve': 4, 'VEC_chain_p_base_quick_push': 2, 'VEC_chain_p_heap_safe_push': 10, 'nontrivial_chain_p': 1, 'gimple_ops': 1, 'gimple_op': 2, 'gsi_stmt': 1, 'gsi_next': 1, 'valid_initializer_p': 40, 'find_looparound_phi': 149, 'VEC_dref_base_quick_insert': 3, 'VEC_dref_heap_safe_insert': 4, 'insert_looparound_copy': 25, 'add_looparound_copies': 187, 'release_chain': 3, 'make_rooted_chain': 1, 'add_ref_to_chain': 25, 'order_drefs': 8, 'determine_roots_comp': 56, 'determine_roots': 57, 'VEC_tree_base_quick_push': 2, 'ref_at_iteration': 31, 'prepare_initializers_chain': 53, 'VEC_chain_p_base_unordered_remove': 4, 'prepare_initializers': 70, 'chain_can_be_combined_p': 2, 'VEC_chain_p_base_pop': 2, 'name_for_ref': 5, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'next_readonly_imm_use': 4, 'single_nonlooparound_use': 6, 'find_use_stmt': 1, 'may_reassociate_p': 3, 'find_associative_operation_root': 11, 'remove_name_from_operation': 3, 'stmt_combining_refs': 100, 'try_combine_chains': 705, 'determine_unroll_factor': 11, 'single_pred_p': 1, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'move_use_after_head': 6, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'op_iter_init': 27, 'op_iter_init_use': 34, 'gimple_vuse_op': 2, 'link_use_stmts_after': 103, 'first_imm_use_stmt': 14, 'next_imm_use_stmt': 6, 'base_names_in_chain_on': 62, 'eliminate_temp_copies': 81, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_after_labels': 39, 'replace_ref_with': 38, 'execute_load_motion': 47, 'remove_stmt': 9, 'get_init_expr': 4, 'initialize_root_vars': 41, 'initialize_root': 66, 'execute_pred_commoning_chain': 91, 'execute_pred_commoning': 156, 'release_chains': 2, 'replace_names_by_phis': 19, 'execute_pred_commoning_cbck': 31, 'tree_predictive_commoning_loop': 1434, 'tree_predictive_commoning': 1365}, "PosixPath('602/fibheap.bc')": {'fibheap_union': 66, 'fibnode_remove': 20, 'fibnode_new': 2, 'fibnode_insert_after': 12, 'fibheap_ins_root': 4, 'fibheap_insert': 14, 'fibheap_min': 1, 'fibheap_min_key': 1, 'fibheap_rem_root': 2, 'fibheap_link': 5, 'fibheap_consolidate': 41, 'fibheap_extr_min_node': 57, 'fibheap_cut': 3, 'fibheap_cascading_cut': 2, 'fibheap_replace_key_data': 18, 'fibheap_replace_key': 2, 'fibheap_delete_node': 1}, "PosixPath('602/cpp_identifiers.bc')": {'alloc_node': 59, '_cpp_init_hashtable': 1, '_cpp_destroy_hashtable': 8}, "PosixPath('602/c-pretty-print.bc')": {'pp_c_space_for_pointer_operator': 2, 'pp_c_identifier': 2, 'pp_c_type_qualifier_list': 8, 'pp_c_tree_decl_identifier': 2, 'pp_c_type_specifier': 10, 'pp_c_specifier_qualifier_list': 5, 'pp_c_parameter_type_list': 6, 'pp_c_storage_class_specifier': 2, 'pp_c_function_specifier': 2, 'pp_c_declaration_specifiers': 2, 'pp_c_direct_declarator': 7, 'pp_c_constructor_elts': 4, 'pp_c_integer_constant': 4, 'pp_c_char': 1, 'pp_c_cast_expression': 2, 'pp_c_unary_expression': 4, 'pp_c_additive_expression': 2, 'pp_c_shift_expression': 2, 'pp_c_relational_expression': 2, 'pp_c_equality_expression': 2, 'pp_c_and_expression': 2, 'pp_c_exclusive_or_expression': 2, 'pp_c_inclusive_or_expression': 2, 'pp_c_logical_and_expression': 2, 'pp_c_logical_or_expression': 2, 'pp_c_expression': 3, 'pp_c_expression_list': 1, 'pp_c_primary_expression': 2, 'pp_c_brace_enclosed_initializer_list': 9, 'pp_c_constant': 7, 'pp_c_init_declarator': 2, 'pp_c_attributes': 3, 'pp_c_function_definition': 2, 'pp_c_id_expression': 2, 'init_call_expr_arg_iterator': 3, 'next_call_expr_arg': 4, 'first_call_expr_arg': 2, 'more_call_expr_args_p': 2, 'pp_c_complex_expr': 17, 'pp_c_postfix_expression': 30, 'pp_c_statement': 2, 'pp_c_conditional_expression': 2, 'pp_c_assignment_expression': 2, 'pp_c_multiplicative_expression': 2, 'pp_c_pointer': 5, 'pp_c_abstract_declarator': 3, 'pp_c_pretty_printer_init': 301, 'print_c_tree': 2}, "PosixPath('602/dyn-string.bc')": {'dyn_string_init': 4, 'dyn_string_release': 1, 'dyn_string_resize': 2, 'dyn_string_insert': 8, 'dyn_string_insert_cstr': 4, 'dyn_string_insert_char': 3, 'dyn_string_append': 3, 'dyn_string_append_cstr': 2, 'dyn_string_append_char': 3, 'dyn_string_eq': 6}, "PosixPath('602/tree-inline.bc')": {'gsi_start': 9, 'unsave_expr_now': 50, 'copy_gimple_seq_and_replace_locals': 72, 'initialize_cfun': 202, 'remap_blocks': 9, 'build_duplicate_type': 22, 'expand_call_inline': 275, 'copy_cfg_body': 1208, 'copy_phis_for_bb': 131, 'bb_seq': 2, 'gsi_last_bb': 4, 'tsi_next': 1, 'copy_statement_list': 30, 'remap_save_expr': 4, 'VEC_constructor_elt_gc_copy': 2, 'copy_tree_r': 8, 'VEC_tree_gc_copy': 2, 'var_ann': 2, 'can_be_nonlocal': 3, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 10, 'get_var_ann': 2, 'remap_decl': 8, 'remap_type_1': 72, 'remap_ssa_name': 41, 'remap_decls': 21, 'remap_block': 8, 'copy_bind_expr': 8, 'copy_tree_body_r': 71, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_omp_for_index': 2, 'gimple_omp_for_set_index': 2, 'gimple_omp_for_initial': 2, 'gimple_omp_for_set_initial': 2, 'gimple_omp_for_final': 2, 'gimple_omp_for_set_final': 2, 'gimple_omp_for_incr': 2, 'gimple_omp_for_set_incr': 2, 'gimple_omp_for_cond': 2, 'gimple_omp_for_set_cond': 2, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 4, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 10, 'gimple_call_fndecl': 2, 'remap_eh_region_nr': 1, 'gimple_set_op': 2, 'remap_gimple_op_r': 44, 'gsi_next': 1, 'remap_gimple_seq': 8, 'remap_gimple_stmt': 146, 'has_label_address_in_static_1': 2, 'copy_forbidden': 13, 'inline_forbidden_p_stmt': 2, 'inline_forbidden_p': 20, 'tree_inlinable_function_p': 39, 'estimate_num_insns': 22, 'estimate_num_insns_seq': 4, 'gsi_start_bb': 4, 'estimate_num_insns_fn': 17, 'count_insns_seq': 4, 'get_indirect_callee_fndecl': 1, 'prepend_lexical_block': 2, 'copy_decl_for_dup_finish': 12, 'copy_decl_to_var': 7, 'self_inlining_addr_expr': 2, 'insert_debug_decl_map': 5, 'insert_init_debug_bind': 23, 'insert_init_stmt': 3, 'setup_one_parameter': 25, 'declare_inline_vars': 5, 'initialize_inlined_parameters': 16, 'is_global_var': 2, 'copy_result_decl_to_var': 11, 'declare_return_variable': 70, 'VEC_tree_heap_reserve_exact': 4, 'VEC_tree_heap_safe_grow': 7, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'op_iter_init': 11, 'op_iter_next_tree': 10, 'op_iter_init_tree': 16, 'copy_bb': 798, 'ei_next': 2, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 15, 'update_ssa_across_abnormal_edges': 114, 'copy_edges_for_bb': 275, 'phi_nodes': 2, 'VEC_gimple_base_iterate': 2, 'copy_debug_stmt': 49, 'copy_debug_stmts': 59, 'copy_body': 1381, 'gimple_expand_calls_inline': 259, 'gsi_prev': 1, 'fold_marked_statements': 66, 'delete_unreachable_blocks_update_callgraph': 74, 'copy_decl_no_change': 2, 'optimize_inline_calls': 497, 'unsave_expr_1': 5, 'unsave_r': 7, 'mark_local_for_remap_r': 2, 'replace_locals_op': 7, 'replace_locals_stmt': 13, 'mark_local_labels_stmt': 1, 'VEC_ipa_opt_pass_heap_copy': 2, 'VEC_ipa_opt_pass_base_space': 2, 'VEC_ipa_opt_pass_heap_reserve': 4, 'VEC_ipa_opt_pass_base_quick_push': 2, 'VEC_ipa_opt_pass_heap_safe_push': 10, 'copy_static_chain': 4, 'copy_arguments_for_versioning': 7, 'single_succ_p': 1, 'single_succ_edge': 3, 'VEC_gimple_base_pop': 2, 'update_clone_info': 25, 'tree_function_versioning': 1029, 'init_call_expr_arg_iterator': 3, 'next_call_expr_arg': 4, 'first_call_expr_arg': 3, 'copy_tree_body': 1, 'maybe_inline_call_in_expr': 149, 'tree_can_inline_p': 17}, "PosixPath('602/tree-ssa-phiprop.bc')": {'single_succ_p': 1, 'single_succ_edge': 3, 'single_succ': 1, 'VEC_basic_block_base_iterate': 2, 'gsi_stmt': 1, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'gimple_ops': 1, 'end_imm_use_stmt_p': 2, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'move_use_after_head': 6, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_init_use': 34, 'gimple_vuse_op': 2, 'link_use_stmts_after': 70, 'first_imm_use_stmt': 14, 'next_imm_use_stmt': 6, 'phivn_valid_p': 14, 'single_imm_use': 4, 'gimple_set_op': 2, 'ei_next': 2, 'phiprop_insert_phi': 22, 'propagate_with_phi': 113, 'gsi_next': 1, 'tree_ssa_phiprop': 191}, "PosixPath('602/cpp_files.bc')": {'new_file_hash_entry': 6, '_cpp_report_missing_guards': 8, '_cpp_save_file_entries': 94, '_cpp_read_file_entries': 6, 'read_file': 26, 'search_cache': 2, 'make_cpp_file': 4, 'append_file_to_dir': 1, 'read_name_map': 9, 'allocate_file_hash_entries': 5, 'make_cpp_dir': 24, 'remap_filename': 7, 'open_file': 8, 'validate_pch': 12, 'pch_open_file': 22, 'open_file_failed': 64, 'find_file_in_dir': 90, 'search_path_exhausted': 4, '_cpp_find_file': 402, '_cpp_mark_file_once_only': 1, 'read_file_guts': 4, 'pchf_compare': 17, 'check_file_against_entries': 19, 'should_stack_file': 156, '_cpp_stack_file': 455, 'dir_name_of_file': 3, 'search_path_head': 22, '_cpp_stack_include': 5, 'cpp_included': 5, 'cpp_included_before': 9, 'file_hash_eq': 3, 'file_hash_hash': 3, '_cpp_cleanup_files': 18, 'cpp_clear_file_cache': 2, '_cpp_fake_include': 3, 'cpp_make_system_header': 38, 'report_missing_guard': 43, '_cpp_compare_file_date': 13, '_cpp_pop_file_buffer': 9, 'cpp_set_include_chains': 31}, "PosixPath('602/insn-extract.bc')": {'insn_extract': 168}, "PosixPath('602/lto-streamer-in.bc')": {'input_cfg': 18, 'fixup_eh_region_pointers': 77, 'lto_input_eh_catch_list': 6, 'lto_data_in_create': 7, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_gc_reserve_exact': 4, 'VEC_basic_block_gc_safe_grow': 7, 'VEC_basic_block_gc_safe_grow_cleared': 7, 'set_bb_seq': 2, 'make_new_block': 10, 'clear_line_info': 1, 'VEC_bitpack_word_t_base_space': 2, 'VEC_bitpack_word_t_heap_reserve': 4, 'VEC_bitpack_word_t_base_quick_push': 2, 'VEC_bitpack_word_t_heap_safe_push': 11, 'lto_input_bitpack': 9, 'lto_file_decl_data_get_type': 4, 'lto_file_decl_data_get_field_decl': 4, 'lto_file_decl_data_get_fn_decl': 4, 'lto_file_decl_data_get_type_decl': 4, 'lto_file_decl_data_get_namespace_decl': 4, 'lto_file_decl_data_get_var_decl': 4, 'lto_input_tree_ref': 36, 'input_string_internal': 15, 'input_string': 4, 'input_string_cst': 2, 'input_identifier': 2, 'unpack_ts_base_value_fields': 1, 'unpack_ts_real_cst_value_fields': 3, 'unpack_ts_fixed_cst_value_fields': 2, 'unpack_ts_decl_common_value_fields': 6, 'unpack_ts_decl_with_vis_value_fields': 2, 'unpack_ts_type_value_fields': 2, 'unpack_value_fields': 94, 'lto_materialize_tree': 98, 'canon_file_name': 2, 'lto_input_location': 11, 'tree_operand_length': 3, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 10, 'VEC_constructor_elt_base_space': 2, 'VEC_constructor_elt_gc_reserve': 4, 'VEC_constructor_elt_gc_safe_push': 8, 'lto_stream_as_builtin_p': 4, 'get_resolution': 3, 'lto_register_var_decl_in_symtab': 15, 'lto_register_function_decl_in_symtab': 22, 'lto_input_tree': 467, 'input_ssa_names': 5, 'VEC_eh_region_base_space': 2, 'VEC_eh_region_gc_reserve_exact': 4, 'VEC_eh_region_gc_safe_grow': 7, 'input_eh_region': 12, 'VEC_eh_landing_pad_base_space': 2, 'VEC_eh_landing_pad_gc_reserve_exact': 4, 'VEC_eh_landing_pad_gc_safe_grow': 7, 'VEC_tree_gc_reserve_exact': 4, 'VEC_tree_gc_safe_grow': 7, 'VEC_uchar_base_space': 2, 'VEC_uchar_gc_reserve_exact': 4, 'VEC_uchar_gc_safe_grow': 7, 'VEC_eh_region_base_iterate': 2, 'VEC_eh_landing_pad_base_iterate': 2, 'input_eh_regions': 124, 'bb_seq': 2, 'gsi_start_bb': 4, 'gimple_ops': 1, 'gimple_set_op': 2, 'maybe_fixup_handled_component': 22, 'emit_label_in_global_context_p': 2, 'gimple_asm_output_op': 2, 'maybe_fixup_decls': 7, 'input_gimple_stmt': 54, 'lto_tag_check_set': 8, 'input_phi': 13, 'input_bb': 91, 'gsi_stmt': 1, 'gsi_next': 1, 'fixup_call_stmt_edges_1': 6, 'fixup_call_stmt_edges': 5, 'input_function': 252, 'VEC_alias_pair_base_space': 2, 'VEC_alias_pair_gc_reserve': 2, 'VEC_alias_pair_gc_safe_push': 4, 'input_alias_pairs': 6, 'lto_data_in_delete': 2, 'lto_read_body': 317}, "PosixPath('602/timevar.bc')": {'get_time': 23, 'timevar_accumulate': 63, 'timevar_push_1': 24, 'timevar_pop_1': 12, 'timevar_start': 1, 'timevar_stop': 6, 'timevar_print': 20}, "PosixPath('602/profile.bc')": {'branch_prob': 2595, 'compute_branch_probabilities': 1669, 'bb_seq': 2, 'gsi_last_bb': 4, 'gsi_stmt': 1, 'gsi_prev': 1, 'single_succ_p': 1, 'single_succ_edge': 3, 'ei_next': 2, 'find_group': 1, 'find_spanning_tree': 104, 'gsi_start_bb': 4, 'gimple_filename': 1, 'gimple_lineno': 1, 'gsi_next': 1, 'get_exec_counts': 36, 'read_profile_edge_counts': 138, 'is_edge_inconsistent': 64, 'is_inconsistent': 19, 'correct_negative_edge_counts': 31, 'set_bb_counts': 2, 'compute_value_histograms': 116, 'instrument_edges': 108, 'instrument_values': 20, 'init_branch_prob': 7, 'end_branch_prob': 2}, "PosixPath('602/sched-deps.bc')": {'sd_iterator_cond': 25, 'init_deps_global': 44, 'setup_insn_reg_uses': 60, 'init_dep_1': 7, 'init_dep': 7, 'dump_dep': 1, 'sched_get_condition_with_rev': 8, 'conditions_mutex_p': 8, 'sched_insns_conditions_mutex_p': 28, 'sched_insn_is_legitimate_for_speculation_p': 11, 'sd_next_list': 8, 'sd_lists_size': 16, 'sd_lists_empty_p': 16, 'create_deps_list': 4, 'free_deps_list': 2, 'sd_finish_insn': 19, 'sd_iterator_start': 7, 'sd_find_dep_between_no_cache': 49, 'sd_find_dep_between': 16, 'create_dep_node': 14, 'get_back_and_forw_lists': 21, 'attach_dep_link': 5, 'depl_on_debug_p': 4, 'add_to_deps_list': 15, 'set_dependency_caches': 64, 'sd_add_dep': 57, 'ask_dependency_caches': 36, 'detach_dep_link': 2, 'remove_from_deps_list': 4, 'change_spec_dep_to_hard': 37, 'estimate_dep_weak': 5, 'update_dependency_caches': 30, 'update_dep': 76, 'add_or_update_dep_1': 152, 'sd_resolve_dep': 46, 'sd_copy_back_deps': 44, 'delete_dep_node': 6, 'sd_delete_dep': 63, 'dump_lists': 23, 'sd_debug_lists': 15, 'maybe_extend_reg_info_p': 2, 'add_dependence': 1, 'add_dependence_list_and_free': 2, 'flush_pending_lists': 2, 'extend_deps_reg_info': 5, 'deps_may_trap_p': 2, 'add_insn_mem_dependence': 6, 'sched_analyze_2': 43, 'sched_analyze_1': 56, 'sched_analyze_reg': 38, 'bitmap_initialize_stat': 2, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'create_insn_reg_use': 10, 'mark_hard_regno_death': 4, 'mark_pseudo_death': 7, 'mark_reg_death': 19, 'insn_use_p': 3, 'create_insn_reg_set': 10, 'mark_insn_hard_regno_birth': 9, 'mark_insn_pseudo_birth': 16, 'mark_insn_reg_birth': 27, 'setup_insn_reg_pressure_info': 111, 'sched_analyze_insn': 1618, 'call_may_noreturn_p': 11, 'delete_all_dependences': 20, 'fixup_sched_groups': 77, 'deps_analyze_insn': 189, 'deps_start_bb': 1, 'delete_dep_nodes_in_back_deps': 51, 'sched_free_deps': 113, 'init_deps': 79, 'init_deps_reg_last': 4, 'free_deps': 94, 'remove_from_both_dependence_lists': 1, 'remove_from_dependence_list': 1, 'remove_from_deps': 135, 'VEC_haifa_deps_insn_data_def_base_space': 2, 'VEC_haifa_deps_insn_data_def_heap_reserve_exact': 2, 'VEC_haifa_deps_insn_data_def_heap_safe_grow': 4, 'VEC_haifa_deps_insn_data_def_heap_safe_grow_cleared': 4, 'init_deps_data_vector': 5, 'extend_dependency_caches': 72, 'sched_deps_init': 19, 'sched_deps_finish': 21, 'maybe_add_or_update_dep_1': 9, 'haifa_note_dep': 2, 'haifa_note_mem_dep': 11}, "PosixPath('602/mkstemps.bc')": {'mkstemps': 104}, "PosixPath('602/tree-cfg.bc')": {'init_empty_tree_cfg_for_function': 32, 'first_imm_use_on_stmt': 3, 'next_imm_use_on_stmt': 4, 'clear_special_calls': 1, 'gimple_duplicate_sese_region': 88, 'replace_block_vars_by_duplicates': 21, 'gimple_verify_flow_info': 346, 'gimple_split_edge': 36, 'make_edges': 50, 'gsi_start': 9, 'next_discriminator_for_locus': 12, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_gc_reserve_exact': 4, 'VEC_basic_block_gc_safe_grow': 7, 'VEC_basic_block_gc_safe_grow_cleared': 7, 'bb_seq': 2, 'gsi_last_bb': 4, 'gsi_stmt': 1, 'gsi_prev': 1, 'last_stmt': 10, 'gimple_ops': 1, 'gimple_set_op': 2, 'fold_cond_expr_cond': 9, 'edge_to_cases_cleanup': 1, 'gsi_start_bb': 4, 'label_to_block_fn': 19, 'gsi_next': 1, 'make_abnormal_goto_edges': 18, 'main_block_label': 6, 'gimple_asm_label_op': 4, 'VEC_eh_landing_pad_base_iterate': 2, 'ehr_next': 7, 'cleanup_dead_labels_eh': 50, 'cleanup_dead_labels': 201, 'group_case_labels': 20, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'move_use_after_head': 6, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 29, 'gimple_vuse_op': 2, 'link_use_stmts_after': 19, 'first_imm_use_stmt': 14, 'next_imm_use_stmt': 6, 'has_zero_uses': 1, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 33, 'replace_uses_by': 88, 'single_noncomplex_succ': 13, 'notice_special_calls': 1, 'extract_true_false_edges_from_block': 4, 'find_taken_edge_cond_expr': 10, 'find_taken_edge_switch_expr': 1, 'find_taken_edge': 16, 'gimple_debug_bb_n': 2, 'dump_cfg_stats': 7, 'gimple_seq_first_stmt': 1, 'gimple_seq_last_stmt': 1, 'dump_function_to_file': 44, 'gimple_dump_cfg': 7, 'is_ctrl_altering_stmt': 2, 'first_stmt': 10, 'gsi_prev_nondebug': 9, 'gsi_last_nondebug_bb': 4, 'last_and_only_stmt': 5, 'verify_types_in_gimple_min_lval': 2, 'verify_types_in_gimple_reference': 30, 'verify_gimple_assign_unary': 15, 'verify_gimple_comparison': 4, 'verify_gimple_assign_binary': 15, 'verify_gimple_assign': 27, 'verify_gimple_call': 7, 'verify_gimple_return': 4, 'verify_gimple_phi': 4, 'verify_types_in_gimple_stmt': 46, 'verify_types_in_gimple_seq_2': 57, 'tree_node_can_be_shared': 3, 'gsi_one_before_end_p': 1, 'gimple_call_fndecl': 2, 'verify_expr': 39, 'verify_stmt': 15, 'verify_stmts': 67, 'gimple_block_label': 14, 'phi_nodes': 2, 'ei_next': 2, 'add_phi_args_after_copy_edge': 72, 'add_phi_args_after_copy_bb': 10, 'add_phi_args_after_copy': 8, 'split_edge_bb_loc': 2, 'VEC_basic_block_heap_reserve': 4, 'VEC_basic_block_base_quick_push': 2, 'VEC_basic_block_heap_safe_push': 10, 'single_succ_p': 1, 'single_succ_edge': 3, 'gimple_duplicate_sese_tail': 151, 'mark_virtual_ops_in_bb': 6, 'VEC_basic_block_base_iterate': 2, 'find_outermost_region_in_block': 4, 'replace_by_duplicate_decl': 7, 'replace_ssa_name': 9, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 8, 'is_global_var': 2, 'move_stmt_op': 36, 'move_stmt_eh_region_nr': 1, 'move_stmt_r': 16, 'move_block_to_fn': 284, 'new_label_mapper': 12, 'move_sese_region_to_fn': 597, 'print_pred_bbs': 19, 'print_succ_bbs': 19, 'print_loops_bb': 61, 'print_loop': 44, 'print_loops': 3, 'debug_loop_num': 1, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'remove_edge_and_dominated_blocks': 363, 'gimple_purge_dead_eh_edges': 7, 'gimple_purge_dead_abnormal_call_edges': 9, 'gimple_purge_all_dead_eh_edges': 71, 'do_warn_unused_result': 11, 'execute_warn_function_noreturn': 13, 'execute_warn_function_return': 102, 'single_pred_p': 1, 'split_critical_edges': 179, 'gimple_lv_adjust_loop_header_phi': 10, 'gimple_lv_add_condition_to_bb': 6, 'need_fake_edge_p': 1, 'gimple_flow_call_edges_add': 66, 'gimple_block_ends_with_call_p': 4, 'gimple_make_forwarder_block': 30, 'reinstall_phi_args': 14, 'op_iter_next_def': 6, 'op_iter_init_def': 11, 'gimple_duplicate_bb': 94, 'loops_state_satisfies_p': 1, 'set_bb_seq': 2, 'gimple_merge_blocks': 81, 'gimple_can_merge_blocks_p': 23, 'gimple_split_block': 74, 'remove_phi_nodes_and_edges_for_unreachable_block': 3, 'remove_bb': 59, 'gimple_try_redirect_by_replacing_jump': 17, 'get_cases_for_edge': 3, 'gimple_redirect_edge_and_branch': 45, 'create_bb': 38, 'stmt_starts_bb_p': 1, 'make_blocks': 27, 'factor_computed_gotos': 12, 'first_non_label_stmt': 11, 'same_line_p': 4, 'assign_discriminator': 34, 'make_goto_expr_edges': 4, 'make_cond_expr_edges': 6, 'make_gimple_switch_edges': 1, 'make_gimple_asm_edges': 3, 'get_lineno': 1, 'gimple_cfg2vcg': 130, 'build_gimple_cfg': 216, 'execute_build_cfg': 209}, "PosixPath('602/explow.bc')": {'trunc_int_for_mode': 1, 'plus_constant': 37, 'eliminate_constant_term': 21, 'expr_size': 5, 'int_expr_size': 2, 'force_reg': 21, 'break_out_memory_refs': 5, 'memory_address_addr_space': 11, 'use_anchored_address': 19, 'validize_mem': 4, 'promote_decl_mode': 18, 'adjust_stack': 2, 'anti_adjust_stack': 2, 'update_nonlocal_goto_save_area': 7, 'round_push': 2, 'anti_adjust_stack_and_probe': 1, 'allocate_dynamic_stack_space': 6, 'probe_stack_range': 5, 'hard_function_value': 3}, "PosixPath('602/print-rtl.bc')": {'print_rtx': 453, 'debug_rtx_find': 6, 'print_rtl': 3}, "PosixPath('602/tree-ssa-ter.bc')": {'var_to_partition': 8, 'new_temp_expr_table': 33, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_next_tree': 10, 'op_iter_init_tree': 34, 'single_ssa_tree_operand': 2, 'single_imm_use': 4, 'gimple_references_memory_p': 2, 'gimple_ops': 1, 'gimple_op': 2, 'is_replaceable_p': 77, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'remove_from_partition_kill_list': 4, 'bmp_iter_next': 2, 'finished_with_expr': 108, 'mark_replaceable': 3, 'add_to_partition_kill_list': 2, 'make_dependent_on_partition': 2, 'add_dependence': 90, 'process_replaceable': 190, 'gsi_next': 1, 'find_replaceable_in_bb': 693, 'free_temp_expr_table': 3, 'find_replaceable_exprs': 764, 'dump_replaceable_exprs': 4}, "PosixPath('602/spaces.bc')": {'spaces': 7}, "PosixPath('602/tree-complex.bc')": {'gsi_stmt': 1, 'gsi_next': 1, 'bb_seq': 2, 'gsi_start_bb': 4, 'gimple_ops': 1, 'init_dont_simulate_again': 20, 'VEC_complex_lattice_t_base_space': 2, 'VEC_complex_lattice_t_heap_reserve_exact': 2, 'VEC_complex_lattice_t_heap_safe_grow': 4, 'VEC_complex_lattice_t_heap_safe_grow_cleared': 4, 'var_ann': 2, 'init_parameter_lattice_values': 7, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve_exact': 2, 'VEC_tree_heap_safe_grow': 4, 'VEC_tree_heap_safe_grow_cleared': 4, 'single_succ_p': 1, 'single_succ_edge': 3, 'some_nonzerop': 2, 'find_lattice_value': 5, 'cvc_lookup': 1, 'create_one_component_var': 9, 'cvc_insert': 4, 'get_component_var': 8, 'get_component_ssa_name': 10, 'set_component_ssa_name': 19, 'update_parameter_components': 13, 'extract_component': 3, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 15, 'update_phi_components': 1, 'ei_next': 2, 'update_complex_assignment': 8, 'gimple_set_op': 2, 'expand_complex_move': 4, 'expand_complex_libcall': 2, 'expand_complex_multiplication': 2, 'gsi_last_bb': 4, 'expand_complex_div_wide': 14, 'expand_complex_division': 20, 'expand_complex_comparison': 1, 'expand_complex_operations_1': 37, 'complex_visit_phi': 7, 'complex_visit_stmt': 4, 'tree_lower_complex': 193}, "PosixPath('602/i386-c.bc')": {'ix86_pragma_target_parse': 20}, "PosixPath('602/cpp_mkdeps.bc')": {'deps_add_vpath': 28, 'deps_free': 15, 'apply_vpath': 20, 'munge': 5, 'deps_add_target': 6, 'deps_add_default_target': 3, 'deps_add_dep': 14, 'deps_write': 3, 'deps_phony_targets': 2, 'deps_save': 10, 'deps_restore': 6}, "PosixPath('602/convert.bc')": {'convert_to_pointer': 7, 'strip_float_extensions': 53, 'convert_to_real': 207, 'convert_to_integer': 139, 'convert_to_complex': 6, 'convert_to_vector': 2, 'convert_to_fixed': 12}, "PosixPath('602/insn-automata.bc')": {'dfa_insn_code_enlarge': 6, 'dfa_insn_code': 4, 'internal_min_issue_delay': 1383, 'internal_state_transition': 1679, 'min_insn_conflict_delay': 1, 'dfa_clean_insn_cache': 4, 'dfa_clear_single_insn_cache': 2}, "PosixPath('602/c-pch.bc')": {'pch_init': 18, 'c_common_valid_pch': 33, 'c_common_read_pch': 18, 'c_common_write_pch': 6, 'c_common_no_more_pch': 3, 'c_common_pch_pragma': 1}, "PosixPath('602/reginfo.bc')": {'init_move_cost': 124, 'setup_reg_classes': 6, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'reg_set_to_hard_reg_set': 19, 'init_reg_sets': 6, 'choose_hard_reg_mode': 32, 'init_reg_modes_target': 5, 'init_reg_sets_1': 265, 'init_regs': 266, 'init_fake_stack_mems': 1, 'fix_register': 1, 'globalize_reg': 23, 'reg_preferred_class': 1, 'reg_alternate_class': 1, 'reg_cover_class': 1, 'resize_reg_info': 2, 'free_reg_info': 1, 'reg_scan_mark_refs': 45, 'reg_scan': 6, 'record_subregs_of_mode': 13, 'find_subregs_of_mode': 19, 'init_subregs_of_mode': 17, 'invalid_mode_change_p': 1}, "PosixPath('602/gtype-desc.bc')": {'gt_ggc_mx_VEC_ipa_edge_args_t_gc': 13, 'gt_ggc_mx_ssa_operand_memory_d': 3, 'gt_ggc_mx_section': 3, 'gt_ggc_mx_gimple_statement_d': 259, 'gt_ggc_mx_basic_block_def': 37, 'gt_ggc_mx_rtl_bb_info': 7, 'gt_ggc_mx_gimple_bb_info': 2, 'gt_ggc_mx_loop': 42, 'gt_ggc_mx_loop_exit': 7, 'gt_ggc_mx_nb_iter_bound': 10, 'gt_ggc_mx_edge_def': 4, 'gt_ggc_mx_rtx_def': 426, 'gt_ggc_mx_mem_attrs': 4, 'gt_ggc_mx_object_block': 4, 'gt_ggc_mx_gimple_seq_d': 13, 'gt_ggc_mx_gimple_seq_node_d': 15, 'gt_ggc_mx_eh_catch_d': 11, 'gt_ggc_mx_eh_landing_pad_d': 7, 'gt_ggc_mx_eh_region_d': 59, 'gt_ggc_mx_constant_descriptor_tree': 2, 'gt_ggc_mx_cgraph_asm_node': 2, 'gt_ggc_mx_varpool_node': 13, 'gt_ggc_mx_ipa_replace_map': 2, 'gt_ggc_mx_bitmap_element_def': 2, 'gt_ggc_mx_bitmap_head_def': 4, 'gt_ggc_mx_bitmap_obstack': 2, 'gt_ggc_mx_cgraph_node': 141, 'gt_ggc_m_P11cgraph_edge4htab': 6, 'gt_ggc_mx_cgraph_edge': 26, 'gt_ggc_m_P27cgraph_node_set_element_def4htab': 6, 'gt_ggc_mx_elt_loc_list': 4, 'gt_ggc_mx_cselib_val_struct': 7, 'gt_ggc_mx_elt_list': 2, 'gt_ggc_mx_types_used_by_vars_entry': 2, 'gt_ggc_m_P9loop_exit4htab': 6, 'gt_ggc_mx_loops': 2, 'gt_ggc_mx_control_flow_graph': 7, 'gt_ggc_m_P15throw_stmt_node4htab': 6, 'gt_ggc_mx_eh_status': 10, 'gt_ggc_m_P9tree_node4htab': 6, 'gt_ggc_mx_gimple_df': 23, 'gt_ggc_mx_sequence_stack': 4, 'gt_ggc_mx_tree_map': 2, 'gt_ggc_mx_tree_statement_list_node': 10, 'gt_ggc_mx_varray_head_tag': 16, 'gt_ggc_mx_VEC_constructor_elt_gc': 2, 'gt_ggc_mx_VEC_alias_pair_gc': 2, 'gt_ggc_mx_machine_function': 2, 'gt_ggc_mx_function': 67, 'gt_ggc_mx_answer': 2, 'gt_ggc_mx_cpp_macro': 20, 'gt_ggc_mx_line_maps': 4, 'gt_ggc_m_SP9tree_node17splay_tree_node_s': 2, 'gt_ggc_m_P9tree_nodeP9tree_node17splay_tree_node_s': 4, 'gt_ggc_m_IP9tree_node17splay_tree_node_s': 2, 'gt_ggc_m_P12tree_int_map4htab': 6, 'gt_ggc_m_P12varpool_node4htab': 6, 'gt_ggc_m_P24constant_descriptor_tree4htab': 6, 'gt_ggc_m_P12object_block4htab': 6, 'gt_ggc_m_P7section4htab': 6, 'gt_ggc_m_P17tree_priority_map4htab': 6, 'gt_ggc_m_P8tree_map4htab': 6, 'gt_ggc_m_P9reg_attrs4htab': 6, 'gt_ggc_m_P9mem_attrs4htab': 6, 'gt_ggc_m_P7rtx_def4htab': 6, 'gt_ggc_m_P11cgraph_node4htab': 6, 'gt_ggc_m_P24types_used_by_vars_entry4htab': 6, 'gt_pch_p_22VEC_ipa_edge_args_t_gc': 8, 'gt_pch_nx_VEC_ipa_edge_args_t_gc': 13, 'gt_pch_nx_ssa_operand_memory_d': 2, 'gt_pch_nx_section': 3, 'gt_pch_p_7rtx_def': 4, 'gt_pch_p_18gimple_statement_d': 15, 'gt_pch_nx_gimple_statement_d': 258, 'gt_pch_nx_basic_block_def': 35, 'gt_pch_nx_rtl_bb_info': 7, 'gt_pch_nx_gimple_bb_info': 2, 'gt_pch_nx_loop': 42, 'gt_pch_nx_loop_exit': 7, 'gt_pch_nx_nb_iter_bound': 8, 'gt_pch_nx_edge_def': 4, 'gt_pch_nx_rtx_def': 422, 'gt_pch_nx_mem_attrs': 4, 'gt_pch_nx_object_block': 4, 'gt_pch_nx_gimple_seq_d': 11, 'gt_pch_nx_gimple_seq_node_d': 13, 'gt_pch_nx_eh_catch_d': 11, 'gt_pch_nx_eh_landing_pad_d': 7, 'gt_pch_nx_eh_region_d': 59, 'gt_pch_nx_constant_descriptor_tree': 2, 'gt_pch_nx_cgraph_asm_node': 2, 'gt_pch_nx_varpool_node': 11, 'gt_pch_p_P11cgraph_edge4htab': 5, 'gt_pch_nx_ipa_replace_map': 2, 'gt_pch_nx_bitmap_element_def': 2, 'gt_pch_nx_bitmap_head_def': 4, 'gt_pch_nx_bitmap_obstack': 2, 'gt_pch_nx_cgraph_node': 139, 'gt_pch_n_P11cgraph_edge4htab': 6, 'gt_pch_nx_cgraph_edge': 26, 'gt_pch_p_P27cgraph_node_set_element_def4htab': 5, 'gt_pch_n_P27cgraph_node_set_element_def4htab': 6, 'gt_pch_nx_elt_loc_list': 4, 'gt_pch_nx_cselib_val_struct': 7, 'gt_pch_nx_elt_list': 2, 'gt_pch_nx_types_used_by_vars_entry': 2, 'gt_pch_p_P9loop_exit4htab': 5, 'gt_pch_n_P9loop_exit4htab': 6, 'gt_pch_nx_loops': 2, 'gt_pch_nx_control_flow_graph': 7, 'gt_pch_p_P15throw_stmt_node4htab': 5, 'gt_pch_n_P15throw_stmt_node4htab': 6, 'gt_pch_nx_eh_status': 10, 'gt_pch_p_P9tree_node4htab': 5, 'gt_pch_n_P9tree_node4htab': 6, 'gt_pch_nx_gimple_df': 23, 'gt_pch_nx_sequence_stack': 4, 'gt_pch_nx_tree_map': 2, 'gt_pch_nx_tree_statement_list_node': 8, 'gt_pch_p_15varray_head_tag': 2, 'gt_pch_nx_varray_head_tag': 16, 'gt_pch_nx_VEC_constructor_elt_gc': 2, 'gt_pch_nx_VEC_alias_pair_gc': 2, 'gt_pch_nx_machine_function': 2, 'gt_pch_nx_function': 67, 'gt_pch_p_9cpp_token': 3, 'gt_pch_p_6answer': 4, 'gt_pch_nx_answer': 2, 'gt_pch_p_9cpp_macro': 33, 'gt_pch_nx_cpp_macro': 15, 'gt_pch_p_9line_maps': 4, 'gt_pch_nx_line_maps': 4, 'gt_pch_n_SP9tree_node17splay_tree_node_s': 2, 'gt_pch_n_P9tree_nodeP9tree_node17splay_tree_node_s': 4, 'gt_pch_n_IP9tree_node17splay_tree_node_s': 2, 'gt_pch_p_P12tree_int_map4htab': 5, 'gt_pch_n_P12tree_int_map4htab': 6, 'gt_pch_p_P12varpool_node4htab': 5, 'gt_pch_n_P12varpool_node4htab': 6, 'gt_pch_p_P24constant_descriptor_tree4htab': 5, 'gt_pch_n_P24constant_descriptor_tree4htab': 6, 'gt_pch_p_P12object_block4htab': 5, 'gt_pch_n_P12object_block4htab': 6, 'gt_pch_p_P7section4htab': 5, 'gt_pch_n_P7section4htab': 6, 'gt_pch_p_P17tree_priority_map4htab': 5, 'gt_pch_n_P17tree_priority_map4htab': 6, 'gt_pch_p_P8tree_map4htab': 5, 'gt_pch_n_P8tree_map4htab': 6, 'gt_pch_p_P9reg_attrs4htab': 5, 'gt_pch_n_P9reg_attrs4htab': 6, 'gt_pch_p_P9mem_attrs4htab': 5, 'gt_pch_n_P9mem_attrs4htab': 6, 'gt_pch_p_P7rtx_def4htab': 5, 'gt_pch_n_P7rtx_def4htab': 6, 'gt_pch_p_P11cgraph_node4htab': 5, 'gt_pch_n_P11cgraph_node4htab': 6, 'gt_pch_p_P24types_used_by_vars_entry4htab': 5, 'gt_pch_n_P24types_used_by_vars_entry4htab': 6, 'gt_pch_na_regno_reg_rtx': 1, 'gt_ggc_ma_regno_reg_rtx': 1, 'gt_pch_na_reg_equiv_init': 1, 'gt_ggc_ma_reg_equiv_init': 1}, "PosixPath('602/bid2dpd_dpd2bid.bc')": {'_bid_to_dpd32': 1, '_dpd_to_bid32': 3, '_bid_to_dpd64': 15, '_dpd_to_bid64': 15, '_bid_to_dpd128': 4, '_dpd_to_bid128': 67}, "PosixPath('602/plugin.bc')": {'parse_plugin_arg_opt': 24, 'get_named_event_id': 12, 'register_callback': 18, 'add_new_plugin': 4, 'register_plugin_info': 5, 'unregister_callback': 4, 'invoke_plugin_callbacks': 4, 'print_version_one_plugin': 7, 'print_plugins_versions': 3, 'print_help_one_plugin': 3, 'print_plugins_help': 3, 'dump_active_plugins': 4, 'plugin_default_version_check': 42}, "PosixPath('602/decimal128.bc')": {'__dpd128FromNumber': 237, '__dpd128ToNumber': 88, '__dpd128ToString': 53, 'decimal128FromNumber': 3, 'decimal128ToNumber': 5}, "PosixPath('602/lto-wpa-fixup.bc')": {'lto_fixup_nothrow_decls': 13, 'lto_mark_nothrow_fndecl': 3, 'lto_file_decl_data_get_fn_decl': 4, 'lto_input_wpa_fixup_1': 4, 'lto_input_wpa_fixup': 5, 'csi_end_p': 1, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 10, 'lto_output_wpa_fixup': 26}, "PosixPath('602/cfgrtl.bc')": {'force_nonfallthru_and_redirect': 325, 'can_delete_label_p': 3, 'delete_insn': 25, 'ei_next': 2, 'single_succ_p': 1, 'single_succ_edge': 3, 'purge_dead_edges': 200, 'delete_insn_and_edges': 2, 'delete_insn_chain': 6, 'update_bb_for_insn_chain': 2, 'update_bb_for_insn': 2, 'create_basic_block_structure': 26, 'compute_bb_for_insn': 9, 'free_bb_for_insn': 2, 'entry_of_function': 7, 'insert_insn_on_edge': 15, 'single_pred_p': 1, 'commit_one_edge_insertion': 72, 'commit_edge_insertions': 102, 'emit_insn_at_entry': 1, 'block_label': 3, 'try_redirect_by_replacing_jump': 96, 'VEC_edge_base_unordered_remove': 4, 'VEC_edge_base_space': 2, 'VEC_edge_gc_reserve': 4, 'VEC_edge_base_quick_push': 2, 'VEC_edge_gc_safe_push': 10, 'print_rtl_with_bb': 153, 'update_br_prob_note': 14, 'get_last_bb_insn': 3, 'purge_all_dead_edges': 7, 'insert_insn_end_bb_new': 16, 'rtl_extract_cond_bb_edges': 4, 'rtl_lv_add_condition_to_bb': 4, 'need_fake_edge_p': 6, 'rtl_flow_call_edges_add': 48, 'rtl_block_ends_with_call_p': 3, 'cfg_layout_split_edge': 29, 'cfg_layout_merge_blocks': 77, 'cfg_layout_can_merge_blocks_p': 21, 'first_insn_after_basic_block_note': 4, 'rtl_split_block': 64, 'cfg_layout_delete_block': 59, 'rtl_can_remove_branch_p': 34, 'patch_jump_insn': 60, 'redirect_branch_edge': 51, 'cfg_layout_redirect_edge_and_branch': 71, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_gc_reserve_exact': 4, 'VEC_basic_block_gc_safe_grow': 7, 'VEC_basic_block_gc_safe_grow_cleared': 7, 'rtl_create_basic_block': 22, 'rtl_dump_bb': 5, 'rtl_verify_flow_info_1': 287, 'rtl_tidy_fallthru_edge': 19, 'rtl_split_edge': 73, 'rtl_merge_blocks': 31, 'rtl_can_merge_blocks': 20, 'rtl_redirect_edge_and_branch_force': 2, 'rtl_redirect_edge_and_branch': 4, 'rtl_verify_flow_info': 236}, "PosixPath('602/dbgcnt.bc')": {'dbg_cnt_is_enabled': 1, 'dbg_cnt': 8, 'dbg_cnt_set_limit_by_index': 2, 'dbg_cnt_set_limit_by_name': 9, 'dbg_cnt_process_single_pair': 10, 'dbg_cnt_process_opt': 14, 'dbg_cnt_list_all_counters': 6}, "PosixPath('602/c-objc-common.bc')": {'c_warn_unused_global_decl': 5, 'c_tree_printer': 37}, "PosixPath('602/varpool.bc')": {'varpool_node': 15, 'cgraph_variable_initializer_availability': 3, 'dump_varpool_node': 3, 'varpool_enqueue_needed_node': 7, 'varpool_mark_needed_node': 10, 'decide_is_variable_needed': 43, 'varpool_analyze_pending_decls': 13, 'varpool_assemble_decl': 11, 'varpool_assemble_pending_decls': 4, 'varpool_finalize_decl': 12, 'varpool_remove_unreferenced_decls': 13, 'varpool_empty_needed_queue': 2, 'add_new_static_var': 11, 'varpool_extra_name_alias': 14}, "PosixPath('602/insn-output.bc')": {'output_1755': 4, 'output_1471': 7, 'output_1470': 7, 'output_1469': 7, 'output_1462': 2, 'output_1461': 2, 'output_1460': 2, 'output_1459': 2, 'output_1458': 2, 'output_1246': 2, 'output_1245': 2, 'output_1244': 2, 'output_1243': 2, 'output_1238': 7, 'output_1186': 7, 'output_1185': 7, 'output_1184': 7, 'output_1183': 7, 'output_1182': 7, 'output_819': 7, 'output_817': 2, 'output_693': 2, 'output_498': 2, 'output_496': 1, 'output_393': 1, 'output_392': 1, 'output_391': 5, 'output_390': 5, 'output_389': 1, 'output_388': 1, 'output_387': 1, 'output_386': 1, 'output_385': 1, 'output_384': 1, 'output_383': 5, 'output_293': 2, 'output_290': 3, 'output_289': 6, 'output_281': 2, 'output_219': 2, 'output_218': 4, 'output_217': 2, 'output_216': 5, 'output_215': 5, 'output_214': 4, 'output_213': 2, 'output_212': 2, 'output_211': 4, 'output_210': 2, 'output_209': 5, 'output_208': 5, 'output_207': 4, 'output_206': 2, 'output_205': 5, 'output_204': 5, 'output_203': 2, 'output_202': 2, 'output_201': 2, 'output_200': 2, 'output_199': 2, 'output_198': 5, 'output_197': 5, 'output_83': 2, 'output_76': 2, 'output_74': 2, 'output_71': 2, 'output_53': 2}, "PosixPath('602/tree-ssa-ccp.bc')": {'do_dbg_cnt': 12, 'gsi_start': 9, 'gimple_referenced_vars': 1, 'get_symbol_constant_value': 7, 'may_propagate_address_into_dereference': 7, 'gimple_ops': 1, 'get_default_value': 3, 'canonicalize_float_value': 52, 'get_value': 6, 'fold_const_aggregate_ref': 56, 'maybe_fold_offset_to_array_ref': 54, 'maybe_fold_offset_to_component_ref': 11, 'maybe_fold_offset_to_reference': 12, 'maybe_fold_offset_to_address': 9, 'maybe_fold_stmt_addition': 32, 'gsi_stmt': 1, 'maybe_fold_stmt_indirect': 20, 'maybe_fold_reference': 65, 'fold_gimple_assign': 26, 'fold_gimple_cond': 2, 'gimple_set_op': 2, 'gimple_call_fndecl': 2, 'get_maxval_strlen': 14, 'ccp_fold_builtin': 16, 'gsi_next': 1, 'gimple_vuse': 2, 'gimple_vdef': 2, 'gimplify_and_update_call_from_tree': 20, 'fold_gimple_call': 6, 'gimple_asm_output_op': 2, 'fold_stmt_1': 44, 'fold_stmt_inplace': 1, 'bb_seq': 2, 'gsi_start_bb': 7, 'single_succ_p': 1, 'single_succ_edge': 3, 'has_single_use': 4, 'optimize_stack_restore': 86, 'optimize_stdarg_builtin': 10, 'execute_fold_all_builtins': 159, 'surely_varying_stmt_p': 3, 'gimple_def_ops': 2, 'gimple_use_ops': 2, 'op_iter_init': 29, 'op_iter_next_tree': 10, 'op_iter_init_tree': 34, 'set_value_varying': 2, 'ccp_initialize': 60, 'gimple_references_memory_p': 2, 'likely_value': 6, 'ccp_fold': 75, 'evaluate_stmt': 6, 'ccp_fold_stmt': 6, 'ccp_finalize': 18, 'ccp_lattice_meet': 8, 'set_lattice_value': 21, 'ccp_visit_phi_node': 43, 'visit_assignment': 2, 'ccp_visit_stmt': 7, 'do_ssa_ccp': 56}, "PosixPath('602/graphite-interchange.bc')": {}, "PosixPath('602/cpp_charset.bc')": {'init_iconv_desc': 46, 'cpp_interpret_string': 309, '_cpp_convert_input': 48, 'conversion_loop': 29, 'one_cppchar_to_utf8': 34, 'one_utf16_to_utf8': 4, 'one_utf32_to_utf8': 3, 'one_utf8_to_cppchar': 13, 'one_utf8_to_utf16': 27, 'one_utf8_to_utf32': 14, 'convert_no_conversion': 7, 'cpp_init_iconv': 72, 'cpp_host_to_exec_charset': 16, 'ucn_valid_in_identifier': 78, '_cpp_valid_ucn': 181, 'convert_ucn': 36, 'emit_numeric_escape': 30, 'convert_hex': 1, 'convert_oct': 3, 'convert_escape': 117, 'cpp_interpret_string_notranslate': 14, 'wide_str_to_charconst': 20, 'narrow_str_to_charconst': 8, 'cpp_interpret_charconst': 89, '_cpp_interpret_identifier': 34}, "PosixPath('602/tree-ssa-coalesce.bc')": {'coalesce_pair_map_eq': 6, 'coalesce_pair_map_hash': 2, 'create_coalesce_list': 10, 'gsi_stmt': 1, 'ei_next': 2, 'coalesce_cost_edge': 67, 'has_single_use': 4, 'add_cost_one_coalesce': 9, 'find_coalesce_pair': 19, 'add_coalesce': 19, 'abnormal_corrupt': 17, 'gsi_next': 1, 'bb_seq': 2, 'gsi_start_bb': 4, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_next_tree': 10, 'op_iter_init_tree': 34, 'gimple_ops': 1, 'gimple_op': 2, 'gimple_asm_output_op': 2, 'has_zero_uses': 1, 'create_outofssa_var_map': 331, 'delete_coalesce_list': 2, 'ssa_conflicts_new': 2, 'new_live_track': 1, 'live_on_exit': 16, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'basevar_index': 3, 'bmp_iter_next': 2, 'live_track_init': 34, 'gsi_last_bb': 4, 'var_to_partition': 8, 'live_track_remove_partition': 4, 'ssa_conflicts_add_one': 2, 'live_track_process_def': 68, 'gsi_prev': 1, 'delete_live_track': 8, 'build_ssa_conflict_graph': 278, 'ssa_conflicts_dump': 7, 'first_htab_element': 8, 'first_coalesce_pair': 7, 'end_htab_p': 2, 'end_coalesce_pair_p': 2, 'next_htab_element': 4, 'next_coalesce_pair': 1, 'compare_pairs': 26, 'sort_coalesce_list': 18, 'dump_coalesce_list': 45, 'partition_to_var': 14, 'ssa_conflicts_test_p': 1, 'ssa_conflicts_merge': 83, 'attempt_coalesce': 3, 'fail_abnormal_edge_coalesce': 2, 'pop_cost_one_pair': 10, 'pop_best_coalesce': 6, 'coalesce_partitions': 250, 'ssa_conflicts_delete': 6, 'coalesce_ssa_name': 621}, "PosixPath('602/regrename.bc')": {'bitmap_initialize_stat': 2, 'df_scan_get_bb_info': 3, 'df_get_artificial_defs': 6, 'verify_reg_in_set': 3, 'VEC_du_head_p_base_space': 2, 'VEC_du_head_p_heap_reserve': 2, 'VEC_du_head_p_base_quick_push': 2, 'VEC_du_head_p_heap_safe_push': 6, 'create_new_chain': 132, 'hide_operands': 21, 'restore_operands': 2, 'scan_rtx_reg': 372, 'regno_ok_for_base_p': 1, 'scan_rtx_address': 20, 'scan_rtx': 10, 'record_out_operands': 28, 'remove_from_hard_reg_set': 1, 'add_to_hard_reg_set': 1, 'note_sets_clobbers': 9, 'build_def_use': 196, 'dump_def_use_chain': 9, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'merge_overlapping_regs': 43, 'do_replace': 39, 'VEC_du_head_p_base_iterate': 2, 'free_chain_data': 2, 'regrename_optimize': 758}, "PosixPath('602/hex.bc')": {}, "PosixPath('602/version.bc')": {}, "PosixPath('602/ipa-utils.bc')": {'searchc': 188, 'ipa_utils_reduced_inorder': 100, 'get_base_var': 4}, "PosixPath('602/ggc-page.bc')": {'push_by_depth': 2, 'debug_print_page_list': 5, 'set_page_group_in_use': 3, 'set_page_table_entry': 11, 'alloc_page': 142, 'push_depth': 1, 'ggc_alloc_stat': 245, 'ggc_allocated_p': 6, 'lookup_page_table_entry': 5, 'gt_ggc_m_S': 27, 'ggc_set_mark': 18, 'ggc_marked_p': 12, 'ggc_get_size': 2, 'ggc_free': 89, 'compute_inverse': 1, 'init_ggc': 36, 'release_pages': 20, 'ggc_print_statistics': 57, 'ggc_pch_total_size': 2, 'ggc_pch_this_base': 7, 'ggc_pch_alloc_object': 3, 'ggc_pch_write_object': 9, 'clear_marks': 68, 'move_ptes_to_front': 3, 'ggc_pch_read': 137}, "PosixPath('602/strerror.bc')": {'init_error_tables': 56, 'strerror': 1, 'strerrno': 1}, "PosixPath('602/lists.bc')": {'find_list_elem': 2, 'remove_list_elem': 2, 'alloc_INSN_LIST': 8, 'alloc_EXPR_LIST': 8, 'free_list': 5, 'remove_free_INSN_LIST_node': 2, 'remove_free_EXPR_LIST_node': 4}, "PosixPath('602/xmemdup.bc')": {}, "PosixPath('602/combine.bc')": {'setup_incoming_promotions': 30, 'try_combine': 4118, 'record_value_for_reg': 159, 'combine_validate_cost': 14, 'distribute_links': 64, 'combine_simplify_rtx': 1076, 'simplify_set': 310, 'reg_truncated_to_mode': 6, 'df_lr_get_bb_info': 3, 'get_last_value_validate': 183, 'get_last_value': 155, 'reg_num_sign_bit_copies_for_combine': 85, 'reg_nonzero_bits_for_combine': 124, 'gen_lowpart_for_combine': 9, 'VEC_reg_stat_type_base_space': 2, 'VEC_reg_stat_type_heap_reserve_exact': 2, 'VEC_reg_stat_type_heap_safe_grow': 4, 'VEC_reg_stat_type_heap_safe_grow_cleared': 4, 'count_rtxs': 25, 'update_table_tick': 55, 'create_log_links': 131, 'single_pred_p': 1, 'single_pred_edge': 3, 'single_pred': 1, 'record_dead_and_set_regs_1': 11, 'record_dead_and_set_regs': 73, 'init_reg_last': 3, 'record_promoted_value': 54, 'check_promoted_subreg': 62, 'cant_combine_insn_p': 14, 'likely_spilled_retval_1': 6, 'likely_spilled_retval_p': 25, 'do_SUBST': 20, 'reg_subword_p': 2, 'expand_field_assignment': 26, 'use_crosses_set_p': 22, 'can_combine_p': 67, 'undo_all': 25, 'combinable_i3pat': 12, 'find_single_use_1': 17, 'find_single_use': 5, 'can_change_dest_mode': 3, 'do_SUBST_MODE': 7, 'if_then_else_cond': 162, 'try_widen_shift_mode': 3, 'force_to_mode': 253, 'simplify_and_const_int': 8, 'expand_compound_operation': 92, 'simplify_shift_const_1': 478, 'apply_distributive_law': 30, 'make_extraction': 58, 'extract_left_shift': 12, 'make_compound_operation': 88, 'simplify_comparison': 350, 'distribute_and_simplify_rtx': 10, 'known_cond': 20, 'do_SUBST_INT': 18, 'reg_dead_at_p_1': 8, 'reg_dead_at_p': 28, 'recog_for_combine': 128, 'rtx_equal_for_field_assignment_p': 7, 'canon_reg_for_combine': 25, 'make_field_assignment': 73, 'simplify_logical': 14, 'subst': 99, 'add_to_hard_reg_set': 1, 'mark_used_regs_combine': 17, 'find_split_point': 125, 'contains_muldiv': 6, 'propagate_for_debug': 4, 'reg_bitfield_target_p': 9, 'distribute_notes': 223, 'move_deaths': 72, 'single_succ_p': 1, 'single_succ_edge': 3, 'update_cfg_for_uncondjump': 6, 'undo_commit': 1, 'set_nonzero_bits_and_sign_copies': 65, 'clear_log_links': 7, 'delete_noop_moves': 18, 'record_truncated_value': 21, 'combine_instructions': 692, 'rest_of_handle_combine': 642}, "PosixPath('602/ira-costs.bc')": {'ira_init_costs': 9, 'ira_init_costs_once': 3, 'free_ira_costs': 22, 'ira_allocno_iter_cond': 1, 'ok_for_base_p_nonstrict': 1, 'ok_for_index_p_nonstrict': 1, 'ira_get_may_move_cost': 4, 'record_address_regs': 118, 'copy_cost': 17, 'ira_get_register_move_cost': 1, 'record_reg_classes': 1239, 'record_operand_costs': 148, 'scan_one_insn': 410, 'process_bb_for_costs': 399, 'print_allocno_costs': 59, 'print_pseudo_costs': 30, 'find_costs_and_classes': 1060, 'ira_allocate_and_set_costs': 2, 'process_bb_node_for_hard_reg_moves': 60, 'setup_allocno_cover_class_and_costs': 164, 'ira_costs': 155, 'ira_tune_allocno_costs_and_cover_classes': 63}, "PosixPath('602/df-problems.bc')": {'df_rd_free': 9, 'df_lr_finalize': 6, 'df_lr_free': 28, 'df_lr_verify_solution_start': 48, 'df_lr_verify_solution_end': 62, 'df_live_free': 32, 'df_live_verify_solution_start': 48, 'df_live_verify_solution_end': 56, 'df_chain_alloc': 2, 'df_chain_free': 1, 'df_chain_fully_remove_problem': 1, 'df_byte_lr_alloc': 145, 'df_byte_lr_free': 12, 'df_note_bb_compute': 155, 'df_md_free': 24, 'df_live_get_bb_info': 3, 'df_lr_get_bb_info': 3, 'df_get_live_out': 23, 'df_get_live_in': 23, 'df_grow_bb_info': 8, 'df_chain_dump': 9, 'ei_next': 2, 'df_print_bb_index': 43, 'df_scan_get_bb_info': 3, 'df_get_artificial_defs': 6, 'df_rd_simulate_artificial_defs_at_top': 29, 'df_rd_simulate_one_insn': 20, 'df_rd_get_bb_info': 3, 'df_rd_bottom_dump': 8, 'df_rd_top_dump': 8, 'df_rd_start_dump': 13, 'bmp_iter_set_init': 30, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'df_rd_transfer_function': 96, 'df_rd_confluence_n': 120, 'df_rd_init_solution': 50, 'df_rd_bb_local_compute_process_def': 48, 'df_rd_bb_local_compute': 50, 'df_rd_local_compute': 224, 'df_rd_free_bb_info': 7, 'df_rd_set_bb_info': 6, 'df_rd_alloc': 110, 'df_lr_bottom_dump': 10, 'df_lr_top_dump': 10, 'df_lr_set_bb_info': 6, 'df_lr_alloc': 102, 'df_get_artificial_uses': 6, 'df_lr_bb_local_compute': 119, 'df_lr_local_compute': 72, 'df_lr_transfer_function': 19, 'df_lr_confluence_n': 64, 'df_lr_confluence_0': 24, 'df_lr_init': 50, 'df_lr_free_bb_info': 6, 'df_lr_reset': 37, 'df_lr_verify_transfer_functions': 25, 'df_live_bottom_dump': 10, 'df_live_top_dump': 10, 'df_live_finalize': 95, 'df_live_transfer_function': 49, 'df_live_confluence_n': 56, 'df_live_init': 90, 'df_live_bb_local_compute': 63, 'df_live_local_compute': 21, 'df_live_free_bb_info': 6, 'df_live_reset': 37, 'df_live_set_bb_info': 6, 'df_live_alloc': 113, 'df_live_set_all_dirty': 4, 'df_live_verify_transfer_functions': 25, 'df_chain_create': 3, 'df_chain_unlink_1': 11, 'df_chain_unlink': 12, 'df_chain_copy': 1, 'df_chain_bottom_dump': 50, 'df_chain_top_dump': 45, 'df_chain_remove_problem': 292, 'df_chain_create_bb_process_use': 111, 'df_chain_create_bb': 39, 'df_chain_finalize': 123, 'df_byte_lr_get_regno_start': 4, 'df_byte_lr_get_regno_len': 4, 'df_byte_lr_get_bb_info': 3, 'df_byte_lr_bottom_dump': 8, 'df_byte_lr_top_dump': 8, 'df_byte_lr_transfer_function': 19, 'df_byte_lr_confluence_n': 72, 'df_byte_lr_confluence_0': 27, 'df_byte_lr_init': 50, 'df_byte_lr_expand_bitmap': 38, 'df_byte_lr_bb_local_compute': 291, 'df_byte_lr_local_compute': 540, 'df_byte_lr_free_bb_info': 6, 'df_byte_lr_reset': 35, 'df_byte_lr_check_regs': 7, 'df_byte_lr_set_bb_info': 6, 'df_byte_lr_simulate_defs': 33, 'df_byte_lr_simulate_uses': 30, 'df_byte_lr_simulate_artificial_refs_at_top': 41, 'df_byte_lr_simulate_artificial_refs_at_end': 67, 'df_kill_notes': 16, 'df_whole_mw_reg_unused_p': 7, 'df_set_note': 6, 'df_set_unused_notes_for_mw': 14, 'df_create_unused_note': 6, 'df_whole_mw_reg_dead_p': 7, 'df_set_dead_notes_for_mw': 12, 'df_note_compute': 315, 'df_simulate_find_defs': 6, 'df_simulate_defs': 6, 'df_simulate_uses': 4, 'df_simulate_initialize_backwards': 30, 'bb_has_eh_pred': 14, 'df_simulate_fixup_sets': 23, 'df_simulate_finalize_backwards': 18, 'df_simulate_initialize_forwards': 18, 'df_simulate_one_insn_forwards': 6, 'df_md_simulate_artificial_defs_at_top': 18, 'df_md_simulate_one_insn': 14, 'df_md_get_bb_info': 3, 'df_md_bottom_dump': 8, 'df_md_top_dump': 8, 'df_md_transfer_function': 48, 'df_md_confluence_n': 65, 'df_md_confluence_0': 17, 'df_md_init': 49, 'df_md_bb_local_compute_process_def': 17, 'df_md_bb_local_compute': 43, 'df_md_local_compute': 349, 'df_md_free_bb_info': 7, 'df_md_reset': 36, 'df_md_set_bb_info': 6, 'df_md_alloc': 110}, "PosixPath('602/tree-ssa-copy.bc')": {'may_propagate_copy': 4, 'gimple_ops': 1, 'may_propagate_copy_into_stmt': 2, 'may_propagate_copy_into_asm': 4, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 15, 'gsi_stmt': 1, 'gimple_set_op': 2, 'propagate_tree_value_into_stmt': 24, 'bb_seq': 2, 'gsi_start_bb': 7, 'gimple_vuse': 2, 'stmt_may_generate_copy': 3, 'gimple_def_ops': 2, 'op_iter_init': 6, 'op_iter_next_tree': 10, 'op_iter_init_tree': 9, 'set_copy_of_val': 6, 'gsi_next': 1, 'loops_state_satisfies_p': 1, 'ei_next': 2, 'init_copy_prop': 77, 'fini_copy_prop': 28, 'get_copy_of_val': 3, 'dump_copy_of': 8, 'copy_prop_visit_phi_node': 39, 'copy_prop_visit_cond_stmt': 10, 'copy_prop_visit_stmt': 18, 'execute_copy_prop': 100}, "PosixPath('602/tree-ssa-dom.bc')": {'tree_ssa_dominator_optimize': 255, 'record_conditions': 16, 'first_imm_use_on_stmt': 3, 'next_imm_use_on_stmt': 4, 'loop_depth_of_name': 2, 'degenerate_phi_result': 3, 'gsi_stmt': 1, 'gimple_ops': 1, 'get_lhs_or_phi_result': 2, 'has_zero_uses': 1, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'move_use_after_head': 6, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_init_use': 34, 'gimple_vuse_op': 2, 'link_use_stmts_after': 44, 'first_imm_use_stmt': 14, 'gsi_next': 1, 'ei_next': 2, 'bb_seq': 2, 'gsi_last_bb': 4, 'next_imm_use_stmt': 6, 'propagate_rhs_into_lhs': 317, 'eliminate_const_or_copy': 219, 'eliminate_degenerate_phis_1': 1, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'eliminate_degenerate_phis': 138, 'gsi_start_bb': 4, 'free_all_edge_infos': 54, 'single_succ_p': 1, 'single_succ_edge': 3, 'iterative_hash_hashable_expr': 8, 'avail_expr_hash': 12, 'initialize_hash_element': 33, 'print_expr_hash_elt': 13, 'VEC_expr_hash_elt_t_base_space': 2, 'VEC_expr_hash_elt_t_heap_reserve': 2, 'VEC_expr_hash_elt_t_base_quick_push': 2, 'VEC_expr_hash_elt_t_heap_safe_push': 6, 'lookup_avail_expr': 168, 'dom_thread_across_edge': 1, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 2, 'record_const_or_copy_1': 6, 'record_const_or_copy': 10, 'initialize_hash_element_from_expr': 5, 'record_cond': 9, 'VEC_expr_hash_elt_t_base_pop': 2, 'remove_local_expressions_from_table': 9, 'VEC_tree_base_pop': 2, 'restore_vars_to_original_value': 12, 'dom_opt_leave_block': 71, 'single_incoming_edge_ignoring_loop_edges': 20, 'record_equality': 81, 'record_equivalences_from_incoming_edge': 163, 'record_equivalences_from_phis': 6, 'gimple_set_op': 2, 'simple_iv_increment_p': 4, 'cprop_operand': 28, 'cprop_into_stmt': 21, 'gimple_call_fndecl': 2, 'eliminate_redundant_computations': 20, 'gimple_references_memory_p': 2, 'record_equivalences_from_stmt': 5, 'optimize_stmt': 61, 'build_and_record_new_cond': 17, 'initialize_expr_from_cond': 9, 'record_edge_info': 130, 'cprop_into_successor_phis': 40, 'dom_opt_enter_block': 559, 'free_expr_hash_elt': 2, 'hashable_expr_equal_p': 51, 'avail_expr_eq': 131}, "PosixPath('602/sreal.bc')": {'normalize': 9, 'dump_sreal': 2, 'sreal_init': 2, 'sreal_to_int': 2, 'sreal_compare': 6, 'copy': 5, 'shift_right': 4, 'sreal_add': 28, 'sreal_sub': 19, 'sreal_mul': 11, 'sreal_div': 10}, "PosixPath('602/tree-vectorizer.bc')": {'vect_print_dump_info': 17, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 42, 'gimple_vop': 2, 'vectorize_loops': 83, 'increase_alignment': 5, 'execute_vect_slp': 10}, "PosixPath('602/recog.bc')": {'extract_insn': 24, 'validate_change_1': 36, 'extract_asm_operands': 5, 'asm_noperands': 13, 'decode_asm_operands': 30, 'recog_memoized': 3, 'skip_alternative': 2, 'reg_fits_class_p': 1, 'general_operand': 48, 'find_constant_term_loc': 7, 'offsettable_address_addr_space_p': 10, 'offsettable_memref_p': 4, 'offsettable_nonstrict_memref_p': 4, 'constrain_operands': 550, 'memory_operand': 2, 'register_operand': 8, 'asm_operand_ok': 41, 'check_asm_operands': 1, 'insn_invalid_p': 10, 'confirm_change_group': 15, 'cancel_changes': 8, 'verify_changes': 55, 'canonicalize_change_group': 4, 'simplify_while_replacing': 28, 'validate_replace_rtx_1': 72, 'validate_replace_rtx_group': 2, 'validate_replace_src_1': 4, 'validate_replace_src_group': 3, 'validate_simplify_insn': 14, 'scratch_operand': 2, 'immediate_operand': 6, 'const_int_operand': 2, 'nonmemory_operand': 13, 'push_operand': 16, 'pop_operand': 4, 'indirect_operand': 14, 'ordered_comparison_operator': 1, 'comparison_operator': 1, 'preprocess_constraints': 179, 'split_insn': 5, 'split_all_insns': 35, 'split_all_insns_noflow': 4, 'peep2_regno_dead_p': 1, 'peep2_reg_dead_p': 9, 'add_to_hard_reg_set': 1, 'peep2_find_free_register': 44, 'store_data_bypass_p': 32, 'if_test_bypass_p': 13, 'df_lr_get_bb_info': 3, 'peep2_reinit_state': 2, 'ei_next': 2, 'peephole2_optimize': 119, 'rest_of_handle_peephole2': 116}, "PosixPath('602/decimal32.bc')": {'__dpd32FromNumber': 99, '__dpd32ToNumber': 32, '__dpd32ToString': 25, 'decimal32FromNumber': 1, 'decimal32ToNumber': 1}, "PosixPath('602/lto-section-in.bc')": {'lto_input_1_unsigned': 7, 'lto_free_section_data': 3, 'lto_create_simple_input_block': 9, 'lto_record_renamed_decl': 3, 'lto_get_decl_name_mapping': 1, 'lto_get_function_in_decl_state': 3}, "PosixPath('602/tree-pretty-print.bc')": {'maybe_init_pretty_print': 3, 'dump_location': 3, 'dump_decl_name': 13, 'tree_operand_length': 3, 'op_prio': 2, 'tsi_next': 1, 'dump_function_name': 2, 'init_call_expr_arg_iterator': 3, 'next_call_expr_arg': 4, 'first_call_expr_arg': 3, 'more_call_expr_args_p': 2, 'VEC_tree_base_iterate': 2, 'dump_generic_node': 245, 'print_call_name': 5, 'print_declaration': 25, 'dump_array_domain': 2, 'do_niy': 5, 'dump_function_declaration': 6}, "PosixPath('602/init-regs.bc')": {'df_lr_get_bb_info': 3, 'df_live_get_bb_info': 3, 'initialize_uninitialized_regs': 98, 'rest_of_handle_initialize_regs': 95}, "PosixPath('602/expr.bc')": {'init_block_move_fn': 8, 'init_block_clear_fn': 8, 'expand_expr_real_1': 2171, 'init_expr_target': 44, 'compress_float_constant': 11, 'get_subtarget': 2, 'get_rtx_for_ssa_name': 11, 'const_vector_from_tree': 9, 'count_type_elements': 9, 'categorize_ctor_elements_1': 65, 'all_zeros_p': 9, 'move_by_pieces_ninsns': 20, 'store_by_pieces_2': 72, 'store_by_pieces_1': 112, 'clear_by_pieces': 7, 'tree_operand_length': 3, 'safe_from_p': 55, 'mostly_zeros_p': 12, 'highest_pow2_factor': 13, 'can_store_by_pieces': 18, 'store_by_pieces': 38, 'block_move_libcall_safe_for_call_parm': 4, 'emit_storent_insn': 9, 'gimple_ops': 1, 'gimple_op': 2, 'component_ref_field_offset': 12, 'array_ref_low_bound': 4, 'array_ref_element_size': 14, 'get_inner_reference': 36, 'target_align': 11, 'is_aligning_offset': 5, 'tsi_next': 1, 'emit_move_change_mode': 2, 'emit_move_via_integer': 1, 'undefined_operand_subword_p': 7, 'emit_single_push_insn': 11, 'move_by_pieces': 51, 'expand_expr_addr_expr_1': 143, 'expand_expr_real': 9, 'expand_expr_real_2': 545, 'reduce_to_bit_field_precision': 4, 'expand_constructor': 27, 'store_constructor': 87, 'expand_assignment': 217, 'store_constructor_field': 1, 'store_field': 21, 'store_expr': 56, 'emit_group_load': 9, 'emit_group_load_1': 34, 'clear_storage_hints': 44, 'set_storage_via_libcall': 4, 'set_storage_via_setmem': 54, 'emit_move_insn': 25, 'emit_move_insn_1': 12, 'write_complex_part': 4, 'emit_block_move_hints': 108, 'force_operand': 26, 'emit_block_move_via_libcall': 2, 'convert_modes': 90, 'convert_move': 115, 'emit_move_complex_push': 2, 'read_complex_part': 14, 'emit_move_multi_word': 9, 'emit_move_resolve_push': 7, 'move_block_to_reg': 1, 'gen_group_rtx': 19, 'emit_group_load_into_temps': 9, 'emit_group_move': 8, 'emit_group_move_into_temps': 7, 'emit_group_store': 40, 'copy_blkmode_from_reg': 8, 'use_reg': 2, 'use_group_regs': 3, 'push_block': 1, 'emit_push_insn': 14, 'contains_packed_reference': 9, 'string_constant': 23, 'do_tablejump': 3, 'try_tablejump': 10, 'vector_mode_valid_p': 3, 'build_personality_function': 6, 'get_personality_function': 2}, "PosixPath('602/lambda-trans.bc')": {'lambda_trans_matrix_new': 7, 'lambda_trans_matrix_id_p': 4, 'lambda_trans_matrix_inverse': 4, 'print_lambda_trans_matrix': 4}, "PosixPath('602/tree-optimize.bc')": {'execute_fixup_cfg': 130, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 2, 'gimple_call_fn': 2, 'gimple_call_fndecl': 5, 'gsi_next': 1, 'ei_next': 2, 'gate_all_early_local_passes': 4, 'tree_rest_of_compilation': 9, 'gate_all_early_optimizations': 2, 'gate_all_optimizations': 4}, "PosixPath('602/tree-nested.bc')": {'convert_nonlocal_reference_op': 29, 'convert_local_reference_op': 27, 'get_chain_decl': 19, 'gsi_last': 9, 'get_trampoline_type': 8, 'finalize_nesting_tree_1': 234, 'remap_vla_decls': 100, 'build_addr': 5, 'insert_field_into_struct': 8, 'check_for_nested_with_variably_modified': 1, 'create_nesting_tree': 12, 'walk_body': 4, 'iter_nestinfo_next': 2, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_call_fndecl': 2, 'create_tmp_var_for': 13, 'get_chain_field': 18, 'init_tmp_var': 4, 'get_static_chain': 3, 'gimple_set_op': 2, 'convert_gimple_call': 24, 'lookup_tramp_for_decl': 15, 'get_frame_field': 1, 'init_tmp_var_with_call': 4, 'convert_tramp_reference_op': 5, 'convert_tramp_reference_stmt': 3, 'convert_all_function_calls': 28, 'gimple_seq_first_stmt': 1, 'use_pointer_in_frame': 3, 'lookup_field_for_decl': 36, 'nesting_copy_decl': 3, 'contains_remapped_vars': 1, 'finalize_nesting_tree': 230, 'unnest_nesting_tree_1': 1, 'unnest_nesting_tree': 1, 'gsi_prev': 1, 'convert_nl_goto_receiver': 2, 'get_nl_goto_field': 10, 'convert_nl_goto_reference': 18, 'get_local_debug_decl': 19, 'save_tmp_var': 4, 'gimple_omp_for_index_ptr': 2, 'gimple_omp_for_initial_ptr': 2, 'gimple_omp_for_final_ptr': 2, 'gimple_omp_for_incr': 2, 'walk_gimple_omp_for': 50, 'convert_local_omp_clauses': 31, 'convert_local_reference_stmt': 20, 'get_nonlocal_debug_decl': 26, 'note_nonlocal_vla_type': 16, 'note_nonlocal_block_vlas': 4, 'convert_nonlocal_omp_clauses': 31, 'convert_nonlocal_reference_stmt': 28, 'lower_nested_functions': 260}, "PosixPath('602/cplus-dem.bc')": {'demangle_template': 85, 'string_need': 9, 'string_prependn': 3, 'consume_count': 7, 'consume_count_with_underscores': 2, 'register_Btype': 16, 'get_count': 9, 'string_appends': 3, 'ada_demangle': 82, 'do_hpacc_template_const_value': 8, 'arm_pt': 5, 'snarf_numeric_literal': 8, 'arm_special': 22, 'forget_types': 8, 'delete_non_B_K_work_stuff': 12, 'forget_B_and_K_types': 21, 'squangle_mop_up': 21, 'work_stuff_copy_to_from': 88, 'remember_type': 10, 'string_prepends': 2, 'remember_Ktype': 7, 'iterate_demangle_function': 23, 'demangle_function_name': 177, 'demangle_arm_hp_template': 93, 'do_type': 250, 'demangle_nested_args': 7, 'demangle_template_value_parm': 23, 'demangle_expression': 15, 'demangle_qualified': 107, 'cplus_demangle': 2, 'internal_cplus_demangle': 191, 'demangle_signature': 172, 'demangle_class_name': 1, 'demangle_args': 96, 'do_arg': 8, 'gnu_special': 58, 'demangle_template_template_parm': 11, 'cplus_demangle_opname': 176, 'cplus_mangle_opname': 5, 'cplus_demangle_name_to_style': 3}, "PosixPath('602/stack-ptr-mod.bc')": {'notice_stack_pointer_modification_1': 4, 'notice_stack_pointer_modification': 35, 'rest_of_handle_stack_ptr_mod': 24}, "PosixPath('602/cpp_macro.bc')": {'next_context': 9, 'enter_macro_context': 496, '_cpp_create_definition': 258, '_cpp_warn_if_unused_macro': 8, 'cpp_quote_string': 2, 'cpp_in_system_header': 1, '_cpp_builtin_macro_text': 76, '_cpp_arguments_ok': 4, '_cpp_push_token_context': 11, '_cpp_push_text_context': 11, '_cpp_pop_context': 7, '_cpp_backup_tokens_direct': 27, '_cpp_backup_tokens': 8, 'paste_tokens': 19, 'paste_all_tokens': 24, 'padding_token': 4, 'macro_real_token_count': 6, 'new_string_token': 7, 'stringify_arg': 45, 'push_ptoken_context': 11, 'builtin_macro': 6, 'cpp_get_token': 620, 'cpp_get_token_with_location': 3, 'cpp_sys_macro_p': 1, 'cpp_scan_nooutput': 5, '_cpp_save_parameter': 33, 'parse_params': 10, 'alloc_expansion_token': 16, 'check_trad_stringification': 35, 'lex_expansion_token': 54, 'create_iso_definition': 129, 'warn_of_redefinition': 43, 'cpp_macro_definition': 115}, "PosixPath('602/obstack.bc')": {}, "PosixPath('602/cp-demint.bc')": {'cplus_demangle_fill_component': 4, 'cplus_demangle_fill_builtin_type': 3, 'cplus_demangle_fill_operator': 5, 'cplus_demangle_v3_components': 16}, "PosixPath('602/bt-load.bc')": {'compute_defs_uses_and_gen': 865, 'sbitmap_iter_init': 22, 'find_btr_reference': 4, 'insn_sets_btr_p': 14, 'find_btr_def_group': 32, 'add_btr_def': 133, 'note_other_use_this_block': 5, 'new_btr_user': 62, 'note_btr_set': 24, 'dump_btrs_live': 1, 'compute_kill': 23, 'compute_out': 12, 'sbitmap_iter_cond': 38, 'sbitmap_iter_next': 3, 'link_btr_uses': 225, 'build_btr_def_use_webs': 1109, 'ei_next': 2, 'augment_live_range': 130, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'btr_def_live_range': 200, 'block_at_edge_of_live_range_p': 26, 'clear_btr_from_live_range': 426, 'combine_btr_defs': 133, 'add_btr_to_live_range': 150, 'move_btr_def': 407, 'migrate_btr_def': 1068, 'migrate_btr_defs': 2146, 'branch_target_load_optimize': 2197}, "PosixPath('602/sched-ebb.bc')": {'schedule_ebb': 194, 'begin_schedule_ready': 61, 'sd_iterator_cond': 9, 'ei_next': 2, 'ebb_compute_jump_reg_dependencies': 27, 'sd_iterator_start': 7, 'earliest_block_with_similiar_load': 107, 'add_deps_for_risky_insns': 147, 'advance_target_bb': 14, 'ebb_print_insn': 3, 'rank': 6, 'init_ready_list': 11, 'ebb_add_block': 5, 'ebb_fix_recovery_cfg': 5, 'schedule_ebbs': 526}, "PosixPath('602/df-scan.bc')": {'df_scan_alloc': 27, 'df_scan_free_internal': 108, 'df_grow_reg_info': 85, 'df_grow_insn_info': 6, 'df_scan_blocks': 19, 'df_ref_create_structure': 88, 'df_install_ref': 25, 'df_maybe_reorganize_use_refs': 9, 'df_maybe_reorganize_def_refs': 9, 'df_scan_free': 5, 'df_scan_get_bb_info': 3, 'df_scan_start_block': 7, 'df_scan_start_dump': 58, 'df_mw_hardreg_chain_delete': 1, 'df_ref_chain_delete_du_chain': 2, 'df_free_ref': 4, 'df_reg_chain_unlink': 81, 'df_ref_chain_delete': 1, 'df_insn_delete': 19, 'df_scan_free_bb_info': 20, 'df_get_regular_block_artificial_uses': 3, 'df_get_entry_block_def_set': 12, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'VEC_df_mw_hardreg_ptr_base_space': 2, 'VEC_df_mw_hardreg_ptr_stack_reserve': 4, 'VEC_df_mw_hardreg_ptr_base_quick_push': 2, 'VEC_df_mw_hardreg_ptr_stack_safe_push': 10, 'VEC_df_ref_base_space': 2, 'VEC_df_ref_stack_reserve': 4, 'VEC_df_ref_base_quick_push': 2, 'VEC_df_ref_stack_safe_push': 10, 'df_ref_record': 74, 'bmp_iter_next': 2, 'df_ref_compare': 58, 'df_swap_refs': 2, 'df_ref_equal_p': 84, 'df_sort_and_compress_refs': 43, 'df_mw_compare': 46, 'df_mw_equal_p': 20, 'df_sort_and_compress_mws': 45, 'df_canonize_collection_rec': 40, 'df_entry_block_defs_collect': 74, 'VEC_df_ref_base_iterate': 2, 'df_grow_ref_info': 3, 'df_check_and_grow_ref_info': 5, 'df_install_refs': 14, 'df_refs_add_to_chains': 85, 'df_record_entry_block_defs': 2, 'df_mark_reg': 2, 'df_get_exit_block_use_set': 24, 'ei_next': 2, 'bb_has_eh_pred': 1, 'df_exit_block_uses_collect': 95, 'df_record_exit_block_uses': 3, 'df_insn_create_insn_record': 3, 'df_read_modify_subreg_p': 2, 'df_def_record_1': 13, 'df_defs_record': 4, 'df_uses_record': 42, 'df_get_call_refs': 59, 'df_get_conditional_uses': 37, 'df_insn_refs_collect': 140, 'df_bb_refs_collect': 125, 'df_bb_refs_record': 37, 'df_ref_create': 53, 'df_ref_compress_rec': 6, 'df_ref_remove': 32, 'df_refs_verify': 5, 'VEC_df_mw_hardreg_ptr_base_iterate': 2, 'df_mws_verify': 8, 'df_insn_refs_verify': 36, 'df_free_collection_rec': 38, 'df_insn_rescan': 78, 'df_insn_rescan_debug_internal': 40, 'df_insn_rescan_all': 102, 'df_mw_hardreg_chain_delete_eq_uses': 10, 'df_notes_rescan': 111, 'df_update_entry_block_defs': 9, 'df_update_exit_block_uses': 7, 'df_update_entry_exit_and_calls': 16, 'df_process_deferred_rescans': 216, 'df_count_refs': 28, 'df_get_artificial_defs': 6, 'df_get_artificial_uses': 6, 'df_reorganize_refs_by_reg_by_insn': 1039, 'df_reorganize_refs_by_reg_by_reg': 79, 'df_reorganize_refs_by_reg': 1018, 'df_add_refs_to_table': 5, 'df_reorganize_refs_by_insn_bb': 35, 'df_reorganize_refs_by_insn': 100, 'df_insn_change_bb': 12, 'df_ref_change_reg_with_loc_1': 51, 'df_ref_change_reg_with_loc': 3, 'df_recompute_luids': 13, 'df_hard_reg_init': 1, 'df_hard_reg_used_p': 1, 'df_hard_reg_used_count': 1, 'df_set_regs_ever_live': 3, 'df_compute_regs_ever_live': 15, 'df_reg_chain_mark': 12, 'df_bb_verify': 57, 'df_reg_chain_verify_unmarked': 2, 'df_scan_verify': 23}, "PosixPath('602/tree-ssa-loop-prefetch.bc')": {'determine_loop_nest_reuse': 386, 'gather_memory_references_ref': 163, 'record_ref': 67, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 34, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gimple_vuse': 2, 'gimple_ops': 1, 'gimple_op': 2, 'idx_analyze_ref': 19, 'analyze_ref': 48, 'find_or_create_group': 16, 'dump_mem_ref': 2, 'gsi_next': 1, 'gather_memory_references': 39, 'prune_ref_by_self_reuse': 3, 'prune_ref_by_group_reuse': 34, 'prune_ref_by_reuse': 168, 'prune_group_by_reuse': 169, 'prune_by_reuse': 184, 'should_issue_prefetch_p': 2, 'estimate_prefetch_count': 7, 'volume_of_references': 17, 'VEC_data_reference_p_base_space': 2, 'VEC_data_reference_p_heap_reserve': 4, 'VEC_data_reference_p_base_quick_push': 2, 'VEC_data_reference_p_heap_safe_push': 10, 'VEC_data_reference_p_base_iterate': 2, 'VEC_tree_base_iterate': 2, 'loop_depth': 1, 'get_chrec_loop': 3, 'add_subscript_strides': 39, 'self_reuse_distance': 98, 'VEC_ddr_p_base_iterate': 2, 'volume_of_dist_vector': 1, 'determine_unroll_factor': 9, 'is_loop_prefetching_profitable': 4, 'VEC_edge_base_iterate': 2, 'may_use_storent_in_loop_p': 19, 'nontemporal_store_p': 10, 'mark_nontemporal_store': 29, 'single_pred_p': 1, 'gsi_after_labels': 16, 'emit_mfence_after_loop': 42, 'mark_nontemporal_stores': 123, 'schedule_prefetches': 16, 'issue_prefetch_ref': 33, 'issue_prefetches': 42, 'release_mem_refs': 2, 'loop_prefetch_arrays': 825, 'tree_ssa_prefetch_arrays': 996}, "PosixPath('602/prefix.bc')": {'translate_name': 3, 'update_path': 13, 'set_std_prefix': 1}, "PosixPath('602/tree-ssa-sccvn.bc')": {'get_constant_value_id': 4, 'get_or_alloc_constant_value_id': 20, 'valueize_refs': 102, 'vn_nary_op_insert_pieces': 96, 'vn_nary_op_insert': 61, 'vn_nary_op_insert_stmt': 61, 'DFS': 374, 'copy_nary': 60, 'visit_reference_op_call': 72, 'VEC_vn_ssa_aux_t_base_space': 2, 'VEC_vn_ssa_aux_t_heap_reserve_exact': 2, 'VEC_vn_ssa_aux_t_heap_safe_grow': 4, 'VN_INFO_GET': 5, 'gimple_ops': 1, 'gimple_op': 2, 'vn_get_expr_for': 4, 'vn_hash_constant_with_type': 2, 'vn_reference_op_compute_hash': 4, 'vn_reference_compute_hash': 16, 'vn_reference_op_eq': 6, 'vn_reference_eq': 26, 'VEC_vn_reference_op_s_base_space': 2, 'VEC_vn_reference_op_s_heap_reserve': 4, 'VEC_vn_reference_op_s_base_quick_push': 3, 'VEC_vn_reference_op_s_heap_safe_push': 4, 'copy_reference_ops_from_ref': 182, 'ao_ref_init_from_vn_reference': 110, 'copy_reference_ops_from_call': 8, 'VEC_vn_reference_op_s_base_ordered_remove': 2, 'VEC_vn_reference_op_s_base_quick_insert': 4, 'VEC_vn_reference_op_s_heap_safe_insert': 5, 'vn_reference_fold_indirect': 125, 'VEC_vn_reference_op_s_heap_reserve_exact': 4, 'VEC_vn_reference_op_s_heap_safe_grow': 7, 'vn_reference_lookup_1': 3, 'gimple_call_fndecl': 2, 'VEC_vn_reference_op_s_heap_copy': 2, 'vn_reference_insert_pieces': 15, 'vn_reference_lookup_3': 154, 'vn_reference_lookup_2': 21, 'vn_reference_lookup_pieces': 60, 'vn_reference_lookup': 39, 'create_reference_ops_from_ref': 1, 'vn_reference_insert': 19, 'vn_nary_op_compute_hash': 10, 'vn_nary_op_eq': 11, 'vn_nary_op_lookup_pieces': 25, 'vn_nary_op_lookup': 24, 'vn_nary_op_lookup_stmt': 26, 'free_vn_table': 12, 'free_scc_vn': 20, 'VEC_tree_base_iterate': 2, 'vn_phi_eq': 23, 'vn_constant_eq': 6, 'init_scc_vn': 34, 'has_zero_uses': 1, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 10, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 4, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 29, 'VEC_tree_base_pop': 2, 'compare_ops': 28, 'print_scc': 2, 'set_ssa_val_to': 3, 'visit_copy': 1, 'vn_phi_compute_hash': 28, 'vn_phi_lookup': 16, 'vn_phi_insert': 18, 'visit_phi': 64, 'op_iter_next_def': 6, 'op_iter_init_def': 11, 'defs_to_varying': 37, 'valueize_expr': 5, 'expr_has_constants': 3, 'visit_reference_op_store': 6, 'visit_reference_op_load': 17, 'create_reference_ops_from_call': 2, 'visit_use': 183, 'copy_references': 9, 'copy_phis': 9, 'process_scc': 21, 'extract_and_process_scc_for_name': 48, 'VEC_ssa_op_iter_base_space': 2, 'VEC_ssa_op_iter_heap_reserve': 4, 'VEC_ssa_op_iter_base_quick_push': 3, 'VEC_ssa_op_iter_heap_safe_push': 10, 'first_htab_element': 8, 'end_htab_p': 2, 'next_htab_element': 4, 'set_hashtable_value_ids': 33, 'run_scc_vn': 563, 'vn_nary_may_trap': 35}, "PosixPath('602/regstat.bc')": {'regstat_compute_ri': 617, 'regstat_bb_compute_ri': 573, 'regstat_init_n_sets_and_refs': 79, 'bmp_iter_set_init': 20, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'df_scan_get_bb_info': 3, 'df_get_artificial_defs': 6, 'df_get_artificial_uses': 6, 'regstat_free_ri': 2, 'regstat_bb_compute_calls_crossed': 236, 'regstat_compute_calls_crossed': 301}, "PosixPath('602/graphite.bc')": {}, "PosixPath('602/mini-gmp.bc')": {'mp_get_memory_functions': 3, 'mpn_addmul_1': 1, 'mpn_submul_1': 1, 'mpn_mul': 5, 'mpn_get_str_bits': 2, 'mpn_get_base_info': 2, 'mpn_div_qr_1_invert': 4, 'mpn_div_qr_1_preinv': 18, 'mpn_limb_get_str': 4, 'mpn_get_str_other': 20, 'mpn_get_str': 2, 'mpn_set_str_bits': 2, 'mpn_set_str_other': 3, 'mpn_set_str': 3, 'mpz_init': 4, 'mpz_init2': 4, 'mpz_set_ui': 5, 'mpz_set_si': 3, 'mpz_realloc': 8, 'mpz_set': 7, 'mpz_init_set_si': 4, 'mpz_init_set_ui': 6, 'mpz_init_set': 4, 'mpz_fits_slong_p': 5, 'mpz_get_si': 5, 'mpz_get_ui': 3, 'mpz_getlimbn': 3, 'mpz_limbs_modify': 2, 'mpz_roinit_n': 2, 'mpz_set_d': 4, 'mpz_init_set_d': 4, 'mpz_get_d': 3, 'mpz_cmpabs_d': 2, 'mpz_cmp_ui': 3, 'mpz_cmp_si': 3, 'mpz_cmp': 10, 'mpz_cmpabs_ui': 3, 'mpz_cmpabs': 6, 'mpz_swap': 26, 'mpz_abs_add_ui': 8, 'mpz_abs_sub_ui': 15, 'mpz_add_ui': 2, 'mpz_sub_ui': 2, 'mpz_ui_sub': 2, 'mpz_abs_add': 8, 'mpz_abs_sub': 23, 'mpz_mul_ui': 8, 'mpz_mul': 52, 'mpz_mul_2exp': 13, 'mpz_addmul_ui': 7, 'mpz_submul_ui': 7, 'mpz_addmul': 7, 'mpz_submul': 7, 'mpn_div_qr_2_invert': 7, 'mpn_div_qr_invert': 19, 'mpn_div_qr_2_preinv': 24, 'mpn_div_qr_pi1': 3, 'mpn_div_qr_preinv': 24, 'mpn_div_qr': 6, 'mpz_div_qr': 195, 'mpz_div_q_2exp': 20, 'mpz_div_r_2exp': 24, 'mpz_congruent_p': 10, 'mpn_div_qr_1': 3, 'mpz_div_qr_ui': 10, 'mpz_gcd_ui': 3, 'mpz_make_odd': 1, 'mpz_gcd': 126, 'mpz_tstbit': 3, 'mpz_abs_add_bit': 16, 'mpz_abs_sub_bit': 4, 'mpz_gcdext': 646, 'mpz_lcm': 13, 'mpz_invert': 67, 'mpz_pow_ui': 44, 'mpz_ui_pow_ui': 13, 'mpz_powm': 162, 'mpz_powm_ui': 13, 'mpz_sizeinbase': 17, 'mpz_rootrem': 166, 'mpz_root': 7, 'mpn_sqrtrem': 31, 'mpz_bin_uiui': 19, 'mpz_scan1': 3, 'mpz_probab_prime_p': 88, 'mpz_and': 25, 'mpz_ior': 25, 'mpz_xor': 25, 'mpz_popcount': 2, 'mpz_hamdist': 10, 'mpz_scan0': 3, 'mpz_get_str': 14, 'mpz_set_str': 50, 'mpz_init_set_str': 4, 'mpz_import': 4, 'mpz_export': 11}, "PosixPath('602/df-core.bc')": {'df_add_problem': 39, 'df_set_blocks': 146, 'df_finish_pass': 17, 'rest_of_handle_df_initialize': 16, 'df_analyze': 80, 'bmp_iter_set_init': 30, 'bmp_iter_set': 25, 'df_get_bb_info': 3, 'df_set_bb_info': 1, 'bmp_iter_next': 2, 'df_mark_solutions_dirty': 3, 'df_remove_problem': 23, 'ei_next': 2, 'df_worklist_propagate_forward': 92, 'df_worklist_propagate_backward': 94, 'df_worklist_dataflow_doublequeue': 303, 'df_worklist_dataflow': 347, 'df_analyze_problem': 12, 'df_prune_to_subcfg': 1, 'df_get_n_blocks': 2, 'df_get_postorder': 4, 'df_get_bb_dirty': 2, 'df_set_bb_dirty': 8, 'df_set_bb_dirty_nonlr': 18, 'df_compact_blocks': 103, 'df_clear_bb_dirty': 8, 'df_bb_replace': 25, 'df_bb_delete': 18, 'df_bb_regno_first_def_find': 16, 'df_bb_regno_last_def_find': 15, 'df_find_def': 7, 'df_find_use': 14, 'df_print_regset': 9, 'df_print_byte_regset': 10, 'df_dump_start': 15, 'df_dump_top': 9, 'df_dump_bottom': 9, 'df_dump_region': 30, 'df_refs_chain_dump': 4, 'df_regs_chain_dump': 4, 'df_mws_dump': 6, 'df_insn_uid_debug': 28, 'df_insn_debug': 14, 'df_insn_debug_regno': 7, 'df_regno_debug': 3, 'df_ref_debug': 11, 'debug_df_reg': 1, 'debug_df_defno': 1, 'debug_df_useno': 1, 'rest_of_handle_df_finish': 4}, "PosixPath('602/tree-ssa-pre.bc')": {'remove_dead_inserted_code': 79, 'compute_antic': 1741, 'eliminate': 325, 'compute_partial_antic_aux': 550, 'sorted_array_from_bitmap_set': 279, 'phi_translate_1': 2, 'gsi_start': 9, 'VEC_bitmap_set_t_base_space': 2, 'VEC_bitmap_set_t_heap_reserve_exact': 2, 'VEC_bitmap_set_t_heap_safe_grow': 4, 'VEC_bitmap_set_t_heap_safe_grow_cleared': 4, 'lookup_expression_id': 9, 'VEC_pre_expr_base_space': 2, 'VEC_pre_expr_heap_reserve': 4, 'VEC_pre_expr_base_quick_push': 2, 'VEC_pre_expr_heap_safe_push': 10, 'VEC_unsigned_base_space': 2, 'VEC_unsigned_heap_reserve': 2, 'VEC_unsigned_heap_reserve_exact': 2, 'VEC_unsigned_heap_safe_grow': 4, 'VEC_unsigned_heap_safe_grow_cleared': 4, 'alloc_expression_id': 68, 'add_to_value': 1, 'get_expr_value_id': 5, 'print_pre_expr': 28, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'print_bitmap_set': 64, 'print_value_expressions': 1, 'VEC_gimple_base_iterate': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_base_pop': 2, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 4, 'mark_operand_necessary': 2, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_next_tree': 10, 'op_iter_init_tree': 34, 'VEC_gimple_heap_safe_push': 3, 'ei_next': 2, 'my_rev_post_order_compute': 23, 'pre_expr_eq': 10, 'vn_hash_constant_with_type': 2, 'pre_expr_hash': 7, 'expr_pred_trans_eq': 6, 'init_pre': 30, 'has_zero_uses': 1, 'get_or_alloc_expr_for_name': 5, 'bitmap_value_insert_into_set': 1, 'gsi_stmt': 1, 'make_values_for_phi': 2, 'gsi_next': 1, 'bb_seq': 2, 'gsi_start_bb': 7, 'add_to_exp_gen': 1, 'gimple_ops': 1, 'compute_avail': 189, 'single_succ_p': 1, 'single_succ_edge': 3, 'phi_nodes': 2, 'VEC_pre_expr_base_iterate': 2, 'phi_trans_lookup': 7, 'bitmap_set_contains_value': 4, 'bmp_iter_and_init': 45, 'bmp_iter_and': 128, 'bitmap_find_leader': 152, 'get_expr_type': 5, 'get_var_ann': 2, 'get_representative_for': 119, 'get_or_alloc_expr_for_constant': 3, 'get_or_alloc_expr_for': 7, 'get_constant_for_value_id': 88, 'fully_constant_expression': 61, 'VEC_vn_reference_op_s_heap_copy': 2, 'translate_vuse_through_block': 15, 'phi_trans_add': 5, 'phi_translate': 337, 'bitmap_set_replace_value': 64, 'bitmap_value_replace_in_set': 65, 'phi_translate_set': 2, 'defer_or_phi_translate_block': 3, 'VEC_basic_block_base_quick_push': 2, 'VEC_basic_block_base_iterate': 2, 'bitmap_set_and': 74, 'bitmap_set_free': 2, 'bitmap_set_subtract': 79, 'bitmap_set_contains_expr': 1, 'vro_valid_in_sets': 43, 'value_dies_in_block_x': 63, 'valid_in_sets': 205, 'bitmap_remove_from_set': 1, 'clean': 2, 'compute_antic_aux': 312, 'bitmap_set_subtract_values': 58, 'dependent_clean': 2, 'single_pred_p': 1, 'inhibit_phi_insertion': 24, 'gimple_set_op': 2, 'create_component_ref_by_pieces_1': 69, 'create_expression_by_pieces': 51, 'find_or_generate_expression': 108, 'insert_into_preds_of_block': 263, 'do_regular_insertion': 422, 'do_partial_partial_insertion': 107, 'insert_aux': 677, 'insert': 4, 'do_SCCVN_insertion': 7, 'gsi_after_labels': 16, 'single_imm_use': 4, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 15, 'fini_pre': 4, 'execute_pre': 2305}, "PosixPath('602/tree-ssa-loop-ivcanon.bc')": {'bb_seq': 2, 'gsi_start_bb': 4, 'gsi_stmt': 1, 'gsi_next': 1, 'tree_num_loop_insns': 9, 'number_of_loops': 2, 'VEC_loop_p_base_iterate': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 90, 'gimple_ops': 1, 'constant_after_peeling': 20, 'gimple_assign_rhs_class': 1, 'tree_estimate_loop_size': 117, 'estimated_unrolled_size': 7, 'RESET_BIT': 4, 'VEC_edge_base_iterate': 2, 'gimple_set_op': 2, 'try_unroll_loop_completely': 153, 'gsi_last_bb': 4, 'create_canonical_iv': 37, 'canonicalize_loop_induction_variables': 235, 'canonicalize_induction_variables': 3, 'tree_unroll_loops_completely': 5}, "PosixPath('602/cfglayout.bc')": {'fixup_reorder_chain': 460, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 4, 'VEC_int_base_quick_push': 2, 'VEC_int_heap_safe_push': 11, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 6, 'VEC_location_t_base_space': 2, 'VEC_location_t_heap_reserve': 2, 'VEC_location_t_base_quick_push': 2, 'VEC_location_t_heap_safe_push': 7, 'curr_insn_locator': 39, 'locator_scope': 2, 'change_scope': 6, 'reemit_insn_block_notes': 6, 'relink_block_chain': 42, 'verify_insn_chain': 4, 'cfg_layout_can_duplicate_bb_p': 4, 'duplicate_insn_chain': 7, 'cfg_layout_duplicate_bb': 9, 'skip_insns_after_block': 17, 'record_effective_endpoints': 81, 'cfg_layout_initialize': 63, 'break_superblocks': 46, 'ei_next': 2, 'force_one_exit_fallthru': 50, 'label_for_bb': 4, 'single_pred_p': 1, 'single_pred_edge': 3, 'single_pred': 1, 'cfg_layout_finalize': 436, 'can_copy_bbs_p': 43, 'copy_bbs': 77, 'outof_cfg_layout_mode': 14}, "PosixPath('602/cpp_directives-only.bc')": {'_cpp_preprocess_dir_only': 299}, "PosixPath('602/et-forest.bc')": {'et_split': 35, 'et_new_occ': 8, 'et_new_tree': 3, 'set_depth_add': 3, 'set_prev': 1, 'set_next': 1, 'set_depth': 2, 'et_recomp_min': 29, 'et_splay': 1022, 'et_free_tree': 6, 'et_free_tree_force': 2, 'et_set_father': 110, 'et_nca': 95, 'et_below': 23}, "PosixPath('602/main.bc')": {}, "PosixPath('602/ipa-struct-reorg.bc')": {'exclude_alloc_and_field_accs_1': 7, 'build_basic_struct': 15, 'program_redefines_malloc_p': 8, 'get_type_of_var': 3, 'strip_type': 3, 'VEC_tree_base_iterate': 2, 'get_type_name': 3, 'is_equal_types': 24, 'compare_fields': 5, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 10, 'add_unsuitable_type': 4, 'is_candidate': 3, 'find_structure': 3, 'get_fields': 7, 'VEC_structure_base_space': 2, 'VEC_structure_heap_reserve': 2, 'VEC_structure_base_quick_push': 3, 'VEC_structure_heap_safe_push': 8, 'add_structure': 39, 'build_data_structure': 13, 'check_struct_form': 9, 'analyze_struct_form': 11, 'exclude_types_passed_to_local_func': 4, 'exclude_returned_types': 4, 'exclude_escaping_types_1': 2, 'exclude_escaping_types': 23, 'check_bitfields': 8, 'exclude_types_with_bit_fields': 13, 'VEC_alloc_site_t_base_ordered_remove': 2, 'remove_str_allocs_in_func': 9, 'free_struct_cluster': 3, 'free_data_struct': 11, 'VEC_structure_base_ordered_remove': 2, 'remove_structure': 2, 'remove_unsuitable_types': 8, 'collect_structures': 152, 'gimple_ops': 1, 'gimple_call_fndecl': 2, 'single_imm_use': 4, 'get_final_alloc_stmt': 11, 'is_alloc_of_struct': 3, 'VEC_alloc_site_t_base_space': 2, 'VEC_alloc_site_t_heap_reserve': 4, 'VEC_alloc_site_t_base_quick_push': 3, 'VEC_alloc_site_t_heap_safe_push': 9, 'add_alloc_site': 15, 'collect_alloc_sites': 35, 'collect_allocation_sites': 33, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gsi_next': 1, 'add_access_to_acc_sites': 6, 'find_field_in_struct_1': 2, 'find_field_in_struct': 9, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 14, 'op_iter_next_tree': 10, 'op_iter_init_tree': 19, 'single_ssa_tree_operand': 29, 'decompose_indirect_ref_acc': 90, 'decompose_access': 92, 'get_stmt_accesses': 196, 'collect_accesses_in_bb': 9, 'collect_accesses_in_func': 24, 'is_part_of_malloc': 4, 'find_in_field_accs': 7, 'is_part_of_field_access': 22, 'exclude_from_accs': 31, 'exclude_alloc_and_field_accs': 18, 'is_safe_cond_expr': 4, 'safe_cond_expr_check': 5, 'check_cond_exprs': 6, 'dump_field_acc': 6, 'dump_acc': 4, 'dump_accs': 7, 'dump_accesses': 5, 'collect_data_accesses': 84, 'sum_counts': 23, 'exclude_cold_structs': 34, 'get_max_field_count': 5, 'peel_field': 6, 'gen_cluster': 4, 'peel_hot_fields': 42, 'peel_structs': 47, 'gen_cluster_name': 9, 'create_fields': 5, 'update_fields_mapping': 5, 'create_new_type': 39, 'create_new_types': 31, 'dump_new_types': 9, 'create_new_var_node': 3, 'gen_var_name': 1, 'VEC_type_wrapper_t_base_space': 2, 'VEC_type_wrapper_t_heap_reserve': 4, 'VEC_type_wrapper_t_base_quick_push': 3, 'VEC_type_wrapper_t_heap_safe_push': 10, 'gen_struct_type': 27, 'is_global_var': 2, 'copy_decl_attributes': 10, 'create_new_var_1': 74, 'create_new_var': 88, 'update_varpool_with_new_var': 3, 'new_var_eq': 2, 'create_new_global_vars': 4, 'dump_new_var': 14, 'gimple_referenced_vars': 1, 'first_htab_element': 8, 'first_referenced_var': 8, 'end_htab_p': 2, 'end_referenced_vars_p': 1, 'next_htab_element': 4, 'next_referenced_var': 1, 'finalize_new_vars_creation': 3, 'create_new_local_vars': 10, 'gen_num_of_structs_in_malloc': 9, 'gimple_seq_last_stmt': 1, 'gimple_set_op': 2, 'find_var_in_new_vars_vec': 5, 'find_new_var_of_type': 8, 'create_new_malloc': 6, 'create_new_alloc_sites': 72, 'create_new_alloc_sites_for_func': 74, 'make_edge_and_fix_phis_of_dest': 9, 'create_new_stmts_for_cond_expr_1': 20, 'create_new_stmts_for_cond_expr': 28, 'find_pos_in_stmt_1': 4, 'find_pos_in_stmt': 12, 'create_general_new_stmt': 7, 'create_new_stmts_for_general_acc': 13, 'create_new_general_access': 43, 'create_new_acc': 53, 'create_base_plus_offset': 4, 'finalize_global_creation': 2, 'build_comp_ref': 2, 'replace_field_acc': 51, 'replace_field_access_stmt': 43, 'create_new_field_access': 125, 'create_new_field_acc': 152, 'create_new_accs_for_struct': 38, 'create_new_accesses_in_bb': 50, 'create_new_accesses_for_func': 78, 'do_reorg_for_func': 197, 'do_reorg_1': 208, 'do_reorg': 286, 'free_falloc_sites': 1, 'reorg_structs': 785, 'reorg_structs_drive': 803}, "PosixPath('602/xatexit.bc')": {'xatexit_cleanup': 3, 'xatexit': 15}, "PosixPath('602/lto-streamer.bc')": {'bp_unpack_value': 6, 'print_lto_report': 8, 'bitpack_delete': 1, 'bp_get_next_word': 4, 'VEC_bitpack_word_t_base_space': 2, 'VEC_bitpack_word_t_heap_reserve': 4, 'VEC_bitpack_word_t_base_quick_push': 2, 'VEC_bitpack_word_t_heap_safe_push': 11, 'bp_pack_value': 26, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve_exact': 4, 'VEC_tree_gc_safe_grow': 7, 'VEC_tree_gc_safe_grow_cleared': 7, 'VEC_unsigned_base_space': 2, 'VEC_unsigned_heap_reserve_exact': 4, 'VEC_unsigned_heap_safe_grow': 7, 'VEC_unsigned_heap_safe_grow_cleared': 7, 'lto_streamer_cache_add_to_node_array': 19, 'lto_stream_as_builtin_p': 4, 'lto_streamer_cache_insert_1': 16, 'lto_streamer_cache_lookup': 2, 'lto_streamer_cache_get': 3, 'VEC_tree_heap_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 10, 'lto_record_common_node': 10, 'lto_get_common_nodes': 17, 'VEC_tree_base_iterate': 2, 'preload_common_node': 2, 'lto_streamer_cache_create': 18, 'lto_streamer_cache_delete': 2, 'check_handled_ts_structures': 35, 'lto_streamer_init': 2, 'gate_lto_out': 2}, "PosixPath('602/vec.bc')": {'calculate_allocation': 2, 'vec_gc_o_reserve_1': 2, 'vec_heap_o_reserve_1': 2, 'VEC_void_p_base_space': 2, 'VEC_void_p_heap_reserve': 2, 'VEC_void_p_base_quick_push': 2, 'VEC_void_p_heap_safe_push': 6, 'vec_stack_p_reserve_exact_1': 13, 'VEC_void_p_base_unordered_remove': 4, 'vec_stack_o_reserve_1': 10, 'vec_stack_free': 4}, "PosixPath('602/cc1-checksum.bc')": {}, "PosixPath('602/dfp.bc')": {'decimal_from_decnumber': 2, 'decimal_to_decnumber': 1, 'decode_decimal32': 2, 'encode_decimal64': 4, 'decode_decimal64': 9, 'encode_decimal128': 19, 'decode_decimal128': 33, 'decimal_do_compare': 15, 'decimal_round_for_format': 6, 'decimal_real_convert': 3, 'decimal_do_fix_trunc': 1, 'decimal_real_to_integer': 1, 'decimal_real_to_integer2': 1, 'decimal_real_arithmetic': 37}, "PosixPath('602/web.bc')": {'unionfind_root': 1, 'union_defs': 116, 'entry_register': 11, 'replace_ref': 11, 'web_main': 114}, "PosixPath('602/lbasename.bc')": {'lbasename': 2}, "PosixPath('602/ipa-pure-const.bc')": {'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 2, 'gimple_call_fndecl': 2, 'check_call': 62, 'gimple_asm_clobber_op': 4, 'check_decl': 13, 'check_op': 4, 'check_stmt': 81, 'gsi_next': 1, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 46, 'analyze_function': 254, 'local_pure_const': 31, 'gate_pure_const': 2, 'VEC_funct_state_base_space': 2, 'VEC_funct_state_heap_reserve_exact': 2, 'VEC_funct_state_heap_safe_grow': 4, 'VEC_funct_state_heap_safe_grow_cleared': 4, 'set_function_state': 10, 'get_function_state': 4, 'pure_const_read_summary': 1, 'csi_end_p': 1, 'pure_const_write_summary': 18, 'generate_summary': 2, 'self_recursive_p': 2, 'propagate': 109}, "PosixPath('602/tree-parloops.bc')": {'create_parallel_loop': 115, 'create_loop_fn': 21, 'take_address_of': 29, 'parallelized_function_p': 2, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 51, 'loop_has_blocks_with_irreducible_flag': 2, 'gsi_stmt': 1, 'gsi_next': 1, 'loop_has_vector_phi_nodes': 10, 'gimple_ops': 1, 'build_new_reduction': 4, 'gather_scalar_reductions': 22, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'next_readonly_imm_use': 4, 'try_create_reduction_list': 47, 'loop_parallel_p': 11, 'single_succ_p': 1, 'single_succ_edge': 3, 'gimple_set_op': 2, 'bb_seq': 2, 'gsi_start_bb': 4, 'gsi_after_labels': 16, 'transform_to_exit_first_loop': 52, 'VEC_basic_block_base_iterate': 2, 'eliminate_local_variables_1': 16, 'eliminate_local_variables_stmt': 11, 'eliminate_local_variables': 45, 'single_pred_p': 1, 'single_pred_edge': 3, 'single_pred': 1, 'clear_and_done_ssa_iter': 2, 'op_iter_init_phidef': 2, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_next_def': 6, 'op_iter_init_def': 11, 'separate_decls_in_region_name': 20, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'expr_invariant_in_region_p': 3, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 15, 'separate_decls_in_region_stmt': 68, 'separate_decls_in_region_debug_bind': 32, 'create_loads_for_reductions': 47, 'create_final_loads_for_reduction': 8, 'gsi_last_bb': 4, 'create_stores_for_reduction': 15, 'create_loads_and_stores_for_name': 44, 'add_field_for_reduction': 2, 'add_field_for_name': 9, 'separate_decls_in_region': 159, 'gimple_omp_for_set_index': 2, 'gimple_omp_for_set_initial': 2, 'gimple_omp_for_set_final': 2, 'gimple_omp_for_set_cond': 2, 'gimple_omp_for_set_incr': 2, 'create_call_for_reduction_1': 48, 'create_phi_for_local_result': 26, 'create_call_for_reduction': 7, 'initialize_reductions': 2, 'gen_parallel_loop': 507, 'parallelize_loops': 794}, "PosixPath('602/cpp_expr.bc')": {'append_digit': 40, 'reduce': 1427, '_cpp_expand_op_stack': 2, 'num_binary_op': 137, 'num_mul': 151, 'num_div_op': 206, 'num_lshift': 42, 'num_rshift': 22, 'interpret_float_suffix': 6, 'interpret_int_suffix': 2, 'cpp_classify_number': 102, 'num_trim': 6, 'cpp_interpret_integer': 202, 'parse_defined': 116, 'eval_token': 263, 'check_promotion': 36, 'num_negate': 25, 'num_unary_op': 46, 'num_greater_eq': 33, 'num_inequality_op': 55, 'num_equality_op': 24, 'num_bitwise_op': 69, 'num_part_mul': 9, '_cpp_parse_expr': 1991, 'cpp_num_sign_extend': 8}, "PosixPath('602/passes.bc')": {'print_current_pass': 2, 'rest_of_decl_compilation': 142, 'rest_of_type_compilation': 6, 'set_pass_for_id': 4, 'register_one_dump_file': 11, 'make_pass_instance': 16, 'position_pass': 110, 'register_pass': 22, 'register_dump_files_1': 16, 'gate_rest_of_compilation': 2, 'do_per_function_toporder': 8, 'pass_init_dump_file': 2, 'execute_ipa_summary_passes': 10, 'do_per_function': 10, 'execute_function_todo': 16, 'execute_one_ipa_transform_pass': 4, 'execute_all_ipa_transforms': 25, 'VEC_ipa_opt_pass_base_space': 2, 'VEC_ipa_opt_pass_heap_reserve': 4, 'VEC_ipa_opt_pass_base_quick_push': 2, 'VEC_ipa_opt_pass_heap_safe_push': 10, 'update_properties_after_pass': 4, 'execute_one_pass': 34, 'execute_pass_list': 3, 'ipa_write_summaries_2': 37, 'ipa_write_summaries': 4, 'ipa_write_summaries_of_cgraph_node_set': 2, 'ipa_read_summaries_1': 41, 'execute_ipa_pass_list': 5, 'execute_ipa_stmt_fixups': 14, 'function_called_by_processed_nodes_p': 14, 'gt_pch_na_order': 1, 'gt_ggc_ma_order': 1}, "PosixPath('602/argv.bc')": {'dupargv': 5, 'consume_whitespace': 2, 'buildargv': 16, 'only_whitespace': 2, 'expandargv': 14}, "PosixPath('602/alloc-pool.bc')": {'pool_alloc': 117, 'create_alloc_pool': 11, 'empty_alloc_pool': 1, 'free_alloc_pool_if_empty': 4, 'pool_free': 10}, "PosixPath('602/floatformat.bc')": {'mant_bits_set': 9, 'floatformat_to_double': 79, 'put_field': 1, 'floatformat_from_double': 71, 'floatformat_ibm_long_double_is_valid': 43, 'floatformat_i387_ext_is_valid': 11}, "PosixPath('602/ddg.bc')": {'create_ddg': 312, 'sbitmap_iter_init': 22, 'sd_iterator_cond': 9, 'sd_iterator_start': 7, 'get_node_of_insn': 5, 'rtx_mem_access_p': 1, 'df_rd_get_bb_info': 3, 'create_ddg_edge': 22, 'add_edge_to_ddg': 22, 'create_ddg_dep_from_intra_loop_link': 50, 'add_backarc_to_ddg': 4, 'create_ddg_dep_no_link': 10, 'add_inter_loop_mem_dep': 3, 'build_intra_loop_deps': 210, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'add_cross_iteration_register_deps': 31, 'bmp_iter_next': 2, 'build_inter_loop_deps': 117, 'free_ddg': 17, 'print_ddg_edge': 21, 'print_ddg': 4, 'vcg_print_ddg': 17, 'sbitmap_iter_cond': 38, 'sbitmap_iter_next': 3, 'print_sccs': 104, 'find_successors': 62, 'find_predecessors': 62, 'find_nodes_on_paths': 156, 'add_backarc_to_scc': 4, 'update_dist_to_successors': 23, 'longest_simple_path': 153, 'set_recurrence_length': 29, 'create_scc': 184, 'add_scc_to_ddg': 4, 'compare_sccs': 4, 'order_sccs': 2, 'create_ddg_all_sccs': 334, 'free_scc': 3, 'free_ddg_all_sccs': 8}, "PosixPath('602/except.bc')": {'gen_eh_region': 39, 'dw2_build_landing_pads': 83, 'VEC_eh_region_base_space': 2, 'VEC_eh_region_gc_reserve': 4, 'VEC_eh_region_base_quick_push': 2, 'VEC_eh_region_gc_safe_push': 10, 'VEC_eh_landing_pad_base_space': 2, 'VEC_eh_landing_pad_gc_reserve': 4, 'VEC_eh_landing_pad_base_quick_push': 2, 'VEC_eh_landing_pad_gc_safe_push': 10, 'gen_eh_region_catch': 6, 'gen_eh_landing_pad': 21, 'get_eh_region_from_number_fn': 1, 'get_eh_region_from_number': 1, 'get_eh_landing_pad_from_number_fn': 1, 'get_eh_landing_pad_from_number': 1, 'get_eh_region_from_lp_number_fn': 4, 'current_function_has_exception_handlers': 1, 'duplicate_eh_regions_1': 46, 'duplicate_eh_regions': 9, 'eh_region_outermost': 17, 'VEC_eh_region_base_iterate': 2, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 10, 'add_ttypes_entry': 9, 'VEC_uchar_base_space': 2, 'VEC_uchar_gc_reserve': 4, 'VEC_uchar_base_quick_push': 2, 'VEC_uchar_gc_safe_push': 10, 'add_ehspec_entry': 9, 'ehspec_filter_hash': 2, 'assign_filter_values': 41, 'remove_eh_landing_pad': 12, 'remove_eh_handler': 41, 'VEC_eh_landing_pad_base_iterate': 2, 'for_each_eh_label': 10, 'insn_could_throw_p': 2, 'get_eh_region_and_lp_from_rtx': 10, 'get_eh_landing_pad_from_rtx': 4, 'get_eh_region_from_rtx': 4, 'can_throw_external': 22, 'insn_nothrow_p': 19, 'expand_builtin_eh_common': 1, 'expand_builtin_eh_pointer': 2, 'expand_builtin_eh_filter': 2, 'expand_builtin_eh_copy_values': 14, 'dw2_output_call_site_table': 21, 'VEC_uchar_base_iterate': 2, 'output_ttype': 2, 'VEC_tree_base_iterate': 2, 'output_one_function_exception_table': 135, 'get_eh_throw_stmt_table': 1, 'ehr_next': 7, 'function_needs_eh_personality': 13, 'dump_eh_tree': 23, 'verify_eh_tree': 107, 'add_action_record': 9, 'collect_one_action_chain': 11, 'VEC_call_site_record_base_space': 2, 'VEC_call_site_record_gc_reserve': 4, 'VEC_call_site_record_base_quick_push': 2, 'VEC_call_site_record_gc_safe_push': 10, 'add_call_site': 20, 'ei_next': 2, 'action_record_eq': 6, 'action_record_hash': 2, 'convert_to_eh_region_ranges': 141, 'gate_convert_to_eh_region_ranges': 1, 'set_nothrow_function_flags': 10, 'emit_to_new_bb_before': 16, 'single_succ_p': 1, 'single_succ_edge': 2, 'finish_eh_generation': 149, 'rest_of_handle_eh': 130, 'gate_handle_eh': 1}, "PosixPath('602/tree-ssa-reassoc.bc')": {'sbitmap_iter_init': 22, 'VEC_operand_entry_t_base_iterate': 2, 'dump_ops_vector': 3, 'init_reassoc': 23, 'bb_seq': 2, 'gsi_start_bb': 4, 'gsi_stmt': 1, 'gimple_ops': 1, 'has_single_use': 4, 'single_imm_use': 4, 'get_single_immediate_use': 2, 'should_break_up_subtract': 4, 'gimple_set_op': 2, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 6, 'negate_value': 15, 'gsi_next': 1, 'break_up_subtract_bb': 43, 'gsi_last_bb': 4, 'has_zero_uses': 1, 'gimple_vdef': 2, 'tree_operand_length': 3, 'get_rank': 32, 'VEC_operand_entry_t_base_space': 2, 'VEC_operand_entry_t_heap_reserve': 4, 'VEC_operand_entry_t_base_quick_push': 2, 'VEC_operand_entry_t_heap_safe_push': 10, 'linearize_expr': 16, 'linearize_expr_tree': 8, 'VEC_operand_entry_t_base_last': 2, 'VEC_operand_entry_t_base_pop': 2, 'eliminate_using_constants': 383, 'eliminate_not_pairs': 32, 'VEC_operand_entry_t_base_ordered_remove': 3, 'eliminate_duplicate_pair': 26, 'eliminate_plus_minus_pair': 33, 'optimize_ops_list': 754, 'sbitmap_iter_cond': 38, 'VEC_oecount_base_space': 2, 'VEC_oecount_heap_reserve': 2, 'VEC_oecount_base_quick_push': 3, 'VEC_oecount_heap_safe_push': 8, 'sbitmap_iter_next': 3, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 15, 'zero_one_operation': 35, 'single_succ_p': 1, 'single_succ_edge': 3, 'single_succ': 1, 'gsi_after_labels': 16, 'ei_next': 2, 'build_and_add_sum': 115, 'oecount_eq': 5, 'undistribute_ops_list': 479, 'remove_visited_stmt_chain': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'is_phi_for_stmt': 26, 'gsi_prev': 1, 'rewrite_expr_tree': 100, 'sort_by_operand_rank': 18, 'reassociate_bb': 571, 'do_reassoc': 2, 'VEC_tree_base_iterate': 2, 'repropagate_negates': 3, 'execute_reassoc': 28}, "PosixPath('602/ira-color.bc')": {'ira_reassign_conflict_allocnos': 95, 'ira_sort_regnos_for_alter_reg': 180, 'update_copy_costs': 56, 'ira_color': 416, 'fast_allocation': 158, 'push_allocno_to_stack': 256, 'add_allocno_to_ordered_bucket': 23, 'df_lr_get_bb_info': 3, 'ei_next': 2, 'VEC_edge_base_iterate': 2, 'ira_loop_edge_freq': 166, 'ira_allocno_iter_cond': 1, 'ira_allocno_conflict_iter_init': 49, 'ira_allocno_conflict_iter_cond': 73, 'ira_allocno_conflict_iter_next': 8, 'setup_allocno_priorities': 40, 'ira_get_register_move_cost': 1, 'ira_allocate_and_set_or_copy_costs': 2, 'update_curr_costs': 50, 'ira_allocate_and_copy_costs': 1, 'queue_update_cost': 26, 'get_next_update_cost': 10, 'update_conflict_hard_regno_costs': 35, 'VEC_ira_allocno_t_base_space': 2, 'VEC_ira_allocno_t_heap_reserve': 4, 'VEC_ira_allocno_t_base_quick_push': 2, 'VEC_ira_allocno_t_heap_safe_push': 10, 'allocno_cost_compare_func': 26, 'assign_hard_reg': 454, 'allocno_priority_compare_func': 12, 'bmp_iter_set_init': 20, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'allocnos_have_intersected_live_ranges_p': 6, 'coalesced_allocno_conflict_p': 46, 'merge_allocnos': 4, 'copy_freq_compare_func': 14, 'coalesce_allocnos': 448, 'setup_coalesced_allocno_costs_and_nums': 52, 'collect_spilled_coalesced_allocnos': 10, 'slot_coalesced_allocno_live_ranges_intersect_p': 3, 'setup_slot_coalesced_allocno_live_ranges': 2, 'coalesce_spill_slots': 48, 'coalesced_pseudo_reg_slot_compare': 41, 'coalesced_pseudo_reg_freq_compare': 11, 'ira_mark_allocation_change': 44, 'ira_mark_memory_move_deletion': 1, 'allocno_reload_assign': 101, 'pseudo_reg_compare': 3, 'ira_reassign_pseudos': 170, 'ira_reuse_stack_slot': 117, 'bitmap_initialize_stat': 2, 'ira_mark_new_stack_slot': 13, 'calculate_spill_cost': 133, 'ira_better_spill_reload_regno_p': 85, 'loop_depth': 1, 'print_loop_title': 235, 'setup_allocno_left_conflicts_size': 176, 'setup_allocno_available_regs_num': 56, 'add_allocno_to_bucket': 12, 'put_allocno_into_bucket': 552, 'calculate_allocno_spill_cost': 41, 'get_coalesced_allocnos_attributes': 6, 'bucket_allocno_compare_func': 56, 'sort_bucket': 9, 'delete_allocno_from_bucket': 14, 'allocno_spill_priority': 9, 'remove_allocno_from_bucket_and_push': 13, 'push_only_colorable': 3, 'push_allocno_to_spill': 6, 'VEC_ira_allocno_t_base_pop': 2, 'splay_tree_free': 3, 'allocno_spill_priority_compare': 50, 'push_allocnos_to_stack': 495, 'pop_allocnos_from_stack': 26, 'color_allocnos': 2042, 'color_pass': 2740, 'move_spill_restore': 288, 'color': 268}, "PosixPath('602/cpp_errors.bc')": {'cpp_error': 33}, "PosixPath('602/tree-vect-loop-manip.bc')": {'slpeel_tree_duplicate_loop_to_edge_cfg': 75, 'first_imm_use_on_stmt': 3, 'next_imm_use_on_stmt': 4, 'bb_seq': 2, 'gsi_start_bb': 4, 'gsi_stmt': 1, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_next_use': 8, 'op_iter_init_use': 34, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 8, 'gsi_next': 1, 'ei_next': 2, 'rename_variables_in_bb': 15, 'rename_variables_in_loop': 1, 'find_loop_location': 14, 'slpeel_make_loop_iterate_ntimes': 5, 'loop_outer': 3, 'gsi_last_bb': 4, 'slpeel_can_duplicate_loop_p': 13, 'vinfo_for_stmt': 1, 'vect_can_advance_ivs_p': 4, 'vect_build_loop_niters': 12, 'vect_generate_tmps_on_preheader': 21, 'conservative_cost_threshold': 1, 'gimple_vop': 2, 'VEC_adjust_info_base_space': 2, 'VEC_adjust_info_stack_reserve': 2, 'VEC_adjust_info_base_quick_push': 3, 'VEC_adjust_info_stack_safe_push': 8, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_init_phiuse': 6, 'move_use_after_head': 6, 'gimple_vuse_op': 2, 'link_use_stmts_after': 46, 'first_imm_use_stmt': 14, 'gimple_ops': 1, 'gimple_set_op': 4, 'gimple_debug_bind_reset_value': 3, 'next_imm_use_stmt': 6, 'adjust_debug_stmts_now': 80, 'adjust_debug_stmts': 41, 'adjust_phi_and_debug_stmts': 4, 'slpeel_update_phis_for_duplicate_loop': 14, 'single_pred_p': 1, 'single_pred_edge': 3, 'set_prologue_iterations': 78, 'slpeel_add_loop_guard': 44, 'slpeel_update_phi_nodes_for_guard1': 33, 'slpeel_update_phi_nodes_for_guard2': 26, 'adjust_vec_debug_stmts': 3, 'slpeel_tree_peel_loop_to_edge': 174, 'vect_update_ivs_after_vectorizer': 40, 'vect_do_peeling_for_loop_bound': 120, 'vect_gen_niters_for_prolog_loop': 30, 'VEC_data_reference_p_base_iterate': 2, 'vect_update_init_of_dr': 1, 'vect_update_inits_of_drs': 6, 'vect_do_peeling_for_alignment': 37, 'VEC_gimple_base_iterate': 2, 'vect_create_cond_for_align_checks': 20, 'VEC_ddr_p_base_iterate': 2, 'vect_create_cond_for_alias_checks': 14, 'vect_loop_versioning': 128}, "PosixPath('602/getpwd.bc')": {'getpwd': 16}, "PosixPath('602/simplify-rtx.bc')": {'mode_signbit_p': 5, 'simplify_immed_subreg': 424, 'plus_minus_operand_p': 6, 'simplify_plus_minus_op_data_cmp': 4, 'simplify_rtx': 31, 'simplify_relational_operation': 56, 'simplify_const_relational_operation': 475, 'avoid_constant_pool_reference': 18, 'simplify_subreg': 540, 'simplify_unary_operation': 292, 'simplify_binary_operation_1': 1192, 'simplify_associative_operation': 4, 'simplify_plus_minus': 182, 'simplify_const_binary_operation': 212, 'simplify_const_unary_operation': 366, 'simplify_ternary_operation': 107, 'delegitimize_mem_from_attrs': 98, 'simplify_replace_fn_rtx': 17}, "PosixPath('602/opts-common.bc')": {'find_opt': 13, 'prune_options': 33}, "PosixPath('602/tree-into-ssa.bc')": {'sbitmap_iter_init': 22, 'VEC_ssa_name_info_p_base_space': 2, 'VEC_ssa_name_info_p_heap_reserve': 2, 'VEC_ssa_name_info_p_base_quick_push': 2, 'get_ssa_name_ann': 47, 'var_ann': 2, 'set_current_def': 1, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'ei_next': 2, 'compute_global_livein': 163, 'dump_decl_set': 45, 'dump_defs_stack': 3, 'gimple_referenced_vars': 1, 'first_htab_element': 8, 'first_referenced_var': 8, 'end_htab_p': 2, 'end_referenced_vars_p': 1, 'next_htab_element': 4, 'next_referenced_var': 1, 'dump_currdefs': 9, 'debug_def_blocks_r': 1, 'names_replaced_by': 1, 'dump_names_replaced_by': 76, 'need_ssa_update_p': 2, 'sbitmap_iter_cond': 38, 'sbitmap_iter_next': 3, 'dump_update_ssa': 178, 'fini_ssa_renamer': 1, 'delete_update_ssa': 210, 'repl_map_free': 1, 'init_update_ssa': 8, 'add_to_repl_tbl': 1, 'is_new_name': 1, 'add_new_name_mapping': 27, 'create_new_def_for': 30, 'mark_sym_for_renaming': 1, 'mark_set_for_renaming': 29, 'is_old_name': 4, 'ssa_names_to_replace': 38, 'switch_virtuals_to_full_rewrite_p': 4, 'switch_virtuals_to_full_rewrite': 154, 'gsi_stmt': 1, 'gsi_next': 1, 'bb_seq': 2, 'gsi_start_bb': 7, 'initialize_flags_in_bb': 9, 'mark_block_for_update': 15, 'get_def_blocks_for': 1, 'set_def_block': 2, 'mark_def_interesting': 90, 'prepare_def_site_for': 6, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'VEC_gimple_vec_base_space': 2, 'VEC_gimple_vec_heap_reserve': 2, 'VEC_gimple_vec_base_quick_push': 2, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 4, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 10, 'mark_phi_for_rewrite': 23, 'set_livein_block': 2, 'mark_use_interesting': 1, 'next_readonly_imm_use': 4, 'prepare_use_sites_for': 3, 'prepare_names_to_update': 268, 'symbol_marked_for_renaming': 1, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 29, 'op_iter_next_use': 8, 'op_iter_next_def': 6, 'op_iter_init_def': 11, 'prepare_block_for_update': 96, 'find_def_blocks_for': 1, 'VEC_int_base_quick_push': 2, 'VEC_int_base_pop': 2, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 4, 'VEC_int_heap_safe_push': 11, 'prune_unused_phi_nodes': 332, 'gsi_after_labels': 16, 'insert_phi_nodes_for': 506, 'insert_updated_phi_nodes_for': 251, 'VEC_tree_base_pop': 2, 'rewrite_update_leave_block': 5, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 2, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 2, 'register_new_update_single': 6, 'register_new_update_set': 69, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 15, 'maybe_replace_use_in_debug_stmt': 2, 'gimple_ops': 1, 'gimple_set_op': 4, 'gimple_debug_bind_reset_value': 3, 'get_reaching_def': 4, 'maybe_replace_use': 2, 'gsi_one_before_end_p': 1, 'single_pred_p': 1, 'phi_nodes': 2, 'maybe_register_def': 75, 'rewrite_update_stmt': 165, 'VEC_gimple_base_iterate': 2, 'rewrite_update_phi_arguments': 67, 'rewrite_update_enter_block': 497, 'rewrite_leave_block': 6, 'rewrite_stmt': 30, 'rewrite_add_phi_arguments': 31, 'rewrite_enter_block': 167, 'rewrite_blocks': 7, 'def_blocks_free': 3, 'update_ssa': 1147, 'init_ssa_renamer': 13, 'op_iter_next_tree': 10, 'mark_def_sites': 16, 'mark_def_sites_block': 111, 'mark_def_site_blocks': 23, 'insert_phi_nodes': 41, 'rewrite_into_ssa': 220}, "PosixPath('602/gcse.bc')": {'can_assign_to_reg_without_clobbers_p': 14, 'dump_hash_table': 18, 'compute_can_copy': 1, 'is_too_expensive': 6, 'alloc_gcse_mem': 2, 'alloc_hash_table': 2, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'free_insn_expr_list_list': 2, 'bmp_iter_next': 2, 'clear_modify_mem_tables': 72, 'record_last_reg_set_info': 15, 'canon_list_insert': 7, 'record_last_mem_set_info': 12, 'gcse_constant_p': 15, 'want_to_gcse_p': 1, 'find_rtx_in_ldst': 3, 'mems_conflict_for_gcse_p': 6, 'load_killed_in_block_p': 66, 'oprs_unchanged_p': 41, 'insert_expr_in_table': 77, 'insert_set_in_table': 40, 'hash_scan_set': 42, 'hash_scan_insn': 5, 'record_last_set_info': 2, 'compute_hash_table_work': 134, 'compute_hash_table': 132, 'bmp_iter_and_compl_init': 84, 'bmp_iter_and_compl': 121, 'compute_transp': 567, 'compute_local_properties': 58, 'compute_transpout': 52, 'compute_code_hoist_vbeinout': 105, 'compute_code_hoist_data': 166, 'VEC_basic_block_base_iterate': 2, 'ei_next': 2, 'hoist_expr_reaches_here_p': 91, 'gcse_emit_move_after': 4, 'process_insert_insn': 2, 'single_succ_p': 1, 'single_succ_edge': 3, 'add_label_notes': 6, 'insert_insn_end_basic_block': 20, 'hoist_code': 184, 'free_code_hoist_mem': 21, 'free_modify_mem_tables': 4, 'free_gcse_mem': 6, 'one_code_hoisting_pass': 553, 'execute_rtl_hoist': 552, 'ldst_entry': 38, 'invalidate_any_buried_refs': 3, 'pre_ldst_expr_hash': 3, 'compute_ld_motion_mems': 25, 'print_ldst_list': 1, 'trim_ld_motion_mems': 24, 'compute_pre_data': 152, 'pre_delete': 60, 'update_ld_motion_stores': 19, 'pre_edge_insert': 72, 'pre_expr_reaches_here_p_work': 89, 'pre_expr_reaches_here_p': 1, 'pre_insert_copy_insn': 15, 'pre_insert_copies': 82, 'pre_gcse': 258, 'free_pre_mem': 8, 'free_ldst_mems': 1, 'one_pre_gcse_pass': 491, 'execute_rtl_pre': 503, 'find_used_regs': 15, 'local_cprop_find_used_regs': 2, 'cprop_jump': 40, 'try_replace_reg': 6, 'constprop_register': 7, 'do_local_cprop': 5, 'local_cprop_pass': 41, 'implicit_set_cond_p': 20, 'single_pred_p': 1, 'find_implicit_sets': 88, 'oprs_not_set_p': 22, 'lookup_set': 2, 'next_set': 1, 'find_avail_set': 15, 'cprop_insn': 47, 'mark_set': 5, 'mark_clobber': 4, 'mark_oprs_set': 5, 'find_bypass_set': 14, 'reg_killed_on_edge': 2, 'bypass_block': 305, 'bypass_conditional_jumps': 409, 'free_cprop_mem': 6, 'one_cprop_pass': 773, 'execute_rtl_cprop': 773}, "PosixPath('602/loop-unswitch.bc')": {'compare_and_jump_seq': 2, 'number_of_loops': 2, 'VEC_loop_p_base_iterate': 2, 'VEC_int_base_quick_push': 2, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 41, 'may_unswitch_on': 137, 'reversed_condition': 4, 'single_succ_p': 1, 'single_succ_edge': 3, 'single_pred_p': 1, 'single_pred_edge': 3, 'unswitch_loop': 169, 'unswitch_single_loop': 367, 'unswitch_loops': 61}, "PosixPath('602/c-opts.bc')": {'c_common_init_options': 29, 'c_common_handle_option': 99, 'defer_opt': 5, 'c_common_post_options': 329, 'check_deps_environment_vars': 35, 'sanitize_cpp_opts': 124, 'c_common_init': 35, 'push_command_line_include': 39, 'handle_OPT_d': 2, 'handle_deferred_opts': 6, 'cb_file_change': 2, 'finish_options': 32, 'c_common_parse_file': 8, 'c_common_finish': 9}, "PosixPath('602/ipa-inline.bc')": {'cgraph_clone_inlined_nodes': 120, 'inline_transform': 16, 'cgraph_mark_inline_edge': 92, 'cgraph_can_remove_if_no_direct_calls_p': 4, 'update_noncloned_frequencies': 14, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 2, 'likely_eliminated_by_inlining_p': 11, 'gsi_next': 1, 'estimate_function_body_sizes': 116, 'compute_inline_parameters': 152, 'inline_indirect_intraprocedural_analysis': 3, 'analyze_function': 1, 'VEC_ipa_node_params_t_base_space': 2, 'VEC_ipa_node_params_t_heap_reserve_exact': 2, 'VEC_ipa_node_params_t_heap_safe_grow': 4, 'VEC_ipa_node_params_t_heap_safe_grow_cleared': 4, 'ipa_check_create_node_params': 3, 'VEC_ipa_edge_args_t_base_space': 2, 'VEC_ipa_edge_args_t_gc_reserve_exact': 2, 'VEC_ipa_edge_args_t_gc_safe_grow': 4, 'VEC_ipa_edge_args_t_gc_safe_grow_cleared': 4, 'ipa_check_create_edge_args': 3, 'inline_generate_summary': 13, 'cgraph_estimate_size_after_inlining': 3, 'cgraph_estimate_time_after_inlining': 3, 'cgraph_mark_inline': 10, 'cgraph_recursive_inlining_p': 6, 'leaf_node_p': 5, 'cgraph_only_called_directly_p': 2, 'cgraph_estimate_growth': 20, 'cgraph_check_inline_limits': 43, 'cgraph_default_inline_p': 16, 'cgraph_decide_inlining_incrementally': 98, 'try_inline': 14, 'cgraph_set_inline_failed': 4, 'cgraph_edge_badness': 46, 'compute_max_insns': 2, 'gimple_filename': 1, 'gimple_lineno': 1, 'lookup_recursive_calls': 16, 'cgraph_decide_recursive_inlining': 57, 'VEC_cgraph_edge_p_base_pop': 2, 'add_new_edges_to_heap': 6, 'update_caller_keys': 35, 'update_callee_keys': 6, 'cgraph_decide_inlining_of_small_functions': 240, 'cgraph_decide_inlining': 466, 'cgraph_early_inlining': 10}, "PosixPath('602/lto-streamer-out.bc')": {'eq_string_slot_node': 6, 'create_output_block': 3, 'destroy_output_block': 2, 'VEC_bitpack_word_t_base_iterate': 2, 'lto_output_bitpack': 5, 'tree_is_indexable': 1, 'output_type_ref': 2, 'lto_stream_as_builtin_p': 4, 'output_string_with_length': 18, 'lto_output_builtin_tree': 3, 'output_identifier': 2, 'lto_output_tree_header': 8, 'pack_ts_base_value_fields': 1, 'pack_ts_real_cst_value_fields': 7, 'pack_ts_fixed_cst_value_fields': 2, 'pack_ts_decl_common_value_fields': 2, 'pack_ts_decl_with_vis_value_fields': 2, 'pack_ts_type_value_fields': 2, 'pack_value_fields': 105, 'lto_output_location': 15, 'tree_operand_length': 3, 'VEC_tree_base_iterate': 2, 'lto_output_chain': 1, 'lto_output_tree_ref': 13, 'lto_output_tree': 416, 'produce_asm': 87, 'csi_end_p': 1, 'output_alias_pair_p': 3, 'output_unreferenced_globals': 17, 'lto_tree_ref_encoder_size': 1, 'write_global_stream': 9, 'lto_output_decl_state_streams': 9, 'lto_out_decl_state_written_size': 1, 'write_global_references': 13, 'lto_output_decl_state_refs': 27, 'write_symbol_vec': 67, 'write_symbols_of_kind': 2, 'produce_asm_for_decls': 111, 'output_ssa_names': 7, 'VEC_eh_region_base_iterate': 2, 'output_eh_region': 9, 'VEC_eh_landing_pad_base_iterate': 2, 'output_eh_lp': 2, 'VEC_uchar_base_iterate': 2, 'output_eh_regions': 58, 'bb_seq': 2, 'gsi_start_bb': 7, 'phi_nodes': 2, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 2, 'output_gimple_stmt': 9, 'gsi_next': 1, 'output_phi': 4, 'output_bb': 72, 'ei_next': 2, 'output_cfg': 15, 'output_function': 120, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_heap_safe_push': 10, 'copy_function': 49, 'lto_output': 159}, "PosixPath('602/incpath.bc')": {'add_cpp_dir_path': 2, 'add_path': 27, 'add_env_var_paths': 5, 'add_standard_paths': 99, 'add_sysroot_to_chain': 5, 'remove_duplicates': 161, 'register_include_chains': 120}, "PosixPath('602/predict.bc')": {'compute_function_frequency': 16, 'maybe_hot_count_p': 10, 'maybe_hot_frequency_p': 5, 'maybe_hot_bb_p': 5, 'cgraph_maybe_hot_edge_p': 14, 'maybe_hot_edge_p': 11, 'probably_never_executed_bb_p': 1, 'loop_outer': 3, 'optimize_loop_nest_for_speed_p': 3, 'predictable_edge_p': 7, 'rtl_predicted_by_p': 6, 'gimple_predicted_by_p': 3, 'probability_reliable_p': 1, 'br_prob_note_reliable_p': 2, 'rtl_predict_edge': 1, 'gimple_predict_edge': 33, 'remove_predictions_associated_with_edge': 4, 'invert_br_probabilities': 5, 'can_predict_insn_p': 1, 'bb_estimate_probability_locally': 25, 'ei_next': 2, 'set_even_probabilities': 22, 'dump_prediction': 27, 'single_succ_p': 1, 'single_succ_edge': 3, 'combine_predictions_for_insn': 57, 'guess_outgoing_edge_probabilities': 81, 'gimple_ops': 1, 'gimple_op': 2, 'return_prediction': 2, 'predict_paths_for_bb': 19, 'apply_return_prediction': 59, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gimple_call_fndecl': 2, 'gsi_next': 1, 'tree_bb_level_predictions': 141, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 29, 'VEC_edge_base_iterate': 2, 'predict_loops': 164, 'expr_expected_value_1': 7, 'expr_expected_value': 9, 'tree_predict_by_opcode': 34, 'tree_estimate_probability_bb': 310, 'combine_predictions_for_bb': 57, 'counts_to_freqs': 10, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'propagate_freq': 243, 'estimate_loops_at_level': 2, 'estimate_loops': 6, 'choose_function_section': 9, 'estimate_bb_frequencies': 100, 'tree_estimate_probability': 767, 'expensive_function_p': 23, 'strip_predict_hints': 26, 'tree_estimate_probability_driver': 1}, "PosixPath('602/tree-profile.bc')": {'tree_init_ic_make_global_vars': 10, 'prepare_instrumented_value': 2, 'gsi_stmt': 1, 'add_abnormal_goto_call_edges': 1, 'tree_gen_ior_profiler': 1, 'tree_gen_average_profiler': 1, 'tree_gen_ic_profiler': 1, 'tree_gen_one_value_profiler': 1, 'tree_gen_pow2_profiler': 1, 'tree_gen_interval_profiler': 1, 'tree_init_edge_profiler': 6, 'bb_seq': 2, 'gsi_start_bb': 7, 'ei_next': 2, 'tree_gen_ic_func_profiler': 28, 'tree_profiling': 57}, "PosixPath('602/real.bc')": {'do_divide': 37, 'real_to_hexadecimal': 15, 'get_zero': 1, 'get_canonical_qnan': 1, 'sticky_rshift_significand': 2, 'get_inf': 1, 'normalize': 2, 'do_add': 12, 'do_multiply': 23, 'lshift_significand_1': 1, 'div_significands': 21, 'clear_significand_below': 1, 'do_fix_trunc': 1, 'real_arithmetic': 2, 'real_ldexp': 2, 'rtd_divmod': 1, 'round_for_format': 34, 'real_convert': 1, 'times_pten': 1, 'real_from_integer': 48, 'exact_real_inverse': 17, 'real_can_shorten_arithmetic': 285, 'real_to_integer': 2, 'rshift_significand': 2, 'real_to_integer2': 9, 'real_to_decimal_for_mode': 55, 'get_canonical_snan': 1, 'real_from_string': 34, 'real_inf': 1, 'real_nan': 18, 'real_maxval': 4, 'real_2expN': 3, 'exact_real_truncate': 4, 'real_to_target_fmt': 4, 'significand_size': 6, 'real_sqrt': 11, 'real_powi': 4, 'real_floor': 2, 'real_ceil': 2, 'get_max_float': 3, 'decode_ieee_half': 23, 'encode_ieee_half': 10, 'decode_vax_g': 5, 'encode_vax_g': 4, 'decode_vax_d': 5, 'encode_vax_d': 4, 'decode_vax_f': 3, 'encode_vax_f': 2, 'decode_ieee_quad': 52, 'encode_ieee_quad': 40, 'decode_ieee_double': 25, 'encode_ieee_double': 12, 'decode_ibm_extended': 17, 'encode_ibm_extended': 29, 'decode_ieee_extended': 28, 'encode_ieee_extended': 16, 'decode_ieee_extended_motorola': 18, 'encode_ieee_extended_motorola': 13, 'decode_ieee_single': 23, 'encode_ieee_single': 10}, "PosixPath('602/dwarf2asm.bc')": {'dw2_assemble_integer': 2, 'dw2_asm_output_data_raw': 3, 'dw2_asm_output_nstring': 10, 'dw2_force_const_mem': 7, 'dw2_output_indirect_constant_1': 10}, "PosixPath('602/hooks.bc')": {}, "PosixPath('602/matrix-reorg.bc')": {'analyze_transpose': 56, 'check_allocation_function': 114, 'analyze_accesses_for_call_stmt': 55, 'first_imm_use_on_stmt': 3, 'next_imm_use_on_stmt': 4, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gimple_ops': 1, 'may_flatten_matrices_1': 11, 'gsi_next': 1, 'may_flatten_matrices': 25, 'analyze_matrix_decl': 21, 'find_matrices_decl': 30, 'mark_min_matrix_escape_level': 2, 'gimple_call_fndecl': 2, 'collect_data_for_malloc_call': 6, 'add_allocation_site': 37, 'analyze_matrix_allocation_site': 74, 'update_type_size': 24, 'end_readonly_imm_use_p': 2, 'first_readonly_imm_use': 4, 'ssa_accessed_in_tree': 6, 'ssa_accessed_in_assign_rhs': 3, 'VEC_access_site_info_p_base_space': 2, 'VEC_access_site_info_p_heap_reserve': 4, 'VEC_access_site_info_p_base_quick_push': 2, 'VEC_access_site_info_p_heap_safe_push': 10, 'record_access_alloc_site_info': 47, 'next_readonly_imm_use': 4, 'analyze_matrix_accesses': 559, 'find_sites_in_func': 35, 'record_all_accesses_in_func': 29, 'dump_matrix_reorg_analysis': 3, 'VEC_access_site_info_p_base_iterate': 2, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_next_tree': 10, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'move_use_after_head': 6, 'gimple_vuse_op': 2, 'link_use_stmts_after': 46, 'first_imm_use_stmt': 14, 'gimple_set_op': 2, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 8, 'next_imm_use_stmt': 6, 'transform_access_sites': 219, 'sort_dim_hot_level': 14, 'check_var_notmodified_p': 19, 'transform_allocation_sites': 277, 'can_calculate_expr_before_stmt': 5, 'matrix_reorg': 140}, "PosixPath('602/tree-ssa-dce.bc')": {'first_imm_use_on_stmt': 3, 'next_imm_use_on_stmt': 4, 'gsi_start': 9, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'move_use_after_head': 6, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'gimple_vuse_op': 2, 'link_use_stmts_after': 46, 'first_imm_use_stmt': 14, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 8, 'next_imm_use_stmt': 6, 'mark_virtual_phi_result_for_renaming': 19, 'tree_dce_init': 8, 'single_succ_p': 1, 'single_succ_edge': 3, 'single_succ': 1, 'find_pdom': 5, 'set_control_dependence_map_bit': 12, 'find_control_dependence': 61, 'find_all_control_dependences': 61, 'gsi_stmt': 1, 'gsi_next': 1, 'bb_seq': 2, 'gsi_start_bb': 4, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 2, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 6, 'mark_stmt_necessary': 3, 'gimple_ops': 1, 'mark_stmt_if_obviously_necessary': 4, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'mark_control_dependent_edges_necessary': 108, 'ei_next': 2, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 46, 'find_obviously_necessary_stmts': 196, 'VEC_gimple_base_pop': 2, 'mark_operand_necessary': 13, 'op_iter_next_tree': 10, 'may_be_aliased': 7, 'ref_may_be_aliased': 8, 'mark_all_reaching_defs_necessary_1': 5, 'mark_all_reaching_defs_necessary': 2, 'gimple_call_fndecl': 2, 'mark_aliased_reaching_defs_necessary_1': 31, 'mark_aliased_reaching_defs_necessary': 5, 'propagate_necessity': 177, 'VEC_basic_block_base_pop': 2, 'gsi_last_bb': 4, 'gsi_prev': 1, 'phi_nodes': 2, 'forward_edge_to_pdom': 67, 'remove_dead_stmt': 153, 'gimple_set_op': 2, 'gimple_call_set_lhs': 2, 'remove_dead_phis': 74, 'eliminate_unnecessary_stmts': 631, 'tree_dce_done': 43, 'perform_tree_ssa_dce': 1246}, "PosixPath('602/postreload.bc')": {'reload_cse_simplify_set': 6, 'reload_cse_noop_set_p': 2, 'reload_cse_simplify_operands': 489, 'reload_cse_simplify': 6, 'reload_cse_regs_1': 8, 'reload_combine_note_use': 49, 'reload_combine_note_store': 23, 'reload_combine': 210, 'move2add_note_store': 209, 'reload_cse_move2add': 195, 'reload_cse_regs': 436}, "PosixPath('602/cselib.bc')": {'cselib_record_sets': 182, 'references_value_p': 3, 'preserve_only_constants': 24, 'cselib_reset_table': 82, 'cselib_preserve_cfa_base_value': 1, 'unchain_one_elt_list': 2, 'unchain_one_elt_loc_list': 2, 'cselib_invalidate_regno': 55, 'promote_debug_loc': 7, 'new_cselib_val': 20, 'new_elt_loc_list': 11, 'new_elt_list': 2, 'add_mem_for_addr': 14, 'cselib_subst_to_values': 24, 'cselib_hash_rtx': 20, 'cselib_lookup_mem': 13, 'cselib_lookup': 81, 'cselib_invalidate_mem': 51, 'unchain_one_value': 1, 'discard_useless_values': 11, 'discard_useless_locs': 32, 'remove_useless_values': 17, 'cselib_reg_set_mode': 5, 'rtx_equal_for_cselib_p': 26, 'cselib_expand_value_rtx_1': 75, 'expand_loc': 28, 'cselib_expand_value_rtx': 2, 'cselib_expand_value_rtx_cb': 7, 'cselib_dummy_expand_value_rtx_cb': 7, 'cselib_invalidate_rtx': 3, 'cselib_record_set': 47, 'cselib_process_insn': 244, 'entry_and_rtx_equal_p': 4, 'cselib_init': 2, 'cselib_finish': 6, 'dump_cselib_val': 2}, "PosixPath('602/sel-sched-dump.bc')": {'replace_str_in_buf': 2, 'sel_prepare_string_for_dot_label': 2, 'dump_insn_rtx_1': 20, 'dump_vinsn_1': 15, 'dump_expr_1': 41, 'dump_insn_1': 10, '_list_iter_start': 4, '_list_iter_next': 3, 'dump_av_set': 7, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'dump_lv_set': 36, 'dump_blist': 3, 'VEC_rtx_base_iterate': 2, 'dump_insn_vector': 6, 'sel_print_insn': 6, 'ei_next': 2, 'has_preds_in_current_region_p': 14, 'sel_dump_cfg_edge': 14, 'sel_dump_cfg_2': 215, 'sel_dump_cfg_1': 190, 'sel_debug_cfg_1': 196, 'debug_mem_addr_value': 2}, "PosixPath('602/c-errors.bc')": {'pedwarn_c99': 1, 'pedwarn_c90': 1}, "PosixPath('602/c-lex.bc')": {'interpret_integer': 87, 'lex_string': 113, 'get_fileinfo': 7, 'cb_undef': 9, 'cb_define': 6, 'cb_def_pragma': 2, 'cb_ident': 1, 'cb_line_change': 2, 'init_c_lex': 32, 'dump_one_header': 3, 'dump_time_statistics': 2, 'update_header_times': 1, 'fe_file_change': 40, 'narrowest_unsigned_type': 2, 'narrowest_signed_type': 2, 'interpret_fixed': 16, 'interpret_float': 131, 'lex_charconst': 8, 'c_lex_with_flags': 159}, "PosixPath('602/df-byte-scan.bc')": {'df_compute_accessed_bytes_extract': 24, 'df_compute_accessed_bytes_strict_low_part': 16, 'df_compute_accessed_bytes_subreg': 19, 'df_compute_accessed_bytes': 49}, "PosixPath('602/tree-dump.bc')": {'dump_register': 35, 'queue': 20, 'dump_maybe_newline': 2, 'queue_and_dump_index': 1, 'dump_string': 2, 'dump_string_field': 2, 'dump_flag': 2, 'VEC_tree_base_iterate': 2, 'tsi_next': 1, 'dump_real': 1, 'dump_fixed': 1, 'init_call_expr_arg_iterator': 3, 'next_call_expr_arg': 4, 'first_call_expr_arg': 3, 'dequeue_and_dump': 249, 'dump_node': 183, 'get_dump_file_name': 12, 'dump_enabled_p': 2, 'dump_enable_all': 19, 'dump_switch_p_1': 37}, "PosixPath('602/i386.bc')": {'function_arg_advance_32': 32, 'ix86_compute_frame_layout': 349, 'ix86_expand_prologue': 479, 'ix86_expand_epilogue': 317, 'assign_386_stack_local': 20, 'ix86_expand_int_addcc': 31, 'ix86_split_long_move': 901, 'ix86_vectorize_builtin_vec_perm_ok': 30, 'expand_vec_perm_interleave2': 333, 'ix86_target_string': 27, 'ix86_expand_vec_perm_builtin': 290, 'ix86_can_inline_p': 62, 'ix86_function_specific_print': 7, 'ix86_function_specific_restore': 61, 'ix86_function_specific_save': 85, 'ix86_valid_target_attribute_inner_p': 77, 'ix86_get_builtin_type': 4, 'ix86_get_builtin_func_type': 8, 'ix86_add_new_builtins': 11, 'ix86_frame_pointer_required': 4, 'ix86_secondary_reload': 2, 'ix86_function_regparm': 2, 'ix86_static_chain': 4, 'ix86_trampoline_init': 2, 'find_drap_reg': 2, 'ix86_get_drap_rtx': 2, 'ix86_minimum_incoming_stack_boundary': 2, 'type_natural_mode': 32, 'ix86_function_sseregparm': 1, 'function_value_32': 6, 'ix86_function_value_1': 14, 'ix86_function_value': 2, 'return_in_memory_32': 1, 'ix86_return_in_memory': 1, 'ix86_struct_value_rtx': 21, 'ix86_canonical_va_list_type': 3, 'ei_next': 2, 'ix86_pad_returns': 155, 'symbolic_reference_mentioned_p': 1, 'min_insn_size': 4, 'ix86_avoid_jump_mispredicts': 11, 'ix86_reorg': 143, 'ix86_decompose_address': 162, 'ix86_address_cost': 96, 'standard_80387_constant_p': 12, 'ix86_rtx_costs': 114, 'ix86_in_large_data_p': 4, 'ix86_encode_section_info': 9, 'legitimate_pic_address_disp_p': 14, 'legitimate_constant_p': 12, 'ix86_legitimate_address_p': 88, 'ix86_pic_register_p': 7, 'ix86_delegitimize_address': 25, 'ix86_tls_module_base': 1, 'legitimize_pic_address': 23, 'ix86_legitimize_address': 85, 'ix86_mangle_type': 2, 'recog_memoized': 3, 'expand_vselect': 2, 'expand_vec_perm_blend': 78, 'expand_vec_perm_vpermil': 16, 'expand_vec_perm_pshufb': 27, 'expand_vec_perm_1': 160, 'get_mode_wider_vector': 8, 'expand_vec_perm_broadcast_1': 11, 'ix86_expand_vector_init_duplicate': 21, 'ix86_expand_vector_extract': 4, 'ix86_expand_vector_set': 28, 'ix86_expand_vector_init_one_nonzero': 4, 'ix86_expand_vector_init_one_var': 1, 'ix86_expand_vector_init_interleave': 4, 'ix86_expand_vector_init': 6, 'ix86_expand_vector_init_general': 59, 'ix86_expand_vector_init_concat': 18, 'ix86_expand_vec_init_builtin': 5, 'ix86_expand_vec_ext_builtin': 9, 'ix86_expand_vec_set_builtin': 9, 'extract_vec_perm_cst': 1, 'expand_vec_perm_pshuflw_pshufhw': 32, 'expand_vec_perm_palignr': 11, 'expand_vec_perm_broadcast': 7, 'expand_vec_perm_pshufb2': 22, 'expand_vec_perm_even_odd_1': 12, 'expand_vec_perm_even_odd': 2, 'ix86_expand_vec_perm_builtin_1': 610, 'ix86_expand_special_args_builtin': 132, 'ix86_expand_sse_ptest': 31, 'ix86_expand_unop_vec_merge_builtin': 19, 'ix86_expand_binop_builtin': 38, 'ix86_expand_sse_compare': 51, 'ix86_expand_args_builtin': 283, 'ix86_expand_sse_comi': 36, 'ix86_expand_sse_pcmpestr': 82, 'ix86_expand_sse_pcmpistr': 56, 'ix86_expand_multi_arg_builtin': 158, 'ix86_expand_builtin': 1620, 'ix86_init_builtin_types': 2, 'def_builtin': 15, 'def_builtin_const': 1, 'ix86_init_mmx_sse_builtins': 225, 'ix86_init_builtins': 290, 'ix86_comp_type_attributes': 2, 'ix86_handle_struct_attribute': 3, 'ix86_vectorize_builtin_vec_perm': 8, 'ix86_builtin_vectorized_function': 19, 'ix86_agi_dependent': 2, 'ix86_flags_dependent': 13, 'ix86_adjust_cost': 18, 'ix86_veclibabi_svml': 40, 'ix86_init_machine_status': 7, 'override_options': 513, 'ix86_function_ok_for_sibcall': 8, 'ix86_code_end': 13, 'output_set_got': 16, 'x86_output_mi_thunk': 18, 'ix86_valid_target_attribute_tree': 53, 'ix86_valid_target_attribute_p': 2, 'ix86_conditional_register_usage': 85, 'x86_output_aligned_bss': 2, 'init_cumulative_args': 52, 'function_arg_advance': 73, 'function_arg_32': 25, 'function_arg': 29, 'contains_aligned_value_p': 23, 'ix86_function_arg_boundary': 3, 'ix86_sol10_return_in_memory': 1, 'ix86_check_movabs': 7, 'ix86_select_alt_pic_regnum': 1, 'ix86_save_reg': 3, 'ix86_can_use_return_insn_p': 12, 'ix86_initial_elimination_offset': 3, 'gen_push': 7, 'ix86_add_queued_cfa_restore_notes': 3, 'pro_epilogue_adjust_stack': 10, 'ix86_eax_live_at_start_p': 1, 'ix86_emit_restore_regs_using_mov': 3, 'ix86_emit_leave': 12, 'ix86_emit_restore_reg_using_pop': 19, 'legitimate_pic_operand_p': 12, 'print_reg': 50, 'get_some_local_dynamic_name_1': 6, 'get_some_local_dynamic_name': 4, 'output_pic_addr_const': 28, 'print_operand': 47, 'print_operand_address': 49, 'output_addr_const_extra': 4, 'split_di': 4, 'split_ti': 4, 'output_387_binary_op': 151, 'ix86_mode_needed': 2, 'output_fix_trunc': 6, 'output_fp_compare': 22, 'ix86_expand_clear': 3, 'ix86_expand_move': 21, 'ix86_expand_vector_move_misalign': 15, 'ix86_expand_vector_move': 31, 'ix86_swap_binary_operands_p': 4, 'ix86_fixup_binary_operands': 9, 'ix86_expand_binary_operator': 2, 'ix86_binary_operator_ok': 4, 'ix86_expand_unary_operator': 2, 'distance_non_agu_define': 56, 'distance_agu_use': 115, 'ix86_lea_for_add_ok': 187, 'ix86_dep_by_shift_count_body': 10, 'ix86_unary_operator_ok': 5, 'ix86_vec_interleave_v2df_operator_ok': 8, 'ix86_split_convert_uns_si_sse': 13, 'ix86_expand_fp_absneg_operator': 6, 'ix86_expand_copysign': 4, 'ix86_split_copysign_const': 4, 'ix86_split_copysign_var': 20, 'ix86_match_ccmode': 6, 'ix86_cc_mode': 5, 'ix86_prepare_fp_compare_args': 6, 'ix86_expand_fp_compare': 2, 'ix86_expand_branch': 85, 'ix86_expand_carry_flag_compare': 10, 'ix86_expand_int_movcc': 78, 'ix86_expand_sse_movcc': 1, 'ix86_expand_fp_movcc': 20, 'ix86_expand_fp_vcond': 12, 'ix86_expand_int_vcond': 15, 'ix86_expand_sse_unpack': 5, 'ix86_expand_sse4_unpack': 4, 'ix86_split_to_parts': 61, 'ix86_expand_ashl_const': 2, 'ix86_split_ashl': 37, 'ix86_split_ashr': 22, 'ix86_split_lshr': 17, 'decide_alg': 12, 'expand_constant_movmem_prologue': 4, 'expand_set_or_movmem_via_loop': 7, 'scale_counter': 2, 'expand_movmem_via_rep_mov': 11, 'expand_movmem_epilogue': 2, 'ix86_expand_movmem': 41, 'promote_duplicated_reg': 9, 'expand_constant_setmem_prologue': 6, 'expand_setmem_via_rep_stos': 7, 'expand_setmem_epilogue': 2, 'ix86_expand_setmem': 35, 'ix86_expand_strlensi_unroll_1': 2, 'ix86_expand_strlen': 3, 'ix86_expand_call': 28, 'satisfies_constraint_K': 2, 'memory_address_length': 83, 'ix86_attr_length_immediate_default': 3, 'ix86_attr_length_address_default': 9, 'ix86_constant_alignment': 38, 'ix86_data_alignment': 102, 'ix86_local_alignment': 106, 'ix86_minimum_alignment': 8, 'avx_vpermilp_parallel': 18, 'avx_vperm2f128_parallel': 20, 'ix86_force_to_memory': 21, 'ix86_preferred_reload_class': 5, 'inline_memory_move_cost': 19, 'ix86_register_move_cost': 2, 'ix86_hard_regno_mode_ok': 4, 'x86_order_regs_for_local_alloc': 11, 'x86_field_alignment': 1, 'x86_extended_QIreg_mentioned_p': 2, 'extended_reg_mentioned_1': 2, 'x86_extended_reg_mentioned_p': 1, 'x86_emit_floatuns': 4, 'output_387_reg_move': 8, 'ix86_emit_i387_log1p': 2, 'ix86_emit_swsqrtsf': 2, 'ix86_expand_lround': 7, 'ix86_expand_rint': 1, 'ix86_expand_floorceildf_32': 4, 'ix86_expand_floorceil': 15, 'ix86_expand_rounddf_32': 1, 'ix86_expand_trunc': 14, 'ix86_expand_truncdf_32': 1, 'ix86_expand_round': 4, 'ix86_expand_vec_extract_even_odd': 27, 'gt_ggc_mx_stack_local_entry': 2, 'gt_pch_nx_stack_local_entry': 2}, "PosixPath('602/integrate.bc')": {'get_hard_reg_initial_val': 16, 'function_attribute_inlinable_p': 3, 'set_decl_origin_self': 15, 'set_block_origin_self': 4, 'set_decl_abstract_flags': 16, 'set_block_abstract_flags': 10, 'get_hard_reg_initial_reg': 4, 'has_hard_reg_initial_val': 10, 'emit_initial_value_sets': 6, 'allocate_initial_values': 64, 'gt_ggc_mx_initial_value_struct': 9, 'gt_pch_p_20initial_value_struct': 4, 'gt_pch_nx_initial_value_struct': 9}, "PosixPath('602/tree-ssa-forwprop.bc')": {'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gimple_ops': 1, 'gsi_next': 1, 'has_single_use': 4, 'end_imm_use_stmt_p': 2, 'clear_and_done_ssa_iter': 2, 'op_iter_next_use': 8, 'op_iter_init_phiuse': 6, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'move_use_after_head': 6, 'gimple_def_ops': 2, 'gimple_vdef': 2, 'gimple_use_ops': 2, 'gimple_vuse': 2, 'op_iter_init': 27, 'op_iter_init_use': 34, 'gimple_vuse_op': 2, 'link_use_stmts_after': 44, 'first_imm_use_stmt': 14, 'gimple_set_op': 2, 'forward_propagate_addr_into_variable_array_index': 1, 'has_zero_uses': 1, 'next_imm_use_stmt': 6, 'forward_propagate_addr_expr': 191, 'simplify_not_neg_expr': 1, 'can_propagate_from': 6, 'forward_propagate_into_cond': 25, 'single_imm_use': 4, 'get_prop_dest_stmt': 16, 'forward_propagate_comparison': 105, 'simplify_bitwise_and': 2, 'gimple_switch_set_index': 2, 'simplify_gimple_switch': 10, 'forward_propagate_into_gimple_cond': 14, 'tree_ssa_forward_propagate_single_use_vars': 288}, "PosixPath('602/statistics.bc')": {'lookup_or_add_counter': 13, 'hash_statistics_eq': 6, 'curr_statistics_hash': 7, 'statistics_fini_pass_3': 1, 'statistics_fini_pass_2': 53, 'statistics_fini_pass_1': 18, 'statistics_fini_pass': 4, 'statistics_fini_1': 32, 'statistics_fini': 7, 'statistics_counter_event': 20, 'statistics_histogram_event': 16}, "PosixPath('602/host-ieee128.bc')": {'__host_to_ieee_128': 2, '__ieee_to_host_128': 2}, "PosixPath('602/host-ieee32.bc')": {}, "PosixPath('602/xexit.bc')": {}, "PosixPath('602/cpp_pch.bc')": {'cpp_save_state': 1, 'save_idents': 17, 'write_macdef': 20, 'write_defs': 15, 'cpp_valid_state': 60, 'collect_ht_nodes': 9, 'save_macros': 9, '_cpp_restore_pushed_macros': 35, 'cpp_string_eq': 6, 'hashmem': 2, 'cpp_string_hash': 4, 'count_defs': 16, 'cpp_write_pch_deps': 24, '_cpp_save_pushed_macros': 42, 'cpp_write_pch_state': 1, 'cpp_prepare_state': 2, 'cpp_read_state': 102}, "PosixPath('602/c-ppoutput.bc')": {'print_line': 9, 'maybe_print_line': 13, 'account_for_newlines': 5, 'scan_translation_unit_trad': 14, 'scan_translation_unit_directives_only': 1, 'dump_queued_macros': 10, 'do_line_change': 7, 'scan_translation_unit': 87, 'dump_macro': 1, 'preprocess_file': 122, 'cb_used_undef': 3, 'cb_used_define': 3, 'cb_define': 2, 'cb_include': 7, 'init_pp_output': 55, 'pp_dir_change': 1, 'pp_file_change': 21}, "PosixPath('602/builtins.bc')": {'expand_builtin_setjmp_setup': 2, 'gimplify_va_arg_expr': 29, 'fold_builtin_object_size': 12, 'is_builtin_fn': 2, 'get_object_alignment': 21, 'get_pointer_alignment': 12, 'c_strlen': 27, 'expand_builtin_setjmp_receiver': 3, 'c_readstr': 17, 'builtin_memset_read_str': 2, 'std_canonical_va_list_type': 10, 'build_va_arg_indirect_ref': 2, 'std_gimplify_va_arg_expr': 11, 'avoid_folding_inline_builtin': 3, 'fold_builtin_inf': 55, 'type_to_class': 2, 'fold_builtin_classify_type': 2, 'fold_builtin_0': 2, 'fold_builtin_constant_p': 17, 'c_getstr': 1, 'fold_builtin_nan': 2, 'init_const_call_expr_arg_iterator': 3, 'more_const_call_expr_args_p': 2, 'next_const_call_expr_arg': 4, 'builtin_mathfn_code': 12, 'integer_valued_real_p': 13, 'fold_builtin_bswap': 10, 'fold_builtin_bitop': 9, 'fold_builtin_signbit': 74, 'fold_builtin_significand': 19, 'fold_builtin_logb': 13, 'interclass_mathfn_icode': 3, 'build_string_literal': 3, 'fold_builtin_load_exponent': 35, 'fold_builtin_frexp': 8, 'fold_builtin_modf': 19, 'var_decl_component_p': 2, 'fold_builtin_memset': 10, 'fold_builtin_strchr': 6, 'fold_builtin_powi': 11, 'fold_builtin_unordered_cmp': 154, 'readonly_data_expr': 2, 'fold_builtin_strncmp': 1, 'fold_builtin_memchr': 4, 'rewrite_call_expr': 17, 'fold_builtin_sprintf_chk': 11, 'fold_builtin_snprintf_chk': 16, 'validate_arglist': 18, 'fold_builtin_fpclassify': 57, 'fold_builtin_varargs': 61, 'build_builtin_expect_predicate': 4, 'build_call_expr_loc': 13, 'fold_builtin_call_array': 6, 'fold_builtin_n': 518, 'fold_builtin_memory_op': 83, 'fold_builtin_fprintf': 1, 'fold_builtin_printf': 20, 'fold_builtin_interclass_mathfn': 47, 'fold_builtin_classify': 239, 'fold_fixed_mathfn': 7, 'init_call_expr_arg_iterator': 3, 'next_call_expr_arg': 4, 'first_call_expr_arg': 3, 'expand_builtin': 45, 'fold_call_expr': 6, 'build_function_call_expr': 3, 'gimple_ops': 1, 'gimple_op': 2, 'validate_gimple_arglist': 8, 'fold_builtin_next_arg': 4, 'gimple_rewrite_call_expr': 19, 'gimple_call_fndecl': 2, 'fold_call_stmt': 30, 'set_builtin_user_assembler_name': 3}, "PosixPath('602/insn-preds.bc')": {'any_fp_register_operand': 2, 'fp_register_operand': 2, 'register_and_not_any_fp_reg_operand': 2, 'register_and_not_fp_reg_operand': 2, 'mmx_reg_operand': 2, 'q_regs_operand_1': 2, 'q_regs_operand': 2, 'ext_register_operand_1': 2, 'ext_register_operand': 2, 'ax_reg_operand': 2, 'flags_reg_operand': 2, 'reg_not_xmm0_operand': 2, 'nonimm_not_xmm0_operand': 2, 'x86_64_zext_immediate_operand_1': 17, 'x86_64_zext_immediate_operand': 17, 'symbolic_operand_1': 11, 'symbolic_operand': 10, 'pic_symbolic_operand_1': 6, 'pic_symbolic_operand': 8, 'local_symbolic_operand_1': 15, 'local_symbolic_operand': 14, 'tls_symbolic_operand': 2, 'tp_or_register_operand': 2, 'register_no_elim_operand_1': 2, 'register_no_elim_operand': 2, 'call_register_no_elim_operand_1': 2, 'call_register_no_elim_operand': 2, 'index_register_operand_1': 6, 'index_register_operand': 6, 'const8_operand': 2, 'const128_operand': 2, 'const248_operand': 2, 'const_0_to_3_operand': 2, 'const_0_to_7_operand': 2, 'const_0_to_15_operand': 2, 'const_0_to_31_operand': 2, 'const_0_to_63_operand': 2, 'const_0_to_255_operand': 2, 'const_0_to_255_mul_8_operand': 2, 'const_1_to_31_operand': 2, 'const_1_to_63_operand': 2, 'const_2_to_3_operand': 2, 'const_4_to_5_operand': 2, 'const_4_to_7_operand': 2, 'const_6_to_7_operand': 2, 'const_8_to_11_operand': 2, 'const_12_to_15_operand': 2, 'const_pow2_1_to_2_operand': 2, 'const_pow2_1_to_8_operand': 2, 'const_pow2_1_to_128_operand': 2, 'const_pow2_1_to_32768_operand': 2, 'zero_extended_scalar_load_operand_1': 5, 'zero_extended_scalar_load_operand': 5, 'vector_all_ones_operand_1': 3, 'vector_all_ones_operand': 3, 'aligned_operand_1': 22, 'aligned_operand': 22, 'memory_displacement_operand_1': 2, 'memory_displacement_operand': 1, 'memory_displacement_only_operand_1': 5, 'memory_displacement_only_operand': 4, 'cmpxchg8b_pic_memory_operand_1': 7, 'cmpxchg8b_pic_memory_operand': 6, 'fcmov_comparison_operator_1': 2, 'fcmov_comparison_operator': 2, 'ix86_comparison_operator_1': 2, 'ix86_comparison_operator': 2, 'ix86_carry_flag_operator_1': 2, 'ix86_carry_flag_operator': 3, 'misaligned_operand': 2, 'emms_operation_1': 10, 'emms_operation': 12, 'vzeroall_operation_1': 6, 'vzeroall_operation': 8, 'vzeroupper_operation_1': 4, 'vzeroupper_operation': 6, 'avx_vbroadcast_operand_1': 2, 'avx_vbroadcast_operand': 4, 'satisfies_constraint_I': 2, 'satisfies_constraint_J': 2, 'satisfies_constraint_K': 2, 'satisfies_constraint_L': 2, 'satisfies_constraint_M': 2, 'satisfies_constraint_N': 2, 'satisfies_constraint_O': 2, 'constraint_satisfied_p': 8}, "PosixPath('602/c-dump.bc')": {'dump_stmt': 4, 'c_dump_tree': 2}, "PosixPath('602/rtl.bc')": {'rtx_equal_p_cb': 60, 'rtx_size': 2, 'rtx_alloc_stat': 1, 'shared_const_p': 6, 'copy_rtx': 13, 'rtx_equal_p': 23}, "PosixPath('602/loop-iv.bc')": {'iv_neg': 17, 'iv_analyze_biv': 112, 'iv_subreg': 53, 'iv_number_of_iterations': 1026, 'dump_iv_info': 29, 'check_iv_ref_table_size': 1, 'clear_iv_info': 9, 'iv_analysis_loop_init': 3, 'get_iv_value': 19, 'simple_reg_p': 1, 'iv_get_reaching_def': 42, 'iv_constant': 28, 'df_rd_get_bb_info': 3, 'latch_dominating_def': 27, 'get_biv_step_1': 27, 'get_biv_step': 2, 'record_biv': 4, 'iv_extend': 24, 'iv_add': 233, 'iv_mult': 8, 'iv_shift': 8, 'iv_analyze_expr': 1105, 'iv_analyze_op': 64, 'iv_analyze_def': 15, 'iv_analyze': 2, 'biv_p': 7, 'iv_analysis_done': 3, 'canon_condition': 12, 'implies_p': 66, 'altered_reg_used': 2, 'simplify_using_condition': 9, 'shorten_into_mode': 27, 'canonicalize_iv_subregs': 292, 'simple_rhs_p': 18, 'suitable_set_for_replacement': 20, 'replace_single_def_regs': 12, 'single_pred_p': 1, 'single_pred_edge': 3, 'mark_altered': 2, 'simplify_using_initial_values': 135, 'determine_max_iter': 42, 'check_simple_exit': 984, 'ei_next': 2, 'find_simple_exit': 955, 'get_simple_loop_desc': 30}, "PosixPath('602/xcoffout.bc')": {}, "PosixPath('602/graphite-scop-detection.bc')": {}, "PosixPath('602/tree-ssa-phiopt.bc')": {'gsi_start': 9, 'single_pred_p': 1, 'single_pred_edge': 3, 'single_pred': 1, 'blocks_in_phiopt_order': 50, 'bb_seq': 2, 'gsi_start_bb': 4, 'gsi_stmt': 1, 'gsi_next': 1, 'gsi_after_labels': 16, 'gsi_next_nondebug': 9, 'empty_block_p': 13, 'gimple_ops': 1, 'add_or_mark_expr': 24, 'nt_init_block': 7, 'name_to_bb_eq': 4, 'get_non_trapping': 29, 'single_succ_p': 1, 'get_var_ann': 2, 'gimple_set_op': 2, 'gimple_assign_set_lhs': 2, 'gsi_last_bb': 4, 'cond_store_replacement': 37, 'phi_nodes': 2, 'gimple_seq_singleton_p': 2, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 15, 'replace_phi_edge_with_variable': 182, 'conditional_replacement': 21, 'single_succ_edge': 3, 'value_replacement': 80, 'abs_replacement': 103, 'gsi_prev': 1, 'gsi_prev_nondebug': 9, 'gsi_last_nondebug_bb': 13, 'minmax_replacement': 174, 'tree_ssa_phiopt_worker': 540}, "PosixPath('602/omp-low.bc')": {'expand_omp_sections': 251, 'extract_omp_for_data': 253, 'gsi_start': 9, 'scan_omp_task': 45, 'new_omp_context': 58, 'create_omp_child_function': 42, 'create_task_copyfn': 264, 'lower_rec_input_clauses': 109, 'lower_omp_single_copy': 67, 'find_omp_clause': 2, 'copy_var_decl': 12, 'dump_omp_region': 11, 'new_omp_region': 19, 'omp_reduction_init': 210, 'bb_seq': 2, 'gsi_last_bb': 4, 'gsi_stmt': 1, 'build_omp_regions_1': 15, 'gsi_prev': 1, 'gimple_omp_subcode': 1, 'ei_next': 2, 'remove_exit_barrier': 70, 'remove_exit_barriers': 74, 'single_succ_p': 1, 'single_succ_edge': 3, 'gimple_omp_for_index': 2, 'gimple_omp_for_initial': 2, 'gimple_omp_for_cond': 2, 'gimple_omp_for_final': 2, 'gimple_omp_for_incr': 2, 'workshare_safe_to_combine_p': 9, 'get_ws_args_for': 8, 'determine_parallel_type': 55, 'gsi_start_bb': 4, 'gimple_ops': 1, 'gsi_next': 1, 'gimple_set_op': 2, 'list2chain': 5, 'gimple_call_fndecl': 2, 'optimize_omp_library_calls': 36, 'gimple_build_cond_empty': 3, 'expand_parallel_call': 131, 'expand_task_call': 29, 'expand_omp_taskreg': 297, 'expand_omp_for_static_nochunk': 170, 'single_pred_p': 1, 'single_pred_edge': 3, 'expand_omp_for_static_chunk': 260, 'phi_nodes': 2, 'delink_imm_use': 5, 'link_imm_use_to_list': 6, 'link_imm_use': 8, 'set_ssa_use_from_ptr': 15, 'expand_omp_for_generic': 380, 'expand_omp_for': 554, 'VEC_tree_base_quick_push': 2, 'expand_omp_single': 30, 'expand_omp_synch': 26, 'gsi_after_labels': 16, 'expand_omp_atomic_fetch_op': 73, 'gimple_seq_first_stmt': 1, 'expand_omp_atomic_pipeline': 66, 'expand_omp_atomic_mutex': 21, 'expand_omp_atomic': 196, 'expand_omp': 704, 'diagnose_sb_2': 8, 'diagnose_sb_1': 7, 'diagnose_omp_structured_block_errors': 4, 'scan_omp_1_op': 1, 'check_omp_nesting_restrictions': 15, 'is_global_var': 2, 'omp_copy_decl': 5, 'create_omp_child_function_name': 17, 'omp_copy_decl_2': 3, 'omp_copy_decl_1': 5, 'install_var_local': 4, 'use_pointer_for_field': 13, 'install_var_field': 26, 'scan_omp_op': 4, 'fixup_remapped_decl': 14, 'fixup_child_record_type': 5, 'gimple_omp_for_index_ptr': 2, 'gimple_omp_for_initial_ptr': 2, 'gimple_omp_for_final_ptr': 2, 'gimple_omp_for_incr_ptr': 2, 'scan_omp': 7, 'scan_sharing_clauses': 67, 'scan_omp_parallel': 10, 'scan_omp_for': 3, 'scan_omp_single': 1, 'scan_omp_1_stmt': 68, 'task_copyfn_remap_type': 3, 'task_copyfn_copy_decl': 1, 'build_receiver_ref': 2, 'build_outer_var_ref': 6, 'lookup_decl_in_outer_ctx': 4, 'lookup_sfield': 2, 'build_sender_ref': 3, 'lower_send_clauses': 12, 'lower_send_shared_vars': 4, 'check_combined_parallel': 2, 'lower_copyprivate_clauses': 6, 'lower_omp_regimplify_p': 8, 'lower_lastprivate_clauses': 26, 'lower_reduction_clauses': 21, 'lower_omp_critical': 35, 'lower_omp': 581, 'finalize_task_copyfn': 13, 'delete_omp_context': 56, 'execute_lower_omp': 4, 'build_omp_regions': 1, 'execute_expand_omp': 1}, "PosixPath('602/c-gimplify.bc')": {'c_genericize': 4, 'VEC_gimple_base_iterate': 2, 'add_block_to_enclosing': 1, 'c_build_bind_expr': 5, 'c_gimplify_expr': 9}, "PosixPath('602/tree.bc')": {'decl_value_expr_insert': 5, 'build_int_cst_wide': 26, 'build_int_cst_wide_type': 2, 'build_fn_decl': 22, 'build_type_attribute_qual_variant': 26, 'free_lang_data': 428, 'decl_debug_expr_insert': 5, 'build_index_type': 27, 'build_function_type': 20, 'tree_code_size': 3, 'make_node_stat': 76, 'initialize_tree_contains_struct': 795, 'cl_option_hash_hash': 2, 'int_cst_hash_eq': 8, 'int_cst_hash_hash': 6, 'is_attribute_with_length_p': 10, 'lookup_attribute': 1, 'init_const_call_expr_arg_iterator': 3, 'next_const_call_expr_arg': 4, 'first_const_call_expr_arg': 3, 'simple_cst_equal': 95, 'attribute_list_contained': 12, 'type_list_equal': 8, 'tree_int_cst_equal': 8, 'type_hash_eq': 51, 'init_ttree': 704, 'decl_assembler_name': 4, 'decl_assembler_name_equal': 2, 'decl_assembler_name_hash': 1, 'tree_size': 6, 'decl_value_expr_lookup': 2, 'decl_init_priority_lookup': 2, 'decl_priority_info': 7, 'copy_node_stat': 67, 'make_tree_vec_stat': 3, 'build_int_cst_type': 1, 'build_low_bits_mask': 3, 'cst_and_fits_in_hwi': 4, 'build_vector': 8, 'tree_cons_stat': 9, 'nreverse': 1, 'build_vector_from_ctor': 2, 'build_constructor': 2, 'build_constructor_single': 4, 'build_constructor_from_list': 6, 'build_fixed': 2, 'build_real': 7, 'real_value_from_int_cst': 11, 'build_real_from_int_cst': 1, 'build_string': 5, 'type_hash_lookup': 3, 'type_hash_add': 4, 'build_decl_stat': 4, 'check_qualified_type': 15, 'get_qualified_type': 4, 'build_distinct_type_copy': 7, 'build_variant_type_copy': 4, 'set_type_quals': 3, 'build_qualified_type': 6, 'build_complex_type': 49, 'build_complex': 10, 'build_one_cst': 7, 'VEC_tree_base_embedded_init': 2, 'make_tree_binfo_stat': 5, 'tree_nop_conversion': 11, 'integer_zerop': 5, 'integer_onep': 5, 'integer_all_onesp': 16, 'integer_pow2p': 8, 'integer_nonzerop': 5, 'fixed_zerop': 4, 'tree_log2': 8, 'tree_floor_log2': 8, 'real_zerop': 7, 'real_onep': 7, 'real_twop': 7, 'real_minus_onep': 7, 'really_constant_p': 2, 'value_member': 2, 'purpose_member': 2, 'fields_length': 2, 'first_field': 2, 'build_tree_list_stat': 2, 'VEC_tree_base_iterate': 2, 'build_tree_list_vec_stat': 8, 'ctor_to_list': 14, 'VEC_tree_base_quick_push': 2, 'ctor_to_vec': 6, 'int_size_in_bytes': 4, 'host_integerp': 9, 'max_int_size_in_bytes': 2, 'tree_expr_size': 4, 'bit_position': 2, 'byte_position': 2, 'expr_align': 7, 'array_type_nelts': 3, 'staticp': 16, 'get_containing_scope': 2, 'decl_function_context': 7, 'decl_address_invariant_p': 19, 'decl_address_ip_invariant_p': 10, 'skip_simple_arithmetic': 5, 'tree_invariant_p_1': 8, 'contains_placeholder_p': 34, 'recompute_tree_invariant_for_addr_expr': 87, 'build1_stat': 11, 'save_expr': 5, 'type_contains_placeholder_p': 49, 'VEC_tree_base_space': 2, 'VEC_tree_heap_reserve': 4, 'VEC_tree_heap_safe_push': 10, 'push_without_duplicates': 3, 'tree_operand_length': 3, 'find_placeholder_in_expr': 7, 'build4_stat': 13, 'process_call_operands': 2, 'substitute_in_expr': 57, 'substitute_placeholder_in_expr': 85, 'build_nt': 10, 'stabilize_reference_1': 6, 'stabilize_reference': 12, 'build2_stat': 22, 'build3_stat': 10, 'build5_stat': 14, 'build6_stat': 16, 'build_vl_exp_stat': 1, 'build_nt_call_list': 2, 'build_nt_call_vec': 4, 'build_block': 7, 'expand_location': 31, 'type_hash_list': 4, 'build_type_attribute_variant': 2, 'need_assembler_name_p': 7, 'assign_assembler_name_if_neeeded': 13, 'remove_attribute': 7, 'merge_attributes': 4, 'decl_fini_priority_lookup': 2, 'decl_debug_expr_lookup': 2, 'type_num_arguments': 2, 'tree_int_cst_sgn': 7, 'tree_int_cst_lt': 14, 'tree_int_cst_msb': 14, 'compare_tree_int': 2, 'iterative_hash_expr': 44, 'build_pointer_type_for_mode': 22, 'build_reference_type_for_mode': 22, 'build_type_no_quals': 8, 'build_range_type': 20, 'subrange_type_for_debug_p': 57, 'build_array_type': 7, 'strip_array_types': 2, 'maybe_canonicalize_argtypes': 9, 'build_function_type_skip_args': 9, 'build_function_type_list_1': 6, 'build_method_type_directly': 31, 'build_method_type': 4, 'build_offset_type': 6, 'excess_precision_type': 24, 'int_fits_type_p': 72, 'get_unwidened': 16, 'get_narrower': 24, 'get_type_static_bounds': 9, 'auto_var_in_fn_p': 2, 'tsi_next': 1, 'walk_tree_1': 20, 'walk_type_fields': 7, 'variably_modified_type_p': 186, 'decl_type_context': 3, 'get_callee_fndecl': 5, 'crc32_string': 2, 'clean_symbol_name': 1, 'get_file_function_name': 18, 'build_common_tree_nodes': 6, 'build_common_tree_nodes_2': 2, 'local_define_builtin': 14, 'build_common_builtin_nodes': 5, 'reconstruct_complex_type': 16, 'make_vector_type': 18, 'build_vector_type_for_mode': 5, 'initializer_zerop': 5, 'build_omp_clause': 6, 'build_call_list': 4, 'build_call_valist': 10, 'build_call_array_loc': 4, 'build_call_vec': 7, 'range_in_array_bounds_p': 2, 'is_global_var': 2, 'needs_to_live_in_memory': 4, 'find_compatible_field': 4, 'int_cst_value': 4, 'widest_int_cst_value': 4, 'signed_or_unsigned_type_for': 4, 'upper_bound_in_type': 4, 'lower_bound_in_type': 4, 'num_ending_zeros': 4, 'create_artificial_label': 18, 'get_name': 3, 'function_args_iter_init': 2, 'function_args_iter_next': 1, 'stdarg_p': 2, 'block_nonartificial_location': 11, 'tree_nonartificial_location': 2, 'block_ultimate_origin': 5, 'list_equal_p': 4, 'tree_sign_nop_conversion': 2, 'tree_strip_sign_nop_conversions': 3, 'gt_ggc_m_P9type_hash4htab': 6, 'gt_pch_p_P9type_hash4htab': 5, 'gt_pch_n_P9type_hash4htab': 6, 'VEC_tree_base_pop': 2, 'find_decls_types_r': 26, 'find_decls_types': 8, 'find_decls_types_in_eh_region': 5, 'ehr_next': 7, 'gsi_stmt': 1, 'gsi_next': 1, 'bb_seq': 2, 'gsi_start_bb': 7, 'gimple_ops': 1, 'gimple_op': 2, 'find_decls_types_in_node': 79, 'free_lang_data_in_block': 2, 'free_lang_data_in_decl': 47, 'free_lang_data_in_binfo': 8, 'free_lang_data_in_type': 41, 'free_lang_data_in_cgraph': 352}, "PosixPath('602/c-aux-info.bc')": {'deserves_ellipsis': 3, 'affix_data_type': 10, 'gen_decl': 6, 'gen_type': 57, 'gen_formal_list_for_func_def': 7, 'gen_aux_info_record': 4}, "PosixPath('602/ggc-common.bc')": {'VEC_const_ggc_root_tab_t_base_space': 2, 'VEC_const_ggc_root_tab_t_heap_reserve': 2, 'VEC_const_ggc_root_tab_t_base_quick_push': 2, 'VEC_const_ggc_root_tab_t_heap_safe_push': 6, 'ggc_register_root_tab': 5, 'VEC_const_ggc_cache_tab_t_base_space': 2, 'VEC_const_ggc_cache_tab_t_heap_reserve': 2, 'VEC_const_ggc_cache_tab_t_base_quick_push': 2, 'VEC_const_ggc_cache_tab_t_heap_safe_push': 6, 'ggc_register_cache_tab': 5, 'VEC_const_ggc_root_tab_t_base_iterate': 2, 'ggc_scan_cache_tab': 3, 'VEC_const_ggc_cache_tab_t_base_iterate': 2, 'ggc_mark_roots': 66, 'gt_pch_note_object': 15, 'write_pch_globals': 33, 'relocate_ptrs': 1, 'call_alloc': 19, 'call_count': 13, 'gt_pch_save': 195, 'gt_pch_restore': 71}, "PosixPath('602/ebitmap.bc')": {'ebitmap_set_bit': 31, 'ebitmap_bit_p': 14, 'sbitmap_iter_init': 22, 'ebitmap_iter_init': 130, 'sbitmap_iter_next': 3, 'sbitmap_iter_cond': 38, 'ebitmap_iter_cond': 51, 'ebitmap_iter_next': 3, 'ebitmap_last_set_bit': 315, 'ebitmap_array_clear': 2, 'ebitmap_clear': 10, 'ebitmap_array_init': 5, 'ebitmap_alloc': 5, 'ebitmap_clear_bit': 35, 'ebitmap_array_grow': 3, 'ebitmap_array_grow_get': 2, 'ebitmap_array_get': 3, 'ebitmap_copy': 8, 'ebitmap_and_into': 71, 'ebitmap_and': 155, 'ebitmap_ior_into': 211, 'ebitmap_ior': 231, 'ebitmap_and_compl_into': 104, 'ebitmap_and_compl': 156, 'ebitmap_ior_and_compl': 1, 'ebitmap_equal_p': 46}, "PosixPath('602/c-format.bc')": {'init_dynamic_diag_info': 129, 'check_format_info_main': 3523, 'get_constant': 4, 'check_format_string': 6, 'handle_format_arg_attribute': 14, 'cmp_attribs': 2, 'convert_format_name_to_system_name': 3, 'decode_format_type': 9, 'decode_format_attr': 8, 'init_dollar_format_checking': 20, 'finish_dollar_format_checking': 23, 'maybe_read_dollar_number': 74, 'avoid_dollar_number': 3, 'get_flag_spec': 3, 'format_type_warning': 7, 'check_format_types': 129, 'check_format_arg': 2732, 'check_format_info': 93, 'check_function_format': 277, 'find_length_info_modifier_index': 2, 'init_dynamic_asm_fprintf_info': 9, 'find_char_info_specifier_index': 2, 'init_dynamic_gfc_info': 9, 'handle_format_attribute': 197}, "PosixPath('602/graphds.bc')": {'graphds_dfs': 148, 'dump_graph': 17, 'add_edge': 25, 'identify_vertices': 33, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 4, 'VEC_int_base_quick_push': 2, 'VEC_int_heap_safe_push': 11, 'graphds_scc': 77, 'for_each_edge': 5, 'free_graph': 7, 'tree_nca': 1, 'graphds_domtree': 82}, "PosixPath('602/sched-rgn.bc')": {'extend_rgns': 505, 'sd_iterator_cond': 9, 'sched_rgn_init': 1536, 'find_single_block_region': 277, 'schedule_region': 226, 'rgn_make_new_region_out_of_new_block': 14, 'haifa_find_rgns': 1240, 'compute_trg_info': 417, 'sbitmap_iter_init': 22, 'debug_regions': 5, 'debug_region': 7, 'ei_next': 2, 'dump_region_dot': 79, 'gather_region_statistics': 3, 'too_large': 14, 'print_region_statistics': 2, 'debug_candidate': 23, 'contributes_to_priority': 1, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'deps_join': 123, 'recog_memoized': 3, 'sd_iterator_start': 7, 'debug_dependencies': 87, 'debug_rgn_dependencies': 40, 'sched_is_disabled_for_current_region_p': 15, 'free_rgn_deps': 94, 'compute_priorities': 109, 'extend_regions': 4, 'single_pred_p': 1, 'single_pred_edge': 3, 'is_cfg_nonregular': 54, 'single_succ_p': 1, 'single_succ_edge': 3, 'single_succ': 1, 'find_rgns': 1036, 'rgn_setup_region': 3, 'sets_likely_spilled_1': 2, 'add_branch_dependences': 35, 'propagate_deps': 146, 'compute_block_dependences': 330, 'sched_rgn_compute_dependencies': 434, 'compute_dom_prob_ps': 285, 'sched_rgn_local_init': 517, 'sched_rgn_local_free': 10, 'rgn_estimate_number_of_insns': 21, 'rgn_add_block': 58, 'rgn_fix_recovery_cfg': 36, 'advance_target_bb': 9, 'check_live_1': 31, 'check_live': 3, 'update_live_1': 17, 'update_live': 3, 'set_spec_fed': 28, 'begin_schedule_ready': 101, 'rgn_add_remove_insn': 6, 'rgn_insn_finishes_block_p': 10, 'rgn_print_insn': 6, 'rgn_rank': 18, 'is_pfree': 140, 'find_conditional_protection': 185, 'is_conditionally_protected': 201, 'is_exception_free': 119, 'new_ready': 192, 'can_schedule_ready_p': 7, 'sbitmap_iter_cond': 38, 'sbitmap_iter_next': 3, 'extract_edgelst': 36, 'split_edges': 37, 'init_ready_list': 510, 'free_trg_info': 3, 'free_block_dependencies': 32, 'schedule_insns': 260}, "PosixPath('602/loop-unroll.bc')": {'peel_loops_completely': 107, 'decide_unrolling_and_peeling': 218, 'unroll_loop_constant_iterations': 59, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 39, 'decide_peel_once_rolling': 19, 'decide_peel_completely': 24, 'analyze_iv_to_split_insn': 26, 'referenced_in_one_insn_in_loop_p': 7, 'reset_debug_uses_in_loop': 8, 'analyze_insn_to_expand_var': 36, 'analyze_insns_in_loop': 180, 'opt_info_start_duplication': 1, 'get_ivts_expr': 10, 'allocate_basic_variable': 2, 'insert_base_initialization': 2, 'split_iv': 5, 'get_expansion': 9, 'VEC_rtx_base_space': 2, 'VEC_rtx_heap_reserve': 4, 'VEC_rtx_base_quick_push': 2, 'VEC_rtx_heap_safe_push': 10, 'expand_var_during_unrolling': 35, 'VEC_rtx_base_iterate': 2, 'insert_var_expansion_initialization': 28, 'combine_var_copies_in_loop_exit': 19, 'apply_opt_in_copies': 341, 'free_opt_info': 9, 'VEC_edge_base_iterate': 2, 'peel_loop_completely': 14, 'loop_exit_at_end_p': 8, 'decide_unroll_constant_iterations': 36, 'decide_unroll_runtime_iterations': 33, 'decide_unroll_stupid': 27, 'decide_peel_simple': 21, 'peel_loop_simple': 9, 'SET_BIT': 4, 'VEC_basic_block_base_iterate': 2, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_heap_reserve': 4, 'VEC_basic_block_base_quick_push': 2, 'VEC_basic_block_heap_safe_push': 10, 'single_pred_p': 1, 'single_pred_edge': 3, 'single_succ_p': 1, 'single_succ_edge': 3, 'unroll_loop_runtime_iterations': 49, 'unroll_loop_stupid': 2, 'unroll_and_peel_loops': 415}, "PosixPath('602/cfgloopmanip.bc')": {'duplicate_loop_to_header_edge': 603, 'set_zero_probability': 64, 'single_pred_p': 1, 'single_pred_edge': 3, 'loop_outer': 3, 'single_succ_p': 1, 'single_succ_edge': 3, 'VEC_edge_base_iterate': 2, 'fix_loop_placement': 11, 'ei_next': 2, 'fix_bb_placement': 51, 'fix_bb_placements': 256, 'unloop': 9, 'find_path': 10, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_heap_reserve': 4, 'VEC_basic_block_base_quick_push': 2, 'VEC_basic_block_heap_safe_push': 10, 'loops_state_satisfies_p': 1, 'remove_path': 204, 'number_of_loops': 2, 'VEC_loop_p_base_space': 2, 'VEC_loop_p_gc_reserve': 4, 'VEC_loop_p_base_quick_push': 2, 'VEC_loop_p_gc_safe_push': 10, 'place_new_loop': 17, 'add_loop': 40, 'bb_seq': 2, 'gsi_last_bb': 7, 'create_empty_if_region_on_edge': 13, 'update_dominators_in_loop': 22, 'gimple_ops': 1, 'gimple_set_op': 2, 'gimple_cond_set_lhs': 2, 'create_empty_loop_on_edge': 27, 'loopify': 93, 'VEC_edge_base_space': 2, 'VEC_edge_heap_reserve': 4, 'VEC_edge_base_quick_push': 2, 'VEC_edge_heap_safe_push': 10, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'VEC_basic_block_base_iterate': 2, 'has_preds_from_loop': 19, 'create_preheader': 149, 'VEC_int_base_quick_push': 2, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 51, 'loops_state_set': 1, 'create_preheaders': 10, 'force_single_succ_latches': 12, 'lv_adjust_loop_entry_edge': 9, 'loop_version': 23, 'loop_depth': 1, 'fix_loop_structure': 125}, "PosixPath('602/store-motion.bc')": {'remove_reachable_equiv_notes': 147, 'st_expr_entry': 23, 'extract_mentioned_regs': 1, 'store_ops_ok': 2, 'find_loads': 5, 'store_killed_in_pat': 4, 'store_killed_in_insn': 8, 'find_moveable_store': 81, 'enumerate_store_motion_mems': 2, 'print_store_motion_mems': 1, 'pre_st_expr_hash': 2, 'compute_store_table': 371, 'ei_next': 2, 'replace_store_insn': 159, 'build_store_vectors': 228, 'delete_store': 6, 'insert_insn_start_basic_block': 9, 'insert_store': 150, 'free_store_motion_mems': 1, 'free_store_memory': 25, 'one_store_motion_pass': 1411, 'execute_rtl_store_motion': 1381}, "PosixPath('602/xstrerror.bc')": {}, "PosixPath('602/strsignal.bc')": {'init_signal_tables': 19, 'strsigno': 1}, "PosixPath('602/dwarf2out.bc')": {'compute_barrier_args_size': 84, 'loc_list_from_tree': 552, 'loc_descriptor': 195, 'mem_loc_descriptor': 546, 'address_of_int_loc_descriptor': 7, 'add_const_value_attribute': 69, 'store_vcall_insn': 8, 'expand_builtin_init_dwarf_reg_sizes': 14, 'get_cfa_from_loc_descr': 29, 'lookup_cfa_1': 39, 'lookup_cfa': 20, 'cfa_equal_p': 20, 'new_cfi': 4, 'new_loc_descr': 11, 'build_cfa_loc': 16, 'size_of_loc_descr': 10, 'output_loc_operands_raw': 12, 'output_loc_sequence_raw': 13, 'output_cfa_loc_raw': 17, 'output_cfi_directive': 39, 'add_fde_cfi': 5, 'def_cfa_1': 87, 'dwarf2out_def_cfa': 6, 'loc_descr_plus_const': 6, 'build_cfa_aligned_loc': 6, 'reg_save': 24, 'dwarf2out_reg_save_reg': 11, 'flush_queued_reg_saves': 43, 'clobbers_queued_reg_save': 11, 'dwarf2out_args_size': 2, 'VEC_rtx_base_quick_push': 2, 'VEC_rtx_base_pop': 2, 'stack_adjust_offset': 19, 'VEC_rtx_base_space': 2, 'VEC_rtx_heap_reserve': 4, 'VEC_rtx_heap_safe_push': 10, 'compute_barrier_args_size_1': 44, 'dwarf2out_notice_stack_adjust': 124, 'dwarf2out_frame_debug_def_cfa': 5, 'dwarf2out_frame_debug_adjust_cfa': 14, 'dwarf2out_frame_debug_cfa_offset': 21, 'dwarf2out_frame_debug_cfa_register': 4, 'dwarf2out_frame_debug_cfa_restore': 2, 'reg_saved_in': 13, 'queue_reg_save': 14, 'dwarf2out_frame_debug_expr': 486, 'dwarf2out_frame_debug': 274, 'dwarf2out_begin_epilogue': 8, 'lookup_filename': 3, 'maybe_emit_file': 4, 'dwarf2out_do_cfi_startproc': 2, 'dwarf2out_begin_prologue': 103, 'initial_return_save': 28, 'dwarf2out_frame_init': 28, 'output_loc_operands': 39, 'output_loc_sequence': 44, 'output_cfa_loc': 3, 'output_cfi': 22, 'VEC_dw_cfi_ref_base_space': 2, 'VEC_dw_cfi_ref_heap_reserve_exact': 4, 'VEC_dw_cfi_ref_heap_safe_grow': 7, 'VEC_dw_cfi_ref_heap_safe_grow_cleared': 7, 'output_cfis': 73, 'output_fde': 36, 'output_call_frame_info': 100, 'dwarf2out_switch_text_section': 37, 'AT_loc_list': 2, 'AT_int': 2, 'AT_unsigned': 2, 'AT_flag': 2, 'AT_ref': 2, 'AT_lbl': 2, 'AT_string': 2, 'AT_file': 2, 'print_die': 18, 'get_AT': 7, 'decl_ultimate_origin': 10, 'class_or_namespace_scope_p': 1, 'local_scope_p': 3, 'add_child_die': 12, 'new_die': 5, 'decl_class_context': 4, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 4, 'VEC_tree_base_quick_push': 2, 'VEC_tree_gc_safe_push': 10, 'member_declared_type': 2, 'find_AT_string': 5, 'VEC_dw_attr_node_base_space': 2, 'VEC_dw_attr_node_gc_reserve': 4, 'VEC_dw_attr_node_base_quick_push': 3, 'VEC_dw_attr_node_gc_safe_push': 10, 'add_dwarf_attr': 11, 'add_AT_string': 3, 'add_name_attribute': 1, 'add_AT_file': 3, 'add_AT_unsigned': 3, 'add_src_coords_attributes': 2, 'add_name_and_src_coords_attributes': 10, 'add_AT_die_ref': 6, 'field_type': 4, 'simple_type_size_in_bits': 2, 'add_bit_size_attribute': 4, 'simple_type_align_in_bits': 2, 'simple_decl_align_in_bits': 2, 'field_byte_offset': 4, 'add_bit_offset_attribute': 2, 'add_AT_int': 3, 'add_AT_loc': 3, 'add_data_member_location_attribute': 8, 'add_AT_flag': 3, 'equate_decl_number_to_die': 2, 'fortran_common': 27, 'add_loc_descr_to_each': 1, 'add_loc_list': 5, 'based_loc_descr': 10, 'const_ok_for_output_1': 11, 'const_ok_for_output': 2, 'VEC_rtx_gc_reserve': 2, 'VEC_rtx_gc_safe_push': 6, 'is_based_loc': 6, 'resolve_one_addr': 5, 'is_pseudo_reg': 3, 'reference_to_unused': 8, 'rtl_for_decl_init': 28, 'rtl_for_decl_location': 80, 'secname_for_decl': 7, 'one_reg_loc_descriptor': 1, 'add_loc_descr_op_piece': 2, 'multiple_reg_loc_descriptor': 26, 'reg_loc_descriptor': 25, 'insert_float': 10, 'new_loc_list': 7, 'gen_internal_sym': 1, 'dw_loc_list_1': 11, 'tls_mem_loc_descriptor': 15, 'loc_descriptor_from_tree': 2, 'cst_pool_loc_descr': 5, 'single_element_loc_list_p': 4, 'add_AT_loc_list': 3, 'VEC_dw_attr_node_base_ordered_remove': 2, 'remove_AT': 13, 'VEC_pubname_entry_base_space': 2, 'VEC_pubname_entry_gc_reserve': 4, 'VEC_pubname_entry_base_quick_push': 3, 'VEC_pubname_entry_gc_safe_push': 10, 'add_pubname_string': 1, 'decl_by_reference_p': 2, 'VEC_deferred_locations_base_space': 2, 'VEC_deferred_locations_gc_reserve': 2, 'VEC_deferred_locations_base_quick_push': 3, 'VEC_deferred_locations_gc_safe_push': 8, 'defer_location': 7, 'add_AT_vec': 10, 'add_AT_double': 6, 'native_encode_initializer': 30, 'tree_add_const_value_attribute': 3, 'tree_add_const_value_attribute_for_decl': 2, 'add_location_or_const_value_attribute': 7, 'common_block_die_table_eq': 6, 'common_block_die_table_hash': 3, 'VEC_tree_base_pop': 2, 'remove_child_with_prev': 14, 'remove_child_TAG': 6, 'add_AT_lbl_id': 3, 'add_arange': 6, 'convert_cfa_to_fb_loc_list': 98, 'compute_frame_pointer_to_fb_displacement': 4, 'VEC_die_arg_entry_base_space': 2, 'VEC_die_arg_entry_gc_reserve': 2, 'VEC_die_arg_entry_base_quick_push': 3, 'VEC_die_arg_entry_gc_safe_push': 8, 'append_entry_to_tmpl_value_parm_die_table': 7, 'is_redundant_typedef': 21, 'add_pubtype': 61, 'base_type_die': 14, 'dwarf2out_ignore_block': 32, 'add_ranges_num': 2, 'add_AT_range_list': 3, 'add_high_low_attributes': 14, 'add_call_src_coords_attributes': 2, 'scope_die_for': 14, 'type_tag': 5, 'descr_info_loc': 25, 'gen_enumeration_type_die': 8, 'VEC_tree_base_iterate': 2, 'splice_child_die': 3, 'gen_decl_die': 126, 'gen_type_die_with_usage': 110, 'declare_in_namespace': 2, 'setup_namespace_context': 2, 'gen_array_type_die': 41, 'get_context_die': 2, 'force_decl_die': 2, 'gen_subprogram_die': 242, 'decls_for_scope': 10, 'gen_block_die': 31, 'process_scope_var': 27, 'dwarf2out_imported_module_or_decl_1': 22, 'gen_typedef_die': 6, 'gen_formal_types_die': 9, 'gen_formal_parameter_die': 4, 'gen_generic_params_dies': 8, 'generic_parameter_die': 13, 'add_abstract_origin_attribute': 3, 'dwarf2out_decl': 10, 'gen_type_die_for_member': 14, 'gen_variable_die': 104, 'gen_field_die': 13, 'force_type_die': 2, 'modified_type_die': 39, 'add_bound_info': 5, 'add_type_attribute': 7, 'gt_ggc_mx_die_struct': 25, 'gt_ggc_mx_VEC_dw_attr_node_gc': 9, 'gt_ggc_mx_dw_loc_list_struct': 2, 'gt_ggc_mx_dw_loc_descr_struct': 107, 'gt_ggc_mx_comdat_type_struct': 4, 'gt_ggc_mx_VEC_dcall_entry_gc': 2, 'gt_ggc_mx_var_loc_node': 9, 'gt_ggc_mx_VEC_die_arg_entry_gc': 2, 'gt_ggc_mx_limbo_die_struct': 4, 'gt_ggc_mx_VEC_pubname_entry_gc': 2, 'gt_ggc_mx_VEC_deferred_locations_gc': 2, 'gt_ggc_mx_queued_reg_save': 4, 'gt_ggc_mx_dw_cfi_struct': 7, 'gt_ggc_mx_dw_fde_struct': 3, 'gt_ggc_m_P10vcall_insn4htab': 6, 'gt_ggc_m_P16var_loc_list_def4htab': 6, 'gt_ggc_m_P10die_struct4htab': 6, 'gt_ggc_m_P15dwarf_file_data4htab': 6, 'gt_ggc_m_P20indirect_string_node4htab': 6, 'gt_pch_p_19dw_loc_descr_struct': 7, 'gt_pch_p_19VEC_dw_attr_node_gc': 2, 'gt_pch_nx_die_struct': 24, 'gt_pch_nx_VEC_dw_attr_node_gc': 9, 'gt_pch_nx_dw_loc_list_struct': 2, 'gt_pch_nx_dw_loc_descr_struct': 107, 'gt_pch_nx_comdat_type_struct': 4, 'gt_pch_nx_VEC_dcall_entry_gc': 2, 'gt_pch_nx_var_loc_node': 7, 'gt_pch_nx_VEC_die_arg_entry_gc': 2, 'gt_pch_nx_limbo_die_struct': 4, 'gt_pch_nx_VEC_pubname_entry_gc': 2, 'gt_pch_nx_VEC_deferred_locations_gc': 2, 'gt_pch_nx_queued_reg_save': 4, 'gt_pch_nx_dw_cfi_struct': 7, 'gt_pch_nx_dw_fde_struct': 3, 'gt_pch_p_P10vcall_insn4htab': 5, 'gt_pch_n_P10vcall_insn4htab': 6, 'gt_pch_p_P16var_loc_list_def4htab': 5, 'gt_pch_n_P16var_loc_list_def4htab': 6, 'gt_pch_p_P10die_struct4htab': 5, 'gt_pch_n_P10die_struct4htab': 6, 'gt_pch_p_P15dwarf_file_data4htab': 5, 'gt_pch_n_P15dwarf_file_data4htab': 6, 'gt_pch_p_P20indirect_string_node4htab': 5, 'gt_pch_n_P20indirect_string_node4htab': 6, 'gt_pch_na_fde_table': 2, 'gt_ggc_ma_fde_table': 2, 'gt_pch_na_abbrev_die_table': 1, 'gt_ggc_ma_abbrev_die_table': 1, 'gt_pch_na_arange_table': 1, 'gt_ggc_ma_arange_table': 1, 'lookup_vcall_insn': 3, 'VEC_vcall_entry_base_space': 2, 'VEC_vcall_entry_gc_reserve': 2, 'VEC_vcall_entry_base_quick_push': 2, 'VEC_vcall_entry_gc_safe_push': 5, 'dwarf2out_virtual_call': 6, 'dwarf2out_virtual_call_token': 4, 'VEC_dcall_entry_base_space': 2, 'VEC_dcall_entry_gc_reserve': 2, 'VEC_dcall_entry_base_quick_push': 3, 'VEC_dcall_entry_gc_safe_push': 8, 'dwarf2out_direct_call': 10, 'add_var_loc_to_decl': 7, 'dwarf2out_var_location': 77, 'dwarf2out_imported_module_or_decl': 6, 'dwarf2out_global_decl': 2, 'gen_remaining_tmpl_value_param_die_attribute': 4, 'resolve_addr_in_expr': 5, 'AT_loc': 2, 'resolve_addr': 24, 'VEC_dw_attr_node_base_quick_insert': 4, 'move_linkage_attr': 22, 'retry_incomplete_types': 1, 'verify_marks_clear': 2, 'premark_types_used_by_global_vars_helper': 11, 'is_declaration_die': 1, 'prune_unused_types_walk': 11, 'prune_unused_types_walk_local_classes': 4, 'prune_unused_types_mark': 15, 'prune_unused_types_walk_attribs': 32, 'prune_unused_types_update_strings': 22, 'prune_unused_types_prune': 41, 'prune_unmark_dies': 2, 'prune_indirect_string': 5, 'prune_unused_types': 56, 'gen_compile_unit_die': 1, 'assign_symbol_names': 7, 'AT_addr': 2, 'loc_checksum': 2, 'die_checksum': 22, 'unmark_all_dies': 11, 'compute_section_prefix': 1, 'same_dw_val_p': 38, 'same_die_p': 77, 'same_die_p_wrap': 3, 'check_duplicate_cu': 38, 'break_out_includes': 82, 'checksum_uleb128': 1, 'add_AT_data8': 5, 'collect_checksum_attributes': 1319, 'loc_checksum_ordered': 4, 'die_checksum_ordered': 1184, 'attr_checksum_ordered': 5, 'generate_type_signature': 27, 'clone_die': 4, 'clone_as_declaration': 11, 'copy_ancestor_tree': 4, 'copy_declaration_context': 12, 'move_all_children': 5, 'replace_child': 25, 'generate_skeleton_ancestor_tree': 5, 'generate_skeleton_bottom_up': 28, 'generate_skeleton': 11, 'remove_child_or_replace_with_skeleton': 10, 'break_out_comdat_types': 101, 'mark_dies': 2, 'copy_decls_walk': 23, 'unmark_dies': 3, 'add_sibling_attributes': 8, 'add_AT_addr': 3, 'add_ranges_by_labels': 2, 'output_loc_list': 15, 'output_location_lists': 25, 'add_AT_lineptr': 3, 'add_AT_macptr': 3, 'AT_ref_external': 2, 'gen_label_for_indirect_string': 4, 'AT_string_form': 22, 'value_format': 10, 'build_abbrev_table': 110, 'size_of_die': 20, 'calc_die_sizes': 38, 'output_die_symbol': 1, 'output_die': 68, 'output_comp_unit': 1, 'output_comdat_type_unit': 4, 'output_abbrev_section': 4, 'size_of_pubnames': 10, 'output_pubnames': 24, 'size_of_dcall_table': 8, 'output_dcall_table': 14, 'size_of_vcall_table': 2, 'output_vcall_table': 5, 'output_aranges': 6, 'output_ranges': 10, 'output_indirect_string': 5, 'dwarf2out_finish': 351}, "PosixPath('602/c-pragma.bc')": {'maybe_apply_pending_pragma_weaks': 11, 'push_alignment': 9, 'apply_pragma_weak': 13, 'maybe_apply_pragma_weak': 5, 'maybe_apply_renaming_pragma': 43, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 2, 'VEC_int_base_quick_push': 2, 'VEC_int_heap_safe_push': 7, 'push_visibility': 6, 'VEC_int_base_last': 2, 'VEC_int_base_pop': 2, 'pop_visibility': 3, 'c_pp_lookup_pragma': 5, 'VEC_pragma_ns_name_base_space': 2, 'VEC_pragma_ns_name_heap_reserve': 2, 'VEC_pragma_ns_name_base_quick_push': 3, 'VEC_pragma_ns_name_heap_safe_push': 8, 'VEC_pragma_handler_base_space': 2, 'VEC_pragma_handler_heap_reserve': 2, 'VEC_pragma_handler_base_quick_push': 3, 'VEC_pragma_handler_heap_safe_push': 7, 'c_register_pragma_1': 13, 'handle_pragma_message': 1, 'handle_pragma_extern_prefix': 1, 'handle_pragma_redefine_extname': 9, 'handle_stdc_pragma': 2, 'handle_pragma_float_const_decimal64': 14, 'handle_pragma_reset_options': 3, 'handle_pragma_pop_options': 10, 'handle_pragma_optimize': 6, 'handle_pragma_target': 2, 'handle_pragma_diagnostic': 13, 'handle_pragma_visibility': 2, 'handle_pragma_weak': 6, 'pop_alignment': 5, 'handle_pragma_pack': 18, 'init_pragma': 1, 'gt_ggc_mx_opt_stack': 11, 'gt_ggc_mx_align_stack': 2, 'gt_pch_nx_opt_stack': 11, 'gt_pch_nx_align_stack': 2}, "PosixPath('602/cfgloop.bc')": {'flow_loop_nodes_find': 164, 'alloc_loop': 12, 'init_loops_structure': 66, 'rescan_loop_exit': 69, 'loop_exit_free': 6, 'record_loop_exits': 64, 'merge_latch_edges': 14, 'loop_depth': 1, 'flow_loop_nested_p': 5, 'superloop_at_depth': 3, 'VEC_edge_base_space': 2, 'VEC_edge_heap_reserve': 4, 'VEC_edge_base_quick_push': 2, 'VEC_edge_heap_safe_push': 10, 'ei_next': 2, 'get_loop_latch_edges': 33, 'VEC_edge_base_iterate': 2, 'loop_outer': 3, 'get_loop_body': 42, 'flow_loop_dump': 11, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 29, 'flow_loops_cfg_dump': 57, 'flow_loops_dump': 51, 'flow_loop_free': 6, 'VEC_loop_p_base_iterate': 2, 'flow_loops_free': 11, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_heap_reserve': 4, 'VEC_basic_block_base_quick_push': 2, 'VEC_basic_block_heap_safe_push': 10, 'VEC_basic_block_base_pop': 2, 'VEC_loop_p_base_space': 2, 'VEC_loop_p_gc_reserve': 4, 'VEC_loop_p_base_quick_push': 2, 'establish_preds': 31, 'flow_loop_tree_node_add': 1, 'flow_loop_tree_node_remove': 9, 'flow_bb_inside_loop_p': 7, 'flow_loops_find': 206, 'find_subloop_latch_edge_by_profile': 16, 'gsi_stmt': 1, 'gsi_next': 1, 'find_subloop_latch_edge_by_ivs': 55, 'find_subloop_latch_edge': 73, 'form_subloop': 26, 'disambiguate_multiple_latches': 202, 'disambiguate_loops_with_multiple_latches': 224, 'fill_sons_in_loop': 2, 'get_loop_body_in_dom_order': 15, 'get_loop_body_in_bfs_order': 59, 'loops_state_satisfies_p': 1, 'find_common_loop': 5, 'loops_state_set': 1, 'dump_recorded_exit': 10, 'dump_recorded_exits': 1, 'loops_state_clear': 1, 'release_recorded_exits': 11, 'get_loop_exit_edges': 79, 'num_loop_branches': 7, 'add_bb_to_loop': 66, 'remove_bb_from_loops': 40, 'delete_loop': 3, 'cancel_loop': 2, 'cancel_loop_tree': 1, 'single_succ_p': 1, 'single_succ_edge': 3, 'single_succ': 1, 'loop_latch_edge': 2, 'get_exit_descriptions': 3, 'verify_loop_structure': 509, 'loop_preheader_edge': 36, 'loop_exit_edge_p': 2, 'single_exit': 17, 'is_loop_exit': 10}, "PosixPath('602/xstrdup.bc')": {}, "PosixPath('602/bitmap.bc')": {'bitmap_obstack_free': 4, 'bitmap_elt_clear_from': 34, 'bitmap_obstack_initialize': 1, 'bitmap_obstack_release': 17, 'bitmap_initialize_stat': 2, 'bitmap_obstack_alloc_stat': 51, 'bitmap_gc_alloc_stat': 3, 'bitmap_element_allocate': 62, 'bitmap_copy': 30, 'bitmap_find_bit': 18, 'bitmap_element_zerop': 2, 'bitmap_elem_to_freelist': 8, 'bitmap_element_free': 42, 'bitmap_clear_bit': 2, 'bitmap_element_link': 32, 'bitmap_set_bit': 2, 'bitmap_count_bits': 2, 'bitmap_single_bit_set_p': 1, 'bitmap_first_set_bit': 1, 'bitmap_last_set_bit': 6, 'bitmap_elt_insert_after': 35, 'bitmap_and': 55, 'bitmap_and_into': 21, 'bitmap_elt_copy': 5, 'bitmap_and_compl': 63, 'bitmap_and_compl_into': 40, 'bitmap_set_range': 20, 'bitmap_clear_range': 15, 'bitmap_compl_and_into': 46, 'bitmap_elt_ior': 8, 'bitmap_ior': 39, 'bitmap_ior_into': 11, 'bitmap_xor': 64, 'bitmap_xor_into': 33, 'bitmap_equal_p': 14, 'bitmap_intersect_p': 14, 'bitmap_intersect_compl_p': 13, 'bitmap_ior_and_compl': 125, 'bitmap_ior_and_compl_into': 2, 'bitmap_ior_and_into': 93, 'debug_bitmap_file': 11, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'bitmap_print': 12, 'bitmap_hash': 10}, "PosixPath('602/caller-save.bc')": {'reg_save_code': 15, 'recog_memoized': 3, 'init_caller_save': 16, 'initiate_saved_hard_regs': 1, 'mark_set_regs': 6, 'new_saved_hard_reg': 30, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'finish_saved_hard_regs': 1, 'saved_hard_reg_compare_func': 24, 'setup_save_areas': 791, 'mark_referenced_regs': 47, 'add_stored_regs': 7, 'add_used_regs_1': 3, 'insert_one_insn': 68, 'insert_restore': 12, 'insert_save': 10, 'replace_reg_with_saved_mem': 15, 'add_to_hard_reg_set': 1, 'mark_reg_as_referenced': 1, 'save_call_clobbered_regs': 304}, "PosixPath('602/tree-vect-generic.bc')": {'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_stmt': 1, 'gimple_ops': 1, 'gimple_op': 2, 'type_for_widest_vector_mode': 9, 'expand_vector_piecewise': 4, 'expand_vector_parallel': 14, 'expand_vector_addition': 2, 'do_negate': 2, 'do_plus_minus': 2, 'expand_vector_operation': 5, 'expand_vector_operations_1': 109, 'gsi_next': 1, 'expand_vector_operations': 227}, "PosixPath('602/sel-sched-ir.bc')": {'insert_in_history_vect': 29, 'sel_redirect_edge_and_branch': 11, 'init_lv_set': 18, 'free_lv_set': 9, 'exchange_lv_sets': 26, 'exchange_av_sets': 29, 'sel_add_block_to_region': 20, 'make_regions_from_the_rest': 284, 'ilist_copy': 7, 'ilist_invert': 5, 'blist_add': 8, '_list_iter_start': 4, 'return_regset_to_pool': 12, 'vinsn_delete': 2, 'vinsn_detach': 3, 'free_history_vect': 4, '_list_iter_remove': 4, 'av_set_iter_remove': 4, '_list_iter_next': 3, 'av_set_clear': 21, 'flist_tail_init': 2, 'flist_lookup': 2, 'fence_clear': 4, 'flist_remove': 7, 'flist_clear': 7, 'def_list_add': 2, '_succ_iter_start': 114, 'VEC_edge_base_iterate': 2, 'in_current_region_p': 6, 'sel_bb_head': 3, 'sel_bb_end': 1, 'sel_bb_empty_or_nop_p': 3, '_eligible_successor_edge_p': 70, 'single_succ_p': 1, 'single_succ_edge': 3, 'single_succ': 1, 'loop_depth': 1, 'inner_loop_header_p': 8, 'loop_outer': 3, 'VEC_edge_base_space': 2, 'VEC_edge_heap_reserve': 4, 'VEC_edge_base_quick_push': 2, 'VEC_edge_heap_safe_push': 10, 'get_loop_exit_edges_unique_dests': 45, 'VEC_edge_base_ordered_remove': 3, 'get_all_loop_exits': 94, 'ei_next': 2, '_succ_iter_cond': 129, 'init_fence_for_scheduling': 3, 'flist_add': 106, '_succ_iter_next': 11, 'init_fences': 9, 'VEC_rtx_base_block_remove': 2, 'merge_fences': 174, 'move_fence_to_fences': 83, 'add_to_fences': 2, 'add_clean_fence_to_fences': 3, 'VEC_rtx_gc_copy': 2, 'add_dirty_fence_to_fences': 40, 'get_regset_from_pool': 16, 'free_regset_pool': 19, 'vinsn_attach': 2, 'init_expr': 92, 'copy_expr_onside': 37, 'VEC_sel_global_bb_info_def_base_space': 2, 'VEC_sel_global_bb_info_def_heap_reserve_exact': 2, 'VEC_sel_global_bb_info_def_heap_safe_grow': 4, 'VEC_sel_global_bb_info_def_heap_safe_grow_cleared': 4, 'sel_extend_global_bb_info': 10, 'VEC_sel_region_bb_info_def_base_space': 2, 'VEC_sel_region_bb_info_def_heap_reserve_exact': 2, 'VEC_sel_region_bb_info_def_heap_safe_grow': 4, 'VEC_sel_region_bb_info_def_heap_safe_grow_cleared': 4, 'extend_region_bb_info': 10, 'extend_bb_info': 9, 'invalidate_av_set': 9, 'create_initial_data_sets': 2, 'VEC_sel_insn_data_def_base_space': 2, 'VEC_sel_insn_data_def_heap_reserve_exact': 2, 'VEC_sel_insn_data_def_heap_safe_grow': 4, 'VEC_sel_insn_data_def_heap_safe_grow_cleared': 4, 'extend_insn_data': 6, 'VEC_expr_history_def_heap_copy': 2, 'copy_expr': 94, 'prepare_insn_expr': 20, 'setup_id_lhs_rhs': 6, 'maybe_downgrade_id_to_use': 22, 'setup_id_reg_sets': 15, 'init_id_from_df': 56, 'deps_init_id_note_reg_use': 2, 'deps_init_id_note_reg_clobber': 2, 'deps_init_id_note_reg_set': 2, 'deps_init_id_start_lhs': 3, 'deps_init_id_finish_insn': 12, 'deps_init_id': 1, 'vinsn_init': 103, 'vinsn_create': 94, 'first_time_insn_init': 1, 'eq_transformed_insns': 8, 'hash_transformed_insns': 1, 'init_first_time_insn_data': 3, 'init_insn_data': 8, 'single_pred_p': 1, 'single_pred_edge': 3, 'cfg_preds_1': 57, 'cfg_preds': 4, 'get_seqno_of_a_pred': 99, 'init_simplejump_data': 106, 'sel_init_new_insn': 121, 'get_nop_from_pool': 6, 'bb_next_bb': 12, 'move_bb_info': 2, 'remove_bb_from_region': 30, 'delete_and_free_basic_block': 12, 'sel_remove_bb': 33, 'remove_empty_bb': 72, 'sel_remove_empty_bb': 24, 'considered_for_pipelining_p': 17, 'change_loops_latches': 1, 'sel_recompute_toporder': 17, 'maybe_tidy_empty_bb': 70, 'jump_leads_only_to_bb_p': 6, 'sel_remove_insn': 100, 'tidy_control_flow': 41, 'return_nop_to_pool': 10, 'free_nop_pool': 1, 'recog_memoized': 3, 'create_copy_of_insn_rtx': 3, 'create_vinsn_from_insn_rtx': 4, 'vinsn_copy': 2, 'vinsn_cond_branch_p': 3, 'sel_vinsn_cost': 2, 'sel_gen_recovery_insn_from_rtx_after': 1, 'sel_gen_insn_from_expr_after': 3, 'sel_move_insn': 13, 'skip_unspecs_callback': 2, 'vinsn_equal_p': 28, 'find_in_history_vect_1': 3, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'find_in_history_vect': 83, 'VEC_expr_history_def_base_space': 2, 'VEC_expr_history_def_heap_reserve': 4, 'VEC_expr_history_def_base_quick_insert': 4, 'VEC_expr_history_def_heap_safe_insert': 11, 'update_target_availability': 6, 'expr_dest_reg': 1, 'speculate_expr': 9, 'update_speculative_bits': 10, 'merge_expr_data': 212, 'merge_expr': 3, 'av_set_lookup': 3, 'set_unavailable_target_for_expr': 88, 'mark_unavailable_targets': 3, 'av_set_add': 2, 'av_set_lookup_other_equiv_expr': 6, 'merge_with_other_exprs': 7, 'av_set_copy': 5, 'av_set_union_and_clear': 37, '_list_iter_remove_nofree': 6, 'av_set_union_and_live': 121, 'av_set_leave_one_nonspec': 32, 'av_set_substract_cond_branches': 32, 'av_set_split_usefulness': 7, 'av_set_intersect': 31, 'free_data_for_scheduled_insn': 19, 'init_global_and_expr_for_insn': 27, 'sel_init_global_and_expr': 2, 'VEC_basic_block_base_quick_push': 2, 'finish_insns': 9, 'free_first_time_insn_data': 2, 'finish_global_and_expr_insn': 9, 'sel_finish_global_and_expr': 33, 'sel_mark_hard_insn': 3, 'has_dependence_note_reg_use': 18, 'has_dependence_note_reg_clobber': 9, 'has_dependence_note_reg_set': 12, 'has_dependence_p': 21, 'tick_check_dep_with_dw': 21, 'tick_check_p': 6, 'lhs_of_insn_equals_to_dest_p': 3, 'get_dest_and_mode': 3, 'sel_num_cfg_preds_gt_1': 12, 'bookkeeping_can_be_created_if_moved_through_p': 8, 'sel_is_loop_preheader_p': 8, 'purge_empty_blocks': 22, 'get_seqno_by_preds': 43, 'df_lr_get_bb_info': 3, 'init_lv_sets': 7, 'free_lv_sets': 23, 'exchange_data_sets': 81, 'copy_data_sets': 69, 'get_av_set': 1, 'fallthru_bb_of_jump': 7, 'sel_init_bbs': 2, 'sel_restore_notes': 74, 'VEC_basic_block_base_space': 2, 'VEC_basic_block_heap_reserve': 4, 'VEC_basic_block_heap_safe_push': 10, 'sel_create_new_region': 15, 'VEC_basic_block_base_iterate': 2, 'make_region_from_loop_preheader': 8, 'sel_remove_loop_preheader': 106, 'sel_finish_bbs': 165, 'sel_insn_has_single_succ_p': 8, 'VEC_int_base_block_remove': 2, 'free_succs_info': 30, 'alloc_succs_info': 4, 'VEC_rtx_base_space': 2, 'VEC_rtx_heap_reserve': 4, 'VEC_rtx_base_quick_push': 2, 'VEC_rtx_heap_safe_push': 10, 'VEC_int_base_space': 2, 'VEC_int_heap_reserve': 4, 'VEC_int_base_quick_push': 2, 'VEC_int_heap_safe_push': 11, 'compute_succs_info': 123, 'bb_ends_ebb_p': 58, 'clear_outdated_rtx_info': 17, 'recompute_rev_top_order': 22, 'find_place_to_insert_bb': 97, 'add_block_to_current_region': 167, 'sel_add_bb': 5, 'sel_split_edge': 11, 'copy_lv_set_from': 9, 'sel_create_recovery_block': 23, 'sel_create_empty_bb': 2, 'VEC_rtx_base_pop': 2, 'get_bb_note_from_pool': 2, 'sel_create_basic_block': 3, 'sel_split_block': 14, 'sel_register_cfg_hooks': 4, 'setup_nop_and_exit_insns': 3, 'free_nop_vinsn': 1, 'sel_estimate_number_of_insns': 2, 'sel_init_pipelining': 1, 'get_loop_nest_for_rgn': 2, 'number_of_loops': 2, 'VEC_loop_p_base_iterate': 2, 'VEC_int_base_iterate': 2, 'get_loop': 1, 'fel_next': 25, 'fel_init': 90, 'sel_finish_pipelining': 5, 'bb_top_order_comparator': 22, 'make_region_from_loop': 48, 'VEC_loop_p_base_space': 2, 'VEC_loop_p_heap_reserve': 2, 'VEC_loop_p_base_quick_push': 2, 'VEC_loop_p_heap_safe_push': 6, 'make_regions_from_loop_nest': 79, 'sel_find_rgns': 343, 'sel_add_loop_preheaders': 3}, "PosixPath('602/graphite-sese-to-poly.bc')": {}, "PosixPath('602/toplev.bc')": {'announce_function': 3, 'read_integral_parameter': 2, 'wrapup_global_declaration_1': 7, 'wrapup_global_declaration_2': 12, 'check_global_declaration_1': 24, 'emit_debug_global_declarations': 8, 'warn_deprecated_use': 28, 'setup_core_dumping': 1, 'decode_d_option': 22, 'option_affects_pch_p': 3, 'default_get_pch_validity': 11, 'default_pch_valid_p': 22, 'default_tree_printer': 19, 'general_init': 2, 'init_local_tick': 4, 'print_switch_values': 10, 'process_options': 94, 'init_asm_output': 3, 'lang_dependent_init': 3, 'compile_file': 3, 'finalize': 3, 'do_compile': 110, 'toplev_main': 138}, "PosixPath('602/tree-scalar-evolution.bc')": {'chrec_is_positive': 24, 'initialize_scalar_evolutions_analyzer': 2, 'get_loop': 1, 'tree_operand_length': 3, 'chrec_contains_symbols_defined_in_loop': 8, 'get_chrec_loop': 3, 'number_of_latch_executions': 12, 'loop_depth': 1, 'get_instantiated_value': 1, 'new_scev_info_str': 5, 'set_instantiated_value': 2, 'find_var_scev_info': 4, 'get_scalar_evolution': 1, 'gimple_ops': 1, 'gimple_op': 2, 'loop_phi_node_p': 1, 'analyze_initial_condition': 21, 'backedge_phi_arg_p': 2, 'build_polynomial_chrec': 14, 'add_to_evolution_1': 32, 'add_to_evolution': 4, 'set_scalar_evolution': 1, 'gsi_stmt': 1, 'gsi_next': 1, 'loop_closed_phi_def': 10, 'eq_scev_info': 6, 'follow_ssa_edge_expr': 11, 'follow_ssa_edge': 18, 'follow_ssa_edge_binary': 17, 'follow_ssa_edge_in_condition_phi_branch': 7, 'analyze_scalar_evolution': 1, 'analyze_scalar_evolution_1': 125, 'interpret_rhs_expr': 1, 'compute_scalar_evolution_in_loop': 1, 'compute_overall_effect_of_inner_loop': 17, 'instantiate_scev_r': 155, 'evolution_function_is_affine_p': 5, 'gather_chrec_stats': 5, 'gather_stats_on_scev_database': 2, 'number_of_loops': 2, 'VEC_int_base_quick_push': 2, 'loop_outer': 3, 'VEC_int_base_iterate': 2, 'fel_next': 25, 'fel_init': 51, 'scev_initialize': 5, 'scev_reset': 4, 'analyze_scalar_evolution_in_loop': 4, 'simple_iv': 11, 'VEC_gimple_base_space': 2, 'VEC_gimple_heap_reserve': 4, 'VEC_gimple_base_quick_push': 2, 'VEC_gimple_heap_safe_push': 10, 'get_exit_conditions_rec': 8, 'select_loops_exit_conditions': 3, 'VEC_gimple_base_iterate': 2, 'analyze_scalar_evolution_for_all_loop_phi_nodes': 30, 'number_of_iterations_for_all_loops': 4, 'scev_analysis': 47, 'expression_expensive_p': 4, 'bmp_iter_set_init': 22, 'bmp_iter_set': 25, 'bmp_iter_next': 2, 'single_pred_p': 1, 'bb_seq': 2, 'gsi_start_bb': 7, 'gsi_after_labels': 40, 'scev_const_prop': 156, 'gt_ggc_mx_scev_info_str': 4, 'gt_ggc_m_P13scev_info_str4htab': 6, 'gt_pch_nx_scev_info_str': 4, 'gt_pch_p_P13scev_info_str4htab': 5, 'gt_pch_n_P13scev_info_str4htab': 6}, "PosixPath('602/c-common.bc')": {'handle_aligned_attribute': 9, 'c_addr_space_name': 1, 'start_fname_decls': 2, 'finish_fname_decls': 32, 'fname_as_string': 13, 'fname_decl': 15, 'fix_string_type': 26, 'decl_constant_value_for_optimization': 4, 'overflow_warning': 2, 'c_fully_fold_internal': 506, 'c_fully_fold': 34, 'warn_logical_operator': 94, 'strict_aliasing_warning': 15, 'check_main_parameter_types': 47, 'vector_targets_convertible_p': 4, 'vector_types_convertible_p': 38, 'c_common_signed_or_unsigned_type': 377, 'shorten_binary_op': 59, 'tree_operand_length': 3, 'conversion_warning': 80, 'warnings_for_convert_and_check': 2, 'convert_and_check': 5, 'warning_candidate_p': 4, 'new_tlist': 10, 'warn_for_collisions_1': 11, 'warn_for_collisions': 3, 'merge_tlist': 12, 'add_tlist': 6, 'init_call_expr_arg_iterator': 3, 'next_call_expr_arg': 4, 'first_call_expr_arg': 3, 'verify_tree': 132, 'verify_sequence_points': 4, 'c_common_type_for_size': 46, 'c_common_type_for_mode': 232, 'c_common_fixed_point_type_for_size': 6, 'c_build_bitfield_integer_type': 9, 'shorten_compare': 165, 'pointer_int_sum': 29, 'c_wrap_maybe_const': 17, 'c_save_expr': 1, 'decl_with_nonnull_addr_p': 2, 'c_common_truthvalue_conversion': 70, 'c_apply_type_quals_to_decl': 9, 'c_type_hash': 13, 'c_common_get_alias_set': 53, 'c_sizeof_or_alignof_type': 8, 'c_alignof_expr': 21, 'def_fn_type': 16, 'builtin_function_disabled_p': 2, 'def_builtin_1': 5, 'c_define_builtins': 169, 'c_common_nodes_and_builtins': 9, 'set_compound_literal_name': 1, 'disable_builtin_function': 2, 'c_promoting_integer_type_p': 13, 'self_promoting_args_p': 5, 'strip_pointer_operator': 2, 'strip_pointer_or_array_types': 2, 'check_case_value': 22, 'check_case_bounds': 2, 'c_add_case_label': 5, 'match_case_to_enum_1': 12, 'match_case_to_enum': 5, 'c_do_switch_warnings': 6, 'boolean_increment': 2, 'c_determine_visibility': 7, 'VEC_const_char_p_base_space': 2, 'VEC_const_char_p_gc_reserve': 2, 'VEC_const_char_p_base_quick_push': 2, 'VEC_const_char_p_gc_safe_push': 6, 'parse_optimize_options': 34, 'get_nonnull_operand': 4, 'nonnull_check_p': 6, 'check_function_arguments_recurse': 55, 'check_function_nonnull': 8, 'check_function_sentinel': 7, 'check_function_arguments': 28, 'check_builtin_function_arguments': 2, 'field_decl_cmp': 4, 'resort_field_decl_cmp': 25, 'c_cpp_error': 6, 'fold_offsetof_1': 26, 'complete_array_type': 19, 'sync_resolve_size': 6, 'sync_resolve_params': 5, 'resolve_overloaded_builtin': 14, 'warn_array_subscript_with_type_char': 4, 'warn_about_parentheses': 3, 'warn_for_unused_label': 2, 'warn_for_sign_compare': 81, 'set_underlying_type': 12, 'is_typedef_decl': 2, 'record_types_used_by_current_var_decl': 1, 'VEC_tree_gc_vec_base_pop': 2, 'make_tree_vector': 2, 'VEC_tree_gc_vec_base_space': 2, 'VEC_tree_gc_vec_gc_reserve': 2, 'VEC_tree_gc_vec_base_quick_push': 2, 'VEC_tree_gc_vec_gc_safe_push': 6, 'release_tree_vector': 10, 'VEC_tree_base_quick_push': 2, 'make_tree_vector_single': 2, 'VEC_tree_base_space': 2, 'VEC_tree_gc_reserve': 4, 'VEC_tree_base_iterate': 2, 'make_tree_vector_copy': 13, 'handle_optimize_attribute': 3, 'handle_hot_attribute': 2, 'handle_cold_attribute': 2, 'handle_alloc_size_attribute': 6, 'handle_type_generic_attribute': 3, 'handle_sentinel_attribute': 2, 'handle_nonnull_attribute': 7, 'handle_tls_model_attribute': 5, 'handle_visibility_attribute': 9, 'handle_vector_size_attribute': 6, 'handle_deprecated_attribute': 6, 'handle_novops_attribute': 1, 'handle_pure_attribute': 2, 'handle_no_limit_stack_attribute': 7, 'handle_returns_twice_attribute': 2, 'handle_malloc_attribute': 4, 'handle_no_instrument_function_attribute': 7, 'handle_weakref_attribute': 2, 'handle_alias_attribute': 11, 'handle_weak_attribute': 2, 'handle_section_attribute': 8, 'handle_mode_attribute': 37, 'handle_destructor_attribute': 2, 'handle_constructor_attribute': 2, 'handle_transparent_union_attribute': 6, 'handle_const_attribute': 4, 'handle_externally_visible_attribute': 2, 'handle_unused_attribute': 2, 'handle_used_attribute': 3, 'handle_artificial_attribute': 2, 'handle_gnu_inline_attribute': 2, 'handle_always_inline_attribute': 2, 'handle_noinline_attribute': 2, 'handle_noreturn_attribute': 4, 'handle_common_attribute': 2, 'handle_nocommon_attribute': 2, 'handle_packed_attribute': 5}, "PosixPath('602/spec_qsort/spec_qsort.bc')": {'swapfunc': 6, 'spec_qsort': 7}}
found results: {"PosixPath('602/diagnostic.bc')": {'diagnostic_initialize': ([], 7981), 'build_message_string': ([], 7981), 'diagnostic_report_current_module': ([], 7981), 'trim_filename': ([0], 7979), 'diagnostic_set_info_translated': ([], 7981), 'internal_error': ([], 7981), 'diagnostic_report_diagnostic': ([0], 7970), 'diagnostic_action_after_output': ([], 7981), 'diagnostic_build_prefix': ([], 7981), 'verbatim': ([], 7981), 'emit_diagnostic': ([], 7981), 'inform': ([], 7981), 'inform_n': ([], 7981), 'warning': ([], 7981), 'warning_at': ([], 7981), 'pedwarn': ([], 7981), 'permerror': ([], 7981), 'error': ([], 7981), 'error_n': ([], 7981), 'error_at': ([], 7981), 'sorry': ([], 7981), 'fatal_error': ([], 7981)}, "PosixPath('602/decContext.bc')": {'decContextSetStatus': ([], 2047), 'decContextDefault': ([], 2047)}, "PosixPath('602/alloca.bc')": {'find_stack_direction': ([], 321), 'C_alloca': ([], 321)}, "PosixPath('602/tree-ssa-loop-unswitch.bc')": {'number_of_loops': ([], 2217), 'VEC_loop_p_base_iterate': ([], 2217), 'VEC_int_base_quick_push': ([], 2217), 'VEC_int_base_iterate': ([], 2217), 'get_loop': ([], 2217), 'fel_next': ([5], 2214), 'fel_init': ([], 2217), 'gimple_use_ops': ([], 2217), 'gimple_vuse': ([], 2217), 'op_iter_init': ([], 2217), 'op_iter_next_tree': ([], 2217), 'op_iter_init_tree': ([], 2217), 'gimple_ops': ([], 2217), 'gimple_op': ([], 2217), 'tree_may_unswitch_on': ([], 2217), 'single_pred_p': ([], 2217), 'single_pred_edge': ([], 2217), 'simplify_using_entry_checks': ([], 2217), 'tree_unswitch_loop': ([], 2217), 'tree_unswitch_single_loop': ([41], 2214), 'tree_ssa_unswitch_loops': ([], 2217)}, "PosixPath('602/reload.bc')": {'find_reloads_address': ([], 51507), 'push_reload': ([35, 36, 164, 179, 191, 1287], 51434), 'push_secondary_reload': ([1, 2, 41], 51468), 'find_reloads': ([38, 45, 50, 51, 93, 140, 445, 483, 507, 508, 3561, 3714, 4486, 9858, 13042, 13044, 13045, 13548, 13665, 15096, 15271], 50488), 'find_reloads_toplev': ([0, 44], 51497), 'copy_replacements': ([], 51507), 'find_reloads_subreg_address': ([33, 41], 51500), 'scratch_reload_class': ([], 51507), 'secondary_reload_class': ([], 51507), 'reload_inner_reg_of_subreg': ([], 51507), 'find_valid_class': ([], 51507), 'refers_to_mem_for_reload_p': ([], 51507), 'refers_to_regno_for_reload_p': ([2, 5], 51499), 'reg_overlap_mentioned_for_reload_p': ([0, 14], 51502), 'find_reusable_reload': ([], 51507), 'remove_address_replacements': ([], 51507), 'df_lr_get_bb_info': ([], 51507), 'hard_reg_set_here_p': ([], 51507), 'find_dummy_reload': ([], 51507), 'find_equiv_reg': ([85, 89], 51492), 'recog_memoized': ([], 51507), 'can_reload_into': ([], 51507), 'regno_ok_for_base_p': ([], 51507), 'regno_clobbered_p': ([], 51507), 'subst_reg_equivs': ([], 51507), 'copy_replacements_1': ([], 51507), 'find_inc_amount': ([], 51507), 'form_sum': ([], 51507), 'subst_indexed_address': ([13], 51498), 'get_secondary_mem': ([2], 51506), 'find_reloads_address_1': ([1, 325], 51292), 'find_reloads_address_part': ([6], 51491), 'transfer_replacements': ([], 51507), 'operands_match_p': ([0], 51504), 'decompose': ([4, 22], 51499), 'immune_p': ([], 51507), 'safe_from_earlyclobber': ([], 51507), 'skip_alternative': ([], 51507), 'alternative_allows_const_pool_ref': ([], 51507), 'push_replacement': ([0], 51499), 'dup_replacements': ([], 51507), 'combine_reloads': ([], 51507), 'reload_adjust_reg_for_mode': ([], 51507), 'subst_reloads': ([], 51507), 'move_replacements': ([0], 51493), 'find_replacement': ([5], 51505), 'debug_reload_to_stream': ([14], 51503)}, "PosixPath('602/debug.bc')": {}, "PosixPath('602/tree-chrec.bc')": {'tree_fold_binomial': ([39], 11105), 'get_loop': ([], 11106), 'tree_operand_length': ([], 11106), 'evolution_function_is_invariant_rec_p': ([0], 11105), 'evolution_function_is_affine_p': ([], 11106), 'get_chrec_loop': ([], 11106), 'initial_condition': ([], 11106), 'hide_evolution_in_other_loops_than_loop': ([], 11106), 'build_polynomial_chrec': ([], 11106), 'chrec_convert_1': ([], 11106), 'convert_affine_scev': ([], 11106), 'chrec_fold_plus_1': ([1, 2, 7, 28], 11043), 'chrec_fold_multiply': ([0, 4], 11095), 'chrec_evaluate': ([4], 11100), 'chrec_apply': ([], 11106), 'chrec_replace_initial_condition': ([], 11106), 'chrec_component_in_loop_num': ([], 11106), 'reset_evolution_in_loop': ([5], 11094), 'eq_evolutions_p': ([], 11106), 'is_multivariate_chrec_rec': ([], 11106), 'is_multivariate_chrec': ([], 11106), 'evolution_function_is_affine_multivariate_p': ([], 11106), 'evolution_function_is_univariate_p': ([], 11106), 'nb_vars_in_chrec': ([], 11106), 'chrec_convert_aggressive': ([], 11106), 'for_each_scev_op': ([], 11106), 'scev_is_linear_expression': ([0], 11100), 'evolution_function_right_is_integer_cst': ([], 11106)}, "PosixPath('602/cgraphunit.bc')": {'cgraph_build_static_cdtor': ([1], 17036), 'cgraph_copy_node_for_versioning': ([], 17089), 'save_inline_function_body': ([5], 17084), 'init_lowered_empty_function': ([], 17089), 'cgraph_decide_is_function_needed': ([], 17089), 'cgraph_reset_node': ([0], 17084), 'VEC_tree_base_space': ([], 17089), 'VEC_tree_gc_reserve': ([], 17089), 'VEC_tree_base_quick_push': ([], 17089), 'VEC_tree_gc_safe_push': ([2], 17087), 'record_cdtor_fn': ([], 17089), 'cgraph_finalize_function': ([7], 17085), 'cgraph_lower_function': ([], 17089), 'bb_seq': ([], 17089), 'gsi_start_bb': ([], 17089), 'thunk_adjust': ([], 17089), 'gimple_ops': ([], 17089), 'gimple_set_op': ([], 17089), 'single_succ_p': ([], 17089), 'single_succ_edge': ([], 17089), 'gsi_last_bb': ([], 17089), 'assemble_thunk': ([], 17089), 'cgraph_expand_function': ([], 17089), 'cgraph_process_new_functions': ([], 17089), 'gsi_stmt': ([], 17089), 'gimple_call_fndecl': ([], 17089), 'gsi_next': ([], 17089), 'verify_cgraph_node': ([123], 17087), 'verify_cgraph': ([], 17089), 'build_cdtor': ([0], 17087), 'cgraph_build_cdtor_fns': ([], 17089), 'process_function_and_variable_attributes': ([], 17089), 'cgraph_analyze_functions': ([], 17089), 'cgraph_materialize_clone': ([], 17089), 'gimple_vdef': ([], 17089), 'cgraph_redirect_edge_call_stmt_to_callee': ([], 17089), 'cgraph_materialize_all_clones': ([], 17089), 'cgraph_mark_functions_to_output': ([], 17089), 'cgraph_output_in_order': ([], 17089), 'cgraph_output_pending_asms': ([], 17089), 'cgraph_expand_all_functions': ([], 17089), 'cgraph_optimize': ([20], 17081), 'cgraph_finalize_compilation_unit': ([2, 6], 17075), 'VEC_cgraph_edge_p_base_iterate': ([], 17089), 'update_call_expr': ([], 17089), 'cgraph_function_versioning': ([], 17089)}, "PosixPath('602/c-omp.bc')": {'c_finish_omp_critical': ([], 3344), 'c_finish_omp_atomic': ([], 3344), 'check_omp_for_incr_expr': ([], 3344), 'c_finish_omp_for': ([2], 3341), 'c_split_parallel_clauses': ([], 3344)}, "PosixPath('602/make-relative-prefix.bc')": {'split_directories': ([], 1509), 'make_relative_prefix_1': ([2], 1474)}, "PosixPath('602/dce.bc')": {'marked_insn_p': ([], 7815), 'VEC_rtx_base_space': ([], 7815), 'VEC_rtx_heap_reserve': ([], 7815), 'VEC_rtx_base_quick_push': ([], 7815), 'VEC_rtx_heap_safe_push': ([], 7815), 'deletable_insn_p': ([], 7815), 'find_call_stack_args': ([99, 146], 7804), 'mark_insn': ([], 7815), 'prescan_insns_for_dce': ([], 7815), 'ei_next': ([], 7815), 'bb_has_eh_pred': ([5], 7813), 'df_byte_lr_get_bb_info': ([], 7815), 'byte_dce_process_block': ([], 7815), 'df_lr_get_bb_info': ([], 7815), 'dce_process_block': ([], 7815), 'delete_corresponding_reg_eq_notes': ([], 7815), 'delete_unmarked_insns': ([], 7815), 'fast_dce': ([], 7815), 'df_scan_get_bb_info': ([], 7815), 'df_get_artificial_uses': ([], 7815), 'mark_artificial_uses': ([], 7815), 'VEC_rtx_base_pop': ([], 7815), 'mark_reg_dependencies': ([], 7815), 'rest_of_handle_ud_dce': ([], 7815)}, "PosixPath('602/regcprop.bc')": {'debug_value_data': ([], 7002), 'single_pred_p': ([], 7002), 'single_pred_edge': ([], 7002), 'init_value_data': ([], 7002), 'regno_ok_for_base_p': ([], 7002), 'mode_change_ok': ([], 7002), 'maybe_mode_change': ([], 7002), 'find_oldest_value_reg': ([], 7002), 'replace_oldest_value_reg': ([], 7002), 'replace_oldest_value_addr': ([], 7002), 'free_debug_insn_changes': ([], 7002), 'kill_value_one_regno': ([], 7002), 'kill_value': ([], 7002), 'set_value_regno': ([], 7002), 'copy_value': ([], 7002), 'kill_set_value': ([], 7002), 'kill_autoinc_value': ([], 7002), 'apply_debug_insn_changes': ([], 7002), 'cprop_find_used_regs_1': ([], 7002), 'copyprop_hardreg_forward_1': ([], 7002), 'copyprop_hardreg_forward': ([6], 6999)}, "PosixPath('602/tree-ssa-structalias.bc')": {'heapvar_insert': ([], 38246), 'create_variable_info_for': ([79], 38243), 'get_constraint_for_ptr_offset': ([], 38246), 'do_structure_copy': ([65], 38244), 'get_constraint_for_ssa_var': ([7], 38239), 'init_graph': ([], 38246), 'build_pred_graph': ([], 38246), 'rewrite_constraints': ([], 38246), 'solve_graph': ([], 38246), 'condense_visit': ([484, 545, 547, 591, 593], 38234), 'scc_visit': ([0, 13, 25, 138], 38226), 'do_complex_constraint': ([], 38246), 'dump_constraint': ([], 38246), 'VEC_constraint_t_base_iterate': ([], 38246), 'dump_constraints': ([], 38246), 'dump_constraint_edge': ([], 38246), 'dump_constraint_graph': ([], 38246), 'find': ([], 38246), 'bmp_iter_set_init': ([], 38246), 'bmp_iter_set': ([4], 38241), 'bmp_iter_next': ([], 38246), 'dump_solution_for_var': ([8], 38224), 'pt_solution_reset': ([], 38246), 'is_global_var': ([], 38246), 'pt_solution_set': ([5], 38237), 'pt_solution_includes_global': ([], 38246), 'pt_solution_includes_1': ([2], 38245), 'pt_solution_empty_p': ([], 38246), 'pt_solutions_intersect_1': ([0], 38236), 'pt_solutions_same_restrict_base': ([2, 3], 38242), 'VEC_varinfo_t_base_space': ([], 38246), 'VEC_varinfo_t_heap_reserve': ([], 38246), 'VEC_varinfo_t_base_quick_push': ([], 38246), 'VEC_varinfo_t_heap_safe_push': ([], 38246), 'new_var_info': ([], 38246), 'new_constraint': ([], 38246), 'VEC_constraint_t_base_space': ([], 38246), 'VEC_constraint_t_heap_reserve': ([], 38246), 'VEC_constraint_t_base_quick_push': ([], 38246), 'VEC_constraint_t_heap_safe_push': ([], 38246), 'new_scalar_tmp_constraint_exp': ([], 38246), 'process_constraint': ([10], 38242), 'init_base_vars': ([], 38246), 'init_alias_vars': ([], 38246), 'heapvar_map_eq': ([], 38246), 'type_could_have_pointers': ([], 38246), 'heapvar_map_hash': ([], 38246), 'heapvar_lookup': ([], 38246), 'get_var_ann': ([], 38246), 'gimple_referenced_vars': ([], 38246), 'alias_get_name': ([], 38246), 'var_can_have_subvars': ([], 38246), 'bitpos_of_field': ([], 38246), 'VEC_fieldoff_s_base_space': ([], 38246), 'VEC_fieldoff_s_heap_reserve': ([], 38246), 'VEC_fieldoff_s_heap_safe_push': ([], 38246), 'push_fields_onto_fieldstack': ([], 38246), 'make_constraint_from_heapvar': ([], 38246), 'fieldoff_compare': ([], 38246), 'get_vi_for_tree': ([67], 38243), 'intra_create_variable_infos': ([], 38246), 'gsi_stmt': ([], 38246), 'VEC_ce_s_base_space': ([], 38246), 'VEC_ce_s_heap_reserve': ([], 38246), 'VEC_ce_s_base_quick_push': ([], 38246), 'VEC_ce_s_heap_safe_push': ([2], 38244), 'do_deref': ([], 38246), 'ref_contains_array_ref': ([], 38246), 'get_constraint_for_1': ([35, 37, 45], 38228), 'get_constraint_for_address_of': ([2], 38245), 'get_constraint_for': ([], 38246), 'gimple_ops': ([], 38246), 'gimple_op': ([], 38246), 'gimple_call_fndecl': ([], 38246), 'first_or_preceding_vi_for_offset': ([], 38246), 'process_all_all_constraints': ([], 38246), 'make_constraint_to': ([], 38246), 'handle_const_call': ([], 38246), 'handle_pure_call': ([], 38246), 'handle_rhs_call': ([], 38246), 'handle_lhs_call': ([], 38246), 'first_vi_for_offset': ([], 38246), 'gimple_asm_output_op': ([], 38246), 'find_func_aliases': ([], 38246), 'gsi_next': ([], 38246), 'bb_seq': ([], 38246), 'gsi_start_bb': ([], 38246), 'add_pred_graph_edge': ([0], 38244), 'add_implicit_graph_edge': ([0], 38244), 'init_scc_info': ([], 38246), 'VEC_unsigned_base_last': ([], 38246), 'VEC_unsigned_base_pop': ([], 38246), 'VEC_unsigned_base_space': ([], 38246), 'VEC_unsigned_heap_reserve': ([], 38246), 'VEC_unsigned_base_quick_push': ([], 38246), 'VEC_unsigned_heap_safe_push': ([2], 38244), 'equiv_class_lookup': ([], 38246), 'equiv_class_add': ([], 38246), 'label_visit': ([12], 38244), 'equiv_class_label_eq': ([], 38246), 'perform_var_substitution': ([], 38246), 'unite': ([], 38246), 'merge_graph_nodes': ([], 38246), 'constraint_less': ([], 38246), 'constraint_equal': ([], 38246), 'constraint_vec_find': ([], 38246), 'VEC_constraint_t_base_quick_insert': ([], 38246), 'VEC_constraint_t_heap_safe_insert': ([], 38246), 'constraint_set_union': ([], 38246), 'merge_node_constraints': ([], 38246), 'unify_nodes': ([], 38246), 'find_equivalent_node': ([], 38246), 'add_graph_edge': ([0, 1], 38242), 'build_succ_graph': ([], 38246), 'free_scc_info': ([], 38246), 'free_var_substitution_info': ([], 38246), 'insert_into_complex': ([], 38246), 'move_complex_constraints': ([], 38246), 'unite_pointer_equivalences': ([], 38246), 'find_indirect_cycles': ([], 38246), 'remove_preds_and_fake_succs': ([], 38246), 'topo_visit': ([9], 38237), 'compute_topo_order': ([], 38246), 'VEC_unsigned_base_iterate': ([], 38246), 'eliminate_indirect_cycles': ([], 38246), 'solution_set_expand': ([4], 38232), 'do_ds_constraint': ([], 38246), 'do_sd_constraint': ([], 38246), 'solution_set_add': ([], 38246), 'set_union_with_increment': ([], 38246), 'free_topo_info': ([], 38246), 'solve_constraints': ([83, 922], 38226), 'set_uids_in_ptset': ([], 38246), 'shared_bitmap_lookup': ([], 38246), 'shared_bitmap_add': ([], 38246), 'find_what_var_points_to': ([17], 38241), 'VEC_varinfo_t_base_iterate': ([], 38246), 'find_what_p_points_to': ([], 38246), 'compute_points_to_sets': ([], 38246), 'delete_points_to_sets': ([0], 38245), 'compute_may_aliases': ([], 38246), 'count_num_arguments': ([], 38246), 'insert_into_field_list_sorted': ([], 38246), 'create_function_info_for': ([], 38246), 'ipa_pta_execute': ([77], 38244), 'gate_ipa_pta': ([], 38246)}, "PosixPath('602/tree-dfa.bc')": {'bb_seq': ([], 9479), 'gsi_start_bb': ([], 9479), 'gsi_stmt': ([], 9479), 'gsi_next': ([], 9479), 'renumber_gimple_stmt_uids': ([], 9479), 'renumber_gimple_stmt_uids_in_blocks': ([], 9479), 'gimple_referenced_vars': ([], 9479), 'get_var_ann': ([], 9479), 'referenced_var_check_and_insert': ([], 9479), 'add_referenced_var': ([], 9479), 'find_vars_r': ([], 9479), 'make_rename_temp': ([], 9479), 'first_htab_element': ([], 9479), 'first_referenced_var': ([], 9479), 'end_htab_p': ([], 9479), 'end_referenced_vars_p': ([], 9479), 'var_ann': ([], 9479), 'is_global_var': ([], 9479), 'may_be_aliased': ([], 9479), 'is_call_clobbered': ([], 9479), 'gimple_default_def': ([], 9479), 'dump_variable': ([7], 9473), 'next_htab_element': ([], 9479), 'next_referenced_var': ([], 9479), 'dump_referenced_vars': ([], 9479), 'gimple_def_ops': ([], 9479), 'gimple_vdef': ([], 9479), 'gimple_use_ops': ([], 9479), 'gimple_vuse': ([], 9479), 'op_iter_init': ([], 9479), 'op_iter_next_tree': ([], 9479), 'num_ssa_operands': ([], 9479), 'collect_dfa_stats': ([], 9479), 'dump_dfa_stats': ([], 9479), 'gimple_ops': ([], 9479), 'gimple_op_ptr': ([], 9479), 'find_referenced_vars_in': ([], 9479), 'referenced_var_lookup': ([], 9479), 'set_default_def': ([33], 9477), 'remove_referenced_var': ([0], 9475), 'get_virtual_var': ([], 9479), 'mark_symbols_for_renaming': ([], 9479), 'find_new_referenced_vars_1': ([0], 9463), 'get_ref_base_and_extent': ([], 9479), 'op_iter_next_use': ([], 9479), 'stmt_references_abnormal_ssa_name': ([], 9479), 'find_referenced_vars': ([], 9479)}, "PosixPath('602/dbxout.bc')": {'dbxout_init': ([], 26981), 'dbxout_end_source_file': ([], 26981), 'dbxout_symbol': ([], 26981), 'dbxout_type': ([7, 72, 100, 283], 26956), 'stabstr_D': ([], 26981), 'stabstr_U': ([], 26981), 'dbxout_int': ([], 26981), 'dbxout_stab_value_internal_label': ([], 26981), 'dbxout_stab_value_internal_label_diff': ([], 26981), 'emit_pending_bincls': ([], 26981), 'emit_pending_bincls_if_required': ([], 26981), 'VEC_tree_base_iterate': ([], 26981), 'output_types_sort': ([], 26981), 'VEC_tree_base_quick_push': ([], 26981), 'output_used_types_helper': ([], 26981), 'output_used_types': ([], 26981), 'dbxout_type_index': ([], 26981), 'print_int_cst_bounds_in_octal_p': ([], 26981), 'stabstr_O': ([], 26981), 'dbxout_type_name': ([], 26981), 'dbxout_range_type': ([], 26981), 'dbxout_finish_complex_stabs': ([], 26981), 'dbxout_class_name_qualifiers': ([], 26981), 'dbxout_symbol_name': ([], 26981), 'dbxout_expand_expr': ([], 26981), 'dbxout_common_check': ([9], 26979), 'dbxout_symbol_location': ([18, 25], 26951), 'dbxout_syms': ([], 26981), 'dbxout_parms': ([41, 59], 26973), 'dbxout_reg_parms': ([], 26981), 'dbxout_start_source_file': ([], 26981), 'dbxout_global_decl': ([], 26981), 'dbxout_block': ([], 26981), 'dbxout_function_end': ([], 26981), 'dbxout_function_decl': ([], 26981), 'dbxout_begin_function': ([], 26981), 'dbxout_source_line': ([], 26981), 'dbxout_typedefs': ([], 26981)}, "PosixPath('602/sese.bc')": {'create_if_region_on_edge': ([47], 13876), 'bb_in_sese_p': ([], 13878), 'sese_contains_loop': ([], 13878), 'VEC_loop_p_base_space': ([], 13878), 'VEC_loop_p_heap_reserve': ([], 13878), 'VEC_loop_p_base_quick_push': ([], 13878), 'VEC_loop_p_heap_safe_push': ([], 13878), 'sese_record_loop': ([], 13878), 'VEC_loop_p_base_iterate': ([], 13878), 'build_sese_loop_nests': ([21], 13874), 'new_sese': ([], 13878), 'free_sese': ([], 13878), 'gsi_stmt': ([], 13878), 'sese_build_liveouts_use': ([], 13878), 'gsi_next': ([], 13878), 'ei_next': ([], 13878), 'bb_seq': ([], 13878), 'gsi_start_bb': ([], 13878), 'gimple_def_ops': ([], 13878), 'gimple_vdef': ([], 13878), 'gimple_use_ops': ([], 13878), 'gimple_vuse': ([], 13878), 'op_iter_init': ([], 13878), 'op_iter_next_use': ([], 13878), 'sese_build_liveouts_bb': ([], 13878), 'sese_bad_liveouts_use': ([], 13878), 'gimple_ops': ([], 13878), 'gimple_set_op': ([], 13878), 'sese_reset_debug_liveouts_bb': ([], 13878), 'sese_build_liveouts': ([], 13878), 'bmp_iter_set_init': ([], 13878), 'bmp_iter_set': ([], 13878), 'bmp_iter_next': ([], 13878), 'sese_insert_phis_for_liveouts': ([], 13878), 'new_rename_map_elt': ([], 13878), 'number_of_loops': ([], 13878), 'VEC_int_base_quick_push': ([], 13878), 'loop_outer': ([], 13878), 'VEC_int_base_iterate': ([], 13878), 'get_loop': ([], 13878), 'fel_next': ([5], 13875), 'fel_init': ([], 13878), 'get_rename': ([], 13878), 'rename_variables_in_expr': ([], 13878), 'rename_nb_iterations': ([], 13878), 'VEC_tree_base_iterate': ([], 13878), 'rename_sese_parameters': ([], 13878), 'gimple_vuse_op': ([], 13878), 'get_vdef_before_sese': ([12], 13870), 'delink_imm_use': ([], 13878), 'link_imm_use_to_list': ([], 13878), 'link_imm_use': ([], 13878), 'set_ssa_use_from_ptr': ([], 13878), 'sese_adjust_vphi': ([], 13878), 'sese_adjust_liveout_phis': ([11], 13876), 'get_true_edge_from_guard_bb': ([5], 13876), 'get_false_edge_from_guard_bb': ([5], 13876), 'VEC_rename_map_elt_base_iterate': ([], 13878), 'name_defined_in_loop_p': ([], 13878), 'expr_defined_in_loop_p': ([], 13878), 'end_readonly_imm_use_p': ([], 13878), 'first_readonly_imm_use': ([], 13878), 'next_readonly_imm_use': ([], 13878), 'alive_after_loop': ([], 13878), 'close_phi_not_yet_inserted_p': ([], 13878), 'single_pred_p': ([], 13878), 'single_pred_edge': ([], 13878), 'VEC_rename_map_elt_base_space': ([], 13878), 'VEC_rename_map_elt_heap_reserve': ([], 13878), 'VEC_rename_map_elt_base_quick_push': ([], 13878), 'VEC_rename_map_elt_heap_safe_push': ([], 13878), 'add_loop_exit_phis': ([], 13878), 'insert_loop_close_phis': ([], 13878), 'convert_for_phi_arg': ([], 13878), 'add_guard_exit_phis': ([], 13878), 'insert_guard_phis': ([], 13878), 'single_succ_p': ([], 13878), 'single_succ_edge': ([], 13878), 'gimple_vop': ([], 13878), 'op_iter_next_def': ([], 13878), 'op_iter_init_def': ([], 13878), 'graphite_copy_stmts_from_block': ([], 13878), 'gsi_last_bb': ([], 13878), 'gsi_after_labels': ([], 13878), 'is_parameter': ([], 13878), 'gimple_call_fndecl': ([], 13878), 'VEC_tree_base_quick_push': ([], 13878), 'expand_scalar_variables_stmt': ([], 13878), 'expand_scalar_variables_expr': ([], 13878), 'expand_scalar_variables_ssa_name': ([], 13878), 'expand_scalar_variables': ([], 13878), 'rename_variables_in_stmt': ([], 13878), 'rename_variables': ([], 13878), 'copy_bb_and_scalar_dependences': ([], 13878), 'if_region_entry': ([], 13878), 'if_region_get_condition_block': ([], 13878), 'if_region_set_false_region': ([], 13878), 'set_ifsese_condition': ([], 13878), 'block_before_sese': ([], 13878), 'loop_depth': ([], 13878), 'scalar_evolution_in_region': ([], 13878)}, "PosixPath('602/tree-ssa-ifcombine.bc')": {'tree_ssa_ifcombine_bb': ([], 5356), 'recognize_if_then_else': ([32], 5354), 'single_pred_p': ([], 5356), 'single_pred_edge': ([], 5356), 'single_pred': ([], 5356), 'gsi_stmt': ([], 5356), 'gsi_next': ([], 5356), 'same_phi_args_p': ([], 5356), 'bb_seq': ([], 5356), 'gsi_start_bb': ([], 5356), 'gimple_vuse': ([], 5356), 'bb_no_side_effects_p': ([], 5356), 'gimple_ops': ([], 5356), 'gimple_op': ([], 5356), 'has_single_use': ([], 5356), 'get_name_for_bit_test': ([], 5356), 'recognize_single_bit_test': ([0], 5350), 'ifcombine_ifandif': ([], 5356), 'ifcombine_iforif': ([0], 5348), 'tree_ssa_ifcombine': ([], 5356)}, "PosixPath('602/options.bc')": {'cl_optimization_save': ([], 114683), 'cl_optimization_restore': ([], 114683), 'cl_optimization_print': ([], 114683), 'cl_target_option_save': ([], 114683), 'cl_target_option_restore': ([], 114683), 'cl_target_option_print': ([], 114683)}, "PosixPath('602/getopt1.bc')": {}, "PosixPath('602/graphite-poly.bc')": {}, "PosixPath('602/print-tree.bc')": {'print_node': ([38, 52, 60, 66, 82, 86, 89, 97], 10626), 'print_node_brief': ([4, 10], 10792), 'init_call_expr_arg_iterator': ([], 10796), 'next_call_expr_arg': ([], 10796), 'first_call_expr_arg': ([], 10796), 'tree_operand_length': ([], 10796), 'tsi_next': ([], 10796), 'debug_tree': ([], 10796)}, "PosixPath('602/unlink-if-ordinary.bc')": {'unlink_if_ordinary': ([], 152)}, "PosixPath('602/double-int.bc')": {'dump_double_int': ([], 2683), 'tree_to_double_int': ([], 2683), 'double_int_mul': ([], 2683), 'double_int_add': ([], 2683), 'double_int_neg': ([], 2683), 'double_int_divmod': ([], 2683), 'double_int_mod': ([], 2683), 'double_int_to_tree': ([], 2683), 'double_int_fits_to_tree_p': ([], 2683), 'double_int_split_digit': ([], 2683), 'mpz_set_double_int': ([], 2683), 'mpz_get_double_int': ([], 2683)}, "PosixPath('602/tree-switch-conversion.bc')": {'gimple_ops': ([], 5998), 'gimple_op': ([], 5998), 'check_range': ([], 5998), 'single_pred_p': ([], 5998), 'single_succ_p': ([], 5998), 'single_succ_edge': ([], 5998), 'check_process_case': ([], 5998), 'gsi_stmt': ([], 5998), 'single_pred_edge': ([], 5998), 'single_pred': ([], 5998), 'gsi_next': ([], 5998), 'check_final_bb': ([], 5998), 'create_temp_arrays': ([], 5998), 'gather_default_values': ([], 5998), 'build_constructors': ([], 5998), 'build_one_array': ([], 5998), 'build_arrays': ([], 5998), 'gen_def_assigns': ([], 5998), 'bb_seq': ([], 5998), 'gsi_start_bb': ([], 5998), 'fix_phi_nodes': ([], 5998), 'gen_inbound_check': ([], 5998), 'free_temp_arrays': ([], 5998), 'process_switch': ([], 5998), 'do_switchconv': ([], 5998)}, "PosixPath('602/langhooks.bc')": {'add_builtin_function_common': ([6], 3293), 'lhd_warn_unused_global_decl': ([], 3294), 'lhd_set_decl_assembler_name': ([0], 3288), 'lhd_decl_printable_name': ([0], 3292), 'lhd_dwarf_name': ([], 3294), 'lhd_tree_dump_type_quals': ([], 3294), 'lhd_print_error_function': ([], 3294)}, "PosixPath('602/tree-ssa-address.bc')": {'VEC_mem_addr_template_base_space': ([], 6163), 'VEC_mem_addr_template_gc_reserve_exact': ([], 6163), 'VEC_mem_addr_template_gc_safe_grow': ([], 6163), 'VEC_mem_addr_template_gc_safe_grow_cleared': ([], 6163), 'gen_addr_rtx': ([], 6163), 'addr_for_mem_ref': ([], 6163), 'tree_mem_ref_addr': ([], 6163), 'fixed_address_object_p': ([], 6163), 'move_fixed_address_to_symbol': ([], 6163), 'most_expensive_mult_to_index': ([], 6163), 'move_hint_to_base': ([], 6163), 'move_pointer_to_base': ([], 6163), 'add_to_parts': ([], 6163), 'addr_to_parts': ([74], 6150), 'gimplify_mem_ref_parts': ([], 6163), 'create_mem_ref_raw': ([2, 3], 6154), 'create_mem_ref': ([60, 81], 6129), 'get_address_description': ([], 6163), 'copy_mem_ref_info': ([], 6163), 'maybe_fold_tmr': ([4, 5, 6], 6138), 'dump_mem_address': ([], 6163)}, "PosixPath('602/tree-ssa-loop-ch.bc')": {'number_of_loops': ([], 1834), 'VEC_int_base_quick_push': ([], 1834), 'loop_outer': ([], 1834), 'VEC_int_base_iterate': ([], 1834), 'get_loop': ([], 1834), 'fel_next': ([5], 1831), 'fel_init': ([], 1834), 'single_succ_p': ([], 1834), 'single_pred_p': ([], 1834), 'bb_seq': ([], 1834), 'gsi_start_bb': ([], 1834), 'gsi_stmt': ([], 1834), 'gsi_next': ([], 1834), 'should_duplicate_loop_header_p': ([], 1834), 'single_pred_edge': ([], 1834), 'gimple_ops': ([], 1834), 'gimple_op': ([], 1834), 'gimple_assign_rhs1': ([], 1834), 'gimple_assign_rhs_code': ([], 1834), 'copy_loop_headers': ([7], 1831)}, "PosixPath('602/regex.bc')": {'byte_re_match_2_internal': ([1, 227, 245, 246, 270, 271, 540, 566], 24133), 'byte_re_compile_fastmap': ([], 24207), 'xre_set_registers': ([0], 24201), 'byte_group_match_null_string_p': ([], 24207), 'byte_alt_match_null_string_p': ([], 24207), 'byte_common_op_match_null_string_p': ([], 24207), 'byte_bcmp_translate': ([], 24207), 'byte_re_search_2': ([], 24207), 'xre_search_2': ([], 24207), 'init_syntax_once': ([], 24207), 'byte_at_begline_loc_p': ([], 24207), 'byte_at_endline_loc_p': ([], 24207), 'byte_store_op1': ([], 24207), 'byte_insert_op1': ([], 24207), 'byte_compile_range': ([], 24207), 'byte_store_op2': ([], 24207), 'byte_insert_op2': ([], 24207), 'byte_regex_compile': ([0, 5, 20, 61, 75, 87, 122, 212, 513], 23681), 'xre_compile_pattern': ([], 24207), 'xre_comp': ([], 24207), 'xregcomp': ([], 24207), 'xregexec': ([], 24207), 'xregfree': ([], 24207)}, "PosixPath('602/tree-ssa.bc')": {'insert_debug_temp_for_var_def': ([2, 3, 13, 31], 15844), 'first_imm_use_on_stmt': ([], 15890), 'next_imm_use_on_stmt': ([], 15890), 'init_tree_ssa': ([], 15890), 'delete_tree_ssa': ([], 15890), 'VEC_edge_var_map_base_space': ([], 15890), 'VEC_edge_var_map_heap_reserve': ([], 15890), 'VEC_edge_var_map_base_quick_push': ([], 15890), 'VEC_edge_var_map_heap_safe_push': ([], 15890), 'redirect_edge_var_map_add': ([], 15890), 'VEC_edge_var_map_heap_copy': ([], 15890), 'redirect_edge_var_map_dup': ([], 15890), 'gsi_stmt': ([], 15890), 'gsi_next': ([], 15890), 'ssa_redirect_edge': ([], 15890), 'flush_pending_stmts': ([], 15890), 'target_for_debug_bind': ([], 15890), 'end_readonly_imm_use_p': ([], 15890), 'first_readonly_imm_use': ([], 15890), 'gimple_ops': ([], 15890), 'next_readonly_imm_use': ([], 15890), 'end_imm_use_stmt_p': ([], 15890), 'clear_and_done_ssa_iter': ([], 15890), 'op_iter_next_use': ([], 15890), 'op_iter_init_phiuse': ([], 15890), 'delink_imm_use': ([], 15890), 'link_imm_use_to_list': ([], 15890), 'move_use_after_head': ([], 15890), 'gimple_def_ops': ([], 15890), 'gimple_vdef': ([], 15890), 'gimple_use_ops': ([], 15890), 'gimple_vuse': ([], 15890), 'op_iter_init': ([], 15890), 'gimple_vuse_op': ([], 15890), 'link_use_stmts_after': ([], 15890), 'first_imm_use_stmt': ([], 15890), 'link_imm_use': ([], 15890), 'set_ssa_use_from_ptr': ([], 15890), 'gimple_set_op': ([], 15890), 'gimple_debug_bind_reset_value': ([], 15890), 'next_imm_use_stmt': ([], 15890), 'find_released_ssa_name': ([], 15890), 'op_iter_init_phidef': ([], 15890), 'op_iter_next_def': ([], 15890), 'op_iter_init_def': ([], 15890), 'insert_debug_temps_for_defs': ([20], 15889), 'bmp_iter_set_init': ([], 15890), 'bmp_iter_set': ([], 15890), 'bmp_iter_next': ([], 15890), 'release_defs_bitset': ([16], 15889), 'gimple_vop': ([], 15890), 'verify_ssa_name': ([], 15890), 'verify_def': ([], 15890), 'ei_next': ([], 15890), 'verify_use': ([1], 15887), 'verify_phi_args': ([], 15890), 'bb_seq': ([], 15890), 'gsi_start_bb': ([], 15890), 'gimple_vdef_op': ([], 15890), 'op_iter_next_tree': ([], 15890), 'verify_ssa': ([80], 15876), 'gimple_referenced_vars': ([], 15890), 'first_htab_element': ([], 15890), 'first_referenced_var': ([], 15890), 'end_htab_p': ([], 15890), 'end_referenced_vars_p': ([], 15890), 'is_global_var': ([], 15890), 'var_ann': ([], 15890), 'next_htab_element': ([], 15890), 'next_referenced_var': ([], 15890), 'useless_type_conversion_p': ([64], 15888), 'tree_ssa_useless_type_conversion': ([], 15890), 'walk_use_def_chains_1': ([], 15890), 'walk_use_def_chains': ([], 15890), 'ssa_undefined_value_p': ([], 15890), 'gimple_references_memory_p': ([], 15890), 'execute_update_addresses_taken': ([], 15890), 'single_succ_p': ([], 15890), 'single_succ_edge': ([], 15890), 'single_succ': ([], 15890), 'warn_uninit': ([], 15890), 'warn_uninitialized_var': ([], 15890), 'warn_uninitialized_vars': ([], 15890), 'warn_uninitialized_phi': ([], 15890), 'execute_late_warn_uninitialized': ([], 15890)}, "PosixPath('602/safe-ctype.bc')": {}, "PosixPath('602/partition.bc')": {'partition_new': ([], 840), 'partition_union': ([], 840), 'partition_print': ([], 840)}, "PosixPath('602/ipa-type-escape.bc')": {'ipa_type_escape_star_count_of_interesting_type': ([], 11194), 'ipa_type_escape_star_count_of_interesting_or_array_type': ([], 11194), 'type_to_consider': ([], 11194), 'get_name_of_type': ([], 11194), 'discover_unique_type': ([], 11194), 'get_canon_type': ([], 11194), 'ipa_type_escape_field_does_not_clobber_p': ([], 11194), 'gimple_def_ops': ([], 11194), 'gimple_vdef': ([], 11194), 'gimple_use_ops': ([], 11194), 'gimple_vuse': ([], 11194), 'op_iter_init': ([], 11194), 'op_iter_next_tree': ([], 11194), 'single_ssa_tree_operand': ([], 11194), 'gimple_ops': ([], 11194), 'gimple_op': ([], 11194), 'count_stars': ([], 11194), 'VEC_tree_base_iterate': ([], 11194), 'parent_type_p': ([], 11194), 'check_cast_type': ([], 11194), 'is_malloc_result': ([], 11194), 'check_cast': ([], 11194), 'look_for_casts': ([], 11194), 'look_for_casts_stmt': ([], 11194), 'op_iter_next_use': ([], 11194), 'is_cast_from_non_pointer': ([], 11194), 'is_array_access_through_pointer_and_index': ([], 11194), 'compare_type_brand': ([], 11194), 'check_function_parameter_and_return_types': ([], 11194), 'has_proper_scope_for_analysis': ([], 11194), 'check_tree': ([0], 11190), 'analyze_variable': ([], 11194), 'bb_seq': ([], 11194), 'gsi_start_bb': ([], 11194), 'gsi_stmt': ([], 11194), 'okay_pointer_operation': ([], 11194), 'mark_interesting_addressof': ([], 11194), 'look_for_address_of': ([], 11194), 'check_rhs_var': ([], 11194), 'gimple_call_fndecl': ([], 11194), 'check_call': ([], 11194), 'gimple_asm_output_op': ([], 11194), 'check_asm': ([], 11194), 'scan_for_refs': ([], 11194), 'gsi_next': ([], 11194), 'analyze_function': ([], 11194), 'bmp_iter_set_init': ([], 11194), 'bmp_iter_set': ([4], 11189), 'close_type_seen': ([], 11194), 'bmp_iter_next': ([], 11194), 'close_type_exposed_parameter': ([], 11194), 'close_type_full_escape': ([6], 11189), 'close_addressof_down': ([], 11194), 'type_escape_execute': ([], 11194), 'gate_type_escape_vars': ([], 11194)}, "PosixPath('602/fwprop.bc')": {'propagate_rtx': ([4], 9013), 'propagate_rtx_1': ([2], 9016), 'VEC_df_ref_base_space': ([], 9017), 'VEC_df_ref_heap_reserve_exact': ([], 9017), 'VEC_df_ref_heap_safe_grow': ([0], 9015), 'VEC_df_ref_heap_safe_grow_cleared': ([], 9017), 'VEC_df_ref_base_pop': ([], 9017), 'single_def_use_leave_block': ([], 9017), 'df_md_get_bb_info': ([], 9017), 'df_lr_get_bb_info': ([], 9017), 'VEC_df_ref_heap_reserve': ([], 9017), 'VEC_df_ref_base_quick_push': ([], 9017), 'VEC_df_ref_heap_safe_push': ([2], 9015), 'df_scan_get_bb_info': ([], 9017), 'df_get_artificial_uses': ([], 9017), 'process_uses': ([], 9017), 'df_get_artificial_defs': ([], 9017), 'process_defs': ([], 9017), 'single_def_use_enter_block': ([], 9017), 'build_single_def_use_links': ([], 9017), 'fwprop_init': ([], 9017), 'loop_outer': ([], 9017), 'local_ref_killed_between_p': ([], 9017), 'single_pred_p': ([], 9017), 'single_pred_edge': ([], 9017), 'single_pred': ([], 9017), 'use_killed_between': ([], 9017), 'all_uses_available_at': ([7], 9009), 'can_simplify_addr': ([], 9017), 'canonicalize_address': ([], 9017), 'forward_propagate_asm': ([], 9017), 'find_occurrence': ([], 9017), 'update_df': ([], 9017), 'try_fwprop_subst': ([], 9017), 'forward_propagate_and_simplify': ([], 9017), 'forward_propagate_subreg': ([], 9017), 'forward_propagate_into': ([], 9017), 'fwprop_addr': ([], 9017), 'fwprop': ([], 9017)}, "PosixPath('602/expmed.bc')": {'choose_mult_variant': ([10], 44711), 'choose_multiplier': ([4, 6, 14], 44707), 'synth_mult': ([0], 44721), 'init_expmed': ([108], 44707), 'mode_for_extraction': ([], 44731), 'check_predicate_volatile_ok': ([], 44731), 'make_tree': ([], 44731), 'expand_shift': ([18], 44728), 'extract_fixed_bit_field': ([0, 12], 44713), 'extract_split_bit_field': ([], 44731), 'store_fixed_bit_field': ([], 44731), 'store_split_bit_field': ([5], 44727), 'store_bit_field_1': ([1, 27, 31, 52, 53], 44715), 'convert_extracted_bit_field': ([], 44731), 'extract_bit_field_1': ([43, 65], 44608), 'extract_low_bits': ([], 44731), 'expand_mult_const': ([], 44731), 'expand_mult': ([], 44731), 'emit_cstore': ([], 44731), 'emit_store_flag': ([44], 44721), 'emit_store_flag_1': ([], 44731), 'emit_store_flag_force': ([], 44731), 'extract_high_half': ([], 44731), 'expand_mult_highpart_optab': ([], 44731), 'expand_mult_highpart': ([], 44731), 'expand_divmod': ([], 44731)}, "PosixPath('602/tree-ssa-operands.bc')": {'init_ssa_operands': ([], 9782), 'create_vop_var': ([], 9782), 'fini_ssa_operands': ([], 9782), 'first_imm_use_on_stmt': ([], 9782), 'next_imm_use_on_stmt': ([], 9782), 'ssa_operands_active': ([], 9782), 'gimple_def_ops': ([], 9782), 'gimple_use_ops': ([], 9782), 'delink_imm_use': ([], 9782), 'free_stmt_operands': ([], 9782), 'start_ssa_stmt_operands': ([], 9782), 'gimple_ops': ([], 9782), 'gimple_asm_output_op': ([], 9782), 'VEC_tree_base_space': ([], 9782), 'VEC_tree_heap_reserve': ([], 9782), 'VEC_tree_base_quick_push': ([], 9782), 'VEC_tree_heap_safe_push': ([], 9782), 'gimple_vop': ([0], 9780), 'add_stmt_operand': ([0, 2], 9771), 'get_expr_operands': ([0], 9780), 'gimple_asm_clobber_op': ([], 9782), 'get_asm_expr_operands': ([31, 48], 9776), 'parse_ssa_operands': ([], 9782), 'gimple_vdef': ([], 9782), 'VEC_tree_base_quick_insert': ([], 9782), 'VEC_tree_heap_safe_insert': ([], 9782), 'end_imm_use_stmt_p': ([], 9782), 'clear_and_done_ssa_iter': ([], 9782), 'op_iter_next_use': ([], 9782), 'op_iter_init_phiuse': ([], 9782), 'link_imm_use_to_list': ([], 9782), 'move_use_after_head': ([], 9782), 'gimple_vuse': ([], 9782), 'op_iter_init': ([], 9782), 'op_iter_init_use': ([], 9782), 'gimple_vuse_op': ([], 9782), 'link_use_stmts_after': ([], 9782), 'first_imm_use_stmt': ([], 9782), 'link_imm_use': ([], 9782), 'next_imm_use_stmt': ([], 9782), 'unlink_stmt_vdef': ([], 9782), 'ssa_operand_alloc': ([11, 25], 9762), 'alloc_def': ([], 9782), 'add_def_op': ([], 9782), 'finalize_ssa_defs': ([], 9782), 'alloc_use': ([], 9782), 'link_imm_use_stmt': ([], 9782), 'add_use_op': ([], 9782), 'finalize_ssa_uses': ([], 9782), 'cleanup_build_arrays': ([], 9782), 'finalize_ssa_stmt_operands': ([], 9782), 'build_ssa_operands': ([], 9782), 'update_stmt_operands': ([49], 9779), 'swap_tree_operands': ([], 9782), 'verify_imm_links': ([], 9782), 'has_zero_uses': ([], 9782), 'has_single_use': ([], 9782), 'num_imm_uses': ([], 9782), 'end_readonly_imm_use_p': ([], 9782), 'first_readonly_imm_use': ([], 9782), 'next_readonly_imm_use': ([], 9782), 'dump_immediate_uses_for': ([1], 9778), 'dump_immediate_uses': ([], 9782)}, "PosixPath('602/tree-ssa-loop-im.bc')": {'for_each_index': ([3], 15510), 'gimple_vdef': ([], 15513), 'gimple_ops': ([], 15513), 'movement_possibility': ([], 15513), 'lsm_tmp_name_add': ([], 15513), 'gen_lsm_tmp_name': ([], 15513), 'get_lsm_tmp_name': ([], 15513), 'bb_seq': ([], 15513), 'gsi_start_bb': ([], 15513), 'gsi_stmt': ([], 15513), 'gsi_next': ([], 15513), 'ei_next': ([], 15513), 'fill_always_executed_in': ([], 15513), 'tree_ssa_lim_initialize': ([], 15513), 'number_of_loops': ([], 15513), 'VEC_bitmap_base_quick_push': ([], 15513), 'VEC_htab_t_base_quick_push': ([], 15513), 'gimple_vuse': ([], 15513), 'mem_ref_alloc': ([], 15513), 'VEC_mem_ref_p_base_space': ([], 15513), 'VEC_mem_ref_p_heap_reserve': ([], 15513), 'VEC_mem_ref_p_base_quick_push': ([], 15513), 'VEC_mem_ref_p_heap_safe_push': ([], 15513), 'loop_outer': ([], 15513), 'mark_ref_stored': ([], 15513), 'VEC_mem_ref_locs_p_base_space': ([], 15513), 'VEC_mem_ref_locs_p_heap_reserve_exact': ([], 15513), 'VEC_mem_ref_locs_p_heap_safe_grow': ([], 15513), 'VEC_mem_ref_locs_p_heap_safe_grow_cleared': ([], 15513), 'VEC_mem_ref_loc_p_base_space': ([], 15513), 'VEC_mem_ref_loc_p_heap_reserve': ([], 15513), 'VEC_mem_ref_loc_p_base_quick_push': ([], 15513), 'VEC_mem_ref_loc_p_heap_safe_push': ([2], 15511), 'record_mem_ref_loc': ([], 15513), 'gather_mem_refs_stmt': ([], 15513), 'VEC_int_base_quick_push': ([], 15513), 'VEC_int_base_iterate': ([], 15513), 'get_loop': ([], 15513), 'fel_next': ([5], 15510), 'fel_init': ([], 15513), 'gather_mem_refs_in_loops': ([230], 15481), 'bmp_iter_set_init': ([], 15513), 'bmp_iter_set': ([4], 15508), 'bmp_iter_and_compl_init': ([49], 15508), 'bmp_iter_and_compl': ([5], 15507), 'bmp_iter_next': ([], 15513), 'add_vop_ref_mapping': ([], 15513), 'create_vop_ref_mapping_loop': ([], 15513), 'create_vop_ref_mapping': ([], 15513), 'vtoe_free': ([], 15513), 'VEC_mem_ref_locs_p_base_iterate': ([], 15513), 'VEC_mem_ref_loc_p_base_iterate': ([], 15513), 'free_mem_ref_locs': ([], 15513), 'memref_free': ([], 15513), 'analyze_memory_references': ([], 15513), 'loop_depth': ([], 15513), 'outermost_invariant_loop': ([], 15513), 'gimple_set_op': ([], 15513), 'rewrite_reciprocal': ([], 15513), 'has_single_use': ([], 15513), 'single_imm_use': ([], 15513), 'delink_imm_use': ([], 15513), 'link_imm_use_to_list': ([], 15513), 'link_imm_use': ([], 15513), 'set_ssa_use_from_ptr': ([], 15513), 'rewrite_bittest': ([], 15513), 'gimple_use_ops': ([], 15513), 'op_iter_init': ([], 15513), 'op_iter_next_tree': ([], 15513), 'op_iter_init_tree': ([], 15513), 'add_dependency': ([], 15513), 'mem_ref_in_stmt': ([], 15513), 'cannot_overlap_p': ([], 15513), 'mem_refs_may_alias_p': ([], 15513), 'refs_independent_p': ([], 15513), 'record_indep_loop': ([], 15513), 'ref_indep_loop_p_1': ([], 15513), 'ref_indep_loop_p': ([], 15513), 'outermost_indep_loop': ([], 15513), 'gimple_references_memory_p': ([], 15513), 'gimple_call_fndecl': ([], 15513), 'stmt_cost': ([], 15513), 'determine_max_movement': ([], 15513), 'set_level': ([], 15513), 'determine_invariantness_stmt': ([], 15513), 'determine_invariantness': ([], 15513), 'VEC_edge_base_iterate': ([], 15513), 'loop_suitable_for_sm': ([], 15513), 'get_all_locs_in_loop': ([], 15513), 'ref_always_accessed_p': ([], 15513), 'may_move_till': ([], 15513), 'can_sm_ref_p': ([], 15513), 'find_refs_for_sm': ([], 15513), 'rewrite_mem_refs': ([], 15513), 'force_move_till_op': ([], 15513), 'force_move_till': ([], 15513), 'execute_sm': ([], 15513), 'hoist_memory_references': ([], 15513), 'store_motion_loop': ([], 15513), 'store_motion': ([], 15513), 'move_computations_stmt': ([], 15513), 'move_computations': ([], 15513), 'VEC_bitmap_base_iterate': ([], 15513), 'VEC_htab_t_base_iterate': ([], 15513), 'tree_ssa_lim_finalize': ([], 15513), 'tree_ssa_lim': ([], 15513)}, "PosixPath('602/c-lang.bc')": {}, "PosixPath('602/sdbout.bc')": {}, "PosixPath('602/c-decl.bc')": {'push_scope': ([0], 84191), 'pop_scope': ([220], 84191), 'c_bindings_end_stmt_expr': ([], 84203), 'pushdecl': ([0, 55], 84193), 'implicitly_declare': ([3], 84202), 'groktypename': ([], 84203), 'grokdeclarator': ([23, 43, 45, 395, 510], 84178), 'start_decl': ([16], 84196), 'build_compound_literal': ([], 84203), 'parser_xref_tag': ([], 84203), 'finish_struct': ([28], 84200), 'finish_enum': ([], 84203), 'start_function': ([37], 84198), 'merge_decls': ([6], 84200), 'grokparms': ([], 84203), 'add_stmt': ([], 84203), 'c_print_identifier': ([], 84203), 'c_finish_incomplete_decl': ([], 84203), 'record_inline_static': ([], 84203), 'objc_mark_locals_volatile': ([], 84203), 'update_spot_bindings': ([], 84203), 'decl_jump_unsafe': ([], 84203), 'VEC_tree_base_space': ([], 84203), 'VEC_tree_gc_reserve': ([], 84203), 'VEC_tree_base_quick_push': ([], 84203), 'VEC_tree_gc_safe_push': ([], 84203), 'VEC_c_goto_bindings_p_base_iterate': ([], 84203), 'update_label_decls': ([], 84203), 'set_type_context': ([], 84203), 'free_binding_and_advance': ([], 84203), 'bind': ([], 84203), 'push_file_scope': ([], 84203), 'check_inline_statics': ([], 84203), 'pop_file_scope': ([], 84203), 'c_bindings_start_stmt_expr': ([], 84203), 'locate_old_decl': ([], 84203), 'match_builtin_function_types': ([], 84203), 'diagnose_arglist_conflict': ([], 84203), 'validate_proto_after_old_defn': ([], 84203), 'diagnose_mismatched_decls': ([], 84203), 'duplicate_decls': ([2], 84197), 'warn_if_shadowing': ([], 84203), 'pushdecl_top_level': ([0], 84193), 'set_spot_bindings': ([], 84203), 'make_label': ([], 84203), 'bind_label': ([], 84203), 'lookup_label': ([], 84203), 'VEC_c_goto_bindings_p_base_space': ([], 84203), 'VEC_c_goto_bindings_p_gc_reserve': ([], 84203), 'VEC_c_goto_bindings_p_base_quick_push': ([], 84203), 'VEC_c_goto_bindings_p_gc_safe_push': ([], 84203), 'VEC_tree_base_iterate': ([], 84203), 'lookup_label_for_goto': ([], 84203), 'declare_label': ([], 84203), 'check_earlier_gotos': ([], 84203), 'lookup_name': ([], 84203), 'define_label': ([], 84203), 'c_get_switch_bindings': ([], 84203), 'c_release_switch_bindings': ([], 84203), 'c_check_switch_jump_warnings': ([], 84203), 'add_flexible_array_elts_to_size': ([], 84203), 'finish_decl': ([1], 84183), 'c_make_fname_decl': ([], 84203), 'c_builtin_function': ([], 84203), 'c_builtin_function_ext_scope': ([], 84203), 'lookup_tag': ([], 84203), 'pushtag': ([], 84203), 'shadow_tag_warned': ([], 84203), 'quals_from_declspecs': ([], 84203), 'build_array_declarator': ([], 84203), 'flexible_array_type_p': ([], 84203), 'check_bitfield_type_and_width': ([], 84203), 'identifier_global_value': ([], 84203), 'grokparm': ([], 84203), 'push_parm_decl': ([], 84203), 'mark_forward_parm_decls': ([], 84203), 'get_parm_info': ([], 84203), 'xref_tag': ([], 84203), 'start_struct': ([10], 84201), 'VEC_c_binding_ptr_base_space': ([], 84203), 'VEC_c_binding_ptr_heap_reserve': ([], 84203), 'VEC_c_binding_ptr_base_quick_push': ([], 84203), 'VEC_c_binding_ptr_heap_safe_push': ([], 84203), 'grokfield': ([], 84203), 'detect_field_duplicates': ([], 84203), 'VEC_c_binding_ptr_base_iterate': ([], 84203), 'warn_cxx_compat_finish_struct': ([], 84203), 'VEC_tree_heap_reserve': ([], 84203), 'VEC_tree_heap_safe_push': ([2], 84201), 'start_enum': ([6], 84192), 'build_enumerator': ([1], 84190), 'lookup_name_in_scope': ([], 84203), 'store_parm_decls_newstyle': ([], 84203), 'store_parm_decls_oldstyle': ([], 84203), 'store_parm_decls': ([], 84203), 'finish_function': ([], 84203), 'check_for_loop_decls': ([], 84203), 'c_push_function_context': ([], 84203), 'c_pop_function_context': ([], 84203), 'build_c_parm': ([], 84203), 'build_attrs_declarator': ([], 84203), 'build_function_declarator': ([], 84203), 'build_id_declarator': ([], 84203), 'make_pointer_declarator': ([], 84203), 'build_null_declspecs': ([], 84203), 'declspecs_add_addrspace': ([], 84203), 'declspecs_add_qual': ([], 84203), 'declspecs_add_type': ([2, 6, 13], 84194), 'declspecs_add_scspec': ([3], 84201), 'declspecs_add_attrs': ([], 84203), 'finish_declspecs': ([0, 6, 10], 84129), 'c_write_global_declarations_1': ([], 84203), 'c_write_global_declarations_2': ([], 84203), 'c_write_global_declarations': ([], 84203), 'tree_operand_length': ([], 84203), 'gt_ggc_mx_lang_tree_node': ([], 84203), 'gt_ggc_mx_c_binding': ([], 84203), 'gt_ggc_mx_c_label_vars': ([], 84203), 'gt_ggc_mx_c_goto_bindings': ([], 84203), 'gt_ggc_mx_c_scope': ([], 84203), 'gt_ggc_mx_lang_type': ([], 84203), 'gt_ggc_mx_c_inline_static': ([4], 84190), 'gt_ggc_mx_language_function': ([], 84203), 'gt_pch_p_14lang_tree_node': ([], 84203), 'gt_pch_nx_lang_tree_node': ([], 84203), 'gt_pch_nx_c_binding': ([], 84203), 'gt_pch_nx_c_label_vars': ([], 84203), 'gt_pch_nx_c_goto_bindings': ([], 84203), 'gt_pch_nx_c_scope': ([], 84203), 'gt_pch_nx_lang_type': ([0], 84199), 'gt_pch_nx_c_inline_static': ([4], 84169), 'gt_pch_nx_language_function': ([], 84203)}, "PosixPath('602/tree-ssanames.bc')": {'init_ssanames': ([], 1879), 'release_ssa_name': ([0], 1869), 'VEC_tree_base_quick_push': ([], 1879), 'fini_ssanames': ([], 1879), 'VEC_tree_base_space': ([], 1879), 'VEC_tree_gc_reserve': ([], 1879), 'VEC_tree_gc_safe_push': ([], 1879), 'make_ssa_name_fn': ([], 1879), 'delink_imm_use': ([], 1879), 'duplicate_ssa_name_ptr_info': ([], 1879), 'duplicate_ssa_name': ([], 1879), 'gimple_def_ops': ([], 1879), 'op_iter_init': ([], 1879), 'op_iter_next_tree': ([], 1879), 'op_iter_init_tree': ([], 1879), 'release_defs': ([], 1879), 'replace_ssa_name_symbol': ([], 1879), 'gimple_referenced_vars': ([], 1879), 'first_htab_element': ([], 1879), 'first_referenced_var': ([], 1879), 'end_htab_p': ([], 1879), 'end_referenced_vars_p': ([], 1879), 'next_htab_element': ([], 1879), 'next_referenced_var': ([], 1879), 'release_dead_ssa_names': ([], 1879)}, "PosixPath('602/insn-recog.bc')": {'recog_1': ([], 453690), 'recog_2': ([], 453690), 'recog_3': ([], 453690), 'recog_4': ([], 453690), 'recog_5': ([], 453690), 'recog_6': ([], 453690), 'recog_7': ([], 453690), 'recog_8': ([], 453690), 'recog_9': ([], 453690), 'recog_10': ([], 453690), 'recog_11': ([], 453690), 'recog_12': ([], 453690), 'recog_13': ([], 453690), 'recog_14': ([], 453690), 'recog_15': ([], 453690), 'recog_16': ([], 453690), 'recog_17': ([], 453690), 'recog_18': ([], 453690), 'recog_19': ([], 453690), 'recog_20': ([], 453690), 'recog_21': ([], 453690), 'recog_22': ([], 453690), 'recog_23': ([], 453690), 'recog_24': ([], 453690), 'recog_25': ([], 453690), 'recog_26': ([], 453690), 'recog_27': ([], 453690), 'recog_28': ([], 453690), 'recog_29': ([], 453690), 'recog_30': ([], 453690), 'recog_31': ([], 453690), 'recog_32': ([417, 418, 428, 429, 441, 443, 446, 531, 547], 453653), 'recog_33': ([], 453690), 'recog_34': ([], 453690), 'recog_35': ([], 453690), 'recog_36': ([], 453690), 'recog_37': ([], 453690), 'recog_38': ([], 453690), 'recog_39': ([], 453690), 'recog_40': ([], 453690), 'recog_41': ([], 453690), 'recog_42': ([], 453690), 'recog_43': ([1151], 453684), 'recog_44': ([], 453690), 'recog_45': ([], 453690), 'recog_46': ([], 453690), 'recog_47': ([431, 448], 453678), 'recog_48': ([], 453690), 'recog': ([260], 453674), 'satisfies_constraint_K': ([], 453690), 'split_1': ([487, 991, 996, 1395], 453641), 'split_2': ([], 453690), 'split_3': ([], 453690), 'split_4': ([432, 434, 437, 441], 453635), 'split_insns': ([], 453690), 'peephole2_insns': ([374, 663], 453674)}, "PosixPath('602/tracer.bc')": {'bb_seq': ([], 3191), 'gsi_start_bb': ([], 3191), 'gsi_stmt': ([], 3191), 'gsi_next': ([], 3191), 'count_insns': ([], 3191), 'bb_seen_p': ([], 3191), 'better_p': ([], 3191), 'ei_next': ([], 3191), 'find_best_predecessor': ([1, 5], 3172), 'find_best_successor': ([1, 5], 3179), 'find_trace': ([], 3191), 'mark_bb_seen': ([], 3191), 'tail_duplicate': ([], 3191), 'tracer': ([], 3191)}, "PosixPath('602/bb-reorder.bc')": {'reorder_basic_blocks': ([2], 11133), 'connect_traces': ([], 11141), 'find_traces_1_round': ([], 11141), 'mark_bb_visited': ([], 11141), 'copy_bb': ([37], 11138), 'ei_next': ([], 11141), 'bb_to_key': ([15], 11139), 'push_to_next_round_p': ([], 11141), 'better_edge_p': ([], 11141), 'copy_bb_p': ([], 11141), 'single_succ_p': ([], 11141), 'single_succ_edge': ([], 11141), 'rotate_loop': ([53], 11076), 'single_pred_p': ([], 11141), 'find_traces': ([], 11141), 'verify_hot_cold_block_grouping': ([], 11141), 'find_rarely_executed_basic_blocks_and_crossing_edges': ([102], 11140), 'add_labels_and_missing_jumps': ([], 11141), 'fix_up_fall_thru_edges': ([125], 11135), 'add_reg_crossing_jump_notes': ([], 11141), 'fix_edges_for_rarely_executed_code': ([], 11141), 'partition_hot_cold_basic_blocks': ([], 11141), 'rest_of_handle_partition_blocks': ([], 11141), 'gate_handle_partition_blocks': ([], 11141), 'insert_section_boundary_note': ([5], 11140), 'rest_of_handle_reorder_blocks': ([], 11141), 'duplicate_computed_gotos': ([49, 119], 11130)}, "PosixPath('602/cfgbuild.bc')": {'find_many_sub_basic_blocks': ([1, 37], 4010), 'find_bb_boundaries': ([], 4024), 'compute_outgoing_frequencies': ([], 4024), 'inside_basic_block_p': ([], 4024), 'control_flow_insn_p': ([], 4024), 'make_label_edge': ([], 4024), 'rtl_make_eh_edge': ([2], 4022), 'mark_tablejump_edge': ([], 4024), 'ei_next': ([], 4024), 'purge_dead_tablejump_edges': ([], 4024), 'make_edges': ([], 4024), 'single_succ_p': ([], 4024), 'single_succ_edge': ([], 4024)}, "PosixPath('602/sel-sched.bc')": {'create_block_for_bookkeeping': ([95], 56607), 'compute_av_set_inside_bb': ([3], 56605), 'fill_vec_av_set': ([420], 56608), 'hard_reg_set_iter_init': ([], 56610), 'move_cond_jump': ([], 56610), 'advance_state_on_fence': ([0], 56603), 'find_ebb_boundaries': ([], 56610), 'ei_next': ([], 56610), 'propagate_lv_set': ([], 56610), 'compute_live': ([], 56610), 'compute_live_after_bb': ([19], 56608), 'sel_add_to_insn_priority': ([], 56610), 'current_region_empty_p': ([], 56610), 'sel_setup_region_sched_flags': ([], 56610), 'VEC_basic_block_base_quick_push': ([], 56610), 'bitmap_initialize_stat': ([], 56610), 'sel_region_init': ([], 56610), 'bmp_iter_set_init': ([], 56610), 'bmp_iter_set': ([4], 56605), 'bmp_iter_next': ([], 56610), '_succ_iter_start': ([], 56610), 'VEC_edge_base_iterate': ([], 56610), 'sel_bb_empty_or_nop_p': ([], 56610), '_eligible_successor_edge_p': ([], 56610), 'single_succ_p': ([], 56610), 'single_succ_edge': ([], 56610), 'single_succ': ([], 56610), 'loop_depth': ([], 56610), 'inner_loop_header_p': ([], 56610), 'loop_outer': ([], 56610), 'VEC_edge_base_space': ([], 56610), 'VEC_edge_heap_reserve': ([], 56610), 'VEC_edge_base_quick_push': ([], 56610), 'VEC_edge_heap_safe_push': ([2], 56608), 'get_loop_exit_edges_unique_dests': ([], 56610), 'VEC_edge_base_ordered_remove': ([], 56610), 'get_all_loop_exits': ([], 56610), '_succ_iter_cond': ([], 56610), '_succ_iter_next': ([], 56610), 'init_seqno_1': ([6], 56605), 'init_seqno': ([10], 56608), 'find_min_max_seqno': ([], 56610), '_xlist_is_in_p': ([], 56610), 'is_ineligible_successor': ([39], 56606), '_xlist_add': ([], 56610), 'VEC_rtx_base_iterate': ([], 56610), '_list_iter_start': ([], 56610), '_list_iter_next': ([], 56610), 'try_bitmap_cache': ([], 56610), 'try_transformation_cache': ([0], 56606), 'block_valid_for_bookkeeping_p': ([], 56610), 'find_block_for_bookkeeping': ([], 56610), 'moving_insn_creates_bookkeeping_block_p': ([2, 18, 37], 56601), 'can_substitute_through_p': ([], 56610), 'count_occurrences_1': ([], 56610), 'count_occurrences_equiv': ([], 56610), 'rtx_ok_for_substitution_p': ([], 56610), 'substitute_reg_in_expr': ([], 56610), 'moveup_expr': ([], 56610), 'update_bitmap_cache': ([], 56610), 'update_transformation_cache': ([], 56610), 'moveup_expr_cached': ([21], 56596), 'moveup_set_expr': ([], 56610), 'compute_av_set_at_bb_end': ([2, 139, 143, 180, 189], 56578), 'compute_av_set_on_boundaries': ([], 56610), 'remove_insns_that_need_bookkeeping': ([], 56610), 'remove_insns_for_debug': ([], 56610), 'process_pipelined_exprs': ([], 56610), 'process_spec_exprs': ([], 56610), 'recog_memoized': ([], 56610), 'process_use_exprs': ([], 56610), 'VEC_expr_t_base_block_remove': ([], 56610), 'VEC_expr_t_base_space': ([], 56610), 'VEC_expr_t_heap_reserve': ([], 56610), 'VEC_expr_t_base_quick_push': ([], 56610), 'VEC_expr_t_heap_safe_push': ([], 56610), 'sel_target_adjust_priority': ([5], 56606), 'VEC_expr_t_base_unordered_remove': ([], 56610), 'VEC_vinsn_t_base_iterate': ([], 56610), 'vinsn_vec_has_expr_p': ([], 56610), 'equal_after_moveup_path_p': ([], 56610), 'replace_dest_with_reg_in_expr': ([], 56610), 'find_sequential_best_exprs': ([], 56610), 'identical_copy_p': ([], 56610), 'undo_transformations': ([5], 56607), 'code_motion_path_driver': ([0, 27, 149], 56538), 'get_reg_class': ([], 56610), 'init_regs_for_mode': ([], 56610), 'hard_reg_set_iter_set': ([8], 56608), 'init_hard_regno_rename': ([], 56610), 'sel_hard_regno_rename_ok': ([], 56610), 'hard_reg_set_iter_next': ([], 56610), 'mark_unavailable_hard_regs': ([], 56610), 'fur_orig_expr_not_found': ([], 56610), 'compute_live_below_insn': ([], 56610), 'fur_orig_expr_found': ([], 56610), 'fur_on_enter': ([], 56610), 'find_used_regs': ([], 56610), 'collect_unavailable_regs_from_bnds': ([], 56610), 'verify_target_availability': ([], 56610), 'choose_best_reg_1': ([2], 56607), 'choose_best_reg': ([], 56610), 'choose_best_pseudo_reg': ([], 56610), 'replace_src_with_reg_ok_p': ([], 56610), 'replace_dest_with_reg_ok_p': ([], 56610), 'try_replace_dest_reg': ([], 56610), 'vinsn_writes_one_of_regs_p': ([], 56610), 'find_best_reg_for_expr': ([], 56610), 'VEC_expr_t_base_iterate': ([], 56610), 'sel_rank_for_schedule': ([26], 56604), 'convert_vec_av_set_to_ready': ([], 56610), 'fill_ready_list': ([], 56610), 'invoke_reorder_hooks': ([], 56610), 'find_expr_for_ready': ([], 56610), 'invoke_dfa_lookahead_guard': ([], 56610), 'calculate_privileged_insns': ([], 56610), 'get_expr_cost': ([], 56610), 'choose_best_insn': ([], 56610), 'VEC_rtx_base_unordered_remove': ([], 56610), 'debug_state': ([], 56610), 'advance_one_cycle': ([], 56610), 'sel_dfa_new_cycle': ([], 56610), 'invoke_aftermath_hooks': ([], 56610), 'find_best_expr': ([], 56610), 'stall_for_cycles': ([], 56610), 'prepare_place_to_insert': ([], 56610), 'get_dest_from_orig_ops': ([], 56610), 'single_pred_p': ([], 56610), 'single_pred_edge': ([], 56610), 'find_place_for_bookkeeping': ([], 56610), 'find_seqno_for_bookkeeping': ([], 56610), 'emit_insn_from_expr_after': ([], 56610), 'emit_bookkeeping_insn': ([], 56610), 'generate_bookkeeping_insn': ([], 56610), 'VEC_vinsn_t_base_space': ([], 56610), 'VEC_vinsn_t_heap_reserve': ([], 56610), 'VEC_vinsn_t_base_quick_push': ([], 56610), 'VEC_vinsn_t_heap_safe_push': ([], 56610), 'vinsn_vec_add': ([], 56610), 'update_and_record_unavailable_insns': ([], 56610), 'move_op_at_first_insn': ([], 56610), 'move_op_ascend': ([], 56610), 'move_op_merge_succs': ([], 56610), 'track_scheduled_insns_and_blocks': ([], 56610), 'maybe_emit_renaming_copy': ([], 56610), 'get_spec_check_type_for_insn': ([], 56610), 'create_speculation_check': ([], 56610), 'maybe_emit_speculative_check': ([], 56610), 'handle_emitting_transformations': ([], 56610), 'need_nop_to_preserve_insn_bb': ([], 56610), 'VEC_insn_t_base_space': ([], 56610), 'VEC_insn_t_heap_reserve': ([], 56610), 'VEC_insn_t_base_quick_push': ([], 56610), 'VEC_insn_t_heap_safe_push': ([], 56610), 'remove_insn_from_stream': ([], 56610), 'move_op_orig_expr_found': ([], 56610), 'move_op': ([], 56610), 'move_exprs_to_boundary': ([], 56610), 'VEC_insn_t_base_iterate': ([], 56610), 'VEC_insn_t_base_block_remove': ([], 56610), 'remove_temp_moveop_nops': ([], 56610), 'schedule_expr_on_boundary': ([], 56610), 'VEC_rtx_base_space': ([], 56610), 'VEC_rtx_gc_reserve': ([], 56610), 'VEC_rtx_base_quick_push': ([], 56610), 'VEC_rtx_gc_safe_push': ([], 56610), 'update_fence_and_insn': ([43], 56606), 'update_boundaries': ([3], 56600), 'fill_insns': ([721], 56609), 'VEC_vinsn_t_base_block_remove': ([], 56610), 'vinsn_vec_clear': ([], 56610), 'schedule_on_fences': ([], 56610), 'extract_new_fences_from': ([28], 56598), 'calculate_new_fences': ([], 56610), 'update_seqnos_and_stage': ([], 56610), 'sel_sched_region_2': ([18], 56601), 'sel_sched_region_1': ([], 56610), 'simplify_changed_insns': ([], 56610), 'bb_next_bb': ([], 56610), 'reset_sched_cycles_in_current_ebb': ([28, 41], 56600), 'put_TImodes': ([], 56610), 'sel_region_target_finish': ([], 56610), 'sel_region_finish': ([], 56610), 'sel_sched_region': ([], 56610), 'init_hard_regs_data': ([], 56610), 'sel_global_init': ([], 56610), 'run_selective_scheduling': ([], 56610)}, "PosixPath('602/ira-emit.bc')": {'ira_emit': ([272, 843], 9431), 'emit_moves': ([], 9438), 'modify_move_list': ([], 9438), 'add_range_and_copies_from_move_list': ([9], 9433), 'print_move_list': ([], 9438), 'ira_debug_move_list': ([], 9438), 'ira_allocno_iter_cond': ([], 9438), 'set_allocno_somewhere_renamed_p': ([], 9438), 'VEC_loop_p_base_iterate': ([], 9438), 'ei_next': ([], 9438), 'entered_from_non_parent_p': ([], 9438), 'setup_entered_from_non_parent_p': ([], 9438), 'df_lr_get_bb_info': ([], 9438), 'bmp_iter_set_init': ([], 9438), 'bmp_iter_set': ([4], 9433), 'store_can_be_removed_p': ([], 9438), 'create_move': ([], 9438), 'add_to_edge_list': ([], 9438), 'bmp_iter_next': ([], 9438), 'generate_edge_moves': ([], 9438), 'eq_move_lists_p': ([], 9438), 'eq_edge_move_lists_p': ([], 9438), 'free_move_list': ([], 9438), 'unify_moves': ([0], 9421), 'VEC_move_t_base_space': ([], 9438), 'VEC_move_t_heap_reserve': ([], 9438), 'VEC_move_t_base_quick_push': ([], 9438), 'VEC_move_t_heap_safe_push': ([0], 9436), 'traverse_moves': ([], 9438), 'VEC_move_t_base_last': ([], 9438), 'create_new_reg': ([], 9438), 'recog_memoized': ([], 9438), 'ira_get_register_move_cost': ([], 9438), 'emit_move_list': ([], 9438), 'update_costs': ([], 9438), 'add_ranges_and_copies': ([], 9438), 'change_regs': ([], 9438), 'set_allocno_reg': ([], 9438), 'change_loop': ([0, 7], 9409)}, "PosixPath('602/cpp_symtab.bc')": {'ht_create': ([], 2853), 'ht_destroy': ([], 2853), 'calc_hash': ([], 2853), 'ht_expand': ([], 2853), 'ht_lookup_with_hash': ([1, 2, 9], 2800), 'ht_lookup': ([], 2853), 'ht_forall': ([], 2853), 'ht_purge': ([], 2853), 'ht_load': ([], 2853), 'ht_dump_statistics': ([], 2853)}, "PosixPath('602/tree-ssa-uncprop.bc')": {'gsi_start': ([1], 3782), 'bb_seq': ([], 3786), 'gsi_last_bb': ([], 3786), 'gsi_stmt': ([], 3786), 'gimple_ops': ([], 3786), 'gimple_op': ([], 3786), 'associate_equivalences_with_edges': ([], 3786), 'ei_next': ([], 3786), 'VEC_tree_base_pop': ([], 3786), 'remove_equivalence': ([], 3786), 'uncprop_leave_block': ([], 3786), 'single_incoming_edge_ignoring_loop_edges': ([], 3786), 'VEC_tree_base_space': ([], 3786), 'VEC_tree_heap_reserve': ([], 3786), 'VEC_tree_base_quick_push': ([], 3786), 'VEC_tree_heap_safe_push': ([2], 3784), 'record_equiv': ([], 3786), 'phi_nodes': ([], 3786), 'delink_imm_use': ([], 3786), 'link_imm_use_to_list': ([], 3786), 'link_imm_use': ([], 3786), 'set_ssa_use_from_ptr': ([], 3786), 'gsi_next': ([], 3786), 'uncprop_into_successor_phis': ([62], 3782), 'uncprop_enter_block': ([], 3786), 'tree_ssa_uncprop': ([31], 3784)}, "PosixPath('602/vasprintf.bc')": {}, "PosixPath('602/varray.bc')": {'varray_init': ([], 476), 'varray_grow': ([], 476), 'varray_clear': ([], 476)}, "PosixPath('602/calls.bc')": {'expand_call': ([0, 2, 4, 50, 137, 166, 167, 297], 22681), 'initialize_argument_information': ([3], 22868), 'precompute_arguments': ([], 22920), 'emit_library_call_value_1': ([3, 6, 327], 22906), 'special_function_p': ([6, 7], 22904), 'gimple_ops': ([], 22920), 'gimple_op': ([], 22920), 'gimple_call_fn': ([], 22920), 'gimple_call_fndecl': ([], 22920), 'gimple_alloca_call_p': ([], 22920), 'alloca_call_p': ([], 22920), 'flags_from_decl_or_type': ([], 22920), 'call_expr_flags': ([], 22920), 'shift_return_value': ([0], 22914), 'init_call_expr_arg_iterator': ([], 22920), 'next_call_expr_arg': ([], 22920), 'first_call_expr_arg': ([], 22920), 'split_complex_types': ([], 22920), 'finalize_must_preallocate': ([], 22920), 'compute_argument_block_size': ([], 22920), 'compute_argument_addresses': ([], 22920), 'rtx_for_function_call': ([], 22920), 'precompute_register_parameters': ([], 22920), 'save_fixed_argument_area': ([], 22920), 'mem_overlaps_already_clobbered_arg_p': ([], 22920), 'store_one_arg': ([], 22920), 'check_sibcall_argument_overlap_1': ([], 22920), 'check_sibcall_argument_overlap': ([], 22920), 'load_register_parameters': ([], 22920), 'emit_call_1': ([], 22920), 'avoid_likely_spilled_reg': ([], 22920), 'fixup_tail_calls': ([], 22920), 'must_pass_in_stack_var_size': ([], 22920), 'must_pass_in_stack_var_size_or_pad': ([], 22920)}, "PosixPath('602/jump.bc')": {'init_label_info': ([], 8798), 'mark_jump_label': ([], 8798), 'mark_jump_label_1': ([2], 8793), 'pc_set': ([2], 8793), 'mark_all_labels': ([], 8798), 'rebuild_jump_labels': ([], 8798), 'cleanup_barriers': ([], 8798), 'reversed_comparison_code_parts': ([], 8798), 'reversed_comparison_code': ([], 8798), 'reversed_comparison': ([], 8798), 'simplejump_p': ([], 8798), 'condjump_p': ([4], 8790), 'condjump_in_parallel_p': ([], 8798), 'any_condjump_p': ([], 8798), 'condjump_label': ([], 8798), 'onlyjump_p': ([], 8798), 'delete_related_insns': ([3], 8796), 'delete_for_peephole': ([], 8798), 'redirect_exp_1': ([], 8798), 'redirect_jump_1': ([], 8798), 'invert_exp_1': ([], 8798), 'redirect_jump_2': ([], 8798), 'rtx_renumbered_equal_p': ([], 8798), 'true_regnum': ([], 8798), 'reg_or_subregno': ([0], 8794)}, "PosixPath('602/host-ieee64.bc')": {}, "PosixPath('602/varasm.bc')": {'emutls_decl': ([], 48391), 'force_const_mem': ([4], 48388), 'output_constructor': ([69], 48342), 'compute_reloc_for_rtx': ([], 48391), 'output_constructor_bitfield': ([], 48391), 'default_emutls_var_fields': ([], 48391), 'prefix_name': ([0], 48389), 'get_emutls_object_type': ([], 48391), 'make_decl_one_only': ([0], 48380), 'emutls_common_1': ([], 48391), 'emutls_finish': ([], 48391), 'get_unnamed_section': ([], 48391), 'get_section': ([], 48391), 'initialize_cold_section_name': ([], 48391), 'get_named_section': ([], 48391), 'unlikely_text_section_p': ([], 48391), 'resolve_unique_section': ([], 48391), 'hot_function_section': ([], 48391), 'default_function_rodata_section': ([], 48391), 'mergeable_constant_section': ([], 48391), 'set_user_assembler_name': ([], 48391), 'decode_reg_name': ([], 48391), 'align_variable': ([], 48391), 'bss_initializer_p': ([], 48391), 'contains_pointers_p': ([], 48391), 'compute_reloc_for_constant': ([], 48391), 'get_variable_section': ([6], 48390), 'hash_section': ([], 48391), 'get_block_for_decl': ([], 48391), 'change_symbol_block': ([], 48391), 'use_blocks_for_decl_p': ([], 48391), 'create_block_symbol': ([], 48391), 'make_decl_rtl': ([0], 48371), 'make_decl_rtl_for_debug': ([], 48391), 'assemble_asm': ([], 48391), 'switch_to_section': ([0], 48382), 'notice_global_symbol': ([], 48391), 'copy_constant': ([], 48391), 'get_constant_section': ([], 48391), 'build_constant_desc': ([], 48391), 'get_constant_size': ([], 48391), 'VEC_rtx_base_space': ([], 48391), 'VEC_rtx_gc_reserve': ([], 48391), 'VEC_rtx_base_quick_push': ([], 48391), 'VEC_rtx_gc_safe_push': ([], 48391), 'place_block_symbol': ([], 48391), 'ultimate_transparent_alias_target': ([], 48391), 'assemble_name': ([], 48391), 'assemble_real': ([], 48391), 'array_size_for_constructor': ([], 48391), 'assemble_string': ([], 48391), 'output_constant': ([6, 10], 48382), 'output_constant_def_contents': ([], 48391), 'output_constant_def': ([], 48391), 'const_hash_1': ([], 48391), 'decode_addr_const': ([0], 48389), 'output_addressed_constants': ([7], 48388), 'mark_constant': ([], 48391), 'mark_constants': ([], 48391), 'output_constant_pool_2': ([], 48391), 'output_constant_pool_1': ([4], 48386), 'output_constant_pool_contents': ([], 48391), 'globalize_decl': ([], 48391), 'assemble_start_function': ([], 48391), 'default_emutls_var_init': ([], 48391), 'get_emutls_init_templ_addr': ([], 48391), 'assemble_variable_contents': ([], 48391), 'assemble_variable': ([25, 29], 48379), 'incorporeal_function_p': ([], 48391), 'assemble_external_real': ([], 48391), 'process_pending_assemble_externals': ([], 48391), 'assemble_external': ([], 48391), 'mark_decl_referenced': ([], 48391), 'assemble_static_space': ([], 48391), 'assemble_trampoline_template': ([], 48391), 'lookup_constant_def': ([], 48391), 'const_desc_rtx_eq': ([], 48391), 'create_constant_pool': ([], 48391), 'const_rtx_hash_1': ([], 48391), 'const_rtx_hash': ([], 48391), 'get_pool_constant': ([], 48391), 'get_pool_constant_mark': ([], 48391), 'get_pool_mode': ([], 48391), 'constructor_static_from_elts_p': ([], 48391), 'initializer_constant_valid_p_1': ([0, 64], 48377), 'narrowing_initializer_constant_valid_p': ([], 48391), 'initializer_constant_valid_for_bitfield_p': ([], 48391), 'mark_weak': ([8], 48385), 'merge_weak': ([], 48391), 'weak_finish_1': ([], 48391), 'weak_finish': ([], 48391), 'VEC_alias_pair_base_unordered_remove': ([], 48391), 'remove_unreachable_alias_pairs': ([0], 48386), 'finish_aliases_1': ([], 48391), 'do_assemble_alias': ([], 48391), 'finish_aliases_2': ([], 48391), 'VEC_alias_pair_base_space': ([], 48391), 'VEC_alias_pair_gc_reserve': ([], 48391), 'VEC_alias_pair_gc_safe_push': ([], 48391), 'assemble_alias': ([12], 48390), 'default_assemble_visibility': ([], 48391), 'get_noswitch_section': ([], 48391), 'asm_output_aligned_bss': ([], 48391), 'emit_bss': ([], 48391), 'compare_constant': ([], 48391), 'const_desc_eq': ([], 48391), 'categorize_decl_for_section': ([], 48391), 'default_section_type_flags': ([], 48391), 'default_elf_asm_named_section': ([], 48391), 'default_coff_asm_named_section': ([], 48391), 'default_select_section': ([], 48391), 'mergeable_string_section': ([], 48391), 'compute_reloc_for_rtx_1': ([], 48391), 'default_encode_section_info': ([4], 48377), 'default_asm_output_anchor': ([], 48391), 'default_use_anchors_for_symbol_p': ([], 48391), 'default_binds_local_p_1': ([], 48391), 'default_globalize_decl_name': ([], 48391), 'VEC_rtx_base_quick_insert': ([], 48391), 'VEC_rtx_gc_safe_insert': ([], 48391), 'get_section_anchor': ([], 48391), 'VEC_rtx_base_iterate': ([], 48391), 'output_object_block': ([], 48391), 'output_object_block_htab': ([], 48391), 'elf_record_gcc_switches': ([], 48391), 'gt_ggc_mx_constant_descriptor_rtx': ([], 48391), 'gt_ggc_m_P23constant_descriptor_rtx4htab': ([], 48391), 'gt_ggc_mx_rtx_constant_pool': ([], 48391), 'gt_pch_nx_constant_descriptor_rtx': ([], 48391), 'gt_pch_p_P23constant_descriptor_rtx4htab': ([], 48391), 'gt_pch_n_P23constant_descriptor_rtx4htab': ([], 48391), 'gt_pch_nx_rtx_constant_pool': ([], 48391)}, "PosixPath('602/fdmatch.bc')": {'fdmatch': ([], 158)}, "PosixPath('602/c-parser.bc')": {'disable_extension_diagnostics': ([], 58593), 'c_parser_binary_expression': ([], 58593), 'c_parser_postfix_expression_after_primary': ([], 58593), 'c_parser_postfix_expression': ([], 58593), 'c_parser_struct_declaration': ([5], 58589), 'c_parse_init': ([], 58593), 'c_lex_one_token': ([], 58593), 'c_parser_consume_token': ([7], 58591), 'pragma_lex': ([], 58593), 'c_parser_consume_pragma': ([], 58593), 'c_parser_set_source_position_from_token': ([], 58593), 'c_parser_error': ([0], 58580), 'c_parser_skip_to_pragma_eol': ([0], 58588), 'restore_extension_diagnostics': ([], 58593), 'c_parser_skip_until_found': ([], 58593), 'c_token_starts_typename': ([0], 58589), 'c_parser_peek_2nd_token': ([0], 58588), 'c_parser_objc_selector': ([], 58593), 'c_token_starts_declspecs': ([0], 58590), 'c_parser_skip_to_end_of_block_or_statement': ([], 58593), 'c_parser_skip_to_end_of_parameter': ([], 58593), 'c_parser_omp_variable_list': ([], 58593), 'c_parser_omp_threadprivate': ([], 58593), 'c_parser_asm_goto_operands': ([], 58593), 'check_no_duplicate_clause': ([], 58593), 'c_parser_omp_clause_default': ([], 58593), 'c_parser_omp_clause_reduction': ([], 58593), 'VEC_tree_base_quick_push': ([], 58593), 'VEC_tree_base_space': ([], 58593), 'VEC_tree_gc_reserve': ([], 58593), 'VEC_tree_gc_safe_push': ([2], 58591), 'c_parser_omp_sections_scope': ([], 58593), 'c_parser_label': ([], 58593), 'c_parser_expr_no_commas': ([], 58593), 'c_parser_conditional_expression': ([], 58593), 'c_parser_cast_expression': ([], 58593), 'c_parser_type_name': ([], 58593), 'c_parser_declspecs': ([], 58593), 'c_parser_pragma': ([], 58593), 'c_parser_omp_for_loop': ([], 58593), 'c_parser_omp_all_clauses': ([], 58593), 'c_parser_unary_expression': ([], 58593), 'c_parser_postfix_expression_after_paren_type': ([12], 58591), 'c_parser_compound_statement_nostart': ([], 58593), 'c_parser_statement_after_labels': ([], 58593), 'c_parser_asm_operands': ([], 58593), 'c_parser_expression_conv': ([], 58593), 'c_parser_declaration_or_fndef': ([], 58593), 'c_parser_braced_init': ([], 58593), 'c_parser_initval': ([], 58593), 'c_parser_objc_message_args': ([], 58593), 'c_parser_direct_declarator_inner': ([], 58593), 'c_parser_parms_declarator': ([], 58593), 'c_parser_parms_list_declarator': ([], 58593), 'c_parser_parameter_declaration': ([], 58593), 'c_parser_attributes': ([], 58593), 'c_parser_expr_list': ([0], 58591), 'c_parser_expression': ([0], 58590), 'c_parser_objc_type_name': ([], 58593), 'c_parser_objc_methodprotolist': ([], 58593), 'c_parse_file': ([1], 58590)}, "PosixPath('602/decNumber.bc')": {'decNumberCopy': ([], 36769), 'decNumberFMA': ([], 36769), 'decNumberZero': ([], 36769), 'decGetDigits': ([], 36769), 'decNumberFromUInt32': ([], 36769), 'decNumberToInt32': ([], 36769), 'decNumberToUInt32': ([0], 36768), 'decToString': ([], 36769), 'decBiStr': ([], 36769), 'decSetCoeff': ([0], 36759), 'decSetMaxValue': ([0], 36765), 'decSetOverflow': ([], 36769), 'decUnitAddSub': ([], 36769), 'decApplyRound': ([0, 1, 2], 36738), 'decShiftToMost': ([], 36769), 'decSetSubnormal': ([], 36769), 'decUnitCompare': ([9], 36757), 'decCompare': ([6], 36753), 'decFinalize': ([3, 10], 36758), 'decStatus': ([], 36769), 'decNumberFromString': ([9, 89], 36756), 'decDecap': ([], 36769), 'decNaNs': ([], 36769), 'decCopyFit': ([], 36769), 'decAddOp': ([16, 18, 35], 36699), 'decNumberAbs': ([], 36769), 'decNumberAdd': ([], 36769), 'decNumberAnd': ([], 36769), 'decCompareOp': ([], 36769), 'decNumberCompare': ([], 36769), 'decNumberCompareSignal': ([], 36769), 'decNumberCompareTotal': ([], 36769), 'decNumberCompareTotalMag': ([], 36769), 'decShiftToLeast': ([], 36769), 'decDivideOp': ([9, 18, 40], 36740), 'decNumberDivide': ([], 36769), 'decNumberDivideInteger': ([], 36769), 'decCheckMath': ([0], 36759), 'decMultiplyOp': ([27], 36767), 'decExpOp': ([96], 36760), 'decNumberExp': ([], 36769), 'decNumberInvert': ([], 36769), 'decGetInt': ([9], 36761), 'decLnOp': ([87], 36764), 'decNumberLn': ([], 36769), 'decNumberLogB': ([0], 36765), 'decNumberLog10': ([], 36769), 'decNumberMax': ([], 36769), 'decNumberMaxMag': ([], 36769), 'decNumberMin': ([], 36769), 'decNumberMinMag': ([], 36769), 'decNumberMinus': ([], 36769), 'decNumberNextMinus': ([], 36769), 'decNumberNextPlus': ([], 36769), 'decNumberIsNormal': ([], 36769), 'decNumberNextToward': ([], 36769), 'decNumberOr': ([], 36769), 'decNumberPlus': ([], 36769), 'decNumberMultiply': ([], 36769), 'decNumberPower': ([10], 36757), 'decQuantizeOp': ([7], 36747), 'decNumberQuantize': ([], 36769), 'decTrim': ([], 36769), 'decNumberReduce': ([], 36769), 'decNumberRescale': ([], 36769), 'decNumberRemainder': ([], 36769), 'decNumberRemainderNear': ([], 36769), 'decReverse': ([], 36769), 'decNumberRotate': ([0], 36761), 'decNumberSameQuantum': ([], 36769), 'decNumberScaleB': ([], 36769), 'decNumberShift': ([], 36769), 'decNumberSquareRoot': ([219], 36767), 'decNumberSubtract': ([], 36769), 'decNumberToIntegralExact': ([], 36769), 'decNumberToIntegralValue': ([], 36769), 'decNumberXor': ([], 36769), 'decNumberClass': ([], 36769), 'decNumberGetBCD': ([], 36769), 'decNumberSetBCD': ([], 36769), 'decNumberIsSubnormal': ([], 36769), 'decNumberTrim': ([], 36769)}, "PosixPath('602/fixed-value.bc')": {'do_fixed_neg': ([], 10135), 'do_fixed_add': ([], 10135), 'do_fixed_multiply': ([], 10135), 'do_fixed_divide': ([], 10135), 'fixed_saturate2': ([], 10135), 'fixed_saturate1': ([], 10135), 'fixed_convert_from_int': ([39], 10125), 'fixed_convert_from_real': ([], 10135), 'fixed_identical': ([], 10135), 'fixed_hash': ([], 10135), 'check_real_for_fixed_mode': ([], 10135), 'fixed_from_string': ([], 10135), 'fixed_to_decimal': ([], 10135), 'do_fixed_shift': ([], 10135), 'fixed_arithmetic': ([129, 174], 10131), 'fixed_compare': ([], 10135), 'fixed_convert': ([2], 10127), 'real_convert_from_fixed': ([], 10135), 'fixed_isneg': ([], 10135)}, "PosixPath('602/tree-eh.bc')": {'gsi_start': ([1], 26808), 'lower_eh_must_not_throw': ([], 26810), 'lower_resx': ([], 26810), 'first_imm_use_on_stmt': ([], 26810), 'next_imm_use_on_stmt': ([], 26810), 'add_stmt_to_eh_lp_fn': ([], 26810), 'lookup_stmt_eh_lp_fn': ([], 26810), 'make_eh_dispatch_edges': ([], 26810), 'make_eh_edges': ([], 26810), 'ei_next': ([], 26810), 'redirect_eh_edge_1': ([11], 26808), 'redirect_eh_dispatch_edge': ([], 26810), 'operation_could_trap_helper_p': ([], 26810), 'operation_could_trap_p': ([], 26810), 'tree_could_trap_p': ([], 26810), 'gimple_ops': ([], 26810), 'stmt_could_throw_1_p': ([], 26810), 'stmt_could_throw_p': ([], 26810), 'tree_could_throw_p': ([0, 1], 26802), 'maybe_duplicate_eh_stmt_fn': ([], 26810), 'verify_eh_edges': ([7], 26784), 'verify_eh_dispatch_edge': ([25], 26806), 'bb_seq': ([], 26810), 'gsi_start_bb': ([], 26810), 'gsi_stmt': ([], 26810), 'gsi_one_before_end_p': ([], 26810), 'gsi_next': ([], 26810), 'VEC_eh_region_base_iterate': ([], 26810), 'VEC_eh_landing_pad_base_iterate': ([], 26810), 'remove_unreachable_handlers': ([], 26810), 'gsi_after_labels': ([], 26810), 'gsi_next_nondebug': ([], 26810), 'phi_nodes': ([], 26810), 'end_imm_use_stmt_p': ([], 26810), 'clear_and_done_ssa_iter': ([], 26810), 'op_iter_next_use': ([], 26810), 'op_iter_init_phiuse': ([], 26810), 'delink_imm_use': ([], 26810), 'link_imm_use_to_list': ([], 26810), 'move_use_after_head': ([], 26810), 'gimple_def_ops': ([], 26810), 'gimple_vdef': ([], 26810), 'gimple_use_ops': ([], 26810), 'gimple_vuse': ([], 26810), 'op_iter_init': ([], 26810), 'op_iter_init_use': ([], 26810), 'gimple_vuse_op': ([], 26810), 'link_use_stmts_after': ([], 26810), 'first_imm_use_stmt': ([], 26810), 'link_imm_use': ([], 26810), 'set_ssa_use_from_ptr': ([], 26810), 'next_imm_use_stmt': ([], 26810), 'unsplit_eh': ([110], 26806), 'unsplit_all_eh': ([], 26810), 'cleanup_empty_eh_merge_phis': ([4, 22], 26799), 'cleanup_empty_eh_unsplit': ([], 26810), 'gsi_last_bb': ([], 26810), 'cleanup_empty_eh_move_lp': ([], 26810), 'cleanup_empty_eh': ([], 26810), 'cleanup_all_empty_eh': ([], 26810), 'remove_unreachable_handlers_no_lp': ([], 26810), 'execute_cleanup_eh': ([], 26810), 'gate_cleanup_eh': ([], 26810), 'VEC_tree_base_space': ([], 26810), 'VEC_tree_heap_reserve': ([], 26810), 'VEC_tree_base_quick_push': ([], 26810), 'VEC_tree_heap_safe_push': ([2], 26808), 'single_succ_p': ([], 26810), 'single_succ_edge': ([], 26810), 'gimple_set_op': ([], 26810), 'lower_eh_dispatch': ([], 26810), 'execute_lower_eh_dispatch': ([], 26810), 'gate_lower_eh_dispatch': ([], 26810), 'execute_lower_resx': ([], 26810), 'same_handler_p': ([], 26810), 'optimize_double_finally': ([], 26810), 'refactor_eh_r': ([], 26810), 'record_in_finally_tree': ([], 26810), 'collect_finally_tree_1': ([], 26810), 'gimple_call_fndecl': ([], 26810), 'record_stmt_eh_region': ([], 26810), 'note_eh_region_may_contain_throw': ([], 26810), 'outside_finally_tree': ([], 26810), 'record_in_goto_queue': ([], 26810), 'record_in_goto_queue_label': ([], 26810), 'lower_try_finally_dup_block': ([], 26810), 'gimple_try_catch_is_cleanup': ([], 26810), 'gimple_seq_first_stmt': ([], 26810), 'emit_post_landing_pad': ([], 26810), 'do_return_redirection': ([], 26810), 'do_goto_redirection': ([], 26810), 'find_goto_replacement': ([], 26810), 'gimple_seq_singleton_p': ([], 26810), 'replace_goto_queue_cond_clause': ([], 26810), 'replace_goto_queue_stmt_list': ([], 26810), 'replace_goto_queue': ([], 26810), 'lower_try_finally_fallthru_label': ([], 26810), 'gimple_seq_last_stmt': ([], 26810), 'frob_into_branch_around': ([], 26810), 'honor_protect_cleanup_actions': ([], 26810), 'lower_eh_constructs_1': ([276], 26808), 'lower_eh_constructs': ([], 26810)}, "PosixPath('602/tree-phinodes.bc')": {'gsi_last': ([], 3209), 'relink_imm_use': ([], 3209), 'gsi_start': ([], 3209), 'VEC_gimple_base_pop': ([], 3209), 'allocate_phi_node': ([], 3209), 'make_phi_node': ([], 3209), 'delink_imm_use': ([], 3209), 'VEC_gimple_base_space': ([], 3209), 'VEC_gimple_gc_reserve': ([], 3209), 'VEC_gimple_base_quick_push': ([], 3209), 'VEC_gimple_gc_safe_push': ([], 3209), 'release_phi_node': ([], 3209), 'link_imm_use_to_list': ([], 3209), 'link_imm_use': ([], 3209), 'relink_imm_use_stmt': ([], 3209), 'resize_phi_node': ([], 3209), 'set_ssa_use_from_ptr': ([], 3209), 'gsi_next': ([], 3209), 'reserve_phi_args_for_new_edge': ([3], 3206), 'phi_nodes': ([], 3209), 'gsi_stmt': ([], 3209), 'set_phi_nodes': ([], 3209), 'add_phi_node_to_bb': ([], 3209), 'create_phi_node': ([], 3209), 'add_phi_arg': ([], 3209), 'remove_phi_args': ([], 3209), 'remove_phi_nodes': ([], 3209)}, "PosixPath('602/lto-cgraph.bc')": {'lto_cgraph_encoder_new': ([], 6144), 'VEC_cgraph_node_ptr_base_space': ([], 6144), 'VEC_cgraph_node_ptr_heap_reserve': ([], 6144), 'VEC_cgraph_node_ptr_base_quick_push': ([], 6144), 'VEC_cgraph_node_ptr_heap_safe_push': ([2], 6142), 'lto_cgraph_encoder_encode': ([], 6144), 'output_profile_summary': ([], 6144), 'csi_end_p': ([], 6144), 'cgraph_node_in_set_p': ([], 6144), 'lto_cgraph_encoder_size': ([], 6144), 'lto_output_node': ([], 6144), 'lto_output_edge': ([], 6144), 'output_cgraph': ([17], 6127), 'input_profile_summary': ([], 6144), 'input_edge': ([], 6144), 'lto_file_decl_data_get_fn_decl': ([], 6144), 'input_overwrite_node': ([], 6144), 'input_node': ([], 6144), 'VEC_cgraph_node_ptr_base_iterate': ([], 6144), 'input_cgraph_1': ([], 6144), 'input_cgraph': ([], 6144)}, "PosixPath('602/tree-ssa-threadedge.bc')": {'VEC_tree_base_space': ([], 4169), 'VEC_tree_heap_reserve_exact': ([], 4169), 'VEC_tree_heap_safe_grow': ([], 4169), 'VEC_tree_heap_safe_grow_cleared': ([1], 4165), 'set_ssa_name_value': ([1, 4], 4166), 'threadedge_initialize_values': ([], 4169), 'single_succ_p': ([], 4169), 'single_pred_p': ([], 4169), 'bb_seq': ([], 4169), 'gsi_last_bb': ([], 4169), 'gsi_stmt': ([], 4169), 'potentially_threadable_block': ([], 4169), 'gimple_use_ops': ([], 4169), 'op_iter_init': ([], 4169), 'op_iter_next_use': ([], 4169), 'VEC_tree_heap_reserve': ([], 4169), 'VEC_tree_base_quick_push': ([], 4169), 'record_temporary_equivalence': ([0], 4167), 'gsi_next': ([], 4169), 'record_temporary_equivalences_from_phis': ([], 4169), 'gsi_start_bb': ([], 4169), 'gimple_ops': ([], 4169), 'gimple_call_fndecl': ([], 4169), 'op_iter_next_tree': ([], 4169), 'num_ssa_operands': ([], 4169), 'delink_imm_use': ([], 4169), 'link_imm_use_to_list': ([], 4169), 'link_imm_use': ([], 4169), 'set_ssa_use_from_ptr': ([], 4169), 'fold_assignment_stmt': ([], 4169), 'record_temporary_equivalences_from_stmts_at_dest': ([], 4169), 'end_readonly_imm_use_p': ([], 4169), 'first_readonly_imm_use': ([], 4169), 'next_readonly_imm_use': ([], 4169), 'lhs_of_dominating_assert': ([], 4169), 'gimple_set_op': ([], 4169), 'simplify_control_stmt_condition': ([], 4169), 'VEC_tree_base_pop': ([], 4169), 'remove_temporary_equivalences': ([], 4169), 'thread_across_edge': ([], 4169)}, "PosixPath('602/tree-object-size.bc')": {'check_for_plus_in_loops_1': ([], 9415), 'gimple_ops': ([], 9415), 'gimple_op': ([], 9415), 'unknown_object_size': ([], 9415), 'gimple_call_fndecl': ([], 9415), 'alloc_object_size': ([], 9415), 'call_object_size': ([], 9415), 'compute_object_offset': ([], 9415), 'bmp_iter_set_init': ([], 9415), 'bmp_iter_set': ([4], 9410), 'check_for_plus_in_loops': ([], 9415), 'bmp_iter_next': ([], 9415), 'compute_builtin_object_size': ([53, 308], 9397), 'addr_object_size': ([71], 9408), 'collect_object_sizes_for': ([], 9415), 'cond_expr_object_size': ([], 9415), 'expr_object_size': ([13, 15], 9406), 'merge_object_sizes': ([], 9415), 'init_object_sizes': ([], 9415), 'fini_object_sizes': ([], 9415), 'bb_seq': ([], 9415), 'gsi_start_bb': ([], 9415), 'gsi_stmt': ([], 9415), 'gsi_next': ([], 9415), 'compute_object_sizes': ([], 9415)}, "PosixPath('602/rtl-error.bc')": {'location_for_asm': ([], 778), 'diagnostic_for_asm': ([], 778)}, "PosixPath('602/vmsdbgout.bc')": {}, "PosixPath('602/tree-ssa-threadupdate.bc')": {'lookup_redirection_data': ([], 5888), 'redirect_edges': ([], 5888), 'create_block_for_threading': ([], 5888), 'thread_single_edge': ([], 5888), 'bmp_iter_set_init': ([], 5888), 'bmp_iter_set': ([4], 5883), 'bb_seq': ([], 5888), 'gsi_start_bb': ([], 5888), 'gsi_stmt': ([], 5888), 'gsi_next': ([], 5888), 'redirection_block_p': ([], 5888), 'ei_next': ([], 5888), 'bmp_iter_next': ([], 5888), 'mark_threaded_blocks': ([], 5888), 'gsi_last_bb': ([], 5888), 'remove_ctrl_stmt_and_useless_edges': ([7], 5886), 'single_succ_p': ([], 5888), 'single_succ_edge': ([], 5888), 'create_edge_and_update_destination_phis': ([], 5888), 'fixup_template_block': ([], 5888), 'create_duplicates': ([], 5888), 'redirection_data_hash': ([], 5888), 'thread_block': ([25, 63], 5876), 'number_of_loops': ([], 5888), 'VEC_int_base_quick_push': ([], 5888), 'loop_outer': ([], 5888), 'VEC_int_base_iterate': ([], 5888), 'get_loop': ([], 5888), 'fel_next': ([5], 5885), 'fel_init': ([], 5888), 'determine_bb_domination_status': ([], 5888), 'single_pred_p': ([], 5888), 'thread_through_loop_header': ([30], 5886), 'loops_state_set': ([], 5888), 'thread_through_all_blocks': ([18], 5886), 'VEC_edge_base_space': ([], 5888), 'VEC_edge_heap_reserve': ([], 5888), 'VEC_edge_base_quick_push': ([], 5888), 'VEC_edge_heap_safe_push': ([0], 5886)}, "PosixPath('602/ira-lives.bc')": {'process_bb_node_lives': ([0, 44, 51, 512], 11067), 'set_allocno_live': ([40, 41], 11078), 'ira_implicitly_set_insn_hard_regs': ([11], 11080), 'ira_allocno_iter_cond': ([], 11082), 'create_start_finish_chains': ([], 11082), 'ira_print_live_range_list': ([], 11082), 'print_allocno_live_ranges': ([], 11082), 'print_live_ranges': ([], 11082), 'df_lr_get_bb_info': ([], 11082), 'sparseset_clear': ([], 11082), 'bmp_iter_set_init': ([], 11082), 'bmp_iter_set': ([4], 11077), 'sparseset_bit_p': ([], 11082), 'sparseset_insert_bit': ([], 11082), 'sparseset_set_bit': ([], 11082), 'sparseset_iter_init': ([], 11082), 'sparseset_iter_p': ([], 11082), 'sparseset_iter_elm': ([], 11082), 'sparseset_iter_next': ([], 11082), 'make_regno_born': ([11], 11080), 'bmp_iter_next': ([], 11082), 'mark_reg_live': ([], 11082), 'mark_ref_live': ([], 11082), 'single_reg_class': ([], 11082), 'single_reg_operand_class': ([], 11082), 'ira_get_register_move_cost': ([0], 11077), 'ira_allocate_and_set_costs': ([], 11082), 'process_single_reg_class_operands': ([41], 11070), 'update_allocno_pressure_excess_length': ([5], 11077), 'clear_allocno_live': ([], 11082), 'make_regno_dead': ([], 11082), 'mark_reg_dead': ([], 11082), 'mark_ref_dead': ([], 11082), 'make_pseudo_conflict': ([0], 11077), 'check_and_make_def_use_conflict': ([], 11082), 'check_and_make_def_conflict': ([1], 11077), 'make_early_clobber_and_input_conflicts': ([], 11082), 'mark_hard_reg_early_clobbers': ([5], 11077), 'ei_next': ([], 11082), 'bb_has_eh_pred': ([], 11082), 'bb_has_abnormal_pred': ([], 11082), 'bb_has_abnormal_call_pred': ([], 11082), 'remove_some_program_points_and_update_live_ranges': ([], 11082), 'ira_compress_allocno_live_ranges': ([], 11082)}, "PosixPath('602/resource.bc')": {'add_to_hard_reg_set': ([], 6926), 'mark_referenced_resources': ([14, 36], 6920), 'mark_set_resources': ([21, 26, 27], 6917), 'return_insn_p': ([], 6926), 'find_basic_block': ([], 6926), 'df_lr_get_bb_info': ([], 6926), 'remove_from_hard_reg_set': ([], 6926), 'next_insn_no_annul': ([], 6926), 'find_dead_or_set_registers': ([], 6926), 'update_live_status': ([], 6926), 'mark_target_live_regs': ([304, 359], 6917), 'init_resource_info': ([6], 6923), 'free_resource_info': ([11], 6923), 'clear_hashed_info_for_insn': ([], 6926), 'incr_ticks_for_insn': ([], 6926)}, "PosixPath('602/opts.bc')": {'set_struct_debug_option': ([], 17052), 'base_of_path': ([], 17052), 'matches_main_base': ([], 17052), 'should_emit_struct_debug': ([], 17052), 'VEC_const_char_p_base_pop': ([], 17052), 'print_ignored_options': ([], 17052), 'VEC_char_p_base_iterate': ([], 17052), 'flag_instrument_functions_exclude_p': ([], 17052), 'VEC_const_char_p_base_space': ([], 17052), 'VEC_const_char_p_heap_reserve': ([], 17052), 'VEC_const_char_p_base_quick_push': ([], 17052), 'VEC_const_char_p_heap_safe_push': ([], 17052), 'postpone_unknown_option_warning': ([], 17052), 'write_langs': ([], 17052), 'integral_argument': ([], 17052), 'set_option': ([], 17052), 'wrap_help': ([], 17052), 'option_enabled': ([], 17052), 'print_filtered_help': ([38], 17050), 'print_specific_help': ([], 17052), 'enable_warning_as_error': ([], 17052), 'VEC_char_p_base_space': ([], 17052), 'VEC_char_p_heap_reserve': ([], 17052), 'VEC_char_p_base_quick_push': ([], 17052), 'VEC_char_p_heap_safe_push': ([2], 17050), 'add_comma_separated_to_vector': ([], 17052), 'common_handle_option': ([], 17052), 'handle_option': ([], 17052), 'handle_options': ([], 17052), 'decode_options': ([], 17052), 'fast_math_flags_struct_set_p': ([], 17052), 'get_option_state': ([], 17052)}, "PosixPath('602/function.bc')": {'allocate_struct_function': ([], 32278), 'assign_stack_temp_for_type': ([], 32278), 'expand_function_end': ([15], 32277), 'split_complex_args': ([], 32278), 'aggregate_value_p': ([], 32278), 'VEC_function_p_base_space': ([], 32278), 'VEC_function_p_heap_reserve': ([], 32278), 'VEC_function_p_base_quick_push': ([], 32278), 'VEC_function_p_heap_safe_push': ([2], 32276), 'VEC_function_p_base_pop': ([], 32278), 'pop_function_context': ([], 32278), 'free_after_compilation': ([], 32278), 'cut_slot_from_list': ([], 32278), 'insert_slot_to_list': ([], 32278), 'VEC_temp_slot_p_base_space': ([], 32278), 'VEC_temp_slot_p_gc_reserve_exact': ([], 32278), 'VEC_temp_slot_p_gc_safe_grow': ([], 32278), 'VEC_temp_slot_p_gc_safe_grow_cleared': ([], 32278), 'temp_slots_at_level': ([0], 32277), 'temp_slot_address_compute_hash': ([], 32278), 'insert_temp_slot_address': ([], 32278), 'assign_temp': ([3, 5], 32273), 'find_temp_slot_from_address': ([1], 32270), 'update_temp_slot_address': ([], 32278), 'mark_temp_addr_taken': ([], 32278), 'move_slot_to_level': ([], 32278), 'preserve_temp_slots': ([0], 32267), 'make_slot_available': ([], 32278), 'remove_unused_temp_slot_addresses_1': ([], 32278), 'combine_temp_slots': ([4], 32272), 'free_temp_slots': ([], 32278), 'pop_temp_slots': ([], 32278), 'instantiate_virtual_regs_in_rtx': ([], 32278), 'instantiate_decl_rtl': ([], 32278), 'use_register_for_decl': ([], 32278), 'pass_by_reference': ([], 32278), 'VEC_tree_base_space': ([], 32278), 'VEC_tree_heap_reserve': ([], 32278), 'VEC_tree_base_quick_push': ([], 32278), 'VEC_tree_heap_safe_push': ([], 32278), 'VEC_tree_base_quick_insert': ([], 32278), 'VEC_tree_heap_safe_insert': ([], 32278), 'VEC_tree_base_iterate': ([], 32278), 'assign_parms_augmented_arg_list': ([], 32278), 'assign_parm_find_data_types': ([19], 32272), 'gimplify_parm_type': ([], 32278), 'gimplify_parameters': ([27], 32274), 'pad_to_arg_alignment': ([], 32278), 'locate_and_pad_parm': ([], 32278), 'regno_clobbered_at_setjmp': ([], 32278), 'setjmp_vars_warning': ([], 32278), 'setjmp_args_warning': ([], 32278), 'generate_setjmp_warnings': ([], 32278), 'clear_block_marks': ([], 32278), 'VEC_tree_base_pop': ([], 32278), 'blocks_nreverse': ([], 32278), 'reorder_blocks_1': ([], 32278), 'reorder_blocks': ([], 32278), 'all_blocks': ([], 32278), 'number_blocks': ([0], 32273), 'debug_find_var_in_block_tree': ([], 32278), 'pop_cfun': ([], 32278), 'assign_parms_setup_varargs': ([], 32278), 'assign_parm_find_entry_rtl': ([], 32278), 'assign_parm_is_stack_parm': ([], 32278), 'assign_parm_find_stack_rtl': ([], 32278), 'assign_parm_adjust_entry_rtl': ([], 32278), 'assign_parm_adjust_stack_rtl': ([], 32278), 'assign_parm_setup_block_p': ([], 32278), 'assign_parm_setup_block': ([], 32278), 'assign_parm_setup_reg': ([], 32278), 'assign_parm_setup_stack': ([], 32278), 'assign_parms_unsplit_complex': ([], 32278), 'assign_parms': ([337], 32212), 'expand_function_start': ([], 32278), 'expand_dummy_function_end': ([], 32278), 'diddle_return_value': ([], 32278), 'clobber_return_register': ([], 32278), 'do_warn_unused_parameter': ([], 32278), 'contains': ([], 32278), 'ei_next': ([], 32278), 'reposition_prologue_and_epilogue_notes': ([32], 32276), 'used_types_insert_helper': ([], 32278), 'used_types_insert': ([0], 32271), 'hash_types_used_by_vars_entry': ([], 32278), 'types_used_by_vars_eq': ([], 32278), 'types_used_by_var_decl_insert': ([], 32278), 'gt_ggc_mx_temp_slot': ([], 32278), 'gt_ggc_mx_temp_slot_address_entry': ([], 32278), 'gt_ggc_m_P23temp_slot_address_entry4htab': ([], 32278), 'gt_pch_nx_temp_slot': ([], 32278), 'gt_pch_nx_temp_slot_address_entry': ([], 32278), 'gt_pch_p_P23temp_slot_address_entry4htab': ([], 32278), 'gt_pch_n_P23temp_slot_address_entry4htab': ([], 32278), 'match_asm_constraints_1': ([], 32278), 'rest_of_match_asm_constraints': ([16, 24, 25], 32264), 'set_insn_locators': ([], 32278), 'single_succ_p': ([], 32278), 'single_succ_edge': ([], 32278), 'thread_prologue_and_epilogue_insns': ([], 32278), 'rest_of_handle_thread_prologue_and_epilogue': ([], 32278), 'safe_insn_predicate': ([], 32278), 'recog_memoized': ([], 32278), 'instantiate_virtual_regs_in_insn': ([], 32278), 'instantiate_expr': ([], 32278), 'instantiate_decls_1': ([4], 32272), 'instantiate_decls': ([], 32278), 'instantiate_virtual_regs': ([], 32278)}, "PosixPath('602/cfgloopanal.bc')": {'just_once_each_iteration_p': ([], 3210), 'number_of_loops': ([], 3210), 'ei_next': ([], 3210), 'loop_depth': ([], 3210), 'loops_state_set': ([], 3210), 'mark_irreducible_loops': ([27, 134, 146, 243], 3196), 'num_loop_insns': ([], 3210), 'average_num_loop_insns': ([], 3210), 'expected_loop_iterations_unbounded': ([32, 44], 3206), 'seq_cost': ([], 3210), 'init_set_costs': ([], 3210), 'estimate_reg_pressure_cost': ([], 3210), 'loop_outer': ([], 3210), 'mark_loop_exit_edges': ([18], 3208)}, "PosixPath('602/combine-stack-adj.bc')": {'single_set_for_csa': ([0], 2486), 'try_apply_stack_adjustment': ([], 2489), 'adjust_frame_related_expr': ([], 2489), 'stack_memref_p': ([], 2489), 'record_one_stack_ref': ([], 2489), 'record_stack_refs': ([], 2489), 'combine_stack_adjustments_for_block': ([], 2489), 'combine_stack_adjustments': ([], 2489), 'rest_of_handle_stack_adjustments': ([], 2489)}, "PosixPath('602/var-tracking.bc')": {'vt_initialize': ([684], 53846), 'dataflow_set_merge': ([], 53849), 'variable_union': ([], 53849), 'dataflow_set_clear_at_call': ([], 53849), 'delete_debug_insns': ([], 53849), 'dataflow_set_init': ([], 53849), 'stack_adjust_offset_pre_post': ([], 53849), 'insn_stack_adjust_offset_pre_post': ([], 53849), 'ei_next': ([], 53849), 'vt_stack_adjustments': ([], 53849), 'VEC_rtx_base_space': ([], 53849), 'VEC_rtx_heap_reserve': ([], 53849), 'VEC_rtx_base_quick_push': ([], 53849), 'VEC_rtx_heap_safe_push': ([2], 53847), 'var_debug_decl': ([], 53849), 'attrs_list_insert': ([], 53849), 'dv_uid': ([], 53849), 'dv_htab_hash': ([], 53849), 'shared_hash_find_slot_1': ([], 53849), 'shared_hash_find_slot': ([], 53849), 'vars_copy_1': ([], 53849), 'dv_onepart_p': ([0], 53848), 'variable_htab_free': ([], 53849), 'shared_hash_unshare': ([], 53849), 'shared_hash_find_slot_unshare_1': ([], 53849), 'loc_cmp': ([0], 53846), 'shared_var_p': ([], 53849), 'unshare_variable': ([], 53849), 'find_variable_location_part': ([], 53849), 'add_value_chain': ([], 53849), 'add_value_chains': ([], 53849), 'set_dv_changed': ([], 53849), 'variable_was_changed': ([0], 53846), 'set_slot_part': ([81], 53831), 'var_reg_decl_set': ([], 53849), 'vt_init_cfa_base': ([], 53849), 'single_succ_p': ([], 53849), 'single_succ_edge': ([], 53849), 'single_succ': ([], 53849), 'single_pred_p': ([], 53849), 'log_op_type': ([], 53849), 'VEC_micro_operation_base_space': ([], 53849), 'VEC_micro_operation_heap_reserve': ([], 53849), 'VEC_micro_operation_base_quick_push': ([], 53849), 'VEC_micro_operation_heap_safe_push': ([2], 53847), 'use_narrower_mode': ([], 53849), 'adjust_mems': ([2], 53841), 'adjust_insn': ([], 53849), 'contains_symbol_ref': ([], 53849), 'track_expr_p': ([], 53849), 'find_use_val': ([], 53849), 'get_address_mode': ([], 53849), 'track_loc_p': ([], 53849), 'use_type': ([], 53849), 'var_lowpart': ([], 53849), 'same_variable_part_p': ([], 53849), 'replace_expr_with_values': ([], 53849), 'reverse_op': ([], 53849), 'add_stores': ([], 53849), 'add_uses': ([8, 15, 94, 95], 53829), 'add_with_sets': ([1], 53841), 'fp_setter': ([], 53849), 'vt_get_decl_and_offset': ([], 53849), 'vt_add_function_parameters': ([], 53849), 'attrs_list_clear': ([], 53849), 'shared_hash_destroy': ([0], 53844), 'vt_finalize': ([], 53849), 'dataflow_set_clear': ([], 53849), 'attrs_list_copy': ([], 53849), 'dataflow_set_copy': ([], 53849), 'attrs_list_member': ([], 53849), 'attrs_list_mpdv_union': ([], 53849), 'variable_union_info_cmp_pos': ([], 53849), 'onepart_variable_different_p': ([], 53849), 'find_loc_in_1pdv': ([], 53849), 'insert_into_intersection': ([], 53849), 'intersect_loc_chains': ([], 53849), 'remove_value_chain': ([9, 14], 53840), 'remove_value_chains': ([], 53849), 'delete_slot_part': ([], 53849), 'clobber_slot_part': ([13], 53829), 'clobber_variable_part': ([], 53849), 'canonicalize_values_star': ([39, 70], 53841), 'variable_merge_over_cur': ([], 53849), 'variable_merge_over_src': ([], 53849), 'canonicalize_vars_star': ([26], 53843), 'val_reset': ([], 53849), 'variable_post_merge_perm_vals': ([], 53849), 'remove_duplicate_values': ([], 53849), 'variable_post_merge_new_vals': ([0, 65], 53843), 'dataflow_post_merge_adjust': ([], 53849), 'attrs_list_union': ([], 53849), 'dataflow_set_union': ([], 53849), 'var_regno_delete': ([], 53849), 'may_be_aliased': ([], 53849), 'is_global_var': ([], 53849), 'mem_dies_at_call': ([], 53849), 'dataflow_set_remove_mem_locs': ([], 53849), 'find_mem_expr_in_1pdv': ([0], 53845), 'dataflow_set_preserve_mem_locs': ([1, 68, 71, 101], 53833), 'var_reg_set': ([], 53849), 'var_mem_set': ([], 53849), 'val_resolve': ([4], 53848), 'val_store': ([], 53849), 'var_reg_delete': ([], 53849), 'var_mem_delete': ([], 53849), 'get_init_value': ([], 53849), 'find_src_status': ([], 53849), 'find_src_set_src': ([], 53849), 'var_reg_delete_and_set': ([], 53849), 'var_mem_delete_and_set': ([], 53849), 'dataflow_set_equiv_regs': ([], 53849), 'dump_var': ([], 53849), 'variable_part_different_p': ([], 53849), 'variable_different_p': ([], 53849), 'dataflow_set_different': ([], 53849), 'canonicalize_values_mark': ([], 53849), 'compute_bb_dataflow': ([], 53849), 'dump_attrs_list': ([], 53849), 'dump_dataflow_set': ([], 53849), 'vt_find_locations': ([1, 15, 268], 53561), 'dump_dataflow_sets': ([], 53849), 'VEC_rtx_base_iterate': ([], 53849), 'add_cselib_value_chains': ([], 53849), 'VEC_variable_base_pop': ([], 53849), 'dv_changed_p': ([], 53849), 'VEC_variable_base_space': ([], 53849), 'VEC_variable_heap_reserve': ([], 53849), 'VEC_variable_base_quick_push': ([], 53849), 'VEC_variable_heap_safe_push': ([], 53849), 'check_changed_vars_0': ([], 53849), 'check_changed_vars_2': ([], 53849), 'VEC_rtx_base_pop': ([], 53849), 'vt_expand_loc_callback': ([], 53849), 'vt_expand_loc': ([], 53849), 'vt_expand_loc_dummy': ([], 53849), 'emit_note_insn_var_location': ([0, 14, 46], 53740), 'check_changed_vars_3': ([20], 53848), 'check_changed_vars_1': ([0], 53848), 'emit_notes_for_changes': ([], 53849), 'emit_notes_for_differences_2': ([1], 53844), 'emit_notes_for_differences_1': ([], 53849), 'emit_notes_for_differences': ([], 53849), 'emit_notes_in_bb': ([], 53849), 'vt_emit_notes': ([], 53849), 'variable_tracking_main_1': ([], 53849), 'variable_tracking_main': ([], 53849)}, "PosixPath('602/md5.bc')": {'md5_init_ctx': ([], 3452), 'md5_read_ctx': ([], 3452), 'md5_process_block': ([], 3452), 'md5_finish_ctx': ([], 3452), 'md5_process_bytes': ([], 3452), 'md5_stream': ([], 3452), 'md5_buffer': ([], 3452)}, "PosixPath('602/cgraphbuild.bc')": {'reset_inline_failed': ([], 2138), 'compute_call_stmt_bb_frequency': ([], 2138), 'record_reference': ([], 2138), 'bb_seq': ([], 2138), 'gsi_start_bb': ([], 2138), 'gsi_stmt': ([], 2138), 'gimple_ops': ([], 2138), 'gimple_call_fndecl': ([], 2138), 'gsi_next': ([], 2138), 'rebuild_cgraph_edges': ([], 2138), 'build_cgraph_edges': ([37], 2133)}, "PosixPath('602/ira.bc')": {'setup_class_subset_and_memory_move_costs': ([], 17984), 'update_equiv_regs': ([], 17984), 'fix_reg_equiv_init': ([1], 17972), 'ira_print_disposition': ([], 17984), 'print_class_cover': ([], 17984), 'ira_debug_class_cover': ([], 17984), 'ira_init_register_move_cost': ([16], 17982), 'ira_init_once': ([], 17984), 'free_register_move_costs': ([], 17984), 'setup_reg_mode_hard_regset': ([], 17984), 'setup_class_hard_regs': ([], 17984), 'setup_available_class_regs': ([], 17984), 'setup_alloc_regs': ([0], 17976), 'setup_reg_subclasses': ([], 17984), 'setup_cover_and_important_classes': ([], 17984), 'setup_class_translate': ([], 17984), 'comp_reg_classes_func': ([], 17984), 'reorder_important_classes': ([], 17984), 'setup_reg_class_relations': ([136], 17976), 'find_reg_class_closure': ([14], 17970), 'setup_hard_regno_cover_class': ([], 17984), 'setup_reg_class_nregs': ([], 17984), 'setup_prohibited_class_mode_regs': ([], 17984), 'ira_init': ([312], 17976), 'compute_regs_asm_clobbered': ([], 17984), 'ira_setup_eliminable_regset': ([], 17984), 'df_lr_get_bb_info': ([], 17984), 'mark_elimination': ([], 17984), 'recog_memoized': ([], 17984), 'setup_prohibited_mode_move_regs': ([], 17984), 'no_equiv': ([], 17984), 'validate_equiv_mem_from_store': ([1], 17979), 'validate_equiv_mem': ([], 17984), 'equiv_init_varies_p': ([], 17984), 'equiv_init_movable_p': ([], 17984), 'contains_replace_regs': ([], 17984), 'memref_referenced_p': ([], 17984), 'memref_used_between_p': ([], 17984), 'df_live_get_bb_info': ([], 17984), 'adjust_cleared_regs': ([], 17984), 'find_reg_equiv_invariant_const': ([], 17984), 'ira_allocno_iter_cond': ([], 17984), 'setup_allocno_assignment_flags': ([4], 17981), 'setup_reg_renumber': ([], 17984), 'calculate_allocation_cost': ([], 17984), 'VEC_rtx_base_space': ([], 17984), 'VEC_rtx_gc_reserve_exact': ([], 17984), 'VEC_rtx_gc_safe_grow': ([], 17984), 'bmp_iter_set_init': ([], 17984), 'bmp_iter_set': ([4], 17979), 'bmp_iter_next': ([], 17984), 'pseudo_for_reload_consideration_p': ([], 17984), 'init_live_subregs': ([0], 17983), 'build_insn_chain': ([], 17984), 'ira': ([28, 116], 17978)}, "PosixPath('602/stor-layout.bc')": {'start_record_layout': ([], 16009), 'place_field': ([4], 16004), 'finalize_type_size': ([5], 15991), 'finish_builtin_struct': ([], 16009), 'layout_type': ([0], 15976), 'initialize_sizetypes': ([0], 15992), 'set_sizetype': ([3], 16005), 'VEC_tree_base_iterate': ([], 16009), 'VEC_tree_base_space': ([], 16009), 'VEC_tree_gc_reserve': ([], 16009), 'VEC_tree_base_quick_push': ([], 16009), 'VEC_tree_gc_safe_push': ([], 16009), 'copy_self_referential_tree_r': ([], 16009), 'self_referential_size': ([], 16009), 'variable_size': ([], 16009), 'finalize_size_functions': ([], 16009), 'mode_for_size': ([], 16009), 'smallest_mode_for_size': ([], 16009), 'int_mode_for_mode': ([], 16009), 'vector_type_mode': ([], 16009), 'do_type_align': ([], 16009), 'layout_decl': ([0, 2, 9], 15980), 'relayout_decl': ([], 16009), 'debug_rli': ([], 16009), 'rli_size_unit_so_far': ([], 16009), 'rli_size_so_far': ([], 16009), 'update_alignment_for_field': ([], 16009), 'place_union_field': ([], 16009), 'compute_record_mode': ([], 16009), 'finalize_record_size': ([], 16009), 'finish_record_layout': ([], 16009), 'set_min_and_max_values_for_integral_type': ([], 16009), 'fixup_unsigned_type': ([], 16009), 'make_fract_type': ([0], 15989), 'make_accum_type': ([0], 15989), 'get_best_mode': ([], 16009)}, "PosixPath('602/cpp_directives.bc')": {'_cpp_handle_directive': ([3, 260], 17555), 'do_pragma_push_macro': ([12], 17634), 'destringize_and_run': ([47], 17636), 'do_pragma': ([], 17640), 'start_directive': ([], 17640), 'check_eol': ([], 17640), 'do_ident': ([], 17640), 'parse_answer': ([], 17640), 'parse_assertion': ([], 17640), 'find_answer': ([3, 6], 17633), 'do_unassert': ([], 17640), 'do_assert': ([2], 17612), 'check_eol_return_comments': ([], 17640), 'cpp_in_primary_file': ([], 17640), 'do_diagnostic': ([], 17640), 'lookup_pragma_entry': ([], 17640), 'do_elif': ([], 17640), 'strtolinenum': ([], 17640), 'skip_rest_of_line': ([], 17640), '_cpp_do_file_change': ([], 17640), 'do_line': ([], 17640), 'lex_macro_node': ([], 17640), 'do_undef': ([], 17640), 'push_conditional': ([5], 17634), 'do_ifndef': ([2], 17637), 'do_else': ([], 17640), 'do_if': ([], 17640), 'do_ifdef': ([2], 17637), 'do_endif': ([], 17640), 'do_define': ([], 17640), 'parse_include': ([], 17640), 'do_include_common': ([20], 17615), 'do_include_next': ([], 17640), 'directive_diagnostics': ([], 17640), 'prepare_directive_trad': ([], 17640), 'end_directive': ([], 17640), 'read_flag': ([], 17640), 'do_linemarker': ([], 17640), 'new_pragma_entry': ([], 17640), 'register_pragma_1': ([], 17640), 'cpp_register_pragma': ([], 17640), 'cpp_register_deferred_pragma': ([], 17640), 'register_pragma_internal': ([], 17640), 'do_pragma_dependency': ([], 17640), 'do_pragma_system_header': ([], 17640), 'do_pragma_poison': ([], 17640), 'get__Pragma_string': ([0, 1], 17635), 'cpp_pop_definition': ([0], 17599), 'do_pragma_pop_macro': ([0, 16, 23], 17625), 'cpp_push_definition': ([], 17640), 'do_pragma_once': ([], 17640), 'count_registered_pragmas': ([], 17640), 'save_registered_pragmas': ([], 17640), 'restore_registered_pragmas': ([], 17640), 'cpp_push_buffer': ([5], 17634), '_cpp_pop_buffer': ([], 17640), '_cpp_test_assertion': ([], 17640), 'run_directive': ([], 17640), 'cpp_define': ([], 17640), 'cpp_define_formatted': ([], 17640), 'handle_assertion': ([], 17640), 'cpp_get_deps': ([], 17640), '_cpp_init_directives': ([], 17640)}, "PosixPath('602/cp-demangle.bc')": {'cplus_demangle_type': ([70], 24232), 'd_print_flush': ([], 24235), 'd_print_cast': ([], 24235), 'cplus_demangle_fill_name': ([], 24235), 'cplus_demangle_fill_extended_operator': ([], 24235), 'cplus_demangle_fill_ctor': ([], 24235), 'cplus_demangle_fill_dtor': ([], 24235), 'd_make_empty': ([], 24235), 'd_make_comp': ([], 24235), 'd_cv_qualifiers': ([12], 24232), 'd_add_substitution': ([0], 24232), 'd_make_builtin_type': ([], 24235), 'd_number': ([0], 24233), 'd_make_name': ([], 24235), 'd_identifier': ([], 24235), 'd_source_name': ([], 24235), 'd_make_extended_operator': ([], 24235), 'd_make_operator': ([], 24235), 'd_ctor_dtor_name': ([], 24235), 'd_compact_number': ([0], 24234), 'd_unnamed_type': ([], 24235), 'd_make_sub': ([], 24235), 'd_substitution': ([], 24235), 'd_make_template_param': ([], 24235), 'd_template_param': ([], 24235), 'd_make_function_param': ([], 24235), 'd_make_default_arg': ([], 24235), 'd_make_character': ([], 24235), 'd_java_resource': ([], 24235), 'is_ctor_dtor_or_conversion': ([], 24235), 'has_return_type': ([], 24235), 'd_unqualified_name': ([2], 24231), 'd_operator_name': ([], 24235), 'd_template_args': ([14], 24227), 'd_expression': ([], 24235), 'd_exprlist': ([], 24235), 'd_expr_primary': ([], 24235), 'cplus_demangle_mangled_name': ([0], 24230), 'd_encoding': ([2], 24226), 'd_parmlist': ([], 24235), 'd_name': ([], 24235), 'd_print_init': ([], 24235), 'd_append_char': ([0], 24233), 'd_print_java_identifier': ([], 24235), 'd_index_template_argument': ([], 24235), 'd_lookup_template_argument': ([], 24235), 'd_append_num': ([], 24235), 'd_find_pack': ([], 24235), 'd_pack_length': ([], 24235), 'd_print_comp': ([172, 288], 24223), 'd_print_expr_op': ([], 24235), 'd_print_function_type': ([10], 24223), 'd_print_mod_list': ([], 24235), 'd_print_array_type': ([], 24235), 'd_print_mod': ([], 24235), 'cplus_demangle_print_callback': ([], 24235), 'd_growable_string_resize': ([], 24235), 'd_growable_string_append_buffer': ([], 24235), 'd_growable_string_callback_adapter': ([], 24235), 'cplus_demangle_print': ([], 24235), 'cplus_demangle_init_info': ([], 24235), 'd_demangle_callback': ([], 24235), 'd_demangle': ([], 24235), 'cplus_demangle_v3': ([], 24235), 'java_demangle_v3': ([], 24235), 'is_ctor_or_dtor': ([], 24235), 'is_gnu_v3_mangled_ctor': ([], 24235), 'is_gnu_v3_mangled_dtor': ([], 24235)}, "PosixPath('602/genrtl.bc')": {'gen_rtx_fmt_0_stat': ([], 3922), 'gen_rtx_fmt_ee_stat': ([], 3922), 'gen_rtx_fmt_ue_stat': ([], 3922), 'gen_rtx_fmt_E_stat': ([], 3922), 'gen_rtx_fmt_e_stat': ([], 3922), 'gen_rtx_fmt_iuuBieie_stat': ([], 3922), 'gen_rtx_fmt_iuuBieie0_stat': ([], 3922), 'gen_rtx_fmt_iuuBieiee_stat': ([], 3922), 'gen_rtx_fmt_iuu00000_stat': ([], 3922), 'gen_rtx_fmt_iuuB00is_stat': ([], 3922), 'gen_rtx_fmt_si_stat': ([], 3922), 'gen_rtx_fmt_ssiEEEi_stat': ([], 3922), 'gen_rtx_fmt_Ei_stat': ([], 3922), 'gen_rtx_fmt_eEee0_stat': ([], 3922), 'gen_rtx_fmt_eee_stat': ([], 3922), 'gen_rtx_fmt_w_stat': ([], 3922), 'gen_rtx_fmt_www_stat': ([], 3922), 'gen_rtx_fmt_s_stat': ([], 3922), 'gen_rtx_fmt_i00_stat': ([], 3922), 'gen_rtx_fmt_ei_stat': ([], 3922), 'gen_rtx_fmt_e0_stat': ([], 3922), 'gen_rtx_fmt_u_stat': ([], 3922), 'gen_rtx_fmt_s00_stat': ([], 3922), 'gen_rtx_fmt_tei_stat': ([], 3922), 'gen_rtx_fmt_iss_stat': ([], 3922), 'gen_rtx_fmt_is_stat': ([], 3922), 'gen_rtx_fmt_isE_stat': ([], 3922), 'gen_rtx_fmt_i_stat': ([], 3922), 'gen_rtx_fmt_iE_stat': ([], 3922), 'gen_rtx_fmt_ss_stat': ([], 3922), 'gen_rtx_fmt_sEss_stat': ([], 3922), 'gen_rtx_fmt_eE_stat': ([], 3922), 'gen_rtx_fmt_Ess_stat': ([], 3922), 'gen_rtx_fmt_ses_stat': ([], 3922), 'gen_rtx_fmt_sss_stat': ([], 3922), 'gen_rtx_fmt_sse_stat': ([], 3922), 'gen_rtx_fmt_sies_stat': ([], 3922), 'gen_rtx_fmt_sE_stat': ([], 3922), 'gen_rtx_fmt_ii_stat': ([], 3922), 'gen_rtx_fmt_Ee_stat': ([], 3922)}, "PosixPath('602/ipa-prop.bc')": {'ipa_push_func_to_list_1': ([], 15595), 'ipa_init_func_list': ([], 15595), 'ipa_populate_param_decls': ([], 15595), 'ipa_initialize_node_params': ([], 15595), 'bb_seq': ([], 15595), 'gsi_start_bb': ([], 15595), 'gsi_stmt': ([], 15595), 'gsi_next': ([], 15595), 'ipa_get_param': ([], 15595), 'ipa_get_param_decl_index': ([], 15595), 'ipa_detect_param_modifications': ([16], 15593), 'VEC_ipa_edge_args_t_base_space': ([], 15595), 'VEC_ipa_edge_args_t_gc_reserve_exact': ([], 15595), 'VEC_ipa_edge_args_t_gc_safe_grow': ([], 15595), 'VEC_ipa_edge_args_t_gc_safe_grow_cleared': ([], 15595), 'ipa_count_arguments': ([], 15595), 'ipa_edge_args_info_available_for_edge_p': ([], 15595), 'ipa_print_node_jump_functions': ([], 15595), 'gimple_ops': ([], 15595), 'compute_complex_pass_through': ([], 15595), 'compute_scalar_jump_functions': ([], 15595), 'type_like_member_ptr_p': ([], 15595), 'compute_pass_through_member_ptrs': ([], 15595), 'gsi_prev': ([], 15595), 'get_ssa_def_if_simple_copy': ([], 15595), 'fill_member_ptr_cst_jump_function': ([], 15595), 'determine_cst_member_ptr': ([], 15595), 'compute_cst_member_ptr_arguments': ([], 15595), 'ipa_compute_jump_functions': ([], 15595), 'ipa_note_param_call': ([], 15595), 'ipa_get_member_ptr_load_param': ([], 15595), 'ipa_get_stmt_member_ptr_load_param': ([], 15595), 'single_pred_p': ([], 15595), 'single_succ_p': ([], 15595), 'single_pred_edge': ([], 15595), 'single_pred': ([], 15595), 'single_succ_edge': ([], 15595), 'single_succ': ([], 15595), 'ipa_analyze_call_uses': ([], 15595), 'ipa_analyze_stmt_uses': ([], 15595), 'ipa_analyze_params_uses': ([18], 15586), 'print_edge_addition_message': ([], 15595), 'VEC_cgraph_edge_p_base_space': ([], 15595), 'VEC_cgraph_edge_p_heap_reserve': ([], 15595), 'VEC_cgraph_edge_p_base_quick_push': ([], 15595), 'VEC_cgraph_edge_p_heap_safe_push': ([], 15595), 'update_call_notes_after_inlining': ([], 15595), 'update_jump_functions_after_inlining': ([], 15595), 'propagate_info_to_inlined_callees': ([], 15595), 'ipa_free_node_params_substructures': ([], 15595), 'VEC_ipa_node_params_t_base_space': ([], 15595), 'VEC_ipa_node_params_t_heap_reserve_exact': ([], 15595), 'VEC_ipa_node_params_t_heap_safe_grow': ([], 15595), 'VEC_ipa_node_params_t_heap_safe_grow_cleared': ([], 15595), 'ipa_check_create_node_params': ([], 15595), 'ipa_node_duplication_hook': ([], 15595), 'ipa_edge_duplication_hook': ([], 15595), 'ipa_edge_removal_hook': ([], 15595), 'ipa_print_node_params': ([], 15595), 'VEC_tree_base_quick_push': ([], 15595), 'ipa_get_vector_of_formal_parms': ([], 15595), 'get_vector_of_formal_parm_types': ([], 15595), 'ipa_modify_formal_parameters': ([], 15595), 'gimple_call_fndecl': ([], 15595), 'gimple_set_op': ([], 15595), 'ipa_modify_call_arguments': ([], 15595), 'VEC_ipa_parm_adjustment_t_base_quick_push': ([], 15595), 'ipa_combine_adjustments': ([], 15595), 'ipa_dump_param_adjustments': ([], 15595), 'csi_end_p': ([], 15595), 'ipa_write_jump_function': ([], 15595), 'ipa_write_param_call_note': ([], 15595), 'ipa_write_node_info': ([], 15595), 'ipa_prop_write_jump_functions': ([], 15595), 'ipa_read_param_call_note': ([], 15595), 'ipa_read_node_info': ([], 15595), 'ipa_prop_read_section': ([], 15595), 'ipa_prop_read_jump_functions': ([], 15595), 'ipa_update_after_lto_read': ([], 15595), 'lto_ipa_fixup_call_notes': ([], 15595)}, "PosixPath('602/tree-vect-stmts.bc')": {'vect_mark_stmts_to_be_vectorized': ([7, 8, 236], 39289), 'gsi_stmt': ([], 39315), 'vinfo_for_stmt': ([], 39315), 'gimple_vdef': ([], 39315), 'clear_and_done_ssa_iter': ([], 39315), 'op_iter_init_phidef': ([], 39315), 'gimple_def_ops': ([], 39315), 'gimple_use_ops': ([], 39315), 'gimple_vuse': ([], 39315), 'op_iter_init': ([], 39315), 'op_iter_next_def': ([], 39315), 'op_iter_init_def': ([], 39315), 'end_readonly_imm_use_p': ([], 39315), 'first_readonly_imm_use': ([], 39315), 'next_readonly_imm_use': ([], 39315), 'vect_stmt_relevant_p': ([40], 39311), 'VEC_gimple_base_space': ([], 39315), 'VEC_gimple_heap_reserve': ([], 39315), 'VEC_gimple_base_quick_push': ([], 39315), 'VEC_gimple_heap_safe_push': ([], 39315), 'vect_mark_relevant': ([11, 13], 39311), 'gsi_next': ([], 39315), 'bb_seq': ([], 39315), 'gsi_start_bb': ([], 39315), 'VEC_gimple_base_pop': ([], 39315), 'op_iter_next_use': ([], 39315), 'op_iter_init_phiuse': ([], 39315), 'gimple_ops': ([], 39315), 'vect_is_simple_use': ([0, 3], 39307), 'process_use': ([], 39315), 'cost_for_stmt': ([], 39315), 'stmt_vinfo_set_inside_of_loop_cost': ([], 39315), 'stmt_vinfo_set_outside_of_loop_cost': ([], 39315), 'vect_model_simple_cost': ([], 39315), 'vect_cost_strided_group_size': ([], 39315), 'vect_model_store_cost': ([], 39315), 'vect_model_load_cost': ([], 39315), 'gimple_set_op': ([], 39315), 'is_loop_header_bb_p': ([], 39315), 'new_stmt_vec_info': ([], 39315), 'VEC_vec_void_p_base_space': ([], 39315), 'VEC_vec_void_p_heap_reserve': ([], 39315), 'VEC_vec_void_p_base_quick_push': ([], 39315), 'VEC_vec_void_p_heap_safe_push': ([], 39315), 'set_vinfo_for_stmt': ([], 39315), 'vect_finish_stmt_generation': ([], 39315), 'gsi_after_labels': ([], 39315), 'vect_init_vector': ([8], 39306), 'get_vectype_for_scalar_type': ([], 39315), 'vect_get_vec_def_for_operand': ([], 39315), 'vect_get_vec_def_for_stmt_copy': ([], 39315), 'gimple_call_fndecl': ([], 39315), 'vectorizable_function': ([], 39315), 'vect_is_simple_cond': ([], 39315), 'vectorizable_condition': ([], 39315), 'VEC_tree_base_quick_push': ([], 39315), 'supportable_widening_operation': ([], 39315), 'VEC_tree_base_iterate': ([], 39315), 'VEC_tree_heap_copy': ([], 39315), 'VEC_tree_base_pop': ([], 39315), 'vect_create_vectorized_promotion_stmts': ([], 39315), 'vectorizable_type_promotion': ([6, 8, 10, 11, 119, 122], 39238), 'supportable_narrowing_operation': ([], 39315), 'vect_get_loop_based_defs': ([], 39315), 'vect_create_vectorized_demotion_stmts': ([], 39315), 'vectorizable_type_demotion': ([4, 5, 39], 39287), 'vect_get_vec_defs': ([], 39315), 'vect_get_vec_defs_for_stmt_copy': ([], 39315), 'vectorizable_conversion': ([0, 1, 2, 7, 9, 11, 13], 39178), 'vectorizable_operation': ([], 39315), 'vectorizable_assignment': ([], 39315), 'vectorizable_load': ([], 39315), 'vectorizable_call': ([], 39315), 'vectorizable_store': ([], 39315), 'vect_analyze_stmt': ([], 39315), 'vect_transform_stmt': ([], 39315)}, "PosixPath('602/tree-ssa-copyrename.bc')": {'bb_seq': ([], 2633), 'gsi_start_bb': ([], 2633), 'gsi_stmt': ([], 2633), 'gimple_ops': ([], 2633), 'gimple_op': ([], 2633), 'partition_to_var': ([], 2633), 'copy_rename_partition_coalesce': ([], 2633), 'gsi_next': ([], 2633), 'rename_ssa_copies': ([48], 2630)}, "PosixPath('602/c-semantics.bc')": {'pop_stmt_list': ([], 753), 'build_stmt': ([], 753)}, "PosixPath('602/tree-ssa-math-opts.bc')": {'first_imm_use_on_stmt': ([], 9286), 'next_imm_use_on_stmt': ([], 9286), 'execute_cse_sincos_1': ([], 9286), 'find_bswap_1': ([1], 9285), 'bb_seq': ([], 9286), 'gsi_start_bb': ([], 9286), 'gsi_stmt': ([], 9286), 'gsi_next': ([], 9286), 'gsi_after_labels': ([], 9286), 'gimple_ops': ([], 9286), 'do_shift_rotate': ([], 9286), 'verify_symbolic_number_p': ([], 9286), 'find_bswap': ([], 9286), 'gimple_set_op': ([], 9286), 'execute_optimize_bswap': ([], 9286), 'gimple_call_fndecl': ([], 9286), 'end_imm_use_stmt_p': ([], 9286), 'clear_and_done_ssa_iter': ([], 9286), 'op_iter_next_use': ([], 9286), 'op_iter_init_phiuse': ([], 9286), 'delink_imm_use': ([], 9286), 'link_imm_use_to_list': ([], 9286), 'move_use_after_head': ([], 9286), 'gimple_def_ops': ([], 9286), 'gimple_vdef': ([], 9286), 'gimple_use_ops': ([], 9286), 'gimple_vuse': ([], 9286), 'op_iter_init': ([], 9286), 'gimple_vuse_op': ([], 9286), 'link_use_stmts_after': ([], 9286), 'first_imm_use_stmt': ([], 9286), 'VEC_gimple_base_space': ([], 9286), 'VEC_gimple_heap_reserve': ([], 9286), 'VEC_gimple_base_quick_push': ([], 9286), 'VEC_gimple_heap_safe_push': ([2], 9284), 'next_imm_use_stmt': ([], 9286), 'VEC_gimple_base_iterate': ([], 9286), 'execute_cse_sincos': ([], 9286), 'end_readonly_imm_use_p': ([], 9286), 'first_readonly_imm_use': ([], 9286), 'occ_new': ([], 9286), 'insert_bb': ([], 9286), 'register_division_in': ([], 9286), 'next_readonly_imm_use': ([], 9286), 'compute_merit': ([], 9286), 'insert_reciprocals': ([], 9286), 'link_imm_use': ([], 9286), 'set_ssa_use_from_ptr': ([], 9286), 'replace_reciprocal': ([], 9286), 'free_bb': ([], 9286), 'execute_cse_reciprocals_1': ([1], 9285), 'op_iter_next_tree': ([], 9286), 'single_ssa_tree_operand': ([], 9286), 'execute_cse_reciprocals': ([], 9286)}, "PosixPath('602/pointer-set.bc')": {'pointer_map_create': ([], 1545), 'pointer_set_create': ([], 1545), 'pointer_set_contains': ([], 1545), 'pointer_set_insert': ([0, 19], 1520), 'pointer_set_traverse': ([], 1545), 'pointer_map_contains': ([], 1545), 'pointer_map_insert': ([0, 24], 1532), 'pointer_map_traverse': ([], 1545)}, "PosixPath('602/gimple.bc')": {'gsi_last': ([1], 33023), 'gsi_start': ([1], 33023), 'gimple_size': ([], 33025), 'gimple_alloc_stat': ([0], 33011), 'gimple_ops': ([], 33025), 'gimple_set_op': ([], 33025), 'is_gimple_reg': ([0], 33022), 'is_gimple_constant': ([], 33025), 'strip_invariant_refs': ([], 33025), 'is_gimple_invariant_address': ([], 33025), 'is_gimple_val': ([0], 33022), 'gimple_build_call': ([], 33025), 'gimple_build_call_from_tree': ([], 33025), 'gimple_build_assign_stat': ([], 33025), 'gimple_seq_last_stmt': ([], 33025), 'gimplify_assign': ([], 33025), 'gimple_cond_get_ops_from_tree': ([3], 33020), 'gimple_build_cond_from_tree': ([], 33025), 'gimple_cond_set_condition_from_tree': ([], 33025), 'gimple_build_bind': ([], 33025), 'gimple_build_asm_1': ([], 33025), 'gimple_asm_set_output_op': ([], 33025), 'gimple_asm_set_clobber_op': ([], 33025), 'gimple_asm_set_label_op': ([], 33025), 'gimple_build_asm_vec': ([], 33025), 'gimple_build_catch': ([], 33025), 'gimple_build_eh_filter': ([], 33025), 'gimple_build_try': ([], 33025), 'gimple_switch_set_index': ([], 33025), 'gimple_build_switch_nlabels': ([], 33025), 'gimple_build_switch': ([], 33025), 'gimple_build_debug_bind_stat': ([], 33025), 'gimple_build_omp_critical': ([], 33025), 'gimple_build_omp_for': ([], 33025), 'gimple_build_omp_parallel': ([], 33025), 'gimple_build_omp_task': ([], 33025), 'gimple_build_omp_continue': ([], 33025), 'gimple_build_omp_sections': ([], 33025), 'gimple_build_omp_single': ([], 33025), 'gimple_build_omp_atomic_load': ([], 33025), 'gimple_seq_alloc': ([], 33025), 'gimple_seq_free': ([], 33025), 'gimple_seq_add_stmt': ([], 33025), 'gimple_seq_add_seq': ([], 33025), 'gsi_stmt': ([], 33025), 'gsi_next': ([], 33025), 'empty_body_p': ([], 33025), 'gimple_omp_for_cond': ([], 33025), 'gimple_omp_for_set_cond': ([], 33025), 'gimple_omp_for_index': ([], 33025), 'gimple_omp_for_set_index': ([], 33025), 'gimple_omp_for_initial': ([], 33025), 'gimple_omp_for_set_initial': ([], 33025), 'gimple_omp_for_final': ([], 33025), 'gimple_omp_for_set_final': ([], 33025), 'gimple_omp_for_incr': ([], 33025), 'gimple_omp_for_set_incr': ([], 33025), 'gimple_vdef': ([], 33025), 'gimple_vuse': ([], 33025), 'gimple_call_fndecl': ([], 33025), 'gimple_call_flags': ([], 33025), 'VEC_gimple_base_space': ([], 33025), 'VEC_gimple_gc_reserve': ([], 33025), 'VEC_gimple_base_quick_push': ([], 33025), 'VEC_gimple_gc_safe_push': ([], 33025), 'gimple_set_modified': ([], 33025), 'gimple_seq_copy': ([], 33025), 'gimple_copy': ([0, 1], 33015), 'is_gimple_addressable': ([], 33025), 'is_gimple_lvalue': ([], 33025), 'gimple_asm_output_op': ([], 33025), 'gimple_asm_label_op': ([], 33025), 'walk_gimple_asm': ([], 33025), 'gimple_omp_for_index_ptr': ([], 33025), 'gimple_omp_for_initial_ptr': ([], 33025), 'gimple_omp_for_final_ptr': ([], 33025), 'gimple_omp_for_incr_ptr': ([], 33025), 'walk_gimple_op': ([], 33025), 'walk_gimple_seq': ([], 33025), 'walk_gimple_stmt': ([], 33025), 'gimple_has_body_p': ([], 33025), 'VEC_basic_block_base_space': ([], 33025), 'VEC_basic_block_gc_reserve_exact': ([], 33025), 'VEC_basic_block_gc_safe_grow': ([], 33025), 'VEC_basic_block_gc_safe_grow_cleared': ([], 33025), 'gimple_set_bb': ([], 33025), 'gimple_assign_set_rhs_with_ops': ([], 33025), 'gimple_assign_set_rhs_from_tree': ([], 33025), 'gimple_has_side_effects': ([], 33025), 'gimple_rhs_has_side_effects': ([], 33025), 'gimple_could_trap_p_1': ([], 33025), 'is_gimple_address': ([], 33025), 'is_gimple_ip_invariant_address': ([], 33025), 'is_gimple_stmt': ([], 33025), 'is_gimple_non_addressable': ([], 33025), 'is_gimple_asm_val': ([], 33025), 'is_gimple_min_lval': ([], 33025), 'get_call_expr_in': ([0, 1], 33015), 'get_base_address': ([], 33025), 'tree_operand_length': ([], 33025), 'recalculate_side_effects': ([], 33025), 'canonicalize_cond_expr_cond': ([0], 33017), 'VEC_tree_base_quick_push': ([], 33025), 'gimple_call_copy_skip_args': ([], 33025), 'compare_field_offset': ([], 33025), 'VEC_tree_base_space': ([], 33025), 'VEC_tree_heap_reserve': ([], 33025), 'VEC_tree_heap_safe_push': ([], 33025), 'iterative_hash_name': ([0], 33020), 'VEC_tree_base_pop': ([], 33025), 'iterative_hash_gimple_type': ([5, 60], 33018), 'visit': ([], 33025), 'gimple_type_hash': ([], 33025), 'type_pair_eq': ([3], 33023), 'type_pair_hash': ([], 33025), 'lookup_type_pair': ([], 33025), 'compare_type_names_p': ([0, 1], 33015), 'gimple_types_compatible_p': ([6, 45], 33013), 'gimple_register_type': ([], 33025), 'print_gimple_types_stats': ([], 33025), 'gimple_signed_or_unsigned_type': ([21], 33023), 'gimple_get_alias_set': ([], 33025), 'gimple_use_ops': ([], 33025), 'op_iter_init': ([], 33025), 'op_iter_next_tree': ([], 33025), 'op_iter_init_tree': ([], 33025), 'count_ptr_derefs': ([], 33025), 'count_uses_and_derefs': ([7], 33015), 'get_base_loadstore': ([], 33025), 'walk_stmt_load_store_addr_ops': ([33], 33021), 'gimple_ior_addresses_taken_1': ([], 33025), 'gimple_decl_printable_name': ([], 33025)}, "PosixPath('602/stub-objc.bc')": {}, "PosixPath('602/tree-loop-distribution.bc')": {'rdg_flag_vertex_and_dependent': ([], 10829), 'gsi_start': ([1], 10827), 'first_imm_use_on_stmt': ([], 10829), 'next_imm_use_on_stmt': ([], 10829), 'VEC_bitmap_base_iterate': ([], 10829), 'dump_rdg_partitions': ([], 10829), 'number_of_loops': ([], 10829), 'VEC_int_base_quick_push': ([], 10829), 'loop_outer': ([], 10829), 'VEC_int_base_iterate': ([], 10829), 'get_loop': ([], 10829), 'fel_next': ([5], 10826), 'fel_init': ([], 10829), 'VEC_gimple_base_iterate': ([], 10829), 'VEC_int_base_space': ([], 10829), 'VEC_int_heap_reserve': ([], 10829), 'VEC_int_heap_safe_push': ([2], 10827), 'predecessor_has_mem_write': ([], 10829), 'has_anti_dependence': ([], 10829), 'mark_nodes_having_upstream_mem_writes': ([], 10829), 'VEC_rdgc_base_space': ([], 10829), 'VEC_rdgc_heap_reserve': ([], 10829), 'VEC_rdgc_base_quick_push': ([], 10829), 'VEC_rdgc_heap_safe_push': ([], 10829), 'rdg_build_components': ([], 10829), 'VEC_rdgc_base_iterate': ([], 10829), 'gimple_vuse_op': ([], 10829), 'gimple_ops': ([], 10829), 'gimple_op': ([], 10829), 'end_readonly_imm_use_p': ([], 10829), 'first_readonly_imm_use': ([], 10829), 'next_readonly_imm_use': ([], 10829), 'rdg_cannot_recompute_vertex_p': ([], 10829), 'rdg_flag_vertex': ([], 10829), 'bmp_iter_set_init': ([], 10829), 'bmp_iter_set': ([4], 10824), 'rdg_has_similar_memory_accesses': ([], 10829), 'rdg_flag_all_uses': ([], 10829), 'VEC_int_base_unordered_remove': ([], 10829), 'bmp_iter_next': ([], 10829), 'rdg_flag_similar_memory_accesses': ([], 10829), 'VEC_edge_base_iterate': ([], 10829), 'VEC_gimple_base_space': ([], 10829), 'VEC_gimple_heap_reserve': ([], 10829), 'VEC_gimple_base_quick_push': ([], 10829), 'VEC_gimple_heap_safe_push': ([], 10829), 'collect_condition_stmts': ([], 10829), 'VEC_gimple_base_pop': ([], 10829), 'rdg_flag_loop_exits': ([], 10829), 'build_rdg_partition_for_component': ([], 10829), 'VEC_bitmap_base_space': ([], 10829), 'VEC_bitmap_heap_reserve': ([], 10829), 'VEC_bitmap_base_quick_push': ([], 10829), 'VEC_bitmap_heap_safe_push': ([2], 10827), 'free_rdg_components': ([], 10829), 'rdg_build_partitions': ([3], 10826), 'number_of_rw_in_rdg': ([], 10829), 'number_of_rw_in_partition': ([], 10829), 'partition_contains_all_rw': ([], 10829), 'gsi_next': ([], 10829), 'bb_seq': ([], 10829), 'gsi_start_bb': ([], 10829), 'gsi_stmt': ([], 10829), 'gsi_last_bb': ([], 10829), 'build_size_arg_loc': ([], 10829), 'generate_memset_zero': ([], 10829), 'phi_nodes': ([], 10829), 'end_imm_use_stmt_p': ([], 10829), 'clear_and_done_ssa_iter': ([], 10829), 'op_iter_next_use': ([], 10829), 'op_iter_init_phiuse': ([], 10829), 'delink_imm_use': ([], 10829), 'link_imm_use_to_list': ([], 10829), 'move_use_after_head': ([], 10829), 'gimple_def_ops': ([], 10829), 'gimple_vdef': ([], 10829), 'gimple_use_ops': ([], 10829), 'gimple_vuse': ([], 10829), 'op_iter_init': ([], 10829), 'op_iter_init_use': ([], 10829), 'link_use_stmts_after': ([], 10829), 'first_imm_use_stmt': ([], 10829), 'link_imm_use': ([], 10829), 'set_ssa_use_from_ptr': ([], 10829), 'next_imm_use_stmt': ([], 10829), 'prop_phis': ([], 10829), 'generate_builtin': ([], 10829), 'update_phis_for_loop_copy': ([], 10829), 'copy_loop_before': ([], 10829), 'generate_loops_for_partition': ([], 10829), 'generate_code_for_partition': ([], 10829), 'ldist_gen': ([1], 10820), 'distribute_loop': ([], 10829), 'tree_loop_distribution': ([], 10829)}, "PosixPath('602/cse.bc')": {'cse_extended_basic_block': ([], 39108), 'get_cse_reg_info_1': ([], 39108), 'cse_insn': ([27, 154, 309, 456, 475, 478, 832, 1090], 39057), 'make_regs_eqv': ([], 39108), 'make_new_qty': ([], 39108), 'dump_class': ([], 39108), 'get_cse_reg_info': ([], 39108), 'hash_rtx_string': ([], 39108), 'hash_rtx_cb': ([17], 39095), 'exp_equiv_p': ([], 39108), 'init_cse_reg_info': ([], 39108), 'single_pred_p': ([], 39108), 'single_succ_p': ([], 39108), 'single_succ_edge': ([], 39108), 'cse_find_path': ([], 39108), 'cse_prescan_path': ([], 39108), 'cse_dump_path': ([], 39108), 'new_basic_block': ([], 39108), 'ei_next': ([], 39108), 'bb_has_eh_pred': ([], 39108), 'df_scan_get_bb_info': ([], 39108), 'df_get_artificial_defs': ([], 39108), 'delete_reg_equiv': ([], 39108), 'lookup_for_remove': ([], 39108), 'remove_from_table': ([], 39108), 'remove_pseudo_from_table': ([], 39108), 'cse_rtx_varies_p': ([0], 39101), 'check_dependence': ([], 39108), 'invalidate': ([], 39108), 'canon_reg': ([], 39108), 'cse_process_notes': ([], 39108), 'lookup': ([], 39108), 'lookup_as_function': ([], 39108), 'equiv_constant': ([], 39108), 'notreg_cost': ([], 39108), 'fold_rtx': ([4, 7, 8, 10, 294], 38929), 'find_comparison_args': ([], 39108), 'remove_invalid_refs': ([], 39108), 'remove_invalid_subreg_refs': ([], 39108), 'rehash_using_reg': ([1], 39103), 'insert_regs': ([], 39108), 'mention_regs': ([], 39108), 'approx_reg_cost_1': ([], 39108), 'approx_reg_cost': ([], 39108), 'add_to_hard_reg_set': ([], 39108), 'fixed_base_plus_p': ([], 39108), 'insert_with_costs': ([6, 81], 39096), 'merge_equiv_classes': ([10], 39103), 'use_related_value': ([], 39108), 'find_reg_offset_for_const': ([], 39108), 'try_const_anchors': ([], 39108), 'invalidate_from_clobbers': ([], 39108), 'invalidate_memory': ([], 39108), 'invalidate_for_call': ([], 39108), 'insert_const_anchor': ([], 39108), 'insert_const_anchors': ([], 39108), 'have_eh_succ_edges': ([], 39108), 'record_jump_cond': ([], 39108), 'record_jump_equiv': ([], 39108), 'check_for_label_ref': ([], 39108), 'cse_main': ([], 39108), 'count_reg_usage': ([1], 39100), 'is_dead_reg': ([], 39108), 'insn_live_p': ([], 39108), 'delete_trivially_dead_insns': ([], 39108), 'cse_change_cc_mode': ([], 39108), 'cse_change_cc_mode_insn': ([], 39108), 'cse_change_cc_mode_insns': ([], 39108), 'cse_cc_succs': ([2, 49], 39098), 'cse_condition_code_reg': ([], 39108), 'rest_of_handle_cse2': ([], 39108)}, "PosixPath('602/tree-outof-ssa.bc')": {'expand_phi_nodes': ([205], 7976), 'phi_nodes': ([], 7980), 'clear_elim_graph': ([], 7980), 'gsi_stmt': ([], 7980), 'var_to_partition': ([], 7980), 'VEC_int_base_space': ([], 7980), 'VEC_int_heap_reserve': ([], 7980), 'VEC_int_base_quick_push': ([], 7980), 'VEC_int_heap_safe_push': ([2], 7978), 'VEC_tree_base_space': ([], 7980), 'VEC_tree_heap_reserve': ([], 7980), 'VEC_tree_base_quick_push': ([], 7980), 'VEC_tree_heap_safe_push': ([], 7980), 'VEC_source_location_base_space': ([], 7980), 'VEC_source_location_heap_reserve': ([], 7980), 'VEC_source_location_base_quick_push': ([], 7980), 'VEC_source_location_heap_safe_push': ([], 7980), 'VEC_int_base_iterate': ([], 7980), 'elim_graph_add_node': ([], 7980), 'eliminate_name': ([], 7980), 'gsi_next': ([], 7980), 'eliminate_build': ([], 7980), 'elim_graph_size': ([], 7980), 'elim_forward': ([], 7980), 'VEC_int_base_pop': ([], 7980), 'elim_unvisited_predecessor': ([], 7980), 'partition_to_var': ([], 7980), 'get_temp_reg': ([], 7980), 'bb_seq': ([], 7980), 'gsi_last_bb': ([], 7980), 'gsi_prev': ([], 7980), 'single_pred_p': ([], 7980), 'single_pred_edge': ([], 7980), 'set_location_for_edge': ([], 7980), 'emit_partition_copy': ([0], 7974), 'insert_part_to_rtx_on_edge': ([], 7980), 'insert_partition_copy_on_edge': ([], 7980), 'elim_backward': ([], 7980), 'insert_rtx_to_part_on_edge': ([], 7980), 'elim_graph_remove_succ_edge': ([], 7980), 'elim_create': ([], 7980), 'VEC_tree_base_pop': ([], 7980), 'VEC_source_location_base_pop': ([], 7980), 'insert_value_copy_on_edge': ([], 7980), 'eliminate_phi': ([], 7980), 'ei_next': ([], 7980), 'set_phi_nodes': ([], 7980), 'delete_elim_graph': ([], 7980), 'finish_out_of_ssa': ([], 7980), 'end_readonly_imm_use_p': ([], 7980), 'first_readonly_imm_use': ([], 7980), 'gsi_start_bb': ([], 7980), 'maybe_renumber_stmts_bb': ([], 7980), 'next_readonly_imm_use': ([], 7980), 'trivially_conflicts_p': ([], 7980), 'gimple_ops': ([], 7980), 'gimple_set_op': ([], 7980), 'gimple_assign_set_lhs': ([], 7980), 'delink_imm_use': ([], 7980), 'link_imm_use_to_list': ([], 7980), 'link_imm_use': ([], 7980), 'set_ssa_use_from_ptr': ([], 7980), 'insert_backedge_copies': ([], 7980), 'has_zero_uses': ([], 7980), 'clear_and_done_ssa_iter': ([], 7980), 'op_iter_next_use': ([], 7980), 'op_iter_init_phiuse': ([], 7980), 'remove_gimple_phi_args': ([], 7980), 'eliminate_useless_phis': ([], 7980), 'remove_ssa_form': ([], 7980), 'rewrite_out_of_ssa': ([134], 7977)}, "PosixPath('602/coverage.bc')": {'coverage_counter_alloc': ([0], 9951), 'coverage_end_function': ([], 9958), 'build_ctr_info_value': ([], 9958), 'gcov_write_string': ([], 9958), 'gcov_write_tag': ([], 9958), 'gcov_read_words': ([], 9958), 'gcov_read_counter': ([], 9958), 'coverage_checksum_string': ([], 9958), 'compute_checksum': ([], 9958), 'get_coverage_counts': ([], 9958), 'tree_coverage_counter_ref': ([4], 9954), 'tree_coverage_counter_addr': ([4], 9954), 'coverage_begin_output': ([], 9958), 'htab_counts_entry_eq': ([], 9958), 'htab_counts_entry_hash': ([], 9958), 'read_counts_file': ([], 9958), 'coverage_init': ([], 9958), 'build_fn_info_value': ([], 9958), 'build_gcov_info': ([], 9958), 'create_coverage': ([], 9958), 'coverage_finish': ([], 9958)}, "PosixPath('602/sort.bc')": {'sort_pointers': ([], 285)}, "PosixPath('602/rtlanal.bc')": {'rtx_unstable_p': ([], 29652), 'rtx_varies_p': ([], 29652), 'rtx_addr_can_trap_p_1': ([], 29652), 'nonzero_address_p': ([], 29652), 'rtx_addr_varies_p': ([], 29652), 'get_integer_term': ([0], 29647), 'get_related_value': ([], 29652), 'offset_within_block_p': ([0], 29650), 'split_const': ([], 29652), 'count_occurrences': ([], 29652), 'reg_mentioned_p': ([], 29652), 'subreg_get_info': ([], 29652), 'subreg_regno_offset': ([], 29652), 'subreg_regno': ([], 29652), 'subreg_nregs_with_regno': ([], 29652), 'refers_to_regno_p': ([2, 5], 29644), 'reg_overlap_mentioned_p': ([], 29652), 'find_regno_fusage': ([], 29652), 'find_reg_fusage': ([], 29652), 'reg_used_between_p': ([], 29652), 'reg_referenced_p': ([], 29652), 'note_stores': ([0], 29647), 'set_of': ([], 29652), 'reg_set_p': ([], 29652), 'modified_between_p': ([], 29652), 'modified_in_p': ([], 29652), 'find_reg_note': ([], 29652), 'side_effects_p': ([], 29652), 'single_set_2': ([], 29652), 'multiple_sets': ([], 29652), 'set_noop_p': ([7], 29647), 'noop_move_p': ([2], 29647), 'find_last_value': ([], 29652), 'note_uses': ([], 29652), 'find_regno_note': ([], 29652), 'covers_regno_no_parallel_p': ([], 29652), 'covers_regno_p': ([], 29652), 'dead_or_set_regno_p': ([2, 5], 29642), 'dead_or_set_p': ([], 29652), 'find_reg_equal_equiv_note': ([], 29652), 'find_constant_src': ([], 29652), 'remove_reg_equal_equiv_notes': ([], 29652), 'in_expr_list_p': ([], 29652), 'remove_node_from_expr_list': ([], 29652), 'volatile_insn_p': ([], 29652), 'volatile_refs_p': ([], 29652), 'may_trap_p_1': ([109], 29644), 'inequality_comparisons_p': ([], 29652), 'replace_rtx': ([], 29652), 'for_each_rtx_1': ([1], 29643), 'for_each_rtx': ([], 29652), 'rtx_referenced_p_1': ([], 29652), 'replace_label': ([0], 29650), 'tablejump_p': ([], 29652), 'computed_jump_p_1': ([], 29652), 'computed_jump_p': ([], 29652), 'regno_use_in': ([], 29652), 'commutative_operand_precedence': ([], 29652), 'auto_inc_p': ([], 29652), 'loc_mentioned_in_p': ([], 29652), 'subreg_lsb': ([], 29652), 'subreg_offset_representable_p': ([], 29652), 'simplify_subreg_regno': ([], 29652), 'parms_set': ([], 29652), 'find_first_parameter_load': ([28], 29650), 'keep_with_call_p': ([], 29652), 'label_is_jump_target_p': ([], 29652), 'rtx_cost': ([0], 29650), 'cached_nonzero_bits': ([], 29652), 'nonzero_bits1': ([], 29652), 'cached_num_sign_bit_copies': ([], 29652), 'num_sign_bit_copies1': ([], 29652), 'insn_rtx_cost': ([], 29652), 'canonicalize_condition': ([22], 29646), 'get_condition': ([], 29652), 'truncated_to_mode': ([0], 29646), 'init_num_sign_bit_copies_in_rep': ([], 29652), 'init_rtlanal': ([], 29652), 'low_bitmask_len': ([], 29652)}, "PosixPath('602/cpp_line-map.bc')": {'linemap_init': ([], 1781), 'linemap_check_files_exited': ([], 1781), 'trace_include': ([], 1781), 'linemap_add': ([65], 1772), 'linemap_line_start': ([1], 1773), 'linemap_position_for_column': ([], 1781), 'linemap_lookup': ([1], 1778)}, "PosixPath('602/tree-ssa-live.bc')": {'init_var_map': ([], 9901), 'var_map_base_fini': ([], 9901), 'var_union': ([], 9901), 'has_zero_uses': ([], 9901), 'partition_view_init': ([], 9901), 'bmp_iter_set_init': ([], 9901), 'bmp_iter_set': ([4], 9896), 'bmp_iter_next': ([], 9901), 'partition_view_fini': ([13], 9892), 'partition_to_var': ([], 9901), 'var_ann': ([], 9901), 'VEC_tree_base_space': ([], 9901), 'VEC_tree_heap_reserve': ([], 9901), 'VEC_tree_base_quick_push': ([], 9901), 'VEC_tree_heap_safe_push': ([], 9901), 'var_map_base_init': ([28], 9898), 'partition_view_bitmap': ([4], 9899), 'dump_scope_block': ([], 9901), 'mark_scope_block_unused': ([], 9901), 'gimple_referenced_vars': ([], 9901), 'first_htab_element': ([], 9901), 'first_referenced_var': ([], 9901), 'end_htab_p': ([], 9901), 'end_referenced_vars_p': ([], 9901), 'next_htab_element': ([], 9901), 'next_referenced_var': ([], 9901), 'bb_seq': ([], 9901), 'gsi_start_bb': ([], 9901), 'gsi_stmt': ([], 9901), 'gimple_ops': ([], 9901), 'gimple_op_ptr': ([], 9901), 'get_var_ann': ([], 9901), 'set_is_used': ([], 9901), 'mark_all_vars_used_1': ([2], 9898), 'gsi_next': ([], 9901), 'is_global_var': ([], 9901), 'clear_and_done_ssa_iter': ([], 9901), 'op_iter_next_use': ([], 9901), 'op_iter_init_phiuse': ([], 9901), 'ei_next': ([], 9901), 'remove_unused_scope_block_p': ([4], 9893), 'remove_unused_locals': ([130, 316], 9883), 'delete_tree_live_info': ([], 9901), 'var_to_partition': ([], 9901), 'live_on_entry': ([], 9901), 'calculate_live_on_exit': ([1, 63, 114], 9883), 'new_tree_live_info': ([], 9901), 'end_readonly_imm_use_p': ([], 9901), 'first_readonly_imm_use': ([], 9901), 'next_readonly_imm_use': ([], 9901), 'set_var_live_on_entry': ([], 9901), 'loe_visit_block': ([37, 59], 9891), 'live_worklist': ([], 9901), 'calculate_live_ranges': ([], 9901), 'dump_var_map': ([], 9901), 'dump_live_info': ([5, 7], 9899)}, "PosixPath('602/lcm.bc')": {'ei_next': ([], 4832), 'compute_available': ([25], 4828), 'compute_antinout_edge': ([24], 4828), 'compute_earliest': ([], 4832), 'compute_laterin': ([], 4832), 'compute_insert_delete': ([], 4832), 'pre_edge_lcm': ([], 4832), 'compute_farthest': ([], 4832), 'compute_nearerout': ([], 4832), 'compute_rev_insert_delete': ([], 4832), 'pre_edge_rev_lcm': ([], 4832)}, "PosixPath('602/tree-loop-linear.bc')": {'perfect_loop_nest_depth': ([], 3201), 'number_of_loops': ([], 3201), 'VEC_int_base_quick_push': ([], 3201), 'loop_outer': ([], 3201), 'VEC_int_base_iterate': ([], 3201), 'get_loop': ([], 3201), 'fel_next': ([5], 3198), 'fel_init': ([], 3201), 'VEC_loop_p_base_space': ([], 3201), 'VEC_loop_p_heap_reserve': ([], 3201), 'VEC_loop_p_base_quick_push': ([], 3201), 'VEC_loop_p_heap_safe_push': ([], 3201), 'loop_depth': ([], 3201), 'VEC_ddr_p_base_iterate': ([], 3201), 'VEC_data_reference_p_base_iterate': ([], 3201), 'VEC_loop_p_base_iterate': ([], 3201), 'am_vector_index_for_loop': ([], 3201), 'gather_interchange_stats': ([7, 50, 153], 3188), 'try_interchange_loops': ([], 3201), 'VEC_gimple_base_iterate': ([], 3201), 'linear_transform_loops': ([], 3201)}, "PosixPath('602/filename_cmp.bc')": {}, "PosixPath('602/tree-iterator.bc')": {'alloc_stmt_list': ([], 1517), 'free_stmt_list': ([], 1517), 'tsi_link_before': ([], 1517), 'tsi_link_after': ([], 1517), 'tsi_delink': ([], 1517), 'expr_first': ([0], 1509), 'expr_last': ([0], 1509)}, "PosixPath('602/hashtab.bc')": {'htab_elements': ([], 4904), 'higher_prime_index': ([], 4904), 'htab_create_alloc': ([], 4904), 'htab_create_alloc_ex': ([], 4904), 'htab_set_functions_ex': ([], 4904), 'htab_create': ([], 4904), 'htab_try_create': ([], 4904), 'htab_delete': ([], 4904), 'htab_empty': ([], 4904), 'htab_mod': ([], 4904), 'htab_mod_m2': ([], 4904), 'htab_find_with_hash': ([29], 4902), 'find_empty_slot_for_expand': ([], 4904), 'htab_expand': ([], 4904), 'htab_find_slot_with_hash': ([36], 4902), 'htab_remove_elt_with_hash': ([], 4904), 'htab_clear_slot': ([], 4904), 'htab_traverse_noresize': ([], 4904), 'htab_traverse': ([], 4904), 'htab_collisions': ([], 4904), 'htab_hash_string': ([], 4904), 'iterative_hash': ([], 4904)}, "PosixPath('602/getopt.bc')": {}, "PosixPath('602/ifcvt.bc')": {'single_pred_p': ([], 25164), 'single_succ_p': ([], 25164), 'single_succ_edge': ([], 25164), 'noce_get_condition': ([], 25164), 'first_active_insn': ([], 25164), 'last_active_insn': ([], 25164), 'noce_operand_ok': ([], 25164), 'noce_mem_write_may_trap_or_fault_p': ([], 25164), 'noce_can_store_speculate_p': ([], 25164), 'recog_memoized': ([], 25164), 'noce_emit_move_insn': ([7], 25158), 'noce_try_move': ([], 25164), 'noce_emit_store_flag': ([], 25164), 'noce_try_store_flag': ([], 25164), 'noce_try_bitop': ([], 25164), 'noce_get_alt_condition': ([], 25164), 'noce_try_minmax': ([], 25164), 'noce_try_abs': ([], 25164), 'noce_emit_cmove': ([], 25164), 'noce_try_cmove': ([], 25164), 'noce_try_store_flag_constants': ([], 25164), 'noce_try_addcc': ([], 25164), 'noce_try_store_flag_mask': ([], 25164), 'noce_try_cmove_arith': ([61], 25162), 'noce_try_sign_mask': ([], 25164), 'noce_process_if_block': ([], 25164), 'VEC_int_base_space': ([], 25164), 'VEC_int_heap_reserve': ([], 25164), 'VEC_int_base_quick_push': ([], 25164), 'VEC_int_heap_safe_push': ([], 25164), 'check_cond_move_block': ([], 25164), 'VEC_int_base_iterate': ([], 25164), 'cond_move_convert_if_block': ([9], 25163), 'cond_move_process_if_block': ([6, 19], 25138), 'noce_find_if_block': ([], 25164), 'single_pred_edge': ([], 25164), 'ei_next': ([], 25164), 'block_jumps_and_fallthru_p': ([12], 25162), 'cond_exec_get_condition': ([], 25164), 'count_bb_insns': ([], 25164), 'block_fallthru': ([5], 25162), 'cond_exec_process_insns': ([], 25164), 'merge_if_block': ([], 25164), 'cond_exec_process_if_block': ([], 25164), 'cond_exec_find_if_block': ([], 25164), 'block_has_only_trap': ([], 25164), 'find_cond_trap': ([], 25164), 'cheap_bb_rtx_cost_p': ([], 25164), 'bmp_iter_set_init': ([], 25164), 'bmp_iter_set': ([], 25164), 'bmp_iter_next': ([], 25164), 'dead_or_predicable': ([0], 25145), 'find_if_case_1': ([], 25164), 'find_if_case_2': ([], 25164), 'find_if_header': ([95], 25152), 'if_convert': ([], 25164)}, "PosixPath('602/make-temp-file.bc')": {'choose_tmpdir': ([], 724), 'make_temp_file': ([], 724)}, "PosixPath('602/reorg.bc')": {}, "PosixPath('602/cgraph.bc')": {'cgraph_node': ([], 16454), 'cgraph_remove_node': ([19, 29, 127], 16433), 'cgraph_create_edge': ([], 16454), 'cgraph_clone_node': ([], 16454), 'cgraph_make_decl_local': ([2], 16446), 'cgraph_add_edge_removal_hook': ([], 16454), 'cgraph_add_node_removal_hook': ([], 16454), 'cgraph_add_function_insertion_hook': ([], 16454), 'cgraph_call_function_insertion_hooks': ([], 16454), 'cgraph_add_edge_duplication_hook': ([], 16454), 'cgraph_add_node_duplication_hook': ([], 16454), 'cgraph_allocate_node': ([], 16454), 'cgraph_create_node': ([], 16454), 'cgraph_same_body_alias_1': ([], 16454), 'cgraph_get_node': ([], 16454), 'cgraph_call_node_removal_hooks': ([], 16454), 'cgraph_call_edge_removal_hooks': ([], 16454), 'cgraph_edge_remove_caller': ([6], 16452), 'cgraph_free_edge': ([], 16454), 'cgraph_node_remove_callers': ([], 16454), 'cgraph_edge_remove_callee': ([6], 16452), 'cgraph_node_remove_callees': ([], 16454), 'cgraph_remove_same_body_alias': ([], 16454), 'cgraph_release_function_body': ([], 16454), 'cgraph_add_thunk': ([], 16454), 'cgraph_node_for_asm': ([], 16454), 'cgraph_edge': ([], 16454), 'cgraph_set_call_stmt': ([], 16454), 'cgraph_set_call_stmt_including_clones': ([], 16454), 'initialize_inline_failed': ([], 16454), 'cgraph_create_edge_including_clones': ([], 16454), 'cgraph_remove_edge': ([], 16454), 'cgraph_redirect_edge_callee': ([], 16454), 'gimple_ops': ([], 16454), 'gimple_op': ([], 16454), 'gimple_call_fn': ([], 16454), 'gimple_call_fndecl': ([], 16454), 'cgraph_update_edges_for_call_stmt_node': ([], 16454), 'cgraph_update_edges_for_call_stmt': ([], 16454), 'cgraph_remove_node_and_inline_clones': ([], 16454), 'cgraph_mark_reachable_node': ([], 16454), 'cgraph_mark_needed_node': ([], 16454), 'cgraph_global_info': ([], 16454), 'cgraph_function_body_availability': ([], 16454), 'dump_cgraph_node': ([61, 90, 103, 122], 16440), 'change_decl_assembler_name': ([], 16454), 'cgraph_add_asm_node': ([], 16454), 'cgraph_call_edge_duplication_hooks': ([], 16454), 'cgraph_clone_edge': ([], 16454), 'VEC_cgraph_edge_p_base_iterate': ([], 16454), 'cgraph_call_node_duplication_hooks': ([], 16454), 'clone_function_name': ([], 16454), 'cgraph_create_virtual_clone': ([], 16454), 'cgraph_unnest_node': ([], 16454), 'cgraph_add_new_function': ([], 16454), 'cgraph_node_can_be_local_p': ([], 16454), 'cgraph_make_node_local': ([], 16454), 'cgraph_set_nothrow_flag': ([], 16454), 'cgraph_set_readonly_flag': ([], 16454), 'cgraph_set_pure_flag': ([], 16454), 'cgraph_set_looping_const_or_pure_flag': ([], 16454)}, "PosixPath('602/c-cppbuiltin.bc')": {'c_cpp_builtins_optimize_pragma': ([], 12525), 'define__GNUC__': ([], 12525), 'type_suffix': ([], 12525), 'builtin_define_type_minmax': ([], 12525), 'builtin_define_with_hex_fp_value': ([], 12525), 'builtin_define_float_constants': ([], 12525), 'builtin_define_decimal_float_constants': ([], 12525), 'builtin_define_fixed_point_constants': ([8], 12507), 'builtin_define_std': ([], 12525), 'c_cpp_builtins': ([], 12525)}, "PosixPath('602/modulo-sched.bc')": {'set_node_sched_params': ([], 18283), 'sbitmap_iter_init': ([], 18283), 'ps_insn_find_column': ([], 18283), 'print_partial_schedule': ([], 18283), 'number_of_loops': ([], 18283), 'VEC_int_base_quick_push': ([], 18283), 'loop_outer': ([], 18283), 'VEC_int_base_iterate': ([], 18283), 'get_loop': ([], 18283), 'fel_next': ([5], 18280), 'fel_init': ([0], 18247), 'loop_single_full_bb_p': ([5], 18280), 'loop_canon_p': ([], 18283), 'calculate_order_params': ([], 18283), 'sbitmap_iter_cond': ([20], 18281), 'sbitmap_iter_next': ([], 18283), 'find_max_asap': ([], 18283), 'find_max_hv_min_mob': ([], 18283), 'find_max_dv_min_mob': ([], 18283), 'order_nodes_in_scc': ([], 18283), 'order_nodes_of_sccs': ([], 18283), 'check_nodes_order': ([], 18283), 'sms_order_nodes': ([63], 18274), 'res_MII': ([], 18283), 'create_partial_schedule': ([], 18283), 'get_sched_window': ([], 18283), 'calculate_must_precede_follow': ([], 18283), 'verify_partial_schedule': ([], 18283), 'create_ps_insn': ([], 18283), 'add_node_to_ps': ([], 18283), 'ps_has_conflicts': ([], 18283), 'ps_insn_advance_column': ([], 18283), 'remove_node_from_ps': ([], 18283), 'ps_add_node_check_conflicts': ([], 18283), 'try_scheduling_node_in_cycle': ([], 18283), 'free_ps_insns': ([], 18283), 'reset_partial_schedule': ([], 18283), 'compute_split_row': ([], 18283), 'normalize_sched_times': ([61], 18281), 'rotate_partial_schedule': ([], 18283), 'ps_insert_empty_row': ([], 18283), 'sms_schedule_by_order': ([], 18283), 'set_columns_for_ps': ([], 18283), 'ei_next': ([], 18283), 'canon_loop': ([], 18283), 'permute_partial_schedule': ([], 18283), 'generate_reg_moves': ([], 18283), 'print_node_sched_params': ([], 18283), 'duplicate_insns_of_cycles': ([], 18283), 'generate_prolog_epilog': ([], 18283), 'sms_schedule': ([128], 18264), 'rest_of_handle_sms': ([], 18283)}, "PosixPath('602/tree-vect-data-refs.bc')": {'vect_analyze_data_refs': ([], 25588), 'vect_update_interleaving_chain': ([], 25588), 'gimple_ops': ([], 25588), 'vect_get_smallest_scalar_type': ([], 25588), 'vinfo_for_stmt': ([], 25588), 'VEC_ddr_p_base_iterate': ([], 25588), 'vect_equal_offsets': ([], 25588), 'vect_insert_into_interleaving_chain': ([], 25588), 'vect_check_interleaving': ([], 25588), 'VEC_ddr_p_base_space': ([], 25588), 'VEC_ddr_p_heap_reserve': ([], 25588), 'VEC_ddr_p_base_quick_push': ([], 25588), 'VEC_ddr_p_heap_safe_push': ([], 25588), 'vect_mark_for_runtime_alias_test': ([], 25588), 'VEC_loop_p_base_iterate': ([], 25588), 'index_in_loop_nest': ([], 25588), 'VEC_lambda_vector_base_iterate': ([], 25588), 'VEC_dr_p_base_space': ([], 25588), 'VEC_dr_p_heap_reserve': ([], 25588), 'VEC_dr_p_base_quick_push': ([], 25588), 'VEC_dr_p_heap_safe_push': ([2], 25586), 'vect_analyze_data_ref_dependence': ([], 25588), 'vect_analyze_data_ref_dependences': ([], 25588), 'VEC_data_reference_p_base_iterate': ([], 25588), 'vect_supportable_dr_alignment': ([65], 25576), 'vect_verify_datarefs_alignment': ([], 25588), 'vector_alignment_reachable_p': ([11], 25584), 'VEC_dr_p_base_iterate': ([], 25588), 'vect_update_misalignment_for_peel': ([], 25588), 'VEC_gimple_base_space': ([], 25588), 'VEC_gimple_heap_reserve': ([], 25588), 'VEC_gimple_base_quick_push': ([], 25588), 'VEC_gimple_heap_safe_push': ([2], 25586), 'VEC_gimple_base_iterate': ([], 25588), 'vect_enhance_data_refs_alignment': ([116], 25584), 'vect_can_force_dr_alignment_p': ([], 25588), 'vect_compute_data_ref_alignment': ([], 25588), 'vect_compute_data_refs_alignment': ([], 25588), 'vect_analyze_data_refs_alignment': ([], 25588), 'vect_analyze_group_access': ([], 25588), 'vect_analyze_data_ref_access': ([], 25588), 'vect_analyze_data_ref_accesses': ([], 25588), 'vect_same_range_drs': ([], 25588), 'vect_vfa_range_equal': ([], 25588), 'VEC_ddr_p_base_ordered_remove': ([], 25588), 'vect_prune_runtime_alias_test_list': ([], 25588), 'vect_create_addr_base_for_vector_ref': ([], 25588), 'gimple_set_op': ([], 25588), 'gsi_stmt': ([], 25588), 'VEC_vec_void_p_base_space': ([], 25588), 'VEC_vec_void_p_heap_reserve': ([], 25588), 'VEC_vec_void_p_base_quick_push': ([], 25588), 'VEC_vec_void_p_heap_safe_push': ([], 25588), 'set_vinfo_for_stmt': ([], 25588), 'vect_create_data_ref_ptr': ([], 25588), 'gimple_use_ops': ([], 25588), 'gimple_vuse': ([], 25588), 'op_iter_init': ([], 25588), 'op_iter_next_use': ([], 25588), 'op_iter_init_use': ([], 25588), 'delink_imm_use': ([], 25588), 'link_imm_use_to_list': ([5], 25578), 'link_imm_use': ([], 25588), 'set_ssa_use_from_ptr': ([], 25588), 'bump_vector_ptr': ([], 25588), 'vect_create_destination_var': ([], 25588), 'vect_strided_store_supported': ([], 25588), 'VEC_tree_heap_copy': ([], 25588), 'vect_permute_store_chain': ([], 25588), 'vect_setup_realignment': ([4], 25585), 'vect_strided_load_supported': ([], 25588), 'vect_permute_load_chain': ([], 25588), 'VEC_tree_base_iterate': ([], 25588), 'vect_transform_strided_load': ([1], 25583)}, "PosixPath('602/lto-symtab.bc')": {'lto_symtab_register_decl': ([0], 4394), 'lto_symtab_get': ([], 4401), 'lto_symtab_get_resolution': ([], 4401), 'lto_symtab_resolve_can_prevail_p': ([], 4401), 'lto_symtab_resolve_replaceable_p': ([], 4401), 'lto_symtab_resolve_symbols': ([], 4401), 'VEC_tree_base_space': ([], 4401), 'VEC_tree_gc_reserve': ([], 4401), 'VEC_tree_base_quick_push': ([], 4401), 'VEC_tree_gc_safe_push': ([], 4401), 'lto_symtab_merge': ([], 4401), 'VEC_tree_heap_reserve': ([], 4401), 'VEC_tree_heap_safe_push': ([], 4401), 'VEC_tree_base_iterate': ([], 4401), 'lto_symtab_merge_decls_2': ([], 4401), 'lto_symtab_merge_decls_1': ([80, 126], 4393), 'lto_cgraph_replace_node': ([], 4401), 'lto_symtab_merge_cgraph_nodes_1': ([], 4401), 'lto_symtab_prevailing_decl': ([], 4401), 'gt_ggc_mx_lto_symtab_entry_def': ([], 4401), 'gt_ggc_m_P20lto_symtab_entry_def4htab': ([], 4401), 'gt_pch_nx_lto_symtab_entry_def': ([], 4401), 'gt_pch_p_P20lto_symtab_entry_def4htab': ([], 4401), 'gt_pch_n_P20lto_symtab_entry_def4htab': ([], 4401)}, "PosixPath('602/tree-ssa-loop-niter.bc')": {'tree_operand_length': ([], 24843), 'single_pred_p': ([], 24843), 'single_pred_edge': ([], 24843), 'gimple_ops': ([], 24843), 'gimple_op': ([], 24843), 'expand_simple_operations': ([], 24843), 'bb_seq': ([], 24843), 'gsi_start_bb': ([], 24843), 'gsi_stmt': ([], 24843), 'gsi_next': ([], 24843), 'loop_only_exit_p': ([], 24843), 'split_to_var_and_offset': ([], 24843), 'refine_bounds_using_guard': ([], 24843), 'bound_difference': ([], 24843), 'number_of_iterations_ne_max': ([], 24843), 'number_of_iterations_ne': ([], 24843), 'number_of_iterations_lt_to_ne': ([], 24843), 'assert_no_overflow_lt': ([], 24843), 'assert_loop_rolls_lt': ([], 24843), 'number_of_iterations_lt': ([], 24843), 'number_of_iterations_le': ([], 24843), 'number_of_iterations_cond': ([], 24843), 'simplify_using_outer_evolutions': ([], 24843), 'tree_simplify_using_condition_1': ([0], 24822), 'simplify_using_initial_conditions': ([], 24843), 'number_of_iterations_exit': ([], 24843), 'VEC_edge_base_iterate': ([], 24843), 'find_loop_niter': ([], 24843), 'finite_loop_p': ([9], 24830), 'gimple_vuse': ([], 24843), 'gimple_references_memory_p': ([], 24843), 'gimple_use_ops': ([], 24843), 'op_iter_init': ([], 24843), 'op_iter_next_tree': ([], 24843), 'op_iter_init_tree': ([], 24843), 'single_ssa_tree_operand': ([], 24843), 'chain_of_csts_start': ([0], 24837), 'loop_niter_by_eval': ([], 24843), 'find_loop_niter_by_eval': ([], 24843), 'array_at_struct_end_p': ([], 24843), 'record_niter_bound': ([], 24843), 'record_estimate': ([], 24843), 'derive_constant_upper_bound': ([], 24843), 'derive_constant_upper_bound_ops': ([], 24843), 'idx_infer_loop_bounds': ([], 24843), 'infer_loop_bounds_from_ref': ([], 24843), 'infer_loop_bounds_from_array': ([], 24843), 'infer_loop_bounds_from_signedness': ([], 24843), 'infer_loop_bounds_from_undefined': ([], 24843), 'estimate_numbers_of_iterations_loop': ([], 24843), 'number_of_loops': ([], 24843), 'VEC_int_base_quick_push': ([], 24843), 'loop_outer': ([], 24843), 'VEC_int_base_iterate': ([], 24843), 'get_loop': ([], 24843), 'fel_next': ([5], 24840), 'fel_init': ([], 24843), 'estimate_numbers_of_iterations': ([], 24843), 'stmt_dominates_stmt_p': ([], 24843), 'n_of_executions_at_most': ([], 24843), 'scev_probably_wraps_p': ([], 24843), 'free_numbers_of_iterations_estimates_loop': ([], 24843), 'free_numbers_of_iterations_estimates': ([], 24843)}, "PosixPath('602/tree-ssa-loop.bc')": {'number_of_loops': ([], 1700)}, "PosixPath('602/reg-stack.bc')": {'VEC_char_base_space': ([], 19957), 'VEC_char_heap_reserve_exact': ([], 19957), 'VEC_char_heap_safe_grow': ([], 19957), 'VEC_char_heap_safe_grow_cleared': ([], 19957), 'stack_regs_mentioned_p': ([], 19957), 'stack_regs_mentioned': ([], 19957), 'ei_next': ([], 19957), 'df_lr_get_bb_info': ([], 19957), 'convert_regs_entry': ([], 19957), 'stack_result': ([], 19957), 'convert_regs_exit': ([], 19957), 'better_edge': ([], 19957), 'propagate_stack': ([], 19957), 'print_stack': ([], 19957), 'get_hard_regnum': ([], 19957), 'emit_pop_insn': ([], 19957), 'get_true_reg': ([], 19957), 'emit_swap_insn': ([10], 19956), 'change_stack': ([0, 16, 75], 19945), 'straighten_stack': ([], 19957), 'get_asm_operands_in_out': ([], 19957), 'check_asm_stack_operands': ([1, 3, 50], 19914), 'replace_reg': ([0], 19951), 'subst_asm_stack_regs': ([7, 28, 52, 297], 19927), 'move_nan_for_stack_reg': ([], 19957), 'move_for_stack_reg': ([0], 19933), 'next_flags_user': ([8], 19955), 'swap_rtx_condition_1': ([], 19957), 'recog_memoized': ([], 19957), 'swap_rtx_condition': ([3, 28, 29], 19945), 'pop_stack': ([], 19957), 'remove_regno_note': ([], 19957), 'compare_for_stack_reg': ([], 19957), 'swap_to_top': ([], 19957), 'subst_stack_regs_pat': ([10, 89], 19954), 'subst_stack_regs': ([0, 2, 8], 19929), 'subst_stack_regs_in_debug_insn': ([], 19957), 'convert_regs_1': ([], 19957), 'convert_regs_2': ([41], 19955), 'compensate_edge': ([], 19957), 'compensate_edges': ([], 19957), 'convert_regs': ([147], 19954), 'reg_to_stack': ([], 19957), 'rest_of_handle_stack_regs': ([], 19957)}, "PosixPath('602/loop-init.bc')": {'loop_optimizer_finalize': ([1], 1647), 'loops_state_set': ([], 1659), 'loop_optimizer_init': ([0], 1658), 'number_of_loops': ([], 1659), 'VEC_int_base_quick_push': ([], 1659), 'loop_outer': ([], 1659), 'VEC_int_base_iterate': ([], 1659), 'get_loop': ([], 1659), 'fel_next': ([5], 1656), 'fel_init': ([], 1659), 'loops_state_satisfies_p': ([], 1659)}, "PosixPath('602/dse.bc')": {'dse_step1': ([], 21097), 'dse_step2_init': ([], 21097), 'dse_step7': ([], 21097), 'record_store': ([5, 6, 34, 92, 121, 216], 21008), 'check_mem_read_rtx': ([19, 20, 49], 21068), 'canon_address': ([0, 44], 21091), 'sbitmap_iter_init': ([], 21097), 'dse_record_singleton_alias_set': ([], 21097), 'VEC_group_info_t_base_space': ([], 21097), 'VEC_group_info_t_heap_reserve': ([], 21097), 'VEC_group_info_t_base_quick_push': ([], 21097), 'VEC_group_info_t_heap_safe_push': ([0], 21095), 'get_group_info': ([], 21097), 'invariant_group_base_hash': ([], 21097), 'dse_step0': ([], 21097), 'df_lr_get_bb_info': ([], 21097), 'add_wild_read': ([], 21097), 'dump_insn_info': ([], 21097), 'get_call_args': ([], 21097), 'clear_rhs_from_active_local_stores': ([], 21097), 'clear_alias_set_lookup': ([1], 21095), 'set_usage_bits': ([], 21097), 'set_all_positions_unneeded': ([], 21097), 'all_positions_needed_p': ([], 21097), 'find_shift_sequence': ([], 21097), 'get_stored_val': ([], 21097), 'set_position_unneeded': ([], 21097), 'any_positions_needed_p': ([], 21097), 'replace_inc_dec': ([], 21097), 'replace_inc_dec_mem': ([1], 21093), 'check_for_inc_dec': ([], 21097), 'free_store_info': ([], 21097), 'delete_dead_store_insn': ([], 21097), 'look_for_hardregs': ([], 21097), 'replace_read': ([], 21097), 'scan_insn': ([], 21097), 'single_succ_p': ([], 21097), 'single_succ_edge': ([], 21097), 'single_succ': ([], 21097), 'remove_useless_values': ([], 21097), 'VEC_group_info_t_base_iterate': ([], 21097), 'bmp_iter_set_init': ([], 21097), 'bmp_iter_set': ([4], 21092), 'bmp_iter_next': ([], 21097), 'dse_step2_nospill': ([], 21097), 'dse_step3_exit_block_scan': ([], 21097), 'find_insn_before_first_wild_read': ([], 21097), 'get_bitmap_index': ([], 21097), 'scan_stores_spill': ([], 21097), 'scan_reads_spill': ([], 21097), 'scan_stores_nospill': ([], 21097), 'scan_reads_nospill': ([69], 21078), 'dse_step3_scan': ([], 21097), 'ei_next': ([], 21097), 'mark_reachable_blocks': ([5], 21089), 'sbitmap_iter_cond': ([], 21097), 'sbitmap_iter_next': ([], 21097), 'dse_step3': ([], 21097), 'dse_transfer_function': ([], 21097), 'dse_confluence_n': ([], 21097), 'dse_confluence_0': ([], 21097), 'dse_step4': ([], 21097), 'dse_step5_nospill': ([], 21097), 'dse_step2_spill': ([], 21097), 'dse_step5_spill': ([], 21097), 'dse_step6': ([], 21097), 'rest_of_handle_dse': ([], 21097)}, "PosixPath('602/rtlhooks.bc')": {'gen_lowpart_general': ([0], 836)}, "PosixPath('602/cpp_traditional.bc')": {'_cpp_scan_out_logical_line': ([], 7049), 'check_output_buffer': ([], 7049), '_cpp_copy_replacement_text': ([], 7049), '_cpp_create_trad_definition': ([], 7049), '_cpp_overlay_buffer': ([], 7049), '_cpp_remove_overlay': ([], 7049), 'skip_macro_block_comment': ([], 7049), 'copy_comment': ([], 7049), 'lex_identifier': ([], 7049), 'maybe_start_funlike': ([], 7049), 'recursive_macro': ([], 7049), 'push_replacement_text': ([], 7049), 'save_replacement_text': ([22, 28], 7045), 'save_argument': ([], 7049), 'replace_args_and_push': ([], 7049), '_cpp_read_logical_line_trad': ([], 7049), '_cpp_replacement_text_len': ([], 7049), 'scan_parameters': ([], 7049), '_cpp_expansions_different_trad': ([], 7049)}, "PosixPath('602/tree-mudflap.bc')": {'gsi_start': ([], 10594), 'mf_build_check_statement_for': ([], 10594), 'mf_make_mf_cache_struct_type': ([], 10594), 'mf_make_builtin': ([], 10594), 'mudflap_init': ([], 10594), 'VEC_tree_base_space': ([], 10594), 'VEC_tree_gc_reserve': ([], 10594), 'VEC_tree_base_quick_push': ([], 10594), 'VEC_tree_gc_safe_push': ([], 10594), 'mudflap_enqueue_decl': ([], 10594), 'mf_build_string': ([], 10594), 'mudflap_enqueue_constant': ([], 10594), 'VEC_tree_base_iterate': ([], 10594), 'mf_varname_tree': ([], 10594), 'mudflap_finish_file': ([], 10594), 'ei_next': ([], 10594), 'insert_edge_copies_seq': ([], 10594), 'mf_decl_cache_locals': ([], 10594), 'bb_seq': ([], 10594), 'gsi_start_bb': ([], 10594), 'gsi_stmt': ([], 10594), 'gimple_ops': ([], 10594), 'mf_decl_eligible_p': ([], 10594), 'gsi_prev': ([], 10594), 'gsi_last_bb': ([], 10594), 'mf_file_function_line_tree': ([], 10594), 'mf_xform_derefs_1': ([62], 10584), 'gimple_call_fndecl': ([], 10594), 'gsi_next': ([], 10594), 'mf_xform_statements': ([], 10594), 'execute_mudflap_function_ops': ([], 10594), 'mx_register_decls': ([], 10594), 'mx_xfn_xform_decls': ([], 10594), 'mf_xform_decls': ([], 10594), 'execute_mudflap_function_decls': ([], 10594)}, "PosixPath('602/sched-vis.bc')": {'print_exp': ([989], 7447), 'safe_concat': ([], 7449), 'print_value': ([], 7449), 'print_pattern': ([], 7449), 'print_insn': ([], 7449), 'dump_insn_slim': ([], 7449), 'print_rtl_slim': ([], 7449), 'debug_bb_slim': ([], 7449), 'debug_bb_n_slim': ([], 7449)}, "PosixPath('602/params.bc')": {'set_param_value': ([], 629)}, "PosixPath('602/host-linux.bc')": {}, "PosixPath('602/gimplify.bc')": {'create_tmp_var_raw': ([0], 48590), 'gsi_start': ([1], 48602), 'gsi_last': ([1], 48602), 'gimplify_cond_expr': ([], 48604), 'gimplify_switch_expr': ([], 48604), 'gimplify_asm_expr': ([40], 48601), 'gimplify_cleanup_point_expr': ([], 48604), 'gimplify_statement_list': ([], 48604), 'gimplify_omp_atomic': ([], 48604), 'force_gimple_operand': ([1], 48588), 'mark_addressable': ([], 48604), 'push_gimplify_context': ([], 48604), 'declare_vars': ([], 48604), 'pop_gimplify_context': ([1], 48600), 'VEC_gimple_base_last': ([], 48604), 'gimple_current_bind_expr': ([], 48604), 'append_to_statement_list_1': ([], 48604), 'gimplify_seq_add_seq': ([], 48604), 'is_global_var': ([], 48604), 'omp_notice_variable': ([17], 48601), 'omp_add_variable': ([2], 48594), 'omp_firstprivatize_type_sizes': ([], 48604), 'omp_firstprivatize_variable': ([], 48604), 'gimplify_var_or_parm_decl': ([], 48604), 'VEC_tree_base_space': ([], 48604), 'VEC_tree_heap_reserve': ([], 48604), 'VEC_tree_base_quick_push': ([], 48604), 'VEC_tree_heap_safe_push': ([2], 48602), 'VEC_tree_base_pop': ([], 48604), 'canonicalize_component_ref': ([5], 48601), 'tree_operand_length': ([], 48604), 'generic_expr_could_trap_p': ([], 48604), 'gimple_boolify': ([13], 48588), 'create_tmp_var_name': ([], 48604), 'force_constant_size': ([], 48604), 'gimple_seq_first_stmt': ([], 48604), 'gimple_add_tmp_var': ([], 48604), 'create_tmp_var': ([], 48604), 'build_and_jump': ([], 48604), 'shortcut_cond_r': ([], 48604), 'shortcut_cond_expr': ([0, 1, 12, 64, 101], 48493), 'gimple_pop_condition': ([], 48604), 'gimplify_seq_add_stmt': ([], 48604), 'gimple_tree_eq': ([], 48604), 'lookup_tmp_var': ([], 48604), 'gimple_seq_last_stmt': ([], 48604), 'maybe_with_size_expr': ([], 48604), 'VEC_constructor_elt_gc_copy': ([], 48604), 'optimize_compound_literals_in_ctor': ([], 48604), 'gimplify_init_ctor_preeval_1': ([4], 48598), 'zero_sized_field_decl': ([], 48604), 'force_labels_r': ([1], 48601), 'gimple_fold_indirect_ref': ([4], 48595), 'voidify_wrapper_expr': ([9], 48603), 'zero_sized_type': ([], 48604), 'gimple_ops': ([], 48604), 'gimple_set_op': ([], 48604), 'canonicalize_addr_expr': ([], 48604), 'gimplify_conversion': ([], 48604), 'VEC_gimple_base_space': ([], 48604), 'VEC_gimple_heap_reserve': ([], 48604), 'VEC_gimple_base_quick_push': ([], 48604), 'VEC_gimple_heap_safe_push': ([], 48604), 'gimple_push_bind_expr': ([], 48604), 'VEC_gimple_base_pop': ([], 48604), 'gimple_pop_bind_expr': ([], 48604), 'VEC_tree_base_ordered_remove': ([], 48604), 'gimplify_exit_expr': ([], 48604), 'gimplify_case_label_expr': ([], 48604), 'VEC_tree_gc_reserve': ([], 48604), 'VEC_tree_gc_safe_push': ([2], 48602), 'gimple_try_set_catch_is_cleanup': ([], 48604), 'gsi_stmt': ([], 48604), 'gsi_one_before_end_p': ([], 48604), 'gsi_next': ([], 48604), 'new_omp_context': ([], 48604), 'omp_check_private': ([], 48604), 'gimplify_adjust_omp_clauses_1': ([], 48604), 'gimplify_adjust_omp_clauses': ([13], 48591), 'omp_is_private': ([], 48604), 'gimple_omp_for_set_index': ([], 48604), 'gimple_omp_for_set_initial': ([], 48604), 'gimple_omp_for_set_cond': ([], 48604), 'gimple_omp_for_set_final': ([], 48604), 'gimple_omp_for_set_incr': ([], 48604), 'goa_lhs_expr_p': ([], 48604), 'gimplify_scalar_mode_aggregate_compare': ([], 48604), 'gimplify_variable_sized_compare': ([], 48604), 'annotate_one_with_location': ([], 48604), 'annotate_all_with_location_after': ([1], 48603), 'annotate_all_with_location': ([], 48604), 'goa_stabilize_expr': ([], 48604), 'gimplify_expr': ([46, 111, 263, 430, 468, 579, 655, 674, 817, 848], 48460), 'gimplify_and_return_first': ([], 48604), 'gimplify_scan_omp_clauses': ([7], 48603), 'gimplify_vla_decl': ([], 48604), 'gimplify_type_sizes': ([], 48604), 'gimplify_one_sizepos': ([], 48604), 'gimplify_modify_expr_rhs': ([13], 48603), 'gimplify_init_constructor': ([0, 5, 7], 48576), 'gimplify_init_ctor_eval': ([], 48604), 'gimplify_init_ctor_preeval': ([], 48604), 'internal_get_tmp_var': ([5], 48601), 'gimplify_stmt': ([], 48604), 'gimplify_body': ([0, 1], 48594), 'gimplify_function_tree': ([], 48604), 'gimple_asm_output_op': ([], 48604), 'gimple_call_fndecl': ([], 48604), 'gimple_referenced_vars': ([], 48604), 'gimple_regimplify_operands': ([38], 48599), 'force_gimple_operand_gsi': ([], 48604)}, "PosixPath('602/postreload-gcse.bc')": {'alloc_mem': ([], 8490), 'reset_opr_set_tables': ([], 8490), 'record_last_reg_set_info': ([3], 8489), 'record_last_reg_set_info_regno': ([], 8490), 'record_last_mem_set_info': ([], 8490), 'record_last_set_info': ([0], 8488), 'record_opr_changes': ([], 8490), 'reg_changed_after_insn_p': ([], 8490), 'find_mem_conflicts': ([], 8490), 'load_killed_in_block_p': ([], 8490), 'oprs_unchanged_p': ([], 8490), 'insert_expr_in_table': ([], 8490), 'hash_scan_set': ([], 8490), 'compute_hash_table': ([], 8490), 'ei_next': ([], 8490), 'bb_has_well_behaved_predecessors': ([], 8490), 'lookup_expr_in_table': ([], 8490), 'get_bb_avail_insn': ([], 8490), 'get_avail_load_store_reg': ([], 8490), 'reg_killed_on_edge': ([], 8490), 'reg_used_on_edge': ([], 8490), 'eliminate_partially_redundant_load': ([], 8490), 'eliminate_partially_redundant_loads': ([], 8490), 'delete_redundant_insns_1': ([], 8490), 'free_mem': ([], 8490), 'gcse_after_reload_main': ([], 8490), 'rest_of_handle_gcse2': ([], 8490)}, "PosixPath('602/crc32.bc')": {'xcrc32': ([], 1114)}, "PosixPath('602/gimple-low.bc')": {'lower_function_body': ([9, 22], 4669), 'try_catch_may_fallthru': ([], 4682), 'gsi_start': ([1], 4680), 'gsi_last': ([], 4682), 'gimple_ops': ([], 4682), 'gimple_call_fndecl': ([], 4682), 'gimple_check_call_args': ([], 4682), 'tsi_next': ([], 4682), 'block_may_fallthru': ([], 4682), 'gimple_seq_last_stmt': ([], 4682), 'gsi_stmt': ([], 4682), 'gsi_next': ([], 4682), 'gimple_stmt_may_fallthru': ([], 4682), 'gimple_seq_may_fallthru': ([], 4682), 'record_vars_into': ([], 4682), 'gimple_seq_first_stmt': ([], 4682), 'VEC_return_statements_t_base_space': ([], 4682), 'VEC_return_statements_t_heap_reserve': ([], 4682), 'VEC_return_statements_t_base_quick_push': ([], 4682), 'VEC_return_statements_t_heap_safe_push': ([], 4682), 'lower_gimple_return': ([], 4682), 'lower_builtin_setjmp': ([], 4682), 'lower_gimple_bind': ([1], 4670), 'lower_sequence': ([2], 4676), 'gimple_set_op': ([], 4682), 'gimple_call_set_lhs': ([], 4682)}, "PosixPath('602/sbitmap.bc')": {'sbitmap_iter_init': ([], 7741), 'sbitmap_alloc': ([], 7741), 'sbitmap_resize': ([], 7741), 'sbitmap_realloc': ([], 7741), 'sbitmap_vector_alloc': ([], 7741), 'sbitmap_copy': ([0], 7537), 'sbitmap_copy_n': ([], 7741), 'sbitmap_range_empty_p': ([], 7741), 'sbitmap_zero': ([0], 7578), 'sbitmap_ones': ([0], 7736), 'sbitmap_vector_zero': ([], 7741), 'sbitmap_union_of_diff_cg': ([], 7741), 'sbitmap_union_of_diff': ([], 7741), 'sbitmap_not': ([], 7741), 'sbitmap_difference': ([], 7741), 'sbitmap_any_common_bits': ([], 7741), 'sbitmap_a_and_b_cg': ([], 7741), 'sbitmap_a_and_b': ([], 7741), 'sbitmap_a_xor_b_cg': ([], 7741), 'sbitmap_a_xor_b': ([], 7741), 'sbitmap_a_or_b_cg': ([], 7741), 'sbitmap_a_or_b': ([], 7741), 'sbitmap_a_subset_b_p': ([], 7741), 'sbitmap_a_or_b_and_c_cg': ([], 7741), 'sbitmap_a_or_b_and_c': ([], 7741), 'sbitmap_a_and_b_or_c_cg': ([], 7741), 'sbitmap_a_and_b_or_c': ([], 7741), 'sbitmap_intersection_of_succs': ([6], 7739), 'sbitmap_intersection_of_preds': ([2], 7731), 'sbitmap_union_of_succs': ([7], 7739), 'sbitmap_union_of_preds': ([4, 7], 7738), 'sbitmap_iter_cond': ([], 7741), 'sbitmap_first_set_bit': ([], 7741), 'dump_sbitmap': ([], 7741), 'dump_sbitmap_file': ([], 7741), 'sbitmap_popcount': ([], 7741)}, "PosixPath('602/regmove.bc')": {'regmove_backward_pass': ([], 7858), 'optimize_reg_copy_1': ([], 7858), 'optimize_reg_copy_2': ([], 7858), 'optimize_reg_copy_3': ([], 7858), 'regmove_forward_pass': ([109], 7847), 'find_matches': ([], 7858), 'fixup_match_2': ([], 7858), 'reg_is_remote_constant_p': ([], 7858), 'copy_src_to_dest': ([], 7858), 'regmove_optimize': ([], 7858)}, "PosixPath('602/insn-attrtab.bc')": {'recog_memoized': ([], 972379), 'insn_current_length': ([], 972379)}, "PosixPath('602/splay-tree.bc')": {'splay_tree_delete_helper': ([], 2006), 'splay_tree_insert': ([], 2006), 'splay_tree_new_with_allocator': ([], 2006), 'splay_tree_new': ([], 2006), 'splay_tree_delete': ([], 2006), 'rotate_left': ([], 2006), 'rotate_right': ([], 2006), 'splay_tree_splay': ([], 2006), 'splay_tree_remove': ([], 2006), 'splay_tree_lookup': ([], 2006), 'splay_tree_predecessor': ([], 2006), 'splay_tree_successor': ([], 2006)}, "PosixPath('602/ipa-reference.bc')": {'get_reference_vars_info': ([], 10674), 'VEC_ipa_reference_vars_info_t_base_space': ([], 10674), 'VEC_ipa_reference_vars_info_t_heap_reserve_exact': ([], 10674), 'VEC_ipa_reference_vars_info_t_heap_safe_grow': ([], 10674), 'VEC_ipa_reference_vars_info_t_heap_safe_grow_cleared': ([], 10674), 'set_reference_vars_info': ([3, 8], 10671), 'duplicate_node_data': ([], 10674), 'clean_function_local_data': ([], 10674), 'clean_function': ([], 10674), 'gsi_stmt': ([], 10674), 'clear_and_done_ssa_iter': ([], 10674), 'op_iter_next_use': ([], 10674), 'op_iter_init_phiuse': ([], 10674), 'add_static_var': ([], 10674), 'has_proper_scope_for_analysis': ([], 10674), 'mark_address_taken': ([], 10674), 'gsi_next': ([], 10674), 'bb_seq': ([], 10674), 'gsi_start_bb': ([], 10674), 'gimple_ops': ([], 10674), 'gimple_op': ([], 10674), 'gimple_call_fndecl': ([], 10674), 'check_call': ([], 10674), 'gimple_asm_clobber_op': ([], 10674), 'check_asm_memory_clobber': ([], 10674), 'mark_address': ([], 10674), 'scan_stmt_for_static_refs': ([], 10674), 'analyze_function': ([], 10674), 'lto_file_decl_data_get_var_decl': ([], 10674), 'ipa_reference_read_summary': ([], 10674), 'csi_end_p': ([], 10674), 'write_node_summary_p': ([], 10674), 'bmp_iter_set_init': ([], 10674), 'bmp_iter_set': ([4], 10669), 'bmp_iter_next': ([], 10674), 'ipa_reference_write_summary': ([12], 10668), 'varpool_first_static_initializer': ([], 10674), 'analyze_variable': ([], 10674), 'varpool_next_static_initializer': ([], 10674), 'generate_summary': ([17, 20], 10591), 'propagate_bits': ([1], 10665), 'propagate': ([11], 10644), 'gate_reference': ([], 10674)}, "PosixPath('602/tree-ssa-loop-manip.bc')": {'tree_transform_and_unroll_loop': ([], 10094), 'create_iv': ([], 10094), 'loops_state_set': ([], 10094), 'number_of_loops': ([], 10094), 'ei_next': ([], 10094), 'get_loops_exits': ([], 10094), 'bmp_iter_set_init': ([], 10094), 'bmp_iter_set': ([4], 10089), 'gsi_stmt': ([], 10094), 'loop_outer': ([], 10094), 'find_uses_to_rename_use': ([], 10094), 'gsi_next': ([], 10094), 'bb_seq': ([], 10094), 'gsi_start_bb': ([], 10094), 'gimple_use_ops': ([], 10094), 'op_iter_init': ([], 10094), 'op_iter_next_tree': ([], 10094), 'op_iter_init_tree': ([], 10094), 'find_uses_to_rename_stmt': ([], 10094), 'find_uses_to_rename_bb': ([23], 10092), 'bmp_iter_next': ([], 10094), 'find_uses_to_rename': ([], 10094), 'bmp_iter_and_init': ([0], 10093), 'bmp_iter_and': ([], 10094), 'add_exit_phis_edge': ([], 10094), 'add_exit_phis_var': ([], 10094), 'add_exit_phis': ([], 10094), 'rewrite_into_loop_closed_ssa': ([], 10094), 'check_loop_closed_ssa_stmt': ([], 10094), 'verify_loop_closed_ssa': ([21], 10092), 'single_succ_p': ([], 10094), 'single_succ_edge': ([], 10094), 'delink_imm_use': ([], 10094), 'link_imm_use_to_list': ([], 10094), 'link_imm_use': ([], 10094), 'set_ssa_use_from_ptr': ([], 10094), 'split_loop_exit_edge': ([], 10094), 'single_pred_p': ([], 10094), 'single_pred_edge': ([], 10094), 'ip_normal_pos': ([], 10094), 'gsi_last_bb': ([], 10094), 'standard_iv_increment_position': ([], 10094), 'loops_state_satisfies_p': ([], 10094), 'copy_phi_node_args': ([], 10094), 'gimple_duplicate_loop_to_header_edge': ([], 10094), 'can_unroll_loop_p': ([], 10094), 'determine_exit_conditions': ([], 10094), 'VEC_edge_base_iterate': ([], 10094), 'gimple_ops': ([], 10094), 'gimple_set_op': ([0], 10092), 'gsi_after_labels': ([], 10094), 'rewrite_phi_with_iv': ([], 10094), 'rewrite_all_phi_nodes_with_iv': ([], 10094), 'canonicalize_loop_ivs': ([], 10094)}, "PosixPath('602/cfgcleanup.bc')": {'try_crossjump_to_edge': ([65, 264, 751], 14106), 'VEC_basic_block_base_pop': ([], 14111), 'delete_unreachable_blocks': ([56], 14108), 'delete_dead_jumptables': ([], 14111), 'update_forwarder_flag': ([], 14111), 'trivially_empty_bb_p': ([], 14111), 'single_succ_p': ([], 14111), 'single_succ_edge': ([], 14111), 'single_pred_p': ([], 14111), 'single_pred_edge': ([], 14111), 'ei_next': ([], 14111), 'merge_blocks_move_successor_nojumps': ([], 14111), 'merge_blocks_move_predecessor_nojumps': ([], 14111), 'merge_blocks_move': ([], 14111), 'try_simplify_condjump': ([], 14111), 'mark_effect': ([], 14111), 'bmp_iter_set_init': ([], 14111), 'bmp_iter_set': ([], 14111), 'mentions_nonequal_regs': ([], 14111), 'thread_jump': ([73], 14108), 'try_forward_edges': ([], 14111), 'old_insns_match_p': ([], 14111), 'outgoing_edges_match': ([], 14111), 'merge_memattrs': ([4, 9, 29], 14105), 'flow_find_cross_jump': ([], 14111), 'try_crossjump_bb': ([75], 14107), 'try_optimize_cfg': ([111], 14104), 'cleanup_cfg': ([114], 14104)}, "PosixPath('602/stringpool.bc')": {'init_stringpool': ([], 1685), 'gt_pch_save_stringpool': ([], 1685), 'ggc_alloc_string': ([], 1685), 'gt_pch_restore_stringpool': ([], 1685), 'gt_ggc_mx_string_pool_data': ([], 1685), 'gt_pch_p_16string_pool_data': ([], 1685), 'gt_pch_nx_string_pool_data': ([], 1685)}, "PosixPath('602/cpp_lex.bc')": {'_cpp_clean_line': ([47, 48], 17662), 'add_line_note': ([], 17696), 'next_tokenrun': ([1], 17694), 'lex_raw_string': ([], 17696), 'store_comment': ([], 17696), 'cpp_ideq': ([], 17696), 'warn_in_comment': ([], 17696), '_cpp_process_line_notes': ([228], 17684), '_cpp_skip_block_comment': ([], 17696), 'lex_identifier_intern': ([], 17696), '_cpp_lex_identifier': ([], 17696), '_cpp_init_tokenrun': ([], 17696), '_cpp_get_fresh_line': ([1, 25], 17692), 'skip_whitespace': ([], 17696), 'forms_identifier_p': ([], 17696), 'new_buff': ([], 17696), '_cpp_get_buff': ([6], 17695), '_cpp_unaligned_alloc': ([], 17696), 'lex_number': ([], 17696), 'cpp_token_len': ([], 17696), 'utf8_to_ucn': ([], 17696), 'cpp_spell_token': ([], 17696), 'warn_about_normalization': ([], 17696), 'create_literal': ([], 17696), '_cpp_append_extend_buff': ([], 17696), 'bufring_append': ([], 17696), '_cpp_release_buff': ([], 17696), 'lex_string': ([], 17696), 'lex_identifier': ([0], 17695), 'cpp_in_system_header': ([], 17696), 'skip_line_comment': ([], 17696), 'save_comment': ([], 17696), '_cpp_lex_direct': ([8], 17694), '_cpp_lex_token': ([2], 17695), 'cpp_peek_token': ([], 17696), '_cpp_temp_token': ([], 17696), 'cpp_output_token': ([], 17696), '_cpp_equiv_tokens': ([], 17696), 'name_p': ([], 17696), 'cpp_avoid_paste': ([], 17696), '_cpp_extend_buff': ([], 17696), '_cpp_free_buff': ([], 17696), '_cpp_aligned_alloc': ([], 17696), 'cpp_token_val_index': ([], 17696)}, "PosixPath('602/tree-ssa-loop-ivopts.bc')": {'multiply_by_cost': ([], 40119), 'constant_multiple_of': ([], 40119), 'get_computation_aff': ([], 40119), 'set_use_iv_cost': ([], 40119), 'iv_ca_set_no_cp': ([], 40119), 'iv_ca_set_cp': ([], 40119), 'create_new_iv': ([43, 46], 40078), 'rewrite_use_nonlinear_expr': ([], 40119), 'dump_iv': ([], 40119), 'n_iv_uses': ([], 40119), 'dump_uses': ([], 40119), 'dump_cand': ([], 40119), 'idx_contains_abnormal_ssa_name_p': ([], 40119), 'loop_depth': ([], 40119), 'tree_operand_length': ([], 40119), 'expr_invariant_in_loop_p': ([], 40119), 'gimple_ops': ([], 40119), 'stmt_invariant_in_loop_p': ([], 40119), 'tree_int_cst_sign_bit': ([], 40119), 'seq_cost': ([], 40119), 'mbc_entry_eq': ([], 40119), 'mbc_entry_hash': ([], 40119), 'VEC_sbitmap_base_space': ([], 40119), 'VEC_sbitmap_heap_reserve_exact': ([], 40119), 'VEC_sbitmap_heap_safe_grow': ([], 40119), 'VEC_sbitmap_heap_safe_grow_cleared': ([], 40119), 'multiplier_allowed_in_address_p': ([3], 40118), 'tree_ssa_iv_optimize_init': ([], 40119), 'number_of_loops': ([], 40119), 'VEC_int_base_quick_push': ([], 40119), 'loop_outer': ([], 40119), 'VEC_int_base_iterate': ([], 40119), 'get_loop': ([], 40119), 'fel_next': ([5], 40116), 'fel_init': ([], 40119), 'gsi_stmt': ([], 40119), 'determine_biv_step': ([], 40119), 'determine_base_object': ([], 40119), 'alloc_iv': ([], 40119), 'set_iv': ([4], 40116), 'gsi_next': ([], 40119), 'find_bivs': ([], 40119), 'bb_seq': ([], 40119), 'gsi_start_bb': ([], 40119), 'find_givs_in_stmt': ([], 40119), 'find_givs_in_bb': ([], 40119), 'find_givs': ([], 40119), 'get_iv': ([], 40119), 'mark_bivs': ([], 40119), 'niter_for_exit': ([], 40119), 'bmp_iter_set_init': ([], 40119), 'bmp_iter_set': ([4], 40114), 'bmp_iter_next': ([], 40119), 'find_induction_variables': ([], 40119), 'record_invariant': ([], 40119), 'VEC_iv_use_p_base_space': ([], 40119), 'VEC_iv_use_p_heap_reserve': ([], 40119), 'VEC_iv_use_p_base_quick_push': ([], 40119), 'VEC_iv_use_p_heap_safe_push': ([], 40119), 'record_use': ([], 40119), 'find_interesting_uses_op': ([], 40119), 'find_interesting_uses_outside': ([], 40119), 'ei_next': ([], 40119), 'clear_and_done_ssa_iter': ([], 40119), 'op_iter_next_use': ([], 40119), 'op_iter_init_phiuse': ([], 40119), 'gimple_use_ops': ([], 40119), 'gimple_vuse': ([], 40119), 'op_iter_init': ([], 40119), 'op_iter_init_use': ([], 40119), 'find_invariants_stmt': ([], 40119), 'extract_cond_operands': ([], 40119), 'may_be_nonaddressable_p': ([], 40119), 'idx_find_step': ([], 40119), 'find_interesting_uses_address': ([9], 40113), 'find_interesting_uses_stmt': ([7], 40115), 'find_interesting_uses': ([], 40119), 'n_iv_cands': ([], 40119), 'VEC_iv_cand_p_base_space': ([], 40119), 'VEC_iv_cand_p_heap_reserve': ([], 40119), 'VEC_iv_cand_p_base_quick_push': ([], 40119), 'VEC_iv_cand_p_heap_safe_push': ([], 40119), 'find_depends': ([14], 40118), 'add_candidate_1': ([30], 40108), 'add_autoinc_candidates': ([], 40119), 'add_candidate': ([], 40119), 'add_old_iv_candidates': ([], 40119), 'add_old_ivs_candidates': ([], 40119), 'strip_offset_1': ([], 40119), 'add_iv_value_candidates': ([], 40119), 'add_derived_ivs_candidates': ([], 40119), 'split_address_cost': ([], 40119), 'produce_memory_decl_rtl': ([], 40119), 'VEC_tree_base_space': ([], 40119), 'VEC_tree_heap_reserve': ([], 40119), 'VEC_tree_base_quick_push': ([], 40119), 'VEC_tree_heap_safe_push': ([], 40119), 'prepare_decl_rtl': ([], 40119), 'computation_cost': ([8], 40113), 'add_cost': ([], 40119), 'force_expr_to_var_cost': ([], 40119), 'force_var_cost': ([], 40119), 'ptr_difference_cost': ([], 40119), 'difference_cost': ([], 40119), 'stmt_after_inc_pos': ([3], 40118), 'VEC_address_cost_data_base_space': ([], 40119), 'VEC_address_cost_data_heap_reserve_exact': ([], 40119), 'VEC_address_cost_data_heap_safe_grow': ([], 40119), 'VEC_address_cost_data_heap_safe_grow_cleared': ([], 40119), 'get_address_cost': ([], 40119), 'determine_common_wider_type': ([], 40119), 'get_computation_at': ([], 40119), 'get_computation_cost_at': ([], 40119), 'get_computation_cost': ([], 40119), 'autoinc_possible_for_pair': ([], 40119), 'set_autoinc_for_original_candidates': ([], 40119), 'record_important_candidates': ([], 40119), 'find_iv_candidates': ([], 40119), 'determine_iv_cost': ([], 40119), 'determine_iv_costs': ([], 40119), 'alloc_use_cost_map': ([], 40119), 'determine_use_iv_cost_generic': ([], 40119), 'determine_use_iv_cost_address': ([], 40119), 'cand_value_at': ([], 40119), 'may_eliminate_iv': ([], 40119), 'determine_use_iv_cost_condition': ([], 40119), 'determine_use_iv_cost': ([], 40119), 'determine_use_iv_costs': ([], 40119), 'ivopts_global_cost_for_size': ([], 40119), 'determine_set_costs': ([], 40119), 'iv_ca_new': ([], 40119), 'get_use_iv_cost': ([], 40119), 'cheaper_cost_pair': ([], 40119), 'iv_ca_set_remove_invariants': ([], 40119), 'iv_ca_recount_cost': ([], 40119), 'iv_ca_set_add_invariants': ([], 40119), 'iv_ca_add_use': ([], 40119), 'iv_ca_cost': ([], 40119), 'iv_ca_cand_for_use': ([], 40119), 'iv_ca_delta_add': ([], 40119), 'iv_ca_cand_used_p': ([], 40119), 'iv_ca_has_deps': ([], 40119), 'iv_ca_delta_reverse': ([], 40119), 'iv_ca_delta_commit': ([], 40119), 'iv_ca_extend': ([], 40119), 'try_add_cand_for': ([], 40119), 'iv_ca_free': ([], 40119), 'get_initial_solution': ([], 40119), 'iv_ca_dump': ([], 40119), 'bmp_iter_and_init': ([19], 40114), 'bmp_iter_and': ([], 40119), 'iv_ca_narrow': ([8, 11], 40109), 'iv_ca_prune': ([30], 40084), 'try_improve_iv_set': ([], 40119), 'find_optimal_iv_set': ([], 40119), 'gsi_last_bb': ([], 40119), 'create_new_ivs': ([], 40119), 'gsi_after_labels': ([], 40119), 'idx_remove_ssa_names': ([], 40119), 'copy_ref_info': ([], 40119), 'rewrite_use_address': ([], 40119), 'iv_elimination_compare': ([], 40119), 'gimple_set_op': ([], 40119), 'rewrite_use_compare': ([], 40119), 'rewrite_use': ([], 40119), 'rewrite_uses': ([], 40119), 'remove_unused_ivs': ([], 40119), 'VEC_tree_base_iterate': ([], 40119), 'free_loop_data': ([33], 40117), 'tree_ssa_iv_optimize_loop': ([37], 40116), 'tree_ssa_iv_optimize_finalize': ([], 40119), 'tree_ssa_iv_optimize': ([], 40119)}, "PosixPath('602/omega.bc')": {'omega_pretty_print_problem': ([4, 199], 43659), 'omega_convert_eq_to_geqs': ([], 43666), 'omega_solve_eq': ([], 43666), 'omega_solve_geq': ([], 43666), 'normalize_omega_problem': ([], 43666), 'omega_unprotect_variable': ([1, 6, 69, 296, 414], 43655), 'omega_unprotect_1': ([95], 43661), 'omega_constrain_variable_sign': ([0, 5, 6, 9], 43639), 'omega_alloc_problem': ([], 43666), 'omega_do_mod': ([], 43666), 'omega_delete_variable': ([1, 34], 43661), 'omega_substitute': ([51, 104], 43657), 'omega_variable_to_str': ([], 43666), 'omega_print_eqn': ([], 43666), 'omega_initialize_variables': ([], 43666), 'omega_print_vars': ([], 43666), 'omega_print_term': ([13], 43663), 'omega_print_problem': ([], 43666), 'omega_count_red_equations': ([], 43666), 'omega_print_red_equations': ([], 43666), 'omega_copy_eqn': ([], 43666), 'omega_init_eqn_zero': ([], 43666), 'adding_equality_constraint': ([], 43666), 'omega_delete_geq': ([2], 43661), 'omega_copy_problem': ([], 43666), 'omega_negate_geq': ([], 43666), 'omega_alloc_eqns': ([], 43666), 'setup_packing': ([2], 43664), 'omega_substitute_red_1': ([5], 43664), 'omega_wildcard_p': ([], 43666), 'omega_substitute_red': ([], 43666), 'omega_do_elimination': ([96], 43658), 'omega_name_wild_card': ([], 43666), 'omega_add_new_wild_card': ([161], 43661), 'coalesce': ([], 43666), 'chain_unprotect': ([], 43666), 'omega_free_eliminations': ([], 43666), 'single_var_geq': ([], 43666), 'omega_delete_geq_extra': ([2], 43661), 'omega_eliminate_redundant': ([1, 99], 43644), 'omega_solve_problem': ([8, 10, 104, 168], 43530), 'omega_problem_reduced': ([], 43666), 'omega_simplify_problem': ([3, 9], 43661), 'verify_omega_pb': ([], 43666), 'omega_eliminate_red': ([], 43666), 'free_red_eliminations': ([], 43666), 'omega_problem_has_red_equations': ([54], 43664), 'omega_simplify_approximate': ([], 43666), 'omega_constrain_variable_value': ([0], 43658), 'omega_query_variable': ([], 43666), 'query_coupled_variable': ([14], 43662), 'omega_query_variable_bounds': ([14], 43665), 'omega_query_variable_signs': ([], 43666), 'omega_initialize': ([0], 43663)}, "PosixPath('602/objalloc.bc')": {'_objalloc_alloc': ([2], 823), 'objalloc_create': ([], 828), 'objalloc_free': ([], 828), 'objalloc_free_block': ([], 828)}, "PosixPath('602/targhooks.bc')": {'default_stack_protect_guard': ([], 3998), 'default_external_stack_protect_fail': ([], 3998), 'default_hidden_stack_protect_fail': ([], 3998), 'default_unspec_may_trap_p': ([], 3998), 'default_return_in_memory': ([], 3998), 'default_cxx_get_cookie_size': ([], 3998), 'default_scalar_mode_supported_p': ([], 3998), 'default_invalid_within_doloop': ([], 3998), 'default_static_chain': ([], 3998), 'default_secondary_reload': ([], 3998)}, "PosixPath('602/ira-build.bc')": {'ira_create_allocno': ([], 18827), 'ira_flattening': ([0, 17, 21, 43, 161], 18801), 'ira_build': ([26], 18819), 'create_loop_tree_nodes': ([], 18827), 'remove_low_level_allocnos': ([], 18827), 'VEC_ira_allocno_t_base_space': ([], 18827), 'VEC_ira_allocno_t_heap_reserve': ([], 18827), 'VEC_ira_allocno_t_base_quick_push': ([], 18827), 'VEC_ira_allocno_t_heap_safe_push': ([2], 18825), 'ira_set_allocno_cover_class': ([], 18827), 'ira_conflict_vector_profitable_p': ([], 18827), 'ira_allocate_allocno_conflict_vec': ([], 18827), 'allocate_allocno_conflict_bit_vec': ([], 18827), 'ira_allocate_allocno_conflicts': ([], 18827), 'add_to_allocno_conflicts': ([4, 35], 18810), 'ira_print_expanded_allocno': ([], 18827), 'ira_create_allocno_live_range': ([], 18827), 'ira_copy_allocno_live_range_list': ([], 18827), 'ira_merge_allocno_live_ranges': ([], 18827), 'ira_allocno_live_ranges_intersect_p': ([], 18827), 'ira_free_allocno_updated_costs': ([], 18827), 'VEC_ira_copy_t_base_space': ([], 18827), 'VEC_ira_copy_t_heap_reserve': ([], 18827), 'VEC_ira_copy_t_base_quick_push': ([], 18827), 'VEC_ira_copy_t_heap_safe_push': ([], 18827), 'ira_create_copy': ([], 18827), 'ira_add_allocno_copy_to_list': ([], 18827), 'ira_remove_allocno_copy_from_list': ([], 18827), 'ira_swap_allocno_copy_ends_if_necessary': ([], 18827), 'find_allocno_copy': ([], 18827), 'ira_add_allocno_copy': ([], 18827), 'print_copy': ([], 18827), 'ira_copy_iter_cond': ([], 18827), 'print_copies': ([], 18827), 'print_allocno_copies': ([], 18827), 'ira_debug_allocno_copies': ([], 18827), 'ira_traverse_loop_tree': ([], 18827), 'ira_allocno_iter_cond': ([], 18827), 'change_allocno_in_range_list': ([], 18827), 'copy_info_to_removed_store_destinations': ([], 18827), 'clear_allocno_conflicts': ([], 18827), 'sparseset_bit_p': ([], 18827), 'sparseset_insert_bit': ([], 18827), 'sparseset_set_bit': ([2], 18823), 'sparseset_iter_init': ([], 18827), 'sparseset_iter_p': ([], 18827), 'sparseset_iter_elm': ([], 18827), 'sparseset_iter_next': ([], 18827), 'compress_allocno_conflict_vec': ([5], 18825), 'compress_conflict_vecs': ([], 18827), 'finish_allocno': ([], 18827), 'VEC_loop_p_base_iterate': ([], 18827), 'rebuild_regno_allocno_maps': ([], 18827), 'initiate_cost_vectors': ([], 18827), 'ei_next': ([], 18827), 'VEC_edge_base_iterate': ([], 18827), 'loop_outer': ([], 18827), 'add_loop_to_tree': ([], 18827), 'setup_loop_tree_level': ([], 18827), 'form_loop_tree': ([], 18827), 'propagate_modified_regnos': ([], 18827), 'create_insn_allocnos': ([], 18827), 'df_lr_get_bb_info': ([], 18827), 'bmp_iter_set_init': ([], 18827), 'bmp_iter_set': ([4], 18822), 'bmp_iter_next': ([], 18827), 'create_bb_allocnos': ([], 18827), 'create_loop_allocnos': ([6, 115], 18817), 'create_loop_tree_node_allocnos': ([99], 18825), 'loop_depth': ([], 18827), 'mark_all_loops_for_removal': ([], 18827), 'low_pressure_loop_node_p': ([], 18827), 'loop_compare_func': ([], 18827), 'mark_loops_for_removal': ([0], 18818), 'VEC_ira_loop_tree_node_t_base_space': ([], 18827), 'VEC_ira_loop_tree_node_t_heap_reserve': ([], 18827), 'VEC_ira_loop_tree_node_t_base_quick_push': ([], 18827), 'VEC_ira_loop_tree_node_t_heap_safe_push': ([2], 18825), 'VEC_ira_loop_tree_node_t_base_pop': ([], 18827), 'remove_uneccesary_loop_nodes_from_loop_tree': ([0, 7], 18819), 'ira_allocate_and_accumulate_costs': ([], 18827), 'propagate_some_info_from_allocno': ([107], 18823), 'regno_allocno_order_compare_func': ([], 18827), 'ira_rebuild_regno_allocno_list': ([], 18827), 'remove_unnecessary_allocnos': ([], 18827), 'finish_loop_tree_node': ([], 18827), 'remove_unnecessary_regions': ([180], 18809), 'bitmap_initialize_stat': ([], 18827), 'update_bad_spill_attribute': ([], 18827), 'more_one_region_p': ([], 18827), 'propagate_allocno_info': ([], 18827), 'ira_allocate_and_copy_costs': ([], 18827), 'create_cap_allocno': ([], 18827), 'create_caps': ([], 18827), 'setup_min_max_allocno_live_range_point': ([], 18827), 'allocno_range_compare_func': ([], 18827), 'sort_conflict_id_allocno_map': ([], 18827), 'setup_min_max_conflict_allocno_ids': ([], 18827), 'finish_loop_tree_nodes': ([], 18827), 'finish_copies': ([], 18827), 'finish_allocnos': ([], 18827), 'finish_cost_vectors': ([], 18827), 'ira_destroy': ([], 18827)}, "PosixPath('602/gimple-pretty-print.bc')": {'gsi_start': ([], 17197), 'maybe_init_pretty_print': ([], 17197), 'gimple_vdef': ([], 17197), 'gimple_vuse': ([], 17197), 'gimple_references_memory_p': ([], 17197), 'dump_gimple_mem_ops': ([], 17197), 'gsi_stmt': ([], 17197), 'gsi_one_before_end_p': ([], 17197), 'gsi_next': ([], 17197), 'gimple_ops': ([], 17197), 'gimple_op': ([], 17197), 'gimple_asm_output_op': ([], 17197), 'gimple_asm_clobber_op': ([], 17197), 'gimple_asm_label_op': ([], 17197), 'dump_unary_rhs': ([], 17197), 'dump_gimple_call_args': ([], 17197), 'gimple_seq_first_stmt': ([], 17197), 'gimple_omp_for_index': ([], 17197), 'gimple_omp_for_initial': ([], 17197), 'gimple_omp_for_final': ([], 17197), 'gimple_omp_for_cond': ([], 17197), 'gimple_omp_for_incr': ([], 17197), 'gimple_omp_subcode': ([], 17197), 'dump_gimple_stmt': ([1], 17188), 'dump_gimple_phi': ([], 17197), 'dump_gimple_fmt': ([], 17197), 'dump_gimple_seq': ([2], 17189), 'bb_seq': ([], 17197), 'gsi_start_bb': ([], 17197), 'get_lineno': ([], 17197), 'ei_next': ([], 17197), 'dump_bb_header': ([], 17197), 'dump_phi_nodes': ([], 17197), 'dump_implicit_edges': ([], 17197), 'dump_bb_end': ([], 17197), 'gimple_dump_bb_buff': ([], 17197), 'gimple_dump_bb': ([], 17197)}, "PosixPath('602/optabs.bc')": {'set_optab_libfunc': ([], 57886), 'set_conv_libfunc': ([], 57886), 'gen_cond_trap': ([], 57886), 'convert_optab_libfunc': ([], 57886), 'optab_libfunc': ([], 57886), 'optab_for_tree_code': ([], 57886), 'expand_widen_pattern_expr': ([], 57886), 'expand_ternary_op': ([], 57886), 'avoid_expensive_constant': ([], 57886), 'add_equal_note': ([], 57886), 'can_compare_p': ([], 57886), 'prepare_operand': ([], 57886), 'no_conflict_move_test': ([2], 57881), 'emit_libcall_block': ([], 57886), 'prepare_float_lib_cmp': ([], 57886), 'prepare_cmp_insn': ([32, 113], 57806), 'emit_conditional_move': ([], 57886), 'expand_binop': ([93], 57881), 'expand_subword_shift': ([], 57886), 'expand_binop_directly': ([], 57886), 'expand_vec_shift_expr': ([], 57886), 'sign_expand_binop': ([], 57886), 'expand_twoval_unop': ([], 57886), 'expand_twoval_binop': ([], 57886), 'emit_cmp_and_jump_insn_1': ([], 57886), 'emit_cmp_and_jump_insns': ([], 57886), 'expand_absneg_bit': ([], 57886), 'expand_unop': ([], 57886), 'expand_unop_direct': ([], 57886), 'expand_abs_nojump': ([], 57886), 'expand_abs': ([], 57886), 'expand_one_cmpl_abs_nojump': ([], 57886), 'maybe_emit_unop_insn': ([], 57886), 'expand_copysign_absneg': ([], 57886), 'expand_copysign_bit': ([], 57886), 'expand_copysign': ([], 57886), 'emit_conditional_add': ([], 57886), 'gen_add2_insn': ([], 57886), 'gen_add3_insn': ([], 57886), 'have_add2_insn': ([0], 57885), 'gen_sub2_insn': ([], 57886), 'gen_sub3_insn': ([], 57886), 'have_sub2_insn': ([0], 57885), 'gen_extend_insn': ([], 57886), 'expand_float': ([5, 6], 57817), 'can_fix_p': ([], 57886), 'expand_fix': ([], 57886), 'expand_sfix_optab': ([], 57886), 'have_insn_for': ([], 57886), 'build_libfunc_function': ([], 57886), 'init_optab': ([], 57886), 'gen_interclass_conv_libfunc': ([], 57886), 'gen_fractuns_conv_libfunc': ([0], 57880), 'gen_intraclass_conv_libfunc': ([], 57886), 'gen_fract_conv_libfunc': ([], 57886), 'gen_trunc_conv_libfunc': ([], 57886), 'gen_extend_conv_libfunc': ([], 57886), 'gen_libfunc': ([], 57886), 'gen_fp_libfunc': ([], 57886), 'gen_int_libfunc': ([], 57886), 'gen_intv_fp_libfunc': ([], 57886), 'eq_libfunc': ([], 57886), 'hash_libfunc': ([], 57886), 'init_optabs': ([], 57886), 'debug_optab_libfuncs': ([], 57886), 'vector_compare_rtx': ([], 57886), 'expand_vec_cond_expr': ([0], 57885), 'expand_val_compare_and_swap_1': ([], 57886), 'expand_bool_compare_and_swap': ([], 57886), 'expand_compare_and_swap_loop': ([], 57886), 'expand_sync_operation': ([], 57886), 'expand_sync_fetch_operation': ([], 57886), 'expand_sync_lock_test_and_set': ([], 57886), 'gt_ggc_m_P13libfunc_entry4htab': ([], 57886), 'gt_pch_p_P13libfunc_entry4htab': ([], 57886), 'gt_pch_n_P13libfunc_entry4htab': ([], 57886)}, "PosixPath('602/auto-inc-dec.bc')": {}, "PosixPath('602/attribs.bc')": {'register_attribute': ([0], 2609), 'decl_attributes': ([49, 98], 2601), 'substring_hash': ([], 2621), 'extract_attribute_substring': ([], 2621), 'lookup_attribute_spec': ([], 2621), 'eq_attr': ([], 2621), 'hash_attr': ([], 2621), 'init_attributes': ([], 2621)}, "PosixPath('602/dominance.bc')": {'calc_dfs_tree': ([0, 133], 10388), 'calc_idoms': ([], 10394), 'free_dominance_info': ([], 10394), 'init_dom_info': ([], 10394), 'ei_next': ([], 10394), 'calc_dfs_tree_nonrec': ([78], 10393), 'compress': ([], 10394), 'eval': ([], 10394), 'link_roots': ([], 10394), 'assign_dfs_numbers': ([5], 10388), 'compute_dom_fast_query': ([], 10394), 'calculate_dominance_info': ([], 10394), 'get_immediate_dominator': ([], 10394), 'set_immediate_dominator': ([], 10394), 'VEC_basic_block_base_space': ([], 10394), 'VEC_basic_block_heap_reserve': ([], 10394), 'VEC_basic_block_base_quick_push': ([], 10394), 'VEC_basic_block_heap_safe_push': ([2], 10392), 'get_dominated_by': ([], 10394), 'first_dom_son': ([], 10394), 'next_dom_son': ([], 10394), 'get_dominated_by_region': ([], 10394), 'get_all_dominated_blocks': ([], 10394), 'redirect_immediate_dominators': ([], 10394), 'bmp_iter_set_init': ([], 10394), 'bmp_iter_set': ([], 10394), 'bmp_iter_next': ([], 10394), 'nearest_common_dominator_for_set': ([], 10394), 'dominated_by_p': ([1], 10391), 'bb_dom_dfs_in': ([], 10394), 'bb_dom_dfs_out': ([], 10394), 'verify_dominators': ([], 10394), 'recompute_dominator': ([16, 20], 10385), 'VEC_basic_block_base_iterate': ([], 10394), 'single_pred_p': ([], 10394), 'single_pred_edge': ([], 10394), 'single_pred': ([], 10394), 'VEC_basic_block_base_unordered_remove': ([], 10394), 'prune_bbs_to_update_dominators': ([], 10394), 'VEC_int_base_space': ([], 10394), 'VEC_int_heap_reserve': ([], 10394), 'VEC_int_base_quick_push': ([], 10394), 'VEC_int_heap_safe_push': ([], 10394), 'VEC_int_base_iterate': ([], 10394), 'determine_dominators_for_sons': ([], 10394), 'iterate_fix_dominators': ([7, 103], 10366), 'add_to_dominance_info': ([], 10394), 'delete_from_dominance_info': ([], 10394), 'debug_dominance_info': ([], 10394)}, "PosixPath('602/tree-vect-slp.bc')": {'vect_analyze_slp_instance': ([], 19234), 'vect_schedule_slp_instance': ([], 19234), 'vect_build_slp_tree': ([3, 92, 115], 19220), 'bb_seq': ([], 19234), 'gsi_start_bb': ([], 19234), 'gsi_stmt': ([], 19234), 'gsi_next': ([], 19234), 'find_bb_location': ([], 19234), 'vect_free_slp_tree': ([], 19234), 'VEC_gimple_base_iterate': ([], 19234), 'vinfo_for_stmt': ([], 19234), 'VEC_gimple_base_space': ([], 19234), 'VEC_gimple_heap_reserve': ([], 19234), 'VEC_gimple_base_quick_push': ([], 19234), 'VEC_gimple_heap_safe_push': ([2], 19232), 'gimple_ops': ([], 19234), 'vect_get_and_check_slp_defs': ([], 19234), 'VEC_int_base_space': ([], 19234), 'VEC_int_heap_reserve': ([], 19234), 'VEC_int_base_quick_push': ([], 19234), 'VEC_int_heap_safe_push': ([], 19234), 'VEC_slp_tree_base_space': ([], 19234), 'VEC_slp_tree_heap_reserve': ([], 19234), 'VEC_slp_tree_base_quick_push': ([], 19234), 'VEC_slp_tree_heap_safe_push': ([2], 19232), 'VEC_int_base_iterate': ([], 19234), 'VEC_slp_tree_base_iterate': ([], 19234), 'vect_get_mask_element': ([], 19234), 'VEC_tree_base_quick_push': ([], 19234), 'gimple_set_op': ([], 19234), 'gimple_call_set_lhs': ([], 19234), 'vect_create_mask_and_perm': ([], 19234), 'vect_transform_slp_perm_load': ([6, 7], 19193), 'vect_supported_slp_permutation_p': ([], 19234), 'vect_supported_load_permutation_p': ([], 19234), 'get_earlier_stmt': ([], 19234), 'vect_find_first_load_in_slp_instance': ([], 19234), 'VEC_slp_instance_base_space': ([], 19234), 'VEC_slp_instance_heap_reserve': ([], 19234), 'VEC_slp_instance_base_quick_push': ([], 19234), 'VEC_slp_instance_heap_safe_push': ([], 19234), 'vect_print_slp_tree': ([], 19234), 'vect_analyze_slp': ([], 19234), 'VEC_slp_instance_base_iterate': ([], 19234), 'vect_mark_slp_stmts': ([], 19234), 'vect_make_slp_decision': ([], 19234), 'end_imm_use_stmt_p': ([], 19234), 'clear_and_done_ssa_iter': ([], 19234), 'op_iter_next_use': ([], 19234), 'op_iter_init_phiuse': ([], 19234), 'delink_imm_use': ([], 19234), 'link_imm_use_to_list': ([], 19234), 'move_use_after_head': ([], 19234), 'gimple_def_ops': ([], 19234), 'gimple_vdef': ([], 19234), 'gimple_use_ops': ([], 19234), 'gimple_vuse': ([], 19234), 'op_iter_init': ([], 19234), 'op_iter_init_use': ([], 19234), 'gimple_vuse_op': ([], 19234), 'link_use_stmts_after': ([], 19234), 'first_imm_use_stmt': ([], 19234), 'next_imm_use_stmt': ([], 19234), 'vect_detect_hybrid_slp_stmts': ([], 19234), 'vect_detect_hybrid_slp': ([], 19234), 'VEC_vec_void_p_base_space': ([], 19234), 'VEC_vec_void_p_heap_reserve': ([], 19234), 'VEC_vec_void_p_base_quick_push': ([], 19234), 'VEC_vec_void_p_heap_safe_push': ([], 19234), 'set_vinfo_for_stmt': ([], 19234), 'new_bb_vec_info': ([], 19234), 'destroy_bb_vec_info': ([], 19234), 'vect_mark_slp_stmts_relevant': ([], 19234), 'vect_slp_analyze_node_operations': ([], 19234), 'VEC_slp_instance_base_ordered_remove': ([], 19234), 'vect_slp_analyze_operations': ([], 19234), 'vect_slp_analyze_bb': ([], 19234), 'vect_update_slp_costs_according_to_vf': ([], 19234), 'vect_get_slp_vect_defs': ([], 19234), 'VEC_tree_base_iterate': ([], 19234), 'vect_get_constant_vectors': ([14], 19232), 'vect_get_slp_defs': ([], 19234), 'vect_schedule_slp': ([], 19234), 'gimple_vop': ([], 19234), 'vect_slp_transform_bb': ([], 19234)}, "PosixPath('602/mcf.bc')": {'create_fixup_graph': ([], 9214), 'adjust_cfg_counts': ([], 9214), 'ei_next': ([], 9214), 'sum_edge_counts': ([5], 9212), 'print_basic_block': ([], 9214), 'dump_fixup_edge': ([], 9214), 'VEC_fixup_edge_p_base_space': ([], 9214), 'VEC_fixup_edge_p_heap_reserve': ([], 9214), 'VEC_fixup_edge_p_base_quick_push': ([], 9214), 'VEC_fixup_edge_p_heap_safe_push': ([], 9214), 'add_edge': ([0], 9209), 'add_fixup_edge': ([], 9214), 'VEC_fixup_edge_p_base_iterate': ([], 9214), 'find_fixup_edge': ([], 9214), 'dump_fixup_graph': ([], 9214), 'add_rfixup_edge': ([], 9214), 'compute_residual_flow': ([], 9214), 'init_augmenting_path': ([], 9214), 'init_queue': ([], 9214), 'enqueue': ([6], 9213), 'is_empty': ([], 9214), 'dequeue': ([], 9214), 'find_augmenting_path': ([], 9214), 'find_max_flow': ([], 9214), 'cancel_negative_cycle': ([], 9214), 'find_minimum_cost_flow': ([], 9214), 'delete_fixup_graph': ([], 9214), 'mcf_smooth_cfg': ([578], 9206)}, "PosixPath('602/sparseset.bc')": {'sparseset_clear': ([], 1709), 'sparseset_alloc': ([], 1709), 'sparseset_bit_p': ([], 1709), 'sparseset_insert_bit': ([], 1709), 'sparseset_swap': ([], 1709), 'sparseset_clear_bit': ([], 1709), 'sparseset_copy': ([], 1709), 'sparseset_iter_init': ([], 1709), 'sparseset_iter_p': ([], 1709), 'sparseset_iter_elm': ([], 1709), 'sparseset_iter_next': ([], 1709), 'sparseset_set_bit': ([], 1709), 'sparseset_and': ([], 1709), 'sparseset_and_compl': ([], 1709), 'sparseset_ior': ([], 1709), 'sparseset_equal_p': ([], 1709)}, "PosixPath('602/cpp_init.bc')": {'cpp_set_lang': ([], 3697), 'cpp_create_reader': ([], 3697), 'cpp_destroy': ([], 3697), 'cpp_named_operator2name': ([], 3697), 'cpp_init_special_builtins': ([], 3697), 'cpp_init_builtins': ([], 3697), 'post_options': ([], 3697), 'mark_named_operators': ([], 3697), 'cpp_post_options': ([], 3697), 'read_original_directory': ([0], 3689), 'read_original_filename': ([], 3697), 'cpp_read_main_file': ([], 3697), 'cpp_finish': ([], 3697)}, "PosixPath('602/tree-sra.bc')": {'sra_modify_assign': ([6, 49, 80], 29909), 'make_fancy_name_1': ([], 29917), 'make_fancy_decl_name': ([], 29917), 'load_assign_lhs_subreplacements': ([], 29917), 'gsi_start': ([], 29917), 'first_imm_use_on_stmt': ([], 29917), 'next_imm_use_on_stmt': ([], 29917), 'build_ref_for_offset_1': ([], 29917), 'build_ref_for_offset': ([], 29917), 'ipa_sra_preliminary_function_checks': ([], 29917), 'has_zero_uses': ([], 29917), 'is_unused_scalar_param': ([], 29917), 'end_imm_use_stmt_p': ([], 29917), 'clear_and_done_ssa_iter': ([], 29917), 'op_iter_next_use': ([], 29917), 'op_iter_init_phiuse': ([], 29917), 'delink_imm_use': ([], 29917), 'link_imm_use_to_list': ([], 29917), 'move_use_after_head': ([], 29917), 'gimple_def_ops': ([], 29917), 'gimple_vdef': ([], 29917), 'gimple_use_ops': ([], 29917), 'gimple_vuse': ([], 29917), 'op_iter_init': ([], 29917), 'op_iter_init_use': ([], 29917), 'gimple_vuse_op': ([], 29917), 'link_use_stmts_after': ([], 29917), 'first_imm_use_stmt': ([], 29917), 'gimple_ops': ([], 29917), 'next_imm_use_stmt': ([], 29917), 'ptr_parm_has_direct_uses': ([], 29917), 'type_internals_preclude_sra_p': ([0], 29910), 'find_param_candidates': ([], 29917), 'callsite_has_enough_arguments_p': ([], 29917), 'all_callers_have_enough_arguments_p': ([], 29917), 'gsi_stmt': ([], 29917), 'gsi_next': ([], 29917), 'bb_seq': ([], 29917), 'gsi_start_bb': ([], 29917), 'gimple_call_fndecl': ([], 29917), 'get_ssa_base_param': ([], 29917), 'disqualify_base_of_expr': ([], 29917), 'gimple_asm_output_op': ([], 29917), 'scan_function': ([], 29917), 'VEC_access_p_base_quick_push': ([], 29917), 'unmodified_by_ref_scalar_representative': ([], 29917), 'access_precludes_ipa_sra_p': ([], 29917), 'compare_access_positions': ([], 29917), 'splice_param_accesses': ([], 29917), 'splice_all_param_accesses': ([], 29917), 'dump_dereferences_table': ([1], 29914), 'VEC_basic_block_base_quick_push': ([], 29917), 'VEC_basic_block_base_pop': ([], 29917), 'ei_next': ([], 29917), 'propagate_dereference_distances': ([], 29917), 'analyze_caller_dereference_legality': ([], 29917), 'analyze_modified_params': ([], 29917), 'decide_one_param_reduction': ([], 29917), 'turn_representatives_into_adjustments': ([], 29917), 'analyze_all_param_acesses': ([], 29917), 'create_abstract_origin': ([], 29917), 'gimple_set_op': ([], 29917), 'sra_ipa_reset_debug_stmts': ([], 29917), 'convert_callers': ([], 29917), 'get_adjustment_for_base': ([], 29917), 'get_var_ann': ([], 29917), 'get_replaced_param_substitute': ([], 29917), 'replace_removed_params_ssa_names': ([], 29917), 'sra_ipa_modify_expr': ([], 29917), 'modify_function': ([], 29917), 'contains_view_convert_expr_p': ([], 29917), 'mark_parm_dereference': ([], 29917), 'VEC_access_p_base_space': ([], 29917), 'VEC_access_p_heap_reserve': ([], 29917), 'VEC_access_p_heap_safe_push': ([], 29917), 'create_access_1': ([], 29917), 'create_access': ([], 29917), 'build_access_from_expr_1': ([8], 29912), 'add_link_to_rhs': ([], 29917), 'build_accesses_from_assign': ([], 29917), 'ipa_early_sra': ([1007], 29914), 'gimple_referenced_vars': ([], 29917), 'first_htab_element': ([], 29917), 'first_referenced_var': ([], 29917), 'end_htab_p': ([], 29917), 'end_referenced_vars_p': ([], 29917), 'next_htab_element': ([], 29917), 'next_referenced_var': ([], 29917), 'find_var_candidates': ([], 29917), 'bmp_iter_set_init': ([], 29917), 'bmp_iter_set': ([4], 29912), 'type_consists_of_records_p': ([], 29917), 'completely_scalarize_record': ([], 29917), 'bmp_iter_next': ([], 29917), 'relink_to_new_repr': ([0], 29916), 'add_access_to_work_queue': ([0], 29908), 'sort_and_splice_var_accesses': ([], 29917), 'build_access_subtree': ([], 29917), 'build_access_trees': ([], 29917), 'pop_access_from_work_queue': ([], 29917), 'child_would_conflict_in_lacc': ([], 29917), 'create_artificial_child_access': ([], 29917), 'propagate_subaccesses_across_link': ([4], 29911), 'propagate_all_subaccesses': ([], 29917), 'expr_with_var_bounded_array_refs_p': ([], 29917), 'analyze_access_subtree': ([], 29917), 'dump_access_tree_1': ([], 29917), 'analyze_all_variable_accesses': ([], 29917), 'create_access_replacement': ([], 29917), 'get_access_replacement': ([], 29917), 'generate_subtree_copies': ([], 29917), 'single_succ_p': ([], 29917), 'single_succ_edge': ([], 29917), 'initialize_parameter_reductions': ([], 29917), 'find_access_in_subtree': ([], 29917), 'get_var_base_offset_size_access': ([], 29917), 'get_access_for_expr': ([], 29917), 'init_subtree_with_zero': ([], 29917), 'sra_modify_constructor_assign': ([], 29917), 'sra_modify_expr': ([], 29917), 'ref_expr_for_all_replacements_p': ([], 29917), 'handle_unscalarized_data_in_subtree': ([], 29917), 'perform_intra_sra': ([], 29917)}, "PosixPath('602/tree-ssa-sink.bc')": {'gimple_vdef': ([], 3922), 'is_global_var': ([], 3922), 'is_hidden_global_store': ([2], 3915), 'ei_next': ([], 3922), 'bb_seq': ([], 3922), 'gsi_last_bb': ([], 3922), 'gsi_stmt': ([], 3922), 'gimple_def_ops': ([], 3922), 'gimple_use_ops': ([], 3922), 'gimple_vuse': ([], 3922), 'op_iter_init': ([], 3922), 'op_iter_next_tree': ([], 3922), 'end_readonly_imm_use_p': ([], 3922), 'first_readonly_imm_use': ([], 3922), 'next_readonly_imm_use': ([], 3922), 'gimple_ops': ([], 3922), 'gimple_op': ([], 3922), 'gimple_assign_lhs': ([], 3922), 'op_iter_next_def': ([], 3922), 'op_iter_init_def': ([], 3922), 'op_iter_next_use': ([], 3922), 'all_immediate_uses_same_place': ([], 3922), 'bmp_iter_set_init': ([], 3922), 'bmp_iter_set': ([], 3922), 'bmp_iter_next': ([], 3922), 'nearest_common_dominator_of_uses': ([], 3922), 'gsi_start_bb': ([], 3922), 'gsi_next': ([], 3922), 'gsi_after_labels': ([], 3922), 'find_bb_for_arg': ([], 3922), 'statement_sink_location': ([], 3922), 'gsi_prev': ([], 3922), 'sink_code_in_bb': ([59, 63], 3906), 'execute_sink_code': ([], 3922), 'do_sink': ([], 3922)}, "PosixPath('602/insn-peep.bc')": {}, "PosixPath('602/c-convert.bc')": {'convert': ([], 844)}, "PosixPath('602/mode-switching.bc')": {'ei_next': ([], 3328), 'new_seginfo': ([], 3328), 'remove_from_hard_reg_set': ([], 3328), 'reg_dies': ([], 3328), 'make_preds_opaque': ([8], 3327), 'add_to_hard_reg_set': ([], 3328), 'reg_becomes_live': ([0], 3326), 'optimize_mode_switching': ([480], 3285), 'rest_of_handle_mode_switching': ([], 3328)}, "PosixPath('602/lrealpath.bc')": {}, "PosixPath('602/dojump.bc')": {'clear_pending_stack_adjust': ([], 10332), 'split_comparison': ([], 10332), 'do_jump_by_parts_equality_rtx': ([], 10332), 'do_jump_by_parts_zero_rtx': ([], 10332), 'do_compare_rtx_and_jump': ([45], 10295), 'do_jump_by_parts_equality': ([], 10332), 'do_compare_and_jump': ([], 10332), 'do_jump_by_parts_greater': ([0, 1], 10330), 'prefer_and_bit_test': ([], 10332), 'do_jump': ([10, 43], 10324), 'do_jump_1': ([], 10332)}, "PosixPath('602/lambda-mat.bc')": {'lambda_matrix_inverse': ([], 5128), 'lambda_matrix_copy': ([], 5128), 'lambda_matrix_id': ([], 5128), 'lambda_matrix_id_p': ([], 5128), 'lambda_matrix_transpose': ([], 5128), 'lambda_matrix_add': ([], 5128), 'lambda_matrix_add_mc': ([], 5128), 'lambda_matrix_mult': ([0], 5104), 'lambda_matrix_delete_rows': ([], 5128), 'lambda_matrix_row_exchange': ([], 5128), 'lambda_matrix_row_add': ([], 5128), 'lambda_matrix_row_mc': ([], 5128), 'lambda_matrix_col_exchange': ([], 5128), 'lambda_matrix_col_add': ([], 5128), 'lambda_matrix_col_negate': ([], 5128), 'lambda_matrix_col_mc': ([], 5128), 'lambda_vector_min_nz': ([], 5128), 'lambda_matrix_inverse_hard': ([], 5128), 'lambda_matrix_hermite': ([], 5128), 'lambda_matrix_right_hermite': ([], 5128), 'lambda_matrix_left_hermite': ([], 5128), 'lambda_matrix_get_column': ([], 5128), 'lambda_matrix_project_to_null': ([], 5128), 'lambda_matrix_vector_mult': ([], 5128), 'print_lambda_matrix': ([], 5128)}, "PosixPath('602/insn-opinit.bc')": {}, "PosixPath('602/fold-const.bc')": {'div_and_round_double': ([4], 152215), 'make_range': ([104], 152227), 'fold_binary_loc': ([0, 15, 24, 227, 308, 754, 918, 919, 920, 1078, 1262], 152105), 'fold_truthop': ([2, 412], 152135), 'fold_convert_const_int_from_fixed': ([], 152231), 'fit_double_type': ([], 152231), 'force_fit_type_double': ([], 152231), 'neg_double': ([0], 152164), 'encode': ([], 152231), 'decode': ([], 152231), 'mul_double_with_sign': ([16], 152202), 'rshift_double': ([], 152231), 'lshift_double': ([1], 152228), 'lrotate_double': ([], 152231), 'rrotate_double': ([], 152231), 'div_if_zero_remainder': ([], 152231), 'fold_undefer_overflow_warnings': ([], 152231), 'may_negate_without_overflow_p': ([], 152231), 'int_const_binop': ([], 152231), 'int_binop_types_match_p': ([2], 152226), 'fold_abs_const': ([], 152231), 'fold_convert_const_int_from_int': ([], 152231), 'fold_convert_const_int_from_real': ([], 152231), 'fold_convert_const_real_from_real': ([], 152231), 'fold_convert_const_real_from_fixed': ([], 152231), 'fold_convert_const_fixed_from_fixed': ([], 152231), 'fold_convert_const_fixed_from_int': ([], 152231), 'fold_convert_const_fixed_from_real': ([], 152231), 'fold_convert_const': ([39], 152230), 'init_const_call_expr_arg_iterator': ([], 152231), 'next_const_call_expr_arg': ([], 152231), 'first_const_call_expr_arg': ([], 152231), 'operand_equal_p': ([3, 5, 8, 10, 55], 152195), 'fold_ignored_result': ([0], 152217), 'fold_negate_const': ([], 152231), 'negate_expr_p': ([0, 495], 152217), 'fold_truth_not_expr': ([], 152231), 'tree_swap_operands_p': ([0, 1], 152227), 'sign_bit_p': ([4], 152230), 'native_encode_int': ([], 152231), 'native_encode_real': ([], 152231), 'native_encode_string': ([], 152231), 'native_encode_expr': ([], 152231), 'native_interpret_int': ([], 152231), 'native_interpret_real': ([], 152231), 'native_interpret_expr': ([], 152231), 'tree_simple_nonnegative_warnv_p': ([], 152231), 'tree_expr_nonnegative_warnv_p': ([], 152231), 'tree_invalid_nonnegative_warnv_p': ([], 152231), 'tree_call_nonnegative_warnv_p': ([], 152231), 'tree_single_nonnegative_warnv_p': ([], 152231), 'tree_unary_nonnegative_warnv_p': ([], 152231), 'tree_binary_nonnegative_warnv_p': ([4], 152228), 'tree_expr_nonnegative_p': ([], 152231), 'fold_not_const': ([], 152231), 'fold_real_zero_addition_p': ([], 152231), 'get_pointer_modulus_and_residue': ([], 152231), 'tree_operand_length': ([], 152231), 'simple_operand_p': ([], 152231), 'pointer_may_wrap_p': ([], 152231), 'twoval_comparison_p': ([], 152231), 'tree_expr_nonzero_warnv_p': ([], 152231), 'tree_single_nonzero_warnv_p': ([], 152231), 'tree_binary_nonzero_warnv_p': ([], 152231), 'tree_expr_nonzero_p': ([], 152231), 'maybe_canonicalize_comparison_1': ([], 152231), 'merge_ranges': ([], 152231), 'range_predecessor': ([], 152231), 'range_successor': ([], 152231), 'fold_indirect_ref_1': ([0], 152227), 'fold_read_from_constant_string': ([], 152231), 'size_binop_loc': ([], 152231), 'fold_single_bit_test_into_sign_test': ([], 152231), 'fold_comparison': ([31, 129, 236], 151968), 'build_range_check': ([], 152231), 'range_binop': ([], 152231), 'eval_subst': ([], 152231), 'optimize_minmax_comparison': ([], 152231), 'make_bit_field_ref': ([], 152231), 'unextend': ([], 152231), 'decode_field_reference': ([], 152231), 'combine_comparisons': ([], 152231), 'fold_to_nonsharp_ineq_using_bound': ([], 152231), 'fold_minmax': ([], 152231), 'omit_two_operands_loc': ([], 152231), 'distribute_bit_expr': ([], 152231), 'fold_mult_zconjz': ([], 152231), 'extract_muldiv': ([53, 56], 152196), 'multiple_of_p': ([], 152231), 'ptr_difference_const': ([], 152231), 'split_address_to_core_and_offset': ([], 152231), 'associate_trees': ([], 152231), 'split_tree': ([11], 152223), 'distribute_real_division': ([], 152231), 'fold_plusminus_mult_expr': ([], 152231), 'fold_binary_op_with_conditional_arg': ([], 152231), 'fold_convert_loc': ([4, 5], 152215), 'fold_unary_loc': ([80, 129, 224], 152144), 'fold_strip_sign_ops': ([], 152231), 'omit_one_operand_loc': ([], 152231), 'build_fold_addr_expr_with_type_loc': ([0], 152223), 'fold_ternary_loc': ([172], 152226), 'fold_cond_expr_with_comparison': ([96, 97], 152225), 'negate_expr': ([], 152231), 'fold_negate_expr': ([8, 258], 152222), 'operand_equal_for_comparison_p': ([], 152231), 'fold_relational_const': ([], 152231), 'const_binop': ([16], 152222), 'fold_convertible_p': ([], 152231), 'fold_single_bit_test': ([], 152231), 'fold': ([40], 152219), 'fold_build_cleanup_point_expr': ([], 152231), 'fold_indirect_ref_loc': ([], 152231), 'round_up_loc': ([], 152231), 'round_down_loc': ([], 152231)}, "PosixPath('602/tree-vrp.bc')": {'vrp_finalize': ([], 49439), 'find_assert_locations': ([], 49439), 'first_imm_use_on_stmt': ([], 49439), 'next_imm_use_on_stmt': ([], 49439), 'nonnull_arg_p': ([], 49439), 'set_value_range': ([], 49439), 'set_value_range_to_varying': ([], 49439), 'get_value_range': ([], 49439), 'vrp_val_min': ([], 49439), 'vrp_val_is_min': ([], 49439), 'is_negative_overflow_infinity': ([], 49439), 'vrp_val_max': ([], 49439), 'vrp_val_is_max': ([], 49439), 'is_positive_overflow_infinity': ([], 49439), 'operand_less_p': ([], 49439), 'compare_values_warnv': ([], 49439), 'ssa_name_nonnegative_p': ([], 49439), 'bmp_iter_set_init': ([], 49439), 'bmp_iter_set': ([4], 49434), 'bmp_iter_next': ([], 49439), 'dump_value_range': ([], 49439), 'dump_all_value_ranges': ([], 49439), 'gsi_stmt': ([], 49439), 'dump_asserts_for': ([], 49439), 'dump_all_asserts': ([4], 49428), 'gimple_ops': ([], 49439), 'gimple_def_ops': ([], 49439), 'gimple_vdef': ([], 49439), 'gimple_use_ops': ([], 49439), 'gimple_vuse': ([], 49439), 'op_iter_init': ([], 49439), 'op_iter_next_tree': ([], 49439), 'zero_ssa_operands': ([], 49439), 'extract_code_and_val_from_cond_with_ops': ([], 49439), 'live_on_edge': ([], 49439), 'has_single_use': ([], 49439), 'register_new_assert_for': ([], 49439), 'register_edge_assert_for_2': ([49], 49409), 'register_edge_assert_for_1': ([], 49439), 'register_edge_assert_for': ([10, 11], 49426), 'ei_next': ([], 49439), 'find_conditional_asserts': ([], 49439), 'compare_case_labels': ([], 49439), 'find_switch_asserts': ([], 49439), 'bb_seq': ([], 49439), 'gsi_start_bb': ([], 49439), 'infer_value_range': ([], 49439), 'gsi_next': ([], 49439), 'clear_and_done_ssa_iter': ([], 49439), 'op_iter_next_use': ([], 49439), 'op_iter_init_phiuse': ([], 49439), 'find_assert_locations_1': ([], 49439), 'build_assert_expr_for': ([], 49439), 'process_assert_insertions_for': ([], 49439), 'process_assert_insertions': ([], 49439), 'insert_range_assertions': ([], 49439), 'gimple_call_fndecl': ([], 49439), 'stmt_interesting_for_vrp': ([], 49439), 'vrp_initialize': ([], 49439), 'check_array_ref': ([], 49439), 'search_for_addr_array': ([], 49439), 'check_array_bounds': ([0], 49430), 'check_all_array_refs': ([], 49439), 'VEC_edge_base_iterate': ([], 49439), 'gsi_last_bb': ([], 49439), 'is_overflow_infinity': ([], 49439), 'usable_range_p': ([], 49439), 'overflow_infinity_range_p': ([], 49439), 'compare_ranges': ([], 49439), 'compare_range_with_value': ([], 49439), 'get_vr_for_comparison': ([], 49439), 'compare_names': ([], 49439), 'compare_name_with_value': ([0], 49435), 'vrp_evaluate_conditional_warnv_with_ops': ([], 49439), 'vrp_evaluate_conditional': ([], 49439), 'identify_jump_threads': ([], 49439), 'gimple_set_op': ([], 49439), 'fold_predicate_in': ([], 49439), 'simplify_truth_ops_using_ranges': ([], 49439), 'simplify_div_or_mod_using_ranges': ([], 49439), 'simplify_abs_using_ranges': ([], 49439), 'test_for_singularity': ([], 49439), 'simplify_cond_using_ranges': ([], 49439), 'find_case_label_range': ([], 49439), 'VEC_edge_base_space': ([], 49439), 'VEC_edge_heap_reserve': ([], 49439), 'VEC_edge_base_quick_push': ([], 49439), 'VEC_edge_heap_safe_push': ([], 49439), 'VEC_switch_update_base_space': ([], 49439), 'VEC_switch_update_heap_reserve': ([], 49439), 'VEC_switch_update_base_quick_push': ([], 49439), 'VEC_switch_update_heap_safe_push': ([], 49439), 'simplify_switch_using_ranges': ([33], 49437), 'simplify_stmt_using_ranges': ([], 49439), 'vrp_fold_stmt': ([], 49439), 'end_imm_use_stmt_p': ([], 49439), 'delink_imm_use': ([], 49439), 'link_imm_use_to_list': ([], 49439), 'move_use_after_head': ([], 49439), 'gimple_vuse_op': ([], 49439), 'link_use_stmts_after': ([], 49439), 'first_imm_use_stmt': ([], 49439), 'link_imm_use': ([], 49439), 'set_ssa_use_from_ptr': ([], 49439), 'next_imm_use_stmt': ([], 49439), 'remove_range_assertions': ([], 49439), 'copy_value_range': ([], 49439), 'value_ranges_intersect_p': ([], 49439), 'vrp_meet': ([], 49439), 'avoid_overflow_infinity': ([], 49439), 'valid_value_p': ([], 49439), 'get_loop': ([], 49439), 'get_chrec_loop': ([], 49439), 'adjust_range_with_scev': ([], 49439), 'loop_outer': ([], 49439), 'vrp_var_may_overflow': ([], 49439), 'supports_overflow_infinity': ([], 49439), 'negative_overflow_infinity': ([], 49439), 'positive_overflow_infinity': ([], 49439), 'update_value_range': ([], 49439), 'vrp_visit_phi_node': ([4], 49436), 'gimple_call_nonnegative_warnv_p': ([], 49439), 'gimple_stmt_nonnegative_warnv_p': ([], 49439), 'range_is_nonnull': ([], 49439), 'vrp_stmt_computes_nonzero': ([], 49439), 'extract_range_basic': ([], 49439), 'add_equivalence': ([], 49439), 'set_and_canonicalize_value_range': ([], 49439), 'extract_range_from_assert': ([], 49439), 'op_with_constant_singleton_value_range': ([], 49439), 'set_value_range_to_undefined': ([], 49439), 'range_is_null': ([], 49439), 'vrp_int_const_binop': ([], 49439), 'abs_extent_range': ([], 49439), 'extract_range_from_binary_expr': ([], 49439), 'extract_range_from_unary_expr': ([0], 49438), 'extract_range_from_cond_expr': ([], 49439), 'extract_range_from_assignment': ([60], 49438), 'vrp_visit_assignment_or_call': ([], 49439), 'vrp_visit_cond_stmt': ([], 49439), 'vrp_visit_switch_stmt': ([], 49439), 'vrp_visit_stmt': ([27], 49434), 'execute_vrp': ([], 49439)}, "PosixPath('602/loop-doloop.bc')": {}, "PosixPath('602/tree-ssa-propagate.bc')": {'valid_gimple_rhs_p': ([], 8446), 'valid_gimple_call_p': ([], 8446), 'gimple_def_ops': ([], 8446), 'gimple_vdef': ([], 8446), 'gimple_use_ops': ([], 8446), 'gimple_vuse': ([], 8446), 'op_iter_init': ([], 8446), 'op_iter_next_tree': ([], 8446), 'move_ssa_defining_stmt_for_defs': ([], 8446), 'gsi_stmt': ([], 8446), 'gimple_ops': ([], 8446), 'VEC_tree_base_space': ([], 8446), 'VEC_tree_heap_reserve_exact': ([], 8446), 'VEC_tree_heap_safe_grow': ([], 8446), 'gimple_set_op': ([], 8446), 'update_call_from_tree': ([], 8446), 'VEC_basic_block_base_space': ([], 8446), 'VEC_basic_block_heap_reserve_exact': ([], 8446), 'VEC_basic_block_heap_safe_grow': ([], 8446), 'bb_seq': ([], 8446), 'gsi_start_bb': ([], 8446), 'gsi_next': ([], 8446), 'ei_next': ([], 8446), 'cfg_blocks_add': ([], 8446), 'add_control_edge': ([37], 8441), 'ssa_prop_init': ([], 8446), 'cfg_blocks_get': ([], 8446), 'end_readonly_imm_use_p': ([], 8446), 'first_readonly_imm_use': ([], 8446), 'VEC_gimple_base_space': ([], 8446), 'VEC_gimple_gc_reserve': ([], 8446), 'VEC_gimple_base_quick_push': ([], 8446), 'VEC_gimple_gc_safe_push': ([2], 8444), 'next_readonly_imm_use': ([], 8446), 'add_ssa_edge': ([], 8446), 'simulate_stmt': ([29], 8444), 'simulate_block': ([], 8446), 'VEC_gimple_base_pop': ([], 8446), 'process_ssa_edge_worklist': ([], 8446), 'ssa_prop_fini': ([], 8446), 'ssa_propagate': ([], 8446), 'stmt_makes_single_store': ([], 8446), 'replace_phi_args_in': ([], 8446), 'gsi_last_bb': ([], 8446), 'gsi_prev': ([], 8446), 'has_zero_uses': ([], 8446), 'op_iter_next_use': ([], 8446), 'replace_uses_in': ([], 8446), 'substitute_and_fold': ([5, 12, 14, 15, 17, 282, 327], 8269)}, "PosixPath('602/cfghooks.bc')": {'ei_next': ([], 10570), 'verify_flow_info': ([17, 70, 266], 10561), 'dump_bb': ([22], 10542), 'redirect_edge_and_branch': ([3], 10565), 'can_remove_branch_p': ([], 10570), 'remove_branch': ([], 10570), 'single_pred_p': ([], 10570), 'single_pred_edge': ([], 10570), 'single_succ_p': ([], 10570), 'single_succ_edge': ([], 10570), 'redirect_edge_and_branch_force': ([], 10570), 'split_block': ([3], 10565), 'move_block_after': ([3], 10568), 'delete_basic_block': ([3], 10565), 'split_edge': ([67], 10568), 'create_basic_block': ([3], 10565), 'can_merge_blocks_p': ([3], 10568), 'predict_edge': ([3], 10568), 'predicted_by_p': ([], 10570), 'merge_blocks': ([23, 28], 10563), 'VEC_basic_block_base_quick_push': ([], 10570), 'loop_outer': ([], 10570), 'make_forwarder_block': ([0, 12, 81], 10530), 'tidy_fallthru_edges': ([23], 10567), 'can_duplicate_block_p': ([], 10570), 'duplicate_block': ([4, 51], 10563), 'block_ends_with_call_p': ([3], 10565), 'block_ends_with_condjump_p': ([3], 10565), 'flow_call_edges_add': ([3], 10565), 'cfg_hook_duplicate_loop_to_header_edge': ([1], 10568), 'extract_cond_bb_edges': ([1], 10568), 'lv_add_condition_to_bb': ([1], 10568)}, "PosixPath('602/decimal64.bc')": {'__dpd64FromNumber': ([1, 2, 53], 12036), 'decDigitsToDPD': ([], 12043), 'decDigitsFromDPD': ([0], 12039), '__dpd64ToNumber': ([5], 12031), '__dpd64ToString': ([], 12043), 'decimal64FromNumber': ([], 12043), 'decimal64ToNumber': ([], 12043)}, "PosixPath('602/pretty-print.bc')": {'pp_append_r': ([15], 9445), 'pp_construct': ([], 9452), 'pp_base_formatted_text': ([10], 9451), 'pp_base_clear_output_area': ([], 9452), 'pp_write_text_to_stream': ([], 9452), 'pp_base_remaining_character_count_for_line': ([], 9452), 'pp_base_newline': ([10], 9451), 'pp_base_character': ([0], 9451), 'pp_set_verbatim_wrapping_': ([], 9452), 'pp_base_emit_prefix': ([], 9452), 'pp_base_append_text': ([], 9452), 'pp_wrap_text': ([], 9452), 'pp_maybe_wrap_text': ([], 9452), 'pp_base_string': ([], 9452), 'pp_clear_state': ([], 9452), 'pp_base_format': ([3, 7, 78, 210, 386, 531], 9250), 'pp_base_output_formatted_text': ([], 9452), 'pp_base_format_verbatim': ([], 9452), 'pp_base_flush': ([], 9452), 'pp_set_real_maximum_length': ([], 9452), 'pp_base_set_prefix': ([], 9452), 'pp_base_last_position_in_text': ([], 9452), 'pp_printf': ([], 9452), 'pp_verbatim': ([], 9452), 'decode_utf8_char': ([], 9452), 'identifier_to_locale': ([], 9452), 'pp_base_tree_identifier': ([], 9452)}, "PosixPath('602/insn-modes.bc')": {}, "PosixPath('602/cppdefault.bc')": {}, "PosixPath('602/tree-ssa-dse.bc')": {'gsi_last': ([], 3168), 'VEC_void_p_base_last': ([], 3168), 'bmp_iter_set_init': ([], 3168), 'bmp_iter_set': ([], 3168), 'bmp_iter_next': ([], 3168), 'dse_leave_block': ([], 3168), 'bb_seq': ([], 3168), 'gsi_stmt': ([], 3168), 'gimple_vdef': ([], 3168), 'gimple_ops': ([], 3168), 'gimple_op': ([], 3168), 'gimple_call_fndecl': ([], 3168), 'record_voperand_set': ([], 3168), 'end_imm_use_stmt_p': ([], 3168), 'clear_and_done_ssa_iter': ([], 3168), 'op_iter_next_use': ([], 3168), 'op_iter_init_phiuse': ([], 3168), 'delink_imm_use': ([], 3168), 'link_imm_use_to_list': ([], 3168), 'move_use_after_head': ([], 3168), 'gimple_def_ops': ([], 3168), 'gimple_use_ops': ([], 3168), 'gimple_vuse': ([], 3168), 'op_iter_init': ([], 3168), 'op_iter_init_use': ([], 3168), 'gimple_vuse_op': ([], 3168), 'link_use_stmts_after': ([], 3168), 'first_imm_use_stmt': ([], 3168), 'next_imm_use_stmt': ([], 3168), 'dse_possible_dead_store_p': ([], 3168), 'get_stmt_uid': ([], 3168), 'dse_optimize_stmt': ([], 3168), 'gsi_prev': ([], 3168), 'gsi_next': ([], 3168), 'dse_enter_block': ([], 3168), 'dse_initialize_block_local_data': ([], 3168), 'tree_ssa_dse': ([], 3168)}, "PosixPath('602/lto-section-out.bc')": {'lto_write_stream': ([], 2996), 'append_block': ([], 2996), 'lto_output_1_stream': ([], 2996), 'lto_output_data_stream': ([3], 2992), 'VEC_tree_base_space': ([], 2996), 'VEC_tree_heap_reserve': ([], 2996), 'VEC_tree_base_quick_push': ([], 2996), 'VEC_tree_heap_safe_push': ([], 2996), 'lto_output_decl_index': ([], 2996), 'lto_output_field_decl_index': ([], 2996), 'lto_output_fn_decl_index': ([], 2996), 'lto_output_namespace_decl_index': ([], 2996), 'lto_output_var_decl_index': ([], 2996), 'lto_output_type_decl_index': ([], 2996), 'lto_output_type_ref_index': ([], 2996), 'VEC_lto_out_decl_state_ptr_base_last': ([], 2996), 'lto_get_out_decl_state': ([], 2996), 'lto_create_simple_output_block': ([], 2996), 'lto_destroy_simple_output_block': ([], 2996), 'lto_init_tree_ref_encoder': ([], 2996), 'lto_new_out_decl_state': ([], 2996), 'lto_destroy_tree_ref_encoder': ([], 2996), 'lto_delete_out_decl_state': ([], 2996), 'VEC_lto_out_decl_state_ptr_base_space': ([], 2996), 'VEC_lto_out_decl_state_ptr_heap_reserve': ([], 2996), 'VEC_lto_out_decl_state_ptr_base_quick_push': ([], 2996), 'VEC_lto_out_decl_state_ptr_heap_safe_push': ([2], 2994), 'VEC_lto_out_decl_state_ptr_base_pop': ([], 2996), 'lto_pop_out_decl_state': ([], 2996), 'lto_record_function_out_decl_state': ([], 2996)}, "PosixPath('602/graphite-ppl.bc')": {}, "PosixPath('602/fopen_unlocked.bc')": {}, "PosixPath('602/tree-tailcall.bc')": {'single_succ_p': ([], 8177), 'single_succ_edge': ([], 8177), 'gimple_referenced_vars': ([], 8177), 'first_htab_element': ([], 8177), 'first_referenced_var': ([], 8177), 'end_htab_p': ([], 8177), 'end_referenced_vars_p': ([], 8177), 'is_global_var': ([], 8177), 'may_be_aliased': ([], 8177), 'is_call_clobbered': ([], 8177), 'is_call_used': ([], 8177), 'next_htab_element': ([], 8177), 'next_referenced_var': ([], 8177), 'suitable_for_tail_opt_p': ([], 8177), 'suitable_for_tail_call_opt_p': ([], 8177), 'bb_seq': ([], 8177), 'gsi_last_bb': ([], 8177), 'gsi_stmt': ([], 8177), 'gimple_ops': ([], 8177), 'gimple_vuse': ([], 8177), 'gimple_references_memory_p': ([], 8177), 'gsi_prev': ([], 8177), 'ei_next': ([], 8177), 'gimple_call_fndecl': ([], 8177), 'gsi_next': ([], 8177), 'propagate_through_phis': ([], 8177), 'gsi_start_bb': ([], 8177), 'independent_of_stmt_p': ([14], 8175), 'process_assignment': ([], 8177), 'find_tail_calls': ([157], 8175), 'single_pred_p': ([], 8177), 'phi_nodes': ([], 8177), 'var_ann': ([], 8177), 'arg_needs_copy_p': ([], 8177), 'single_pred_edge': ([], 8177), 'decrease_profile': ([], 8177), 'gimple_set_op': ([], 8177), 'add_successor_phi_arg': ([], 8177), 'eliminate_tail_call': ([], 8177), 'optimize_tail_call': ([], 8177), 'gimple_seq_last_stmt': ([], 8177), 'adjust_return_value': ([], 8177), 'add_virtual_phis': ([], 8177), 'tree_optimize_tail_calls_1': ([163], 8173)}, "PosixPath('602/tree-vect-loop.bc')": {'vect_analyze_loop_form': ([], 37407), 'new_loop_vec_info': ([], 37407), 'first_imm_use_on_stmt': ([], 37407), 'next_imm_use_on_stmt': ([], 37407), 'gsi_stmt': ([], 37407), 'gsi_next': ([], 37407), 'bb_seq': ([], 37407), 'gsi_start_bb': ([], 37407), 'vinfo_for_stmt': ([], 37407), 'VEC_slp_instance_base_iterate': ([], 37407), 'destroy_loop_vec_info': ([24], 37403), 'phi_nodes': ([], 37407), 'single_pred_p': ([], 37407), 'VEC_vec_void_p_base_space': ([], 37407), 'VEC_vec_void_p_heap_reserve': ([], 37407), 'VEC_vec_void_p_base_quick_push': ([], 37407), 'VEC_vec_void_p_heap_safe_push': ([], 37407), 'set_vinfo_for_stmt': ([], 37407), 'loop_outer': ([], 37407), 'VEC_gimple_base_space': ([], 37407), 'VEC_gimple_heap_reserve': ([], 37407), 'VEC_gimple_base_quick_push': ([], 37407), 'VEC_gimple_heap_safe_push': ([], 37407), 'VEC_gimple_base_pop': ([], 37407), 'end_readonly_imm_use_p': ([], 37407), 'first_readonly_imm_use': ([], 37407), 'next_readonly_imm_use': ([], 37407), 'gimple_ops': ([], 37407), 'is_loop_header_bb_p': ([], 37407), 'vect_is_simple_reduction': ([], 37407), 'vect_analyze_scalar_cycles_1': ([], 37407), 'vect_determine_vectorization_factor': ([], 37407), 'vect_model_induction_cost': ([], 37407), 'gsi_after_labels': ([], 37407), 'gimple_set_op': ([], 37407), 'get_initial_def_for_induction': ([], 37407), 'vectorizable_induction': ([], 37407), 'vect_estimate_min_profitable_iters': ([29, 38], 37391), 'vect_analyze_loop_operations': ([21], 37390), 'vect_analyze_loop': ([], 37407), 'get_initial_def_for_reduction': ([11], 37394), 'tree_operand_length': ([], 37407), 'vect_model_reduction_cost': ([], 37407), 'delink_imm_use': ([], 37407), 'link_imm_use_to_list': ([], 37407), 'link_imm_use': ([], 37407), 'set_ssa_use_from_ptr': ([], 37407), 'VEC_gimple_base_iterate': ([], 37407), 'end_imm_use_stmt_p': ([], 37407), 'clear_and_done_ssa_iter': ([], 37407), 'op_iter_next_use': ([], 37407), 'op_iter_init_phiuse': ([], 37407), 'move_use_after_head': ([], 37407), 'gimple_def_ops': ([], 37407), 'gimple_vdef': ([], 37407), 'gimple_use_ops': ([], 37407), 'gimple_vuse': ([], 37407), 'op_iter_init': ([], 37407), 'gimple_vuse_op': ([], 37407), 'link_use_stmts_after': ([], 37407), 'first_imm_use_stmt': ([], 37407), 'next_imm_use_stmt': ([], 37407), 'vect_create_epilog_for_reduction': ([], 37407), 'vectorizable_reduction': ([17, 24], 37374), 'vectorizable_live_operation': ([], 37407), 'op_iter_init_phidef': ([], 37407), 'op_iter_next_def': ([], 37407), 'op_iter_init_def': ([], 37407), 'vect_loop_kill_debug_uses': ([43], 37406), 'vect_transform_loop': ([], 37407)}, "PosixPath('602/tree-vect-patterns.bc')": {'bb_seq': ([], 5307), 'gsi_start_bb': ([], 5307), 'gsi_stmt': ([], 5307), 'vinfo_for_stmt': ([], 5307), 'gimple_ops': ([], 5307), 'VEC_vec_void_p_base_space': ([], 5307), 'VEC_vec_void_p_heap_reserve': ([], 5307), 'VEC_vec_void_p_base_quick_push': ([], 5307), 'VEC_vec_void_p_heap_safe_push': ([], 5307), 'set_vinfo_for_stmt': ([], 5307), 'vect_pattern_recog_1': ([], 5307), 'gsi_next': ([], 5307), 'gimple_call_fndecl': ([], 5307), 'gimple_set_op': ([], 5307), 'gimple_call_set_lhs': ([], 5307), 'vect_recog_pow_pattern': ([2], 5301), 'widened_name_p': ([], 5307), 'vect_recog_dot_prod_pattern': ([11], 5296), 'vect_recog_widen_sum_pattern': ([], 5307), 'vect_recog_widen_mult_pattern': ([], 5307), 'vect_pattern_recog': ([], 5307)}, "PosixPath('602/reload1.bc')": {'init_elim_table': ([], 55989), 'mark_not_eliminable': ([11], 55979), 'finish_spills': ([5, 7, 22, 24, 32, 34, 128], 55960), 'eliminate_regs_in_insn': ([7, 17], 55923), 'copy_reloads': ([], 55989), 'find_reload_regs': ([7], 55938), 'find_reg': ([], 55989), 'bitmap_initialize_stat': ([], 55989), 'new_insn_chain': ([], 55989), 'bmp_iter_set_init': ([], 55989), 'bmp_iter_set': ([4], 55984), 'add_to_hard_reg_set': ([], 55989), 'bmp_iter_next': ([], 55989), 'compute_use_by_pseudos': ([0], 55984), 'mark_home_live': ([], 55989), 'ei_next': ([], 55989), 'has_nonexceptional_receiver': ([89], 55986), 'scan_paradoxical_subregs': ([], 55989), 'function_invariant_p': ([], 55989), 'alter_reg': ([], 55989), 'maybe_fix_stack_asms': ([], 55989), 'spill_hard_reg': ([], 55989), 'set_initial_elim_offsets': ([], 55989), 'set_offsets_for_label': ([0], 55985), 'set_label_offsets': ([], 55989), 'set_initial_label_offsets': ([], 55989), 'eliminate_regs_1': ([6, 38, 50, 91], 55926), 'recog_memoized': ([], 55989), 'delete_dead_insn': ([], 55989), 'elimination_effects': ([19, 49], 55981), 'check_eliminable_occurrences': ([], 55989), 'update_eliminable_offsets': ([3], 55986), 'calculate_needs_all_insns': ([], 55989), 'verify_initial_elim_offsets': ([], 55989), 'update_eliminables': ([1, 39], 55972), 'count_pseudo': ([], 55989), 'order_regs_for_reload': ([], 55989), 'reloads_unique_chain_p': ([], 55989), 'VEC_rtx_p_base_space': ([], 55989), 'VEC_rtx_p_heap_reserve': ([], 55989), 'VEC_rtx_p_base_quick_push': ([], 55989), 'VEC_rtx_p_heap_safe_push': ([], 55989), 'substitute': ([], 55989), 'VEC_rtx_p_base_pop': ([], 55989), 'gen_reload_chain_without_interm_reg_p': ([], 55989), 'reloads_conflict': ([], 55989), 'count_spilled_pseudo': ([], 55989), 'reload_reg_class_lower': ([], 55989), 'select_reload_regs': ([0], 55938), 'delete_caller_save_insns': ([], 55989), 'mark_reload_reg_in_use': ([0, 1, 21, 55], 55933), 'choose_reload_regs_init': ([], 55989), 'reload_reg_free_for_value_p': ([40], 55933), 'free_for_value_p': ([], 55989), 'reload_reg_free_p': ([], 55989), 'set_reload_reg': ([3], 55987), 'allocate_reload_reg': ([], 55989), 'failed_reload': ([], 55989), 'clear_reload_reg_in_use': ([], 55989), 'choose_reload_regs': ([4, 16], 55960), 'merge_assigned_reloads': ([], 55989), 'delete_address_reloads_1': ([], 55989), 'delete_address_reloads': ([], 55989), 'delete_output_reload': ([], 55989), 'inc_for_reload': ([], 55989), 'conflicts_with_override': ([], 55989), 'reload_adjust_reg_for_temp': ([], 55989), 'gen_reload': ([], 55989), 'emit_input_reload_insns': ([], 55989), 'do_input_reload': ([], 55989), 'forget_old_reloads_1': ([1], 55979), 'emit_output_reload_insns': ([], 55989), 'do_output_reload': ([], 55989), 'reload_reg_reaches_end_p': ([], 55989), 'inherit_piecemeal_p': ([], 55989), 'emit_reload_insns': ([], 55989), 'forget_marked_reloads': ([], 55989), 'reload_as_needed': ([513], 55983), 'replace_pseudos_in': ([], 55989), 'fixup_abnormal_edges': ([4, 24], 55982), 'reload': ([36, 118, 2222], 55930), 'elimination_target_reg_p': ([], 55989), 'deallocate_reload_reg': ([], 55989)}, "PosixPath('602/graphite-dependences.bc')": {}, "PosixPath('602/graphite-clast-to-gimple.bc')": {}, "PosixPath('602/intl.bc')": {}, "PosixPath('602/tree-if-conv.bc')": {'number_of_loops': ([], 8039), 'VEC_int_base_quick_push': ([], 8039), 'loop_outer': ([], 8039), 'VEC_int_base_iterate': ([], 8039), 'get_loop': ([], 8039), 'fel_next': ([5], 8036), 'fel_init': ([], 8039), 'ei_next': ([], 8039), 'pred_blocks_visited_p': ([], 8039), 'get_loop_body_in_if_conv_order': ([], 8039), 'if_convertible_bb_p': ([], 8039), 'bb_seq': ([], 8039), 'gsi_start_bb': ([], 8039), 'gsi_stmt': ([], 8039), 'gimple_ops': ([], 8039), 'bb_with_exit_edge_p': ([5], 8036), 'if_convertible_gimple_assign_stmt_p': ([], 8039), 'if_convertible_stmt_p': ([], 8039), 'gsi_next': ([], 8039), 'end_readonly_imm_use_p': ([], 8039), 'first_readonly_imm_use': ([], 8039), 'next_readonly_imm_use': ([], 8039), 'if_convertible_phi_p': ([], 8039), 'if_convertible_loop_p': ([], 8039), 'gimple_set_op': ([], 8039), 'ifc_temp_var': ([], 8039), 'add_to_predicate_list': ([], 8039), 'tree_if_convert_cond_stmt': ([], 8039), 'tree_if_convert_stmt': ([], 8039), 'single_succ_p': ([], 8039), 'single_succ_edge': ([], 8039), 'single_succ': ([], 8039), 'gsi_after_labels': ([], 8039), 'find_phi_replacement_condition': ([], 8039), 'replace_phi_with_cond_gimple_assign_stmt': ([], 8039), 'set_phi_nodes': ([], 8039), 'process_phi_nodes': ([], 8039), 'gsi_last_bb': ([], 8039), 'set_bb_seq': ([], 8039), 'combine_blocks': ([], 8039), 'clean_predicate_lists': ([], 8039), 'tree_if_conversion': ([], 8039), 'main_tree_if_conversion': ([], 8039)}, "PosixPath('602/value-prof.bc')": {'gimple_mod_subtract_transform': ([5], 12922), 'gimple_divmod_fixed_value_transform': ([], 12931), 'gimple_stringops_transform': ([], 12931), 'gimple_ic_transform': ([], 12931), 'gimple_histogram_value': ([], 12931), 'set_histogram_value': ([1], 12925), 'gimple_remove_histogram_value': ([], 12931), 'gimple_histogram_value_of_type': ([], 12931), 'dump_histogram_value': ([], 12931), 'gimple_alloc_histogram_value': ([], 12931), 'gimple_duplicate_stmt_histograms': ([], 12931), 'gimple_move_stmt_histograms': ([], 12931), 'bb_seq': ([], 12931), 'gsi_start_bb': ([], 12931), 'gsi_stmt': ([], 12931), 'gsi_next': ([], 12931), 'verify_histograms': ([], 12931), 'stringop_block_profile': ([], 12931), 'gimple_ops': ([], 12931), 'VEC_histogram_value_base_space': ([], 12931), 'VEC_histogram_value_heap_reserve': ([], 12931), 'VEC_histogram_value_base_quick_push': ([], 12931), 'gimple_divmod_values_to_profile': ([], 12931), 'gimple_call_fndecl': ([], 12931), 'VEC_histogram_value_heap_safe_push': ([], 12931), 'gimple_stringops_values_to_profile': ([], 12931), 'gimple_indirect_call_to_profile': ([], 12931), 'gimple_values_to_profile': ([], 12931), 'VEC_histogram_value_base_iterate': ([], 12931), 'gimple_find_values_to_profile': ([], 12931), 'find_values_to_profile': ([], 12931), 'check_counter': ([], 12931), 'gimple_mod_subtract': ([], 12931), 'gimple_divmod_fixed_value': ([], 12931), 'gimple_mod_pow2': ([], 12931), 'gimple_mod_pow2_value_transform': ([], 12931), 'gimple_set_op': ([], 12931), 'gimple_stringop_fixed_value': ([], 12931), 'init_pid_map': ([], 12931), 'find_func_by_pid': ([], 12931), 'gimple_ic': ([], 12931), 'gimple_value_profile_transformations': ([], 12931), 'value_profile_transformations': ([], 12931)}, "PosixPath('602/stmt.bc')": {'label_rtx': ([0], 21610), 'expand_nl_goto_receiver': ([], 21623), 'expand_label': ([], 21623), 'parse_output_constraint': ([], 21623), 'parse_input_constraint': ([], 21623), 'decl_overlaps_hard_reg_set_p': ([5], 21619), 'gimple_ops': ([], 21623), 'gimple_op': ([], 21623), 'gimple_asm_output_op': ([], 21623), 'gimple_asm_clobber_op': ([], 21623), 'gimple_asm_label_op': ([], 21623), 'expand_asm_loc': ([], 21623), 'n_occurrences': ([], 21623), 'check_operand_nalternatives': ([], 21623), 'check_unique_operand_names': ([], 21623), 'resolve_operand_name_1': ([], 21623), 'resolve_asm_operand_names': ([], 21623), 'expand_asm_operands': ([35, 233, 264, 360, 398, 424], 21514), 'expand_asm_stmt': ([], 21623), 'expand_expr_stmt': ([], 21623), 'tree_operand_length': ([], 21623), 'warn_if_unused_value': ([], 21623), 'expand_value_return': ([], 21623), 'expand_return': ([20], 21598), 'expand_decl': ([], 21623), 'add_case_node': ([], 21623), 'case_bit_test_cmp': ([], 21623), 'emit_case_bit_tests': ([], 21623), 'estimate_case_costs': ([], 21623), 'balance_case_nodes': ([22], 21616), 'node_has_low_bound': ([], 21623), 'node_has_high_bound': ([], 21623), 'emit_case_nodes': ([3], 21584), 'expand_case': ([], 21623)}, "PosixPath('602/domwalk.bc')": {'VEC_void_p_base_pop': ([], 775), 'VEC_void_p_base_space': ([], 775), 'VEC_void_p_heap_reserve': ([], 775), 'VEC_void_p_base_quick_push': ([], 775), 'VEC_void_p_heap_safe_push': ([2], 773), 'walk_dominator_tree': ([], 775), 'init_walk_dominator_tree': ([], 775), 'fini_walk_dominator_tree': ([], 775)}, "PosixPath('602/alias.bc')": {'alias_set_subset_of': ([], 16607), 'alias_sets_conflict_p': ([], 16607), 'walk_mems_2': ([], 16607), 'get_deref_alias_set_1': ([], 16607), 'VEC_alias_set_entry_base_space': ([], 16607), 'VEC_alias_set_entry_gc_reserve': ([], 16607), 'VEC_alias_set_entry_base_quick_push': ([], 16607), 'VEC_alias_set_entry_gc_safe_push': ([0], 16605), 'VEC_tree_base_iterate': ([], 16607), 'insert_subset_children': ([], 16607), 'record_alias_subset': ([], 16607), 'get_alias_set': ([], 16607), 'record_component_aliases': ([], 16607), 'component_uses_parent_alias_set': ([], 16607), 'get_deref_alias_set': ([], 16607), 'get_reg_known_equiv_p': ([], 16607), 'canon_rtx': ([], 16607), 'find_base_term': ([], 16607), 'get_addr': ([], 16607), 'nonoverlapping_component_refs_p': ([], 16607), 'nonoverlapping_memrefs_p': ([25, 39, 40, 53, 54, 57], 16480), 'base_alias_check': ([11], 16559), 'addr_side_effect_eval': ([], 16607), 'rtx_equal_for_memref_p': ([], 16607), 'memrefs_conflict_p': ([1], 16581), 'mems_in_disjoint_alias_sets_p': ([], 16607), 'fixed_scalar_and_varying_struct_p': ([], 16607), 'ao_ref_from_mem': ([], 16607), 'rtx_refs_may_alias_p': ([], 16607), 'true_dependence': ([], 16607), 'canon_true_dependence': ([], 16607), 'write_dependence_p': ([], 16607), 'init_alias_target': ([], 16607), 'memory_modified_in_insn_p': ([], 16607), 'VEC_rtx_base_space': ([], 16607), 'VEC_rtx_gc_reserve_exact': ([], 16607), 'VEC_rtx_gc_safe_grow': ([], 16607), 'VEC_rtx_gc_safe_grow_cleared': ([], 16607), 'find_base_value': ([], 16607), 'record_set': ([], 16607), 'init_alias_analysis': ([], 16607), 'end_alias_analysis': ([], 16607), 'gt_pch_na_reg_known_value': ([], 16607), 'gt_ggc_ma_reg_known_value': ([], 16607)}, "PosixPath('602/tree-data-ref.bc')": {'split_constant_offset_1': ([], 42111), 'initialize_data_dependence_relation': ([], 42111), 'compute_self_dependence': ([], 42111), 'create_rdg_vertices': ([], 42111), 'build_rdg': ([4, 13], 42105), 'subscript_dependence_tester_1': ([], 42111), 'init_omega_for_ddr_1': ([80], 42108), 'omega_add_zero_geq': ([], 42111), 'omega_extract_distance_vectors': ([], 42111), 'create_rdg_edge_for_ddr': ([], 42111), 'create_rdg_edges_for_scalar': ([], 42111), 'VEC_data_reference_p_base_iterate': ([], 42111), 'dump_data_reference': ([], 42111), 'dump_data_references': ([], 42111), 'VEC_ddr_p_base_iterate': ([], 42111), 'VEC_tree_base_iterate': ([], 42111), 'dump_affine_function': ([], 42111), 'dump_conflict_function': ([0], 42109), 'dump_subscript': ([], 42111), 'VEC_loop_p_base_iterate': ([], 42111), 'dump_data_dependence_relation': ([], 42111), 'dump_data_dependence_relations': ([], 42111), 'VEC_lambda_vector_base_iterate': ([], 42111), 'print_dir_vectors': ([], 42111), 'print_dist_vectors': ([], 42111), 'dump_dist_dir_vectors': ([], 42111), 'dump_ddrs': ([], 42111), 'gimple_ops': ([], 42111), 'split_constant_offset': ([], 42111), 'canonicalize_base_object_address': ([], 42111), 'dr_analyze_innermost': ([], 42111), 'VEC_tree_base_space': ([], 42111), 'VEC_tree_heap_reserve': ([], 42111), 'VEC_tree_base_quick_push': ([], 42111), 'VEC_tree_heap_safe_push': ([2], 42109), 'dr_analyze_indices': ([], 42111), 'dr_analyze_alias': ([], 42111), 'create_data_ref': ([], 42111), 'VEC_tree_base_pop': ([], 42111), 'disjoint_objects_p': ([], 42111), 'dr_may_alias_p': ([80], 42106), 'estimated_loop_iterations_int': ([], 42111), 'VEC_subscript_p_base_iterate': ([], 42111), 'free_conflict_function': ([0], 42109), 'affine_fn_cst': ([], 42111), 'conflict_fn': ([], 42111), 'VEC_lambda_vector_base_space': ([], 42111), 'VEC_lambda_vector_heap_reserve': ([], 42111), 'VEC_lambda_vector_base_quick_push': ([], 42111), 'VEC_lambda_vector_heap_safe_push': ([2], 42109), 'save_dist_v': ([], 42111), 'save_dir_v': ([], 42111), 'object_address_invariant_in_loop_p': ([], 42111), 'VEC_subscript_p_base_space': ([], 42111), 'VEC_subscript_p_heap_reserve': ([], 42111), 'VEC_subscript_p_base_quick_push': ([], 42111), 'VEC_subscript_p_heap_safe_push': ([], 42111), 'VEC_ddr_p_base_space': ([], 42111), 'VEC_ddr_p_heap_reserve': ([], 42111), 'VEC_ddr_p_base_quick_push': ([], 42111), 'VEC_ddr_p_heap_safe_push': ([2], 42109), 'access_functions_are_affine_or_constant_p': ([], 42111), 'analyze_ziv_subscript': ([], 42111), 'siv_subscript_p': ([], 42111), 'evolution_function_is_affine_in_loop': ([], 42111), 'get_loop': ([], 42111), 'get_chrec_loop': ([], 42111), 'analyze_siv_subscript_cst_affine': ([], 42111), 'initialize_matrix_A': ([0], 42106), 'affine_fn_univar': ([], 42111), 'affine_fn_op': ([], 42111), 'compute_overlap_steps_for_affine_1_2': ([], 42111), 'analyze_subscript_affine_affine': ([], 42111), 'build_polynomial_chrec': ([], 42111), 'can_use_analyze_subscript_affine_affine': ([], 42111), 'analyze_siv_subscript': ([], 42111), 'estimated_loop_iterations_tree': ([], 42111), 'gcd_of_steps_may_divide_p': ([], 42111), 'analyze_miv_subscript': ([], 42111), 'analyze_overlapping_iterations': ([], 42111), 'free_subscripts': ([], 42111), 'finalize_ddr_dependent': ([], 42111), 'common_affine_function': ([1], 42109), 'affine_function_constant_p': ([], 42111), 'compute_subscript_distance': ([], 42111), 'same_access_functions': ([], 42111), 'constant_access_functions': ([], 42111), 'insert_innermost_unit_dist_vector': ([], 42111), 'add_distance_for_zero_overlaps': ([], 42111), 'index_in_loop_nest': ([], 42111), 'add_outer_distances': ([], 42111), 'add_multivariate_self_dist': ([], 42111), 'add_other_self_distances': ([], 42111), 'build_classic_dist_vector_1': ([], 42111), 'build_classic_dist_vector': ([], 42111), 'build_classic_dir_vector': ([], 42111), 'subscript_dependence_tester': ([], 42111), 'omega_init_eqn_zero': ([], 42111), 'omega_add_zero_eq': ([], 42111), 'init_omega_eq_with_af': ([5], 42105), 'omega_setup_subscript': ([], 42111), 'omega_copy_eqn': ([], 42111), 'omega_copy_problem': ([], 42111), 'omega_free_problem': ([], 42111), 'init_omega_for_ddr': ([], 42111), 'ddr_consistent_p': ([], 42111), 'compute_affine_dependence': ([74], 42109), 'compute_all_dependences': ([66], 42107), 'gimple_vuse': ([], 42111), 'VEC_data_ref_loc_base_space': ([], 42111), 'VEC_data_ref_loc_heap_reserve': ([], 42111), 'VEC_data_ref_loc_heap_safe_push': ([2], 42109), 'get_references_in_stmt': ([], 42111), 'dr_address_invariant_p': ([], 42111), 'VEC_data_reference_p_base_space': ([], 42111), 'VEC_data_reference_p_heap_reserve': ([], 42111), 'VEC_data_reference_p_base_quick_push': ([], 42111), 'VEC_data_reference_p_heap_safe_push': ([2], 42109), 'find_data_references_in_stmt': ([], 42111), 'graphite_find_data_references_in_stmt': ([], 42111), 'bb_seq': ([], 42111), 'gsi_start_bb': ([], 42111), 'gsi_stmt': ([], 42111), 'gsi_next': ([], 42111), 'find_data_references_in_bb': ([], 42111), 'find_data_references_in_loop': ([], 42111), 'VEC_loop_p_base_space': ([], 42111), 'VEC_loop_p_heap_reserve': ([], 42111), 'VEC_loop_p_base_quick_push': ([], 42111), 'VEC_loop_p_heap_safe_push': ([2], 42109), 'compute_data_dependences_for_loop': ([], 42111), 'number_of_loops': ([], 42111), 'VEC_int_base_quick_push': ([], 42111), 'loop_outer': ([], 42111), 'VEC_int_base_iterate': ([], 42111), 'fel_next': ([5], 42108), 'fel_init': ([], 42111), 'free_dependence_relation': ([], 42111), 'free_dependence_relations': ([], 42111), 'free_data_refs': ([], 42111), 'analyze_all_data_dependences': ([], 42111), 'tree_check_data_deps': ([], 42111), 'dump_rdg_vertex': ([], 42111), 'dump_rdg_component': ([], 42111), 'dump_rdg': ([], 42111), 'rdg_vertex_for_stmt': ([], 42111), 'VEC_gimple_base_iterate': ([], 42111), 'known_dependences_p': ([], 42111), 'VEC_gimple_base_space': ([], 42111), 'VEC_gimple_heap_reserve': ([], 42111), 'VEC_gimple_base_quick_push': ([], 42111), 'VEC_gimple_heap_safe_push': ([2], 42109), 'stmts_from_loop': ([], 42111), 'ddr_dependence_level': ([], 42111), 'clear_and_done_ssa_iter': ([], 42111), 'op_iter_init_phidef': ([], 42111), 'gimple_def_ops': ([], 42111), 'gimple_vdef': ([], 42111), 'op_iter_init': ([], 42111), 'op_iter_next_def': ([], 42111), 'op_iter_init_def': ([], 42111), 'end_readonly_imm_use_p': ([], 42111), 'first_readonly_imm_use': ([], 42111), 'next_readonly_imm_use': ([], 42111), 'create_rdg_edges': ([94], 42105), 'free_rdg': ([], 42111), 'stores_from_loop': ([], 42111), 'rdg_defs_used_in_other_loops_p': ([], 42111), 'ref_base_address': ([], 42111), 'have_similar_memory_accesses': ([], 42111), 'VEC_gimple_base_ordered_remove': ([], 42111), 'ref_base_address_1': ([], 42111), 'remove_similar_memory_refs': ([], 42111), 'access_matrix_get_index_for_parameter': ([], 42111)}, "PosixPath('602/emit-rtl.bc')": {'set_mem_attributes_minus_bitpos': ([8, 20], 33419), 'set_mem_attrs_for_spill': ([10], 33409), 'init_virtual_regs': ([], 33425), 'gen_rtx_CONST_INT': ([], 33425), 'lookup_const_double': ([], 33425), 'const_double_from_real_value': ([], 33425), 'lookup_const_fixed': ([], 33425), 'const_fixed_from_fixed_value': ([], 33425), 'immed_double_const': ([], 33425), 'gen_rtx_REG': ([], 33425), 'get_mem_attrs': ([12], 33423), 'set_mem_alias_set': ([6], 33407), 'validate_subreg': ([], 33425), 'gen_rtvec': ([], 33425), 'gen_reg_rtx': ([], 33425), 'get_reg_attrs': ([2], 33422), 'update_reg_offset': ([], 33425), 'mark_reg_pointer': ([], 33425), 'set_reg_attrs_from_value': ([2], 33418), 'set_reg_attrs_for_parm': ([], 33425), 'subreg_lowpart_p': ([], 33425), 'set_reg_attrs_for_decl_rtl': ([1], 33422), 'mark_user_reg': ([0], 33417), 'maybe_set_first_label_num': ([], 33425), 'gen_lowpart_common': ([3], 33413), 'gen_highpart': ([], 33425), 'change_address_1': ([], 33425), 'adjust_address_1': ([12], 33386), 'operand_subword': ([], 33425), 'get_mem_align_offset': ([], 33425), 'set_mem_addr_space': ([9], 33384), 'set_mem_align': ([], 33425), 'set_mem_expr': ([6], 33411), 'set_mem_offset': ([6], 33411), 'set_mem_size': ([], 33425), 'change_address': ([], 33425), 'offset_address': ([10], 33420), 'widen_memory_access': ([], 33425), 'get_spill_slot_decl': ([], 33425), 'set_new_first_and_last_insn': ([], 33425), 'reset_used_flags': ([], 33425), 'set_used_flags': ([], 33425), 'set_used_decls': ([], 33425), 'copy_rtx_if_shared_1': ([0, 8], 33405), 'copy_rtx_if_shared': ([], 33425), 'unshare_all_rtl_in_chain': ([], 33425), 'unshare_all_rtl_again': ([], 33425), 'verify_rtx_sharing': ([0], 33418), 'verify_rtl_sharing': ([], 33425), 'make_safe_from': ([], 33425), 'get_last_insn_anywhere': ([], 33425), 'next_insn': ([], 33425), 'get_first_nonnote_insn': ([], 33425), 'previous_insn': ([], 33425), 'get_last_nonnote_insn': ([], 33425), 'next_nonnote_insn_bb': ([], 33425), 'prev_nonnote_insn_bb': ([], 33425), 'last_call_insn': ([], 33425), 'active_insn_p': ([], 33425), 'skip_consecutive_labels': ([], 33425), 'mark_label_nuses': ([], 33425), 'emit_insn_after_1': ([5], 33420), 'make_insn_raw': ([], 33425), 'add_insn_after': ([], 33425), 'emit_insn_after_setloc': ([], 33425), 'try_split': ([], 33425), 'make_debug_insn_raw': ([], 33425), 'make_jump_insn_raw': ([], 33425), 'add_insn': ([], 33425), 'add_insn_before': ([0], 33423), 'set_insn_deleted': ([], 33425), 'remove_insn': ([], 33425), 'add_function_usage_to': ([], 33425), 'reorder_insns_nobb': ([2], 33421), 'reorder_insns': ([], 33425), 'make_call_insn_raw': ([], 33425), 'emit_note_before': ([], 33425), 'emit_note_after': ([], 33425), 'emit_insn_after': ([], 33425), 'emit_jump_insn_after_setloc': ([], 33425), 'emit_jump_insn_after': ([], 33425), 'emit_call_insn_after_setloc': ([], 33425), 'emit_call_insn_after': ([], 33425), 'emit_debug_insn_after_setloc': ([], 33425), 'emit_debug_insn_after': ([], 33425), 'emit_insn_before_setloc': ([], 33425), 'emit_insn_before': ([], 33425), 'emit_jump_insn_before_setloc': ([], 33425), 'emit_jump_insn_before': ([], 33425), 'emit_call_insn_before_setloc': ([], 33425), 'emit_call_insn_before': ([], 33425), 'emit_debug_insn_before_setloc': ([], 33425), 'emit_debug_insn_before': ([], 33425), 'emit_note_copy': ([], 33425), 'emit_note': ([], 33425), 'emit_clobber': ([], 33425), 'start_sequence': ([], 33425), 'end_sequence': ([], 33425), 'emit_use': ([], 33425), 'classify_insn': ([], 33425), 'emit': ([], 33425), 'push_topmost_sequence': ([], 33425), 'pop_topmost_sequence': ([], 33425), 'copy_insn_1': ([], 33425), 'init_emit': ([], 33425), 'gen_rtx_CONST_VECTOR': ([], 33425), 'init_emit_regs': ([], 33425), 'gen_const_vector': ([], 33425), 'reg_attrs_htab_eq': ([], 33425), 'reg_attrs_htab_hash': ([], 33425), 'mem_attrs_htab_eq': ([], 33425), 'mem_attrs_htab_hash': ([], 33425), 'const_double_htab_eq': ([], 33425), 'const_double_htab_hash': ([], 33425), 'init_emit_once': ([], 33425), 'emit_copy_of_insn_after': ([], 33425)}, "PosixPath('602/haifa-sched.bc')": {'remove_notes': ([], 35489), 'restore_other_notes': ([6], 35484), 'schedule_block': ([], 35489), 'schedule_insn': ([167], 35485), 'priority': ([], 35489), 'haifa_sched_init': ([], 35489), 'sd_iterator_cond': ([], 35489), 'init_h_i_d': ([], 35489), 'create_check_block_twin': ([51], 35485), 'may_trap_exp': ([], 35489), 'haifa_classify_rtx': ([], 35489), 'recog_memoized': ([], 35489), 'insn_cost': ([], 35489), 'dep_cost_1': ([], 35489), 'increase_insn_priority': ([], 35489), 'ready_lastpos': ([6], 35486), 'ready_element': ([], 35489), 'dying_use_p': ([], 35489), 'setup_insn_reg_pressure_info': ([], 35489), 'sd_iterator_start': ([], 35489), 'dep_list_size': ([], 35489), 'rank_for_schedule': ([2, 89], 35468), 'swap_sort': ([], 35489), 'ready_sort': ([], 35489), 'setup_ref_regs': ([], 35489), 'bmp_iter_set_init': ([], 35489), 'bmp_iter_set': ([], 35489), 'mark_regno_birth_or_death': ([], 35489), 'bmp_iter_next': ([], 35489), 'initiate_reg_pressure_info': ([], 35489), 'ei_next': ([], 35489), 'bb_has_eh_pred': ([], 35489), 'initiate_bb_reg_pressure_info': ([], 35489), 'save_reg_pressure': ([], 35489), 'update_register_pressure': ([], 35489), 'restore_reg_pressure': ([], 35489), 'setup_insn_max_reg_pressure': ([0, 7, 29], 35474), 'sched_setup_bb_reg_pressure_info': ([], 35489), 'concat_note_lists': ([], 35489), 'get_ebb_head_tail': ([], 35489), 'no_real_insns_p': ([], 35489), 'bb_note': ([0], 35484), 'reemit_notes': ([], 35489), 'max_issue': ([2, 3, 33], 35469), 'dump_new_block_header': ([], 35489), 'ready_remove_first': ([], 35489), 'ready_remove': ([1], 35479), 'queue_insn': ([], 35489), 'restore_bb_notes': ([], 35489), 'ready_add': ([0], 35473), 'queue_to_ready': ([], 35489), 'debug_ready_list': ([], 35489), 'fix_jump_move': ([], 35489), 'move_succs': ([11], 35487), 'move_block_after_check': ([13], 35487), 'move_insn': ([29, 36], 35480), 'update_reg_and_insn_max_reg_pressure': ([], 35489), 'sched_speculate_insn': ([], 35489), 'haifa_speculate_insn': ([], 35489), 'haifa_change_pattern': ([], 35489), 'queue_remove': ([], 35489), 'change_queue_index': ([], 35489), 'fix_tick_ready': ([27], 35487), 'try_ready': ([91], 35487), 'bitmap_initialize_stat': ([], 35489), 'fix_recovery_deps': ([12], 35483), 'print_curr_reg_pressure': ([], 35489), 'ok_for_early_queue_removal': ([], 35489), 'early_queue_to_ready': ([], 35489), 'choose_ready': ([], 35489), 'find_fallthru_edge': ([28, 35], 35485), 'VEC_basic_block_base_iterate': ([], 35489), 'init_insns_in_bb': ([], 35489), 'VEC_rtx_base_iterate': ([], 35489), 'sched_scan': ([], 35489), 'luids_init_insn': ([], 35489), 'VEC_int_base_space': ([], 35489), 'VEC_int_heap_reserve_exact': ([], 35489), 'VEC_int_heap_safe_grow': ([], 35489), 'VEC_int_heap_safe_grow_cleared': ([], 35489), 'luids_extend_insn': ([], 35489), 'sched_init_luids': ([], 35489), 'VEC_haifa_insn_data_def_base_space': ([], 35489), 'VEC_haifa_insn_data_def_heap_reserve_exact': ([], 35489), 'VEC_haifa_insn_data_def_heap_safe_grow': ([], 35489), 'VEC_haifa_insn_data_def_heap_safe_grow_cleared': ([], 35489), 'extend_h_i_d': ([0], 35487), 'haifa_init_h_i_d': ([], 35489), 'sched_extend_bb': ([], 35489), 'init_before_recovery': ([], 35489), 'sched_create_recovery_block': ([], 35489), 'sched_extend_ready_list': ([], 35489), 'sched_create_recovery_edges': ([], 35489), 'process_insn_forw_deps_be_in_spec': ([], 35489), 'contributes_to_priority_p': ([], 35489), 'VEC_rtx_base_space': ([], 35489), 'VEC_rtx_heap_reserve': ([], 35489), 'VEC_rtx_base_quick_push': ([], 35489), 'VEC_rtx_heap_safe_push': ([], 35489), 'clear_priorities': ([], 35489), 'calc_priorities': ([], 35489), 'begin_speculative_block': ([], 35489), 'add_to_speculative_block': ([], 35489), 'generate_recovery_code': ([], 35489), 'fix_inter_tick': ([], 35489), 'set_priorities': ([], 35489), 'sched_init': ([], 35489), 'VEC_basic_block_base_quick_push': ([], 35489), 'sched_split_block_1': ([], 35489), 'haifa_finish_h_i_d': ([], 35489), 'sched_finish': ([], 35489), 'haifa_sched_finish': ([], 35489), 'sched_finish_ready_list': ([0], 35464), 'unlink_bb_notes': ([12], 35484)}, "PosixPath('602/graph.bc')": {'node_data': ([], 3049), 'ei_next': ([], 3049), 'print_rtl_graph_with_bb': ([], 3049), 'clean_graph_dump_file': ([], 3049), 'finish_graph_dump_file': ([], 3049)}, "PosixPath('602/tree-nrv.bc')": {'bb_seq': ([], 2349), 'gsi_start_bb': ([], 2349), 'gsi_stmt': ([], 2349), 'gimple_ops': ([], 2349), 'gimple_op': ([], 2349), 'gimple_call_fndecl': ([], 2349), 'is_global_var': ([], 2349), 'may_be_aliased': ([], 2349), 'is_call_clobbered': ([], 2349), 'is_call_used': ([], 2349), 'dest_safe_for_nrv_p': ([], 2349), 'gsi_next': ([], 2349), 'execute_return_slot_opt': ([], 2349), 'var_ann': ([], 2349), 'finalize_nrv_r': ([], 2349), 'tree_nrv': ([], 2349)}, "PosixPath('602/sha1.bc')": {'sha1_init_ctx': ([], 6201), 'sha1_read_ctx': ([], 6201), 'sha1_process_block': ([2, 7, 132], 5985), 'sha1_finish_ctx': ([], 6201), 'sha1_process_bytes': ([], 6201), 'sha1_stream': ([], 6201), 'sha1_buffer': ([], 6201)}, "PosixPath('602/final.bc')": {'rest_of_handle_final': ([21], 20028), 'init_insn_lengths': ([], 20034), 'asm_insn_count': ([], 20034), 'get_attr_length_1': ([], 20034), 'label_to_alignment': ([], 20034), 'label_to_max_skip': ([], 20034), 'align_fuzz': ([], 20034), 'insn_current_reference_address': ([], 20034), 'ei_next': ([], 20034), 'compute_alignments': ([5], 20021), 'final_addr_vec_align': ([], 20034), 'VEC_int_base_space': ([], 20034), 'VEC_int_heap_reserve_exact': ([], 20034), 'VEC_int_heap_safe_grow': ([], 20034), 'shorten_branches': ([10, 23, 37, 439], 20010), 'add_debug_prefix_map': ([], 20034), 'remap_debug_filename': ([], 20034), 'final_start_function': ([], 20034), 'final_end_function': ([], 20034), 'asm_fprintf': ([162], 20027), 'profile_function': ([], 20034), 'profile_after_prologue': ([], 20034), 'output_alternate_entry_point': ([], 20034), 'notice_source_line': ([], 20034), 'get_mem_expr_from_op': ([6], 20016), 'output_asm_operand_names': ([], 20034), 'output_asm_name': ([], 20034), 'output_asm_label': ([1], 20029), 'alter_subreg': ([], 20034), 'walk_alter_subreg': ([], 20034), 'output_address': ([], 20034), 'output_addr_const': ([0, 11], 20029), 'mark_symbol_ref_as_used': ([], 20034), 'output_operand': ([], 20034), 'output_asm_insn': ([1, 82], 19827), 'recog_memoized': ([], 20034), 'cleanup_subreg_operands': ([], 20034), 'get_insn_template': ([], 20034), 'call_from_call_insn': ([], 20034), 'final_scan_insn': ([], 20034), 'final': ([], 20034), 'split_double': ([], 20034), 'leaf_function_p': ([], 20034), 'final_forward_branch_p': ([], 20034), 'debug_flush_symbol_queue': ([], 20034), 'debug_queue_symbol': ([], 20034), 'debug_free_queue': ([], 20034), 'rest_of_clean_state': ([], 20034)}, "PosixPath('602/getruntime.bc')": {'get_run_time': ([], 111)}, "PosixPath('602/tree-ssa-alias.bc')": {'ptr_deref_may_alias_global_p': ([], 11430), 'gimple_referenced_vars': ([], 11430), 'first_htab_element': ([], 11430), 'first_referenced_var': ([], 11430), 'end_htab_p': ([], 11430), 'end_referenced_vars_p': ([], 11430), 'may_be_aliased': ([], 11430), 'next_htab_element': ([], 11430), 'next_referenced_var': ([], 11430), 'dump_points_to_solution': ([0], 11426), 'dump_points_to_info_for': ([], 11430), 'dump_alias_info': ([], 11430), 'get_ptr_info': ([], 11430), 'ao_ref_init': ([], 11430), 'ao_ref_base': ([], 11430), 'ao_ref_alias_set': ([], 11430), 'ao_ref_init_from_ptr_and_size': ([0], 11422), 'decl_refs_may_alias_p': ([], 11430), 'gimple_ops': ([], 11430), 'gimple_op': ([], 11430), 'ptr_deref_may_alias_decl_p': ([0], 11425), 'same_type_for_tbaa': ([], 11430), 'aliasing_component_refs_p': ([34, 38], 11411), 'ptr_derefs_may_alias_p': ([0], 11422), 'refs_may_alias_p_1': ([], 11430), 'refs_may_alias_p': ([], 11430), 'refs_anti_dependent_p': ([], 11430), 'refs_output_dependent_p': ([], 11430), 'is_global_var': ([], 11430), 'gimple_call_fndecl': ([], 11430), 'is_call_clobbered': ([], 11430), 'ref_maybe_used_by_call_p_1': ([], 11430), 'ref_maybe_used_by_call_p': ([], 11430), 'ref_maybe_used_by_stmt_p': ([], 11430), 'ptr_deref_may_alias_ref_p_1': ([], 11430), 'call_may_clobber_ref_p_1': ([], 11430), 'stmt_may_clobber_ref_p_1': ([], 11430), 'stmt_may_clobber_ref_p': ([], 11430), 'gimple_vuse': ([], 11430), 'get_continuation_for_phi': ([0], 11422), 'maybe_skip_until': ([], 11430), 'walk_non_aliased_vuses': ([], 11430), 'walk_aliased_vdefs_1': ([], 11430), 'walk_aliased_vdefs': ([], 11430)}, "PosixPath('602/gimple-iterator.bc')": {'gsi_start': ([1], 5261), 'update_bb_for_stmts': ([], 5263), 'gsi_insert_seq_nodes_before': ([], 5263), 'gsi_insert_seq_before_without_update': ([], 5263), 'gsi_stmt': ([], 5263), 'gsi_next': ([], 5263), 'update_modified_stmts': ([], 5263), 'gsi_insert_seq_nodes_after': ([], 5263), 'gsi_insert_seq_after_without_update': ([], 5263), 'gsi_split_seq_after': ([1], 5261), 'gsi_split_seq_before': ([], 5263), 'gimple_ops': ([], 5263), 'gimple_op': ([], 5263), 'gimple_call_lhs': ([], 5263), 'gimple_has_lhs': ([], 5263), 'gimple_use_ops': ([], 5263), 'op_iter_init': ([], 5263), 'op_iter_next_use': ([], 5263), 'op_iter_init_use': ([], 5263), 'delink_imm_use': ([], 5263), 'delink_stmt_imm_use': ([], 5263), 'gsi_replace': ([], 5263), 'gsi_insert_before_without_update': ([], 5263), 'gsi_insert_after_without_update': ([], 5263), 'gsi_remove': ([], 5263), 'phi_nodes': ([], 5263), 'bb_seq': ([], 5263), 'gsi_start_bb': ([], 5263), 'gsi_for_stmt': ([], 5263), 'gsi_last_bb': ([], 5263), 'gsi_move_to_bb_end': ([], 5263), 'single_pred_p': ([], 5263), 'single_succ_p': ([], 5263), 'single_pred_edge': ([], 5263), 'gimple_find_edge_insert_loc': ([], 5263), 'gsi_insert_on_edge_immediate': ([], 5263), 'gsi_insert_seq_on_edge_immediate': ([], 5263), 'single_succ_edge': ([], 5263), 'gsi_commit_one_edge_insert': ([], 5263), 'ei_next': ([], 5263), 'gsi_commit_edge_inserts': ([], 5263)}, "PosixPath('602/tree-call-cdce.bc')": {'bb_seq': ([], 5443), 'gsi_start_bb': ([], 5443), 'gsi_stmt': ([], 5443), 'gimple_ops': ([], 5443), 'gimple_call_fndecl': ([], 5443), 'check_target_format': ([], 5443), 'check_pow': ([], 5443), 'is_call_dce_candidate': ([], 5443), 'VEC_gimple_base_space': ([], 5443), 'VEC_gimple_heap_reserve': ([], 5443), 'VEC_gimple_base_quick_push': ([], 5443), 'VEC_gimple_heap_safe_push': ([], 5443), 'gsi_next': ([], 5443), 'gimple_set_op': ([], 5443), 'gimple_assign_set_lhs': ([], 5443), 'gen_one_condition': ([], 5443), 'gen_conditions_for_domain': ([], 5443), 'gen_conditions_for_pow_cst_base': ([], 5443), 'gen_conditions_for_pow_int_base': ([], 5443), 'gen_conditions_for_pow': ([], 5443), 'gen_shrink_wrap_conditions': ([], 5443), 'shrink_wrap_one_built_in_call': ([], 5443), 'shrink_wrap_conditional_dead_built_in_calls': ([], 5443), 'gimple_vop': ([], 5443), 'tree_call_cdce': ([], 5443)}, "PosixPath('602/ira-conflicts.bc')": {'ira_build_conflicts': ([2, 25, 85], 7310), 'ira_allocno_set_iter_init': ([], 7320), 'ira_allocno_iter_cond': ([], 7320), 'ira_allocno_conflict_iter_init': ([], 7320), 'ira_allocno_conflict_iter_cond': ([], 7320), 'ira_allocno_conflict_iter_next': ([], 7320), 'print_conflicts': ([1], 7312), 'sparseset_bit_p': ([], 7320), 'sparseset_insert_bit': ([], 7320), 'sparseset_set_bit': ([2], 7317), 'sparseset_iter_init': ([], 7320), 'sparseset_iter_p': ([], 7320), 'sparseset_iter_elm': ([], 7320), 'sparseset_iter_next': ([], 7320), 'build_conflict_bit_table': ([19], 7317), 'ira_allocno_set_iter_cond': ([1, 24], 7317), 'ira_allocno_set_iter_next': ([], 7320), 'build_allocno_conflicts': ([], 7320), 'build_conflicts': ([], 7320), 'ira_copy_iter_cond': ([], 7320), 'propagate_copies': ([], 7320), 'go_through_subreg': ([], 7320), 'ira_get_register_move_cost': ([0], 7315), 'ira_allocate_and_set_costs': ([], 7320), 'process_regs_for_copy': ([36], 7314), 'get_dup_num': ([], 7320), 'process_reg_shuffles': ([], 7320), 'add_insn_allocno_copies': ([], 7320), 'add_copies': ([], 7320)}, "PosixPath('602/tree-stdarg.bc')": {'execute_optimize_stdarg': ([1, 36, 365], 7312), 'bb_seq': ([], 7340), 'gsi_start_bb': ([], 7340), 'gsi_stmt': ([], 7340), 'gimple_ops': ([], 7340), 'gimple_op': ([], 7340), 'gimple_call_fndecl': ([], 7340), 'is_global_var': ([], 7340), 'gsi_next': ([], 7340), 'clear_and_done_ssa_iter': ([], 7340), 'op_iter_next_use': ([], 7340), 'op_iter_init_phiuse': ([], 7340), 'VEC_edge_base_space': ([], 7340), 'VEC_edge_heap_reserve': ([], 7340), 'VEC_edge_base_quick_push': ([], 7340), 'VEC_edge_heap_safe_push': ([2], 7338), 'ei_next': ([], 7340), 'VEC_edge_base_pop': ([], 7340), 'reachable_at_most_once': ([36], 7334), 'va_list_counter_bump': ([], 7340), 'va_list_ptr_read': ([], 7340), 'va_list_ptr_write': ([], 7340), 'check_va_list_escapes': ([], 7340), 'va_list_counter_op': ([], 7340), 'va_list_counter_struct_op': ([], 7340), 'gimple_use_ops': ([], 7340), 'op_iter_init': ([], 7340), 'op_iter_next_tree': ([], 7340), 'op_iter_init_tree': ([], 7340), 'check_all_va_list_escapes': ([], 7340), 'find_va_list_reference': ([0], 7333)}, "PosixPath('602/tree-affine.bc')": {'aff_combination_scale': ([1], 7701), 'aff_combination_add_elt': ([1, 2, 6], 7692), 'aff_combination_convert': ([1], 7701), 'aff_combination_remove_elt': ([1], 7702), 'aff_combination_zero': ([], 7703), 'aff_combination_const': ([], 7703), 'aff_combination_elt': ([], 7703), 'aff_combination_add_cst': ([], 7703), 'aff_combination_add': ([], 7703), 'aff_combination_to_tree': ([], 7703), 'tree_to_aff_combination': ([], 7703), 'unshare_aff_combination': ([], 7703), 'aff_combination_add_product': ([], 7703), 'aff_combination_mult': ([], 7703), 'gimple_ops': ([], 7703), 'gimple_op': ([], 7703), 'aff_combination_expand': ([0, 99, 124], 7692), 'double_int_constant_multiple_p': ([], 7703), 'aff_combination_find_elt': ([], 7703), 'aff_combination_constant_multiple_p': ([], 7703), 'print_aff': ([], 7703), 'get_inner_reference_aff': ([], 7703)}, "PosixPath('602/ipa-cp.bc')": {'VEC_ipa_node_params_t_base_space': ([], 9336), 'VEC_ipa_node_params_t_heap_reserve_exact': ([], 9336), 'VEC_ipa_node_params_t_heap_safe_grow': ([], 9336), 'VEC_ipa_node_params_t_heap_safe_grow_cleared': ([], 9336), 'ipa_check_create_node_params': ([], 9336), 'VEC_ipa_edge_args_t_base_space': ([], 9336), 'VEC_ipa_edge_args_t_gc_reserve_exact': ([], 9336), 'VEC_ipa_edge_args_t_gc_safe_grow': ([], 9336), 'VEC_ipa_edge_args_t_gc_safe_grow_cleared': ([], 9336), 'ipa_check_create_edge_args': ([], 9336), 'ipcp_init_stage': ([], 9336), 'ipcp_generate_summary': ([], 9336), 'cgraph_only_called_directly_p': ([], 9336), 'bb_seq': ([], 9336), 'gsi_start_bb': ([], 9336), 'gsi_stmt': ([], 9336), 'gimple_ops': ([], 9336), 'gimple_op': ([], 9336), 'gimple_call_fn': ([], 9336), 'gimple_call_fndecl': ([], 9336), 'gsi_next': ([], 9336), 'ipcp_versionable_function_p': ([3], 9334), 'ipcp_cloning_candidate_p': ([], 9336), 'ipcp_initialize_node_lattices': ([], 9336), 'ipcp_compute_node_scale': ([], 9336), 'ipcp_print_all_lattices': ([], 9336), 'ipcp_get_node_scale': ([], 9336), 'ipcp_function_scale_print': ([], 9336), 'ipcp_lattice_from_jfunc': ([], 9336), 'ipcp_lats_are_equal': ([], 9336), 'ipa_lattice_meet': ([], 9336), 'ipcp_propagate_stage': ([7, 8, 13, 736], 9299), 'ipa_get_param': ([], 9336), 'ipcp_change_tops_to_bottom': ([], 9336), 'ipcp_iterate_stage': ([], 9336), 'ipcp_const_param_count': ([], 9336), 'ipcp_get_orig_node': ([], 9336), 'ipcp_need_redirect_p': ([], 9336), 'ipcp_estimate_growth': ([], 9336), 'ipcp_estimate_cloning_cost': ([], 9336), 'build_const_val': ([], 9336), 'ipcp_create_replace_map': ([], 9336), 'VEC_ipa_replace_map_p_base_space': ([], 9336), 'VEC_ipa_replace_map_p_gc_reserve': ([], 9336), 'VEC_ipa_replace_map_p_base_quick_push': ([], 9336), 'VEC_ipa_replace_map_p_gc_safe_push': ([], 9336), 'VEC_cgraph_edge_p_base_quick_push': ([], 9336), 'ipcp_node_is_clone': ([], 9336), 'ipcp_update_callgraph': ([], 9336), 'ipcp_update_profiling': ([], 9336), 'ipcp_insert_stage': ([], 9336), 'ipcp_driver': ([], 9336)}, "PosixPath('602/lto-opts.bc')": {'output_options': ([], 2396), 'VEC_opt_t_base_space': ([], 2396), 'VEC_opt_t_heap_reserve': ([], 2396), 'VEC_opt_t_base_quick_push': ([], 2396), 'VEC_opt_t_heap_safe_push': ([2], 2394), 'lto_register_user_option': ([0], 2388), 'clear_options': ([], 2396), 'concatenate_options': ([], 2396), 'output_string_stream': ([], 2396), 'lto_write_options': ([], 2396), 'input_string_block': ([], 2396), 'input_options': ([], 2396), 'lto_read_file_options': ([], 2396), 'lto_reissue_options': ([], 2396)}, "PosixPath('602/loop-invariant.bc')": {'calculate_loop_reg_pressure': ([], 12686), 'free_inv_motion_data': ([], 12686), 'find_exits': ([], 12686), 'set_move_mark': ([6], 12669), 'number_of_loops': ([], 12686), 'VEC_int_base_quick_push': ([], 12686), 'loop_outer': ([], 12686), 'VEC_int_base_iterate': ([], 12686), 'get_loop': ([], 12686), 'fel_next': ([5], 12683), 'fel_init': ([], 12686), 'bitmap_initialize_stat': ([], 12686), 'df_lr_get_bb_info': ([], 12686), 'bmp_iter_set_init': ([], 12686), 'bmp_iter_set': ([4], 12681), 'get_regno_cover_class': ([], 12686), 'change_pressure': ([], 12686), 'bmp_iter_next': ([], 12686), 'mark_ref_regs': ([], 12686), 'mark_reg_death': ([], 12686), 'loop_depth': ([], 12686), 'mark_regno_live': ([], 12686), 'mark_reg_store': ([2, 5], 12680), 'ei_next': ([], 12686), 'compute_always_reached': ([], 12686), 'check_invariant_table_size': ([], 12686), 'find_defs': ([], 12686), 'may_assign_reg_p': ([], 12686), 'check_maybe_invariant': ([], 12686), 'check_dependency': ([], 12686), 'check_dependencies': ([], 12686), 'VEC_invariant_p_base_space': ([], 12686), 'VEC_invariant_p_heap_reserve': ([], 12686), 'VEC_invariant_p_base_quick_push': ([], 12686), 'VEC_invariant_p_heap_safe_push': ([], 12686), 'create_new_invariant': ([], 12686), 'find_invariant_insn': ([], 12686), 'invariant_for_use': ([], 12686), 'record_use': ([0], 12684), 'record_uses': ([], 12686), 'find_invariants_insn': ([], 12686), 'find_invariants_bb': ([], 12686), 'find_invariants_body': ([], 12686), 'VEC_invariant_p_base_iterate': ([], 12686), 'hash_invariant_expr_1': ([1], 12682), 'find_or_insert_inv': ([], 12686), 'find_identical_invariants': ([4], 12667), 'invariant_expr_equal_p': ([1], 12684), 'eq_invariant_expr': ([], 12686), 'merge_identical_invariants': ([], 12686), 'find_invariants': ([], 12686), 'get_cover_class_and_nregs': ([2], 12681), 'get_inv_cost': ([84], 12682), 'gain_for_invariant': ([], 12686), 'best_gain_for_invariant': ([], 12686), 'find_invariants_to_move': ([5], 12652), 'move_invariant_reg': ([4, 78], 12678), 'move_invariants': ([], 12686), 'move_single_loop_invariants': ([17], 12652), 'move_loop_invariants': ([20, 691], 12649)}, "PosixPath('602/xmalloc.bc')": {}, "PosixPath('602/xstrndup.bc')": {'xstrndup': ([], 120)}, "PosixPath('602/lambda-code.bc')": {'first_imm_use_on_stmt': ([], 23893), 'next_imm_use_on_stmt': ([], 23893), 'build_access_matrix': ([], 23893), 'replace_uses_equiv_to_x_with_y': ([], 23893), 'lambda_body_vector_new': ([5], 23887), 'lambda_vector_matrix_mult': ([], 23893), 'lambda_body_vector_compute_new': ([], 23893), 'print_lambda_body_vector': ([], 23893), 'lambda_linear_expression_new': ([5, 9], 23874), 'print_linear_expression': ([], 23893), 'print_lambda_loop': ([], 23893), 'lambda_loopnest_new': ([2, 5], 23882), 'print_lambda_loopnest': ([], 23893), 'lambda_lattice_new': ([], 23893), 'lambda_lattice_compute_base': ([53], 23891), 'lle_equal': ([], 23893), 'compute_nest_using_fourier_motzkin': ([], 23893), 'lambda_compute_auxillary_space': ([], 23893), 'lambda_vector_min_nz': ([], 23893), 'lambda_compute_step_signs': ([], 23893), 'lambda_compute_target_space': ([], 23893), 'lambda_loopnest_transform': ([], 23893), 'gimple_ops': ([], 23893), 'bb_seq': ([], 23893), 'gsi_start_bb': ([], 23893), 'gsi_stmt': ([], 23893), 'gimple_def_ops': ([], 23893), 'gimple_vdef': ([], 23893), 'gimple_use_ops': ([], 23893), 'gimple_vuse': ([], 23893), 'op_iter_init': ([], 23893), 'op_iter_next_tree': ([], 23893), 'single_ssa_tree_operand': ([], 23893), 'end_readonly_imm_use_p': ([], 23893), 'first_readonly_imm_use': ([], 23893), 'phi_loop_edge_uses_def': ([], 23893), 'next_readonly_imm_use': ([], 23893), 'stmt_is_bumper_for_loop': ([], 23893), 'gsi_next': ([], 23893), 'perfect_nest_p': ([], 23893), 'op_iter_next_use': ([], 23893), 'clear_and_done_ssa_iter': ([], 23893), 'op_iter_init_phiuse': ([], 23893), 'cannot_convert_modify_to_perfect_nest': ([], 23893), 'exit_phi_for_loop_p': ([], 23893), 'can_put_in_inner_loop': ([0], 23890), 'can_put_after_inner_loop': ([], 23893), 'cannot_convert_bb_to_perfect_nest': ([], 23893), 'can_convert_to_perfect_nest': ([], 23893), 'VEC_tree_base_iterate': ([], 23893), 'gcc_tree_to_linear_expression': ([], 23893), 'VEC_tree_base_space': ([], 23893), 'VEC_tree_heap_reserve': ([], 23893), 'loop_depth': ([], 23893), 'loop_outer': ([], 23893), 'invariant_in_loop_and_outer_loops': ([], 23893), 'VEC_tree_base_quick_push': ([], 23893), 'VEC_tree_heap_safe_push': ([], 23893), 'VEC_int_base_space': ([], 23893), 'VEC_int_heap_reserve': ([], 23893), 'VEC_int_base_quick_push': ([], 23893), 'VEC_int_heap_safe_push': ([], 23893), 'gcc_loop_to_lambda_loop': ([], 23893), 'VEC_lambda_loop_base_space': ([], 23893), 'VEC_lambda_loop_heap_reserve': ([], 23893), 'VEC_lambda_loop_base_quick_push': ([], 23893), 'VEC_lambda_loop_heap_safe_push': ([], 23893), 'VEC_source_location_base_space': ([], 23893), 'VEC_source_location_heap_reserve': ([], 23893), 'VEC_source_location_base_quick_push': ([], 23893), 'single_succ_p': ([], 23893), 'single_succ_edge': ([], 23893), 'VEC_tree_base_pop': ([], 23893), 'VEC_source_location_base_pop': ([], 23893), 'single_pred_p': ([], 23893), 'single_pred_edge': ([], 23893), 'gimple_set_op': ([], 23893), 'gsi_last_bb': ([], 23893), 'gsi_after_labels': ([], 23893), 'delink_imm_use': ([], 23893), 'link_imm_use_to_list': ([], 23893), 'link_imm_use': ([], 23893), 'set_ssa_use_from_ptr': ([], 23893), 'gimple_vop': ([], 23893), 'perfect_nestify': ([], 23893), 'VEC_lambda_loop_base_iterate': ([], 23893), 'gcc_loopnest_to_lambda_loopnest': ([54], 23892), 'end_imm_use_stmt_p': ([], 23893), 'move_use_after_head': ([], 23893), 'gimple_vuse_op': ([], 23893), 'link_use_stmts_after': ([], 23893), 'first_imm_use_stmt': ([], 23893), 'next_imm_use_stmt': ([], 23893), 'remove_iv': ([], 23893), 'build_linear_expr': ([], 23893), 'lle_to_gcc_expression': ([8], 23889), 'VEC_gimple_base_space': ([], 23893), 'VEC_gimple_heap_reserve': ([], 23893), 'VEC_gimple_base_quick_push': ([], 23893), 'VEC_gimple_heap_safe_push': ([], 23893), 'lambda_loopnest_to_gcc_loopnest': ([9], 23877), 'VEC_ddr_p_base_iterate': ([], 23893), 'lambda_transform_legal_p': ([], 23893), 'VEC_data_reference_p_base_iterate': ([], 23893), 'tree_operand_length': ([], 23893), 'lambda_collect_parameters_from_af': ([0], 23889), 'lambda_collect_parameters': ([], 23893), 'VEC_loop_p_base_iterate': ([], 23893), 'am_vector_index_for_loop': ([], 23893), 'av_for_af_base': ([], 23893), 'av_for_af': ([], 23893), 'VEC_lambda_vector_base_quick_push': ([], 23893), 'lambda_compute_access_matrices': ([], 23893)}, "PosixPath('602/ipa.bc')": {'cgraph_remove_unreachable_nodes': ([4, 7, 12], 4712), 'cgraph_only_called_directly_p': ([], 4723), 'cgraph_postorder': ([5], 4710), 'cgraph_can_remove_if_no_direct_calls_p': ([], 4723), 'update_inlined_to_pointer': ([], 4723), 'cgraph_node_set_new': ([], 4723), 'VEC_cgraph_node_ptr_base_space': ([], 4723), 'VEC_cgraph_node_ptr_gc_reserve': ([], 4723), 'VEC_cgraph_node_ptr_base_quick_push': ([], 4723), 'VEC_cgraph_node_ptr_gc_safe_push': ([], 4723), 'cgraph_node_set_add': ([], 4723), 'VEC_cgraph_node_ptr_base_pop': ([], 4723), 'cgraph_node_set_remove': ([], 4723), 'cgraph_node_set_find': ([], 4723), 'csi_end_p': ([], 4723), 'dump_cgraph_node_set': ([], 4723), 'cgraph_externally_visible_p': ([], 4723), 'function_and_variable_visibility': ([57, 100, 190], 4716), 'whole_program_function_and_variable_visibility': ([], 4723)}, "PosixPath('602/cfganal.bc')": {'set_edge_can_fallthru_flag': ([25], 10994), 'sbitmap_iter_init': ([], 10996), 'single_succ_p': ([], 10996), 'flow_active_insn_p': ([], 10996), 'forwarder_block_p': ([12], 10993), 'ei_next': ([], 10996), 'can_fallthru': ([32], 10992), 'could_fall_through': ([17], 10994), 'mark_dfs_back_edges': ([], 10996), 'find_unreachable_blocks': ([4, 15, 24], 10985), 'create_edge_list': ([33, 58], 10990), 'print_edge_list': ([], 10996), 'find_edge_index': ([], 10996), 'verify_edge_list': ([17, 107], 10985), 'find_edge': ([21, 25], 10992), 'sbitmap_iter_cond': ([], 10996), 'sbitmap_iter_next': ([], 10996), 'flow_nodes_print': ([], 10996), 'flow_edge_list_print': ([], 10996), 'remove_fake_predecessors': ([2], 10994), 'remove_fake_edges': ([], 10996), 'remove_fake_exit_edges': ([], 10996), 'add_noreturn_fake_exit_edges': ([], 10996), 'flow_dfs_compute_reverse_init': ([], 10996), 'flow_dfs_compute_reverse_add_bb': ([], 10996), 'flow_dfs_compute_reverse_execute': ([], 10996), 'flow_dfs_compute_reverse_finish': ([], 10996), 'connect_infinite_loops_to_exit': ([], 10996), 'post_order_compute': ([], 10996), 'dfs_find_deadend': ([], 10996), 'inverted_post_order_compute': ([35, 121], 10989), 'pre_and_rev_post_order_compute': ([], 10996), 'dfs_enumerate_from': ([39], 10992), 'compute_dominance_frontiers_1': ([], 10996), 'compute_dominance_frontiers': ([], 10996), 'bmp_iter_set_init': ([], 10996), 'bmp_iter_set': ([], 10996), 'VEC_int_base_quick_push': ([], 10996), 'bmp_iter_next': ([], 10996), 'VEC_int_base_pop': ([], 10996), 'bmp_iter_and_compl_init': ([], 10996), 'bmp_iter_and_compl': ([], 10996), 'VEC_int_base_space': ([], 10996), 'VEC_int_heap_reserve': ([], 10996), 'VEC_int_heap_safe_push': ([], 10996), 'compute_idf': ([], 10996)}, "PosixPath('602/physmem.bc')": {}, "PosixPath('602/insn-emit.bc')": {'gen_movti': ([], 404225), 'gen_split_1883': ([], 404225), 'gen_split_1884': ([], 404225), 'gen_split_1885': ([], 404225), 'gen_split_1891': ([], 404225), 'gen_split_1895': ([], 404225), 'gen_split_1908': ([11], 404220), 'gen_split_1992': ([], 404225), 'gen_split_1993': ([], 404225), 'gen_split_1996': ([], 404225), 'gen_split_1997': ([], 404225), 'gen_split_2036': ([], 404225), 'gen_split_2037': ([], 404225), 'gen_split_2038': ([], 404225), 'gen_split_2039': ([], 404225), 'gen_split_2076': ([], 404225), 'gen_split_2087': ([], 404225), 'gen_split_2095': ([], 404225), 'gen_split_2104': ([], 404225), 'gen_split_2105': ([], 404225), 'gen_split_2121': ([], 404225), 'gen_split_2182': ([], 404225), 'gen_split_2183': ([], 404225), 'gen_peephole2_2202': ([], 404225), 'gen_peephole2_2203': ([], 404225), 'gen_split_2220': ([], 404225), 'gen_split_2225': ([], 404225), 'gen_split_2236': ([], 404225), 'gen_split_2237': ([], 404225), 'gen_split_2238': ([], 404225), 'gen_split_2239': ([], 404225), 'gen_split_2405': ([], 404225), 'gen_split_2418': ([], 404225), 'gen_split_2420': ([], 404225), 'gen_split_2421': ([], 404225), 'gen_split_2422': ([], 404225), 'gen_peephole2_2429': ([], 404225), 'gen_peephole2_2430': ([], 404225), 'gen_peephole2_2443': ([], 404225), 'gen_split_2598': ([], 404225), 'gen_split_2599': ([], 404225), 'gen_smaxv16qi3': ([4], 404211), 'gen_smaxv4si3': ([4], 404211), 'gen_umaxv4si3': ([4], 404211), 'gen_sminv16qi3': ([5], 404211), 'gen_sminv4si3': ([5], 404211), 'gen_uminv8hi3': ([5], 404211), 'gen_uminv4si3': ([5], 404211), 'gen_split_2926': ([], 404225), 'gen_split_2927': ([], 404225), 'gen_split_2928': ([], 404225), 'gen_split_2929': ([], 404225), 'gen_split_1848': ([], 404225), 'gen_split_1849': ([], 404225), 'gen_split_1850': ([], 404225), 'gen_split_1851': ([], 404225), 'gen_split_1852': ([], 404225), 'gen_split_1853': ([], 404225), 'gen_split_1854': ([], 404225), 'gen_movsi': ([], 404225), 'gen_movhi': ([], 404225), 'gen_movqi': ([], 404225), 'gen_movdi': ([], 404225), 'gen_movoi': ([], 404225), 'gen_movsf': ([], 404225), 'gen_split_1868': ([], 404225), 'gen_movdf': ([], 404225), 'gen_movxf': ([], 404225), 'gen_split_1876': ([], 404225), 'gen_movtf': ([], 404225), 'gen_split_1881': ([2], 404220), 'gen_split_1882': ([2], 404220), 'gen_split_1890': ([], 404225), 'gen_split_1894': ([], 404225), 'gen_split_1899': ([], 404225), 'gen_split_1901': ([], 404225), 'gen_split_1902': ([], 404225), 'gen_split_1903': ([], 404225), 'gen_split_1905': ([], 404225), 'gen_split_1906': ([], 404225), 'gen_split_1912': ([], 404225), 'gen_split_1914': ([], 404225), 'gen_split_1917': ([], 404225), 'gen_split_1918': ([], 404225), 'gen_split_1919': ([], 404225), 'gen_split_1920': ([], 404225), 'gen_peephole2_1936': ([], 404225), 'gen_peephole2_1937': ([], 404225), 'gen_peephole2_1938': ([], 404225), 'gen_peephole2_1939': ([], 404225), 'gen_peephole2_1940': ([], 404225), 'gen_peephole2_1941': ([], 404225), 'gen_peephole2_1942': ([], 404225), 'gen_peephole2_1943': ([], 404225), 'gen_split_1944': ([], 404225), 'gen_split_1945': ([], 404225), 'gen_split_1946': ([], 404225), 'gen_split_1947': ([], 404225), 'gen_split_1948': ([], 404225), 'gen_split_1949': ([], 404225), 'gen_split_1950': ([], 404225), 'gen_split_1951': ([], 404225), 'gen_split_1952': ([], 404225), 'gen_split_1953': ([], 404225), 'gen_split_1954': ([], 404225), 'gen_split_1955': ([], 404225), 'gen_split_1956': ([], 404225), 'gen_split_1957': ([], 404225), 'gen_split_1958': ([], 404225), 'gen_split_1959': ([], 404225), 'gen_split_1960': ([], 404225), 'gen_split_1961': ([], 404225), 'gen_split_1965': ([], 404225), 'gen_split_1966': ([], 404225), 'gen_split_1967': ([], 404225), 'gen_split_1968': ([], 404225), 'gen_split_1969': ([], 404225), 'gen_split_1970': ([], 404225), 'gen_split_1971': ([], 404225), 'gen_split_1972': ([], 404225), 'gen_split_1973': ([], 404225), 'gen_split_1980': ([], 404225), 'gen_split_1981': ([], 404225), 'gen_split_1982': ([], 404225), 'gen_split_1983': ([], 404225), 'gen_split_1984': ([], 404225), 'gen_split_1985': ([], 404225), 'gen_split_1986': ([], 404225), 'gen_split_1987': ([], 404225), 'gen_split_1988': ([], 404225), 'gen_split_1989': ([], 404225), 'gen_split_1990': ([6], 404220), 'gen_split_1991': ([6], 404220), 'gen_split_1994': ([5], 404220), 'gen_split_1995': ([5], 404220), 'gen_split_1998': ([], 404225), 'gen_split_1999': ([], 404225), 'gen_split_2000': ([], 404225), 'gen_split_2001': ([], 404225), 'gen_split_2002': ([], 404225), 'gen_split_2003': ([], 404225), 'gen_split_2004': ([], 404225), 'gen_split_2005': ([], 404225), 'gen_split_2006': ([], 404225), 'gen_split_2007': ([], 404225), 'gen_split_2008': ([], 404225), 'gen_split_2009': ([], 404225), 'gen_split_2010': ([], 404225), 'gen_split_2011': ([], 404225), 'gen_split_2012': ([], 404225), 'gen_split_2013': ([], 404225), 'gen_split_2014': ([], 404225), 'gen_split_2015': ([], 404225), 'gen_split_2016': ([], 404225), 'gen_split_2017': ([], 404225), 'gen_split_2018': ([], 404225), 'gen_split_2019': ([], 404225), 'gen_split_2020': ([], 404225), 'gen_split_2021': ([], 404225), 'gen_split_2022': ([], 404225), 'gen_split_2023': ([], 404225), 'gen_split_2024': ([], 404225), 'gen_split_2025': ([], 404225), 'gen_split_2026': ([], 404225), 'gen_split_2027': ([], 404225), 'gen_addqi3': ([], 404225), 'gen_addhi3': ([], 404225), 'gen_addsi3': ([], 404225), 'gen_adddi3': ([], 404225), 'gen_split_2035': ([], 404225), 'gen_subqi3': ([], 404225), 'gen_subhi3': ([], 404225), 'gen_subsi3': ([], 404225), 'gen_subdi3': ([], 404225), 'gen_split_2044': ([], 404225), 'gen_split_2077': ([9], 404222), 'gen_split_2080': ([], 404225), 'gen_split_2081': ([], 404225), 'gen_split_2085': ([], 404225), 'gen_split_2086': ([], 404225), 'gen_andqi3': ([], 404225), 'gen_andhi3': ([], 404225), 'gen_andsi3': ([], 404225), 'gen_split_2094': ([], 404225), 'gen_iorqi3': ([], 404225), 'gen_xorqi3': ([], 404225), 'gen_iorhi3': ([], 404225), 'gen_xorhi3': ([], 404225), 'gen_iorsi3': ([], 404225), 'gen_xorsi3': ([], 404225), 'gen_split_2102': ([], 404225), 'gen_split_2103': ([], 404225), 'gen_negqi2': ([], 404225), 'gen_neghi2': ([], 404225), 'gen_negsi2': ([], 404225), 'gen_negdi2': ([], 404225), 'gen_split_2111': ([], 404225), 'gen_abssf2': ([], 404225), 'gen_negsf2': ([], 404225), 'gen_absdf2': ([], 404225), 'gen_negdf2': ([], 404225), 'gen_absxf2': ([], 404225), 'gen_negxf2': ([], 404225), 'gen_abstf2': ([], 404225), 'gen_negtf2': ([], 404225), 'gen_split_2120': ([], 404225), 'gen_split_2122': ([], 404225), 'gen_split_2123': ([], 404225), 'gen_split_2124': ([], 404225), 'gen_copysignsf3': ([], 404225), 'gen_copysigndf3': ([], 404225), 'gen_copysigntf3': ([], 404225), 'gen_one_cmplqi2': ([], 404225), 'gen_one_cmplhi2': ([], 404225), 'gen_one_cmplsi2': ([], 404225), 'gen_split_2137': ([], 404225), 'gen_split_2138': ([], 404225), 'gen_split_2139': ([], 404225), 'gen_split_2140': ([], 404225), 'gen_split_2141': ([], 404225), 'gen_ashldi3': ([], 404225), 'gen_ashlsi3': ([], 404225), 'gen_split_2148': ([], 404225), 'gen_split_2149': ([], 404225), 'gen_ashlhi3': ([], 404225), 'gen_ashlqi3': ([], 404225), 'gen_ashrdi3': ([], 404225), 'gen_ashrsi3': ([], 404225), 'gen_ashrhi3': ([], 404225), 'gen_ashrqi3': ([], 404225), 'gen_lshrdi3': ([], 404225), 'gen_lshrsi3': ([], 404225), 'gen_lshrhi3': ([], 404225), 'gen_lshrqi3': ([], 404225), 'gen_split_2168': ([], 404225), 'gen_rotlsi3': ([], 404225), 'gen_rotlhi3': ([], 404225), 'gen_rotlqi3': ([], 404225), 'gen_split_2174': ([], 404225), 'gen_rotrsi3': ([], 404225), 'gen_rotrhi3': ([], 404225), 'gen_rotrqi3': ([], 404225), 'gen_split_2184': ([], 404225), 'gen_split_2185': ([], 404225), 'gen_split_2186': ([], 404225), 'gen_split_2187': ([], 404225), 'gen_split_2188': ([], 404225), 'gen_split_2189': ([], 404225), 'gen_split_2190': ([], 404225), 'gen_split_2191': ([], 404225), 'gen_split_2192': ([], 404225), 'gen_split_2193': ([], 404225), 'gen_split_2194': ([], 404225), 'gen_split_2195': ([], 404225), 'gen_split_2196': ([], 404225), 'gen_split_2197': ([], 404225), 'gen_split_2198': ([], 404225), 'gen_split_2199': ([], 404225), 'gen_untyped_call': ([], 404225), 'gen_split_2227': ([], 404225), 'gen_split_2232': ([], 404225), 'gen_split_2234': ([], 404225), 'gen_split_2235': ([], 404225), 'gen_fmodsf3': ([], 404225), 'gen_fmoddf3': ([], 404225), 'gen_remaindersf3': ([], 404225), 'gen_remainderdf3': ([], 404225), 'gen_split_2249': ([], 404225), 'gen_split_2250': ([], 404225), 'gen_split_2251': ([], 404225), 'gen_split_2252': ([], 404225), 'gen_split_2253': ([], 404225), 'gen_split_2254': ([], 404225), 'gen_asinxf2': ([26], 404204), 'gen_acosxf2': ([26], 404204), 'gen_expNcorexf3': ([], 404225), 'gen_expm1xf2': ([0], 404215), 'gen_split_2316': ([], 404225), 'gen_split_2317': ([], 404225), 'gen_split_2318': ([], 404225), 'gen_split_2319': ([], 404225), 'gen_split_2320': ([], 404225), 'gen_split_2321': ([], 404225), 'gen_split_2322': ([], 404225), 'gen_split_2323': ([], 404225), 'gen_split_2324': ([], 404225), 'gen_split_2332': ([], 404225), 'gen_split_2336': ([], 404225), 'gen_split_2337': ([], 404225), 'gen_split_2338': ([], 404225), 'gen_split_2339': ([], 404225), 'gen_split_2340': ([], 404225), 'gen_split_2341': ([], 404225), 'gen_split_2342': ([], 404225), 'gen_split_2343': ([], 404225), 'gen_split_2344': ([], 404225), 'gen_split_2350': ([], 404225), 'gen_split_2354': ([], 404225), 'gen_split_2355': ([], 404225), 'gen_split_2356': ([], 404225), 'gen_split_2357': ([], 404225), 'gen_split_2358': ([], 404225), 'gen_split_2359': ([], 404225), 'gen_split_2360': ([], 404225), 'gen_split_2361': ([], 404225), 'gen_split_2362': ([], 404225), 'gen_split_2368': ([], 404225), 'gen_split_2372': ([], 404225), 'gen_split_2376': ([], 404225), 'gen_split_2377': ([], 404225), 'gen_strset': ([0], 404223), 'gen_cmpstrnsi': ([], 404225), 'gen_peephole2_2399': ([], 404225), 'gen_peephole2_2400': ([], 404225), 'gen_movqicc': ([], 404225), 'gen_movhicc': ([], 404225), 'gen_movsicc': ([], 404225), 'gen_movsfcc': ([], 404225), 'gen_movdfcc': ([], 404225), 'gen_movxfcc': ([], 404225), 'gen_split_2409': ([], 404225), 'gen_peephole2_2410': ([], 404225), 'gen_addqicc': ([], 404225), 'gen_addhicc': ([], 404225), 'gen_addsicc': ([], 404225), 'gen_split_2417': ([8], 404211), 'gen_split_2419': ([], 404225), 'gen_peephole2_2423': ([], 404225), 'gen_peephole2_2424': ([], 404225), 'gen_peephole2_2425': ([], 404225), 'gen_peephole2_2426': ([], 404225), 'gen_peephole2_2427': ([], 404225), 'gen_peephole2_2428': ([], 404225), 'gen_peephole2_2431': ([], 404225), 'gen_peephole2_2432': ([], 404225), 'gen_peephole2_2433': ([], 404225), 'gen_peephole2_2434': ([], 404225), 'gen_peephole2_2435': ([], 404225), 'gen_peephole2_2436': ([], 404225), 'gen_peephole2_2437': ([], 404225), 'gen_peephole2_2438': ([], 404225), 'gen_peephole2_2439': ([], 404225), 'gen_peephole2_2440': ([], 404225), 'gen_peephole2_2441': ([], 404225), 'gen_peephole2_2442': ([], 404225), 'gen_peephole2_2444': ([], 404225), 'gen_peephole2_2445': ([], 404225), 'gen_peephole2_2446': ([], 404225), 'gen_peephole2_2450': ([], 404225), 'gen_peephole2_2451': ([], 404225), 'gen_peephole2_2452': ([], 404225), 'gen_peephole2_2453': ([], 404225), 'gen_peephole2_2454': ([], 404225), 'gen_peephole2_2455': ([], 404225), 'gen_peephole2_2461': ([], 404225), 'gen_peephole2_2464': ([], 404225), 'gen_peephole2_2466': ([], 404225), 'gen_peephole2_2472': ([], 404225), 'gen_peephole2_2475': ([], 404225), 'gen_peephole2_2477': ([], 404225), 'gen_peephole2_2478': ([], 404225), 'gen_peephole2_2479': ([], 404225), 'gen_peephole2_2480': ([], 404225), 'gen_peephole2_2481': ([], 404225), 'gen_peephole2_2482': ([], 404225), 'gen_peephole2_2483': ([], 404225), 'gen_peephole2_2484': ([], 404225), 'gen_peephole2_2485': ([0], 404221), 'gen_prefetch': ([], 404225), 'gen_movv8qi': ([], 404225), 'gen_movv4hi': ([], 404225), 'gen_movv2si': ([], 404225), 'gen_movv1di': ([], 404225), 'gen_movv2sf': ([], 404225), 'gen_movmisalignv8qi': ([], 404225), 'gen_movmisalignv4hi': ([], 404225), 'gen_movmisalignv2si': ([], 404225), 'gen_movmisalignv1di': ([], 404225), 'gen_movmisalignv2sf': ([], 404225), 'gen_mmx_addv2sf3': ([], 404225), 'gen_mmx_mulv2sf3': ([], 404225), 'gen_mmx_smaxv2sf3': ([], 404225), 'gen_mmx_sminv2sf3': ([], 404225), 'gen_mmx_eqv2sf3': ([], 404225), 'gen_split_2524': ([], 404225), 'gen_split_2525': ([], 404225), 'gen_mmx_addv8qi3': ([], 404225), 'gen_mmx_subv8qi3': ([], 404225), 'gen_mmx_addv4hi3': ([], 404225), 'gen_mmx_subv4hi3': ([], 404225), 'gen_mmx_addv2si3': ([], 404225), 'gen_mmx_subv2si3': ([], 404225), 'gen_mmx_addv1di3': ([], 404225), 'gen_mmx_subv1di3': ([], 404225), 'gen_mmx_ssaddv8qi3': ([], 404225), 'gen_mmx_usaddv8qi3': ([], 404225), 'gen_mmx_sssubv8qi3': ([], 404225), 'gen_mmx_ussubv8qi3': ([], 404225), 'gen_mmx_ssaddv4hi3': ([], 404225), 'gen_mmx_usaddv4hi3': ([], 404225), 'gen_mmx_sssubv4hi3': ([], 404225), 'gen_mmx_ussubv4hi3': ([], 404225), 'gen_mmx_mulv4hi3': ([], 404225), 'gen_mmx_smulv4hi3_highpart': ([], 404225), 'gen_mmx_umulv4hi3_highpart': ([], 404225), 'gen_mmx_pmaddwd': ([], 404225), 'gen_mmx_pmulhrwv4hi3': ([], 404225), 'gen_sse2_umulv1siv1di3': ([], 404225), 'gen_mmx_smaxv4hi3': ([], 404225), 'gen_mmx_sminv4hi3': ([], 404225), 'gen_mmx_umaxv8qi3': ([], 404225), 'gen_mmx_uminv8qi3': ([], 404225), 'gen_mmx_eqv8qi3': ([], 404225), 'gen_mmx_eqv4hi3': ([], 404225), 'gen_mmx_eqv2si3': ([], 404225), 'gen_mmx_andv8qi3': ([], 404225), 'gen_mmx_iorv8qi3': ([], 404225), 'gen_mmx_xorv8qi3': ([], 404225), 'gen_mmx_andv4hi3': ([], 404225), 'gen_mmx_iorv4hi3': ([], 404225), 'gen_mmx_xorv4hi3': ([], 404225), 'gen_mmx_andv2si3': ([], 404225), 'gen_mmx_iorv2si3': ([], 404225), 'gen_mmx_xorv2si3': ([], 404225), 'gen_split_2569': ([], 404225), 'gen_split_2570': ([], 404225), 'gen_mmx_uavgv8qi3': ([], 404225), 'gen_mmx_uavgv4hi3': ([], 404225), 'gen_movv32qi': ([], 404225), 'gen_movv16hi': ([], 404225), 'gen_movv8si': ([], 404225), 'gen_movv4di': ([], 404225), 'gen_movv8sf': ([], 404225), 'gen_movv4df': ([], 404225), 'gen_movv16qi': ([], 404225), 'gen_movv8hi': ([], 404225), 'gen_movv4si': ([], 404225), 'gen_movv2di': ([], 404225), 'gen_movv1ti': ([], 404225), 'gen_movv4sf': ([], 404225), 'gen_movv2df': ([], 404225), 'gen_split_2597': ([], 404225), 'gen_movmisalignv32qi': ([], 404225), 'gen_movmisalignv16hi': ([], 404225), 'gen_movmisalignv8si': ([], 404225), 'gen_movmisalignv4di': ([], 404225), 'gen_movmisalignv8sf': ([], 404225), 'gen_movmisalignv4df': ([], 404225), 'gen_movmisalignv16qi': ([], 404225), 'gen_movmisalignv8hi': ([], 404225), 'gen_movmisalignv4si': ([], 404225), 'gen_movmisalignv2di': ([], 404225), 'gen_movmisalignv1ti': ([], 404225), 'gen_movmisalignv4sf': ([], 404225), 'gen_movmisalignv2df': ([], 404225), 'gen_absv4sf2': ([], 404225), 'gen_negv4sf2': ([], 404225), 'gen_absv2df2': ([], 404225), 'gen_negv2df2': ([], 404225), 'gen_addv8sf3': ([], 404225), 'gen_subv8sf3': ([], 404225), 'gen_addv4df3': ([], 404225), 'gen_subv4df3': ([], 404225), 'gen_addv4sf3': ([], 404225), 'gen_subv4sf3': ([], 404225), 'gen_addv2df3': ([], 404225), 'gen_subv2df3': ([], 404225), 'gen_mulv8sf3': ([], 404225), 'gen_mulv4df3': ([], 404225), 'gen_mulv4sf3': ([], 404225), 'gen_mulv2df3': ([], 404225), 'gen_divv8sf3': ([], 404225), 'gen_divv4df3': ([], 404225), 'gen_smaxv8sf3': ([], 404225), 'gen_sminv8sf3': ([], 404225), 'gen_smaxv4df3': ([], 404225), 'gen_sminv4df3': ([], 404225), 'gen_smaxv4sf3': ([], 404225), 'gen_sminv4sf3': ([], 404225), 'gen_smaxv2df3': ([], 404225), 'gen_sminv2df3': ([], 404225), 'gen_vcondv4sf': ([], 404225), 'gen_vcondv2df': ([], 404225), 'gen_andv8sf3': ([], 404225), 'gen_iorv8sf3': ([], 404225), 'gen_xorv8sf3': ([], 404225), 'gen_andv4df3': ([], 404225), 'gen_iorv4df3': ([], 404225), 'gen_xorv4df3': ([], 404225), 'gen_andv4sf3': ([], 404225), 'gen_iorv4sf3': ([], 404225), 'gen_xorv4sf3': ([], 404225), 'gen_andv2df3': ([], 404225), 'gen_iorv2df3': ([], 404225), 'gen_xorv2df3': ([], 404225), 'gen_sse2_cvtudq2ps': ([], 404225), 'gen_vec_unpacks_hi_v8hi': ([], 404225), 'gen_vec_unpacks_lo_v8hi': ([], 404225), 'gen_vec_unpacku_hi_v8hi': ([], 404225), 'gen_vec_unpacku_lo_v8hi': ([], 404225), 'gen_vec_unpacku_float_hi_v4si': ([], 404225), 'gen_vec_unpacku_float_lo_v4si': ([], 404225), 'gen_sse_movhlps_exp': ([], 404225), 'gen_sse_movlhps_exp': ([], 404225), 'gen_sse_loadhps_exp': ([], 404225), 'gen_sse_loadlps_exp': ([], 404225), 'gen_split_2721': ([], 404225), 'gen_split_2728': ([], 404225), 'gen_vec_interleave_highv2df': ([], 404225), 'gen_vec_interleave_lowv2df': ([], 404225), 'gen_split_2740': ([], 404225), 'gen_split_2759': ([], 404225), 'gen_split_2760': ([], 404225), 'gen_sse2_loadhpd_exp': ([], 404225), 'gen_split_2762': ([], 404225), 'gen_sse2_loadlpd_exp': ([], 404225), 'gen_split_2764': ([], 404225), 'gen_addv16qi3': ([], 404225), 'gen_subv16qi3': ([], 404225), 'gen_addv8hi3': ([], 404225), 'gen_subv8hi3': ([], 404225), 'gen_addv4si3': ([], 404225), 'gen_subv4si3': ([], 404225), 'gen_addv2di3': ([], 404225), 'gen_subv2di3': ([], 404225), 'gen_sse2_ssaddv16qi3': ([], 404225), 'gen_sse2_usaddv16qi3': ([], 404225), 'gen_sse2_sssubv16qi3': ([], 404225), 'gen_sse2_ussubv16qi3': ([], 404225), 'gen_sse2_ssaddv8hi3': ([], 404225), 'gen_sse2_usaddv8hi3': ([], 404225), 'gen_sse2_sssubv8hi3': ([], 404225), 'gen_sse2_ussubv8hi3': ([], 404225), 'gen_mulv8hi3': ([], 404225), 'gen_split_2785': ([], 404225), 'gen_smulv8hi3_highpart': ([], 404225), 'gen_umulv8hi3_highpart': ([], 404225), 'gen_sse2_umulv2siv2di3': ([], 404225), 'gen_sse4_1_mulv2siv2di3': ([], 404225), 'gen_sse2_pmaddwd': ([], 404225), 'gen_mulv4si3': ([7], 404223), 'gen_split_2793': ([], 404225), 'gen_split_2794': ([], 404225), 'gen_umaxv16qi3': ([], 404225), 'gen_uminv16qi3': ([], 404225), 'gen_smaxv8hi3': ([], 404225), 'gen_sminv8hi3': ([], 404225), 'gen_umaxv8hi3': ([9], 404215), 'gen_smaxv2di3': ([], 404225), 'gen_umaxv2di3': ([], 404225), 'gen_sminv2di3': ([], 404225), 'gen_uminv2di3': ([], 404225), 'gen_sse2_eqv16qi3': ([], 404225), 'gen_sse2_eqv8hi3': ([], 404225), 'gen_sse2_eqv4si3': ([], 404225), 'gen_sse4_1_eqv2di3': ([], 404225), 'gen_vcondv16qi': ([], 404225), 'gen_vcondv8hi': ([], 404225), 'gen_vcondv4si': ([], 404225), 'gen_vcondv2di': ([], 404225), 'gen_vconduv16qi': ([], 404225), 'gen_vconduv8hi': ([], 404225), 'gen_vconduv4si': ([], 404225), 'gen_vconduv2di': ([], 404225), 'gen_andv16qi3': ([], 404225), 'gen_iorv16qi3': ([], 404225), 'gen_xorv16qi3': ([], 404225), 'gen_andv8hi3': ([], 404225), 'gen_iorv8hi3': ([], 404225), 'gen_xorv8hi3': ([], 404225), 'gen_andv4si3': ([], 404225), 'gen_iorv4si3': ([], 404225), 'gen_xorv4si3': ([], 404225), 'gen_andv2di3': ([], 404225), 'gen_iorv2di3': ([], 404225), 'gen_xorv2di3': ([], 404225), 'gen_andtf3': ([], 404225), 'gen_iortf3': ([], 404225), 'gen_xortf3': ([], 404225), 'gen_split_2867': ([], 404225), 'gen_split_2868': ([], 404225), 'gen_split_2870': ([], 404225), 'gen_vec_unpacku_hi_v16qi': ([], 404225), 'gen_vec_unpacks_hi_v16qi': ([], 404225), 'gen_vec_unpacku_lo_v16qi': ([], 404225), 'gen_vec_unpacks_lo_v16qi': ([], 404225), 'gen_vec_unpacku_hi_v4si': ([], 404225), 'gen_vec_unpacks_hi_v4si': ([], 404225), 'gen_vec_unpacku_lo_v4si': ([], 404225), 'gen_vec_unpacks_lo_v4si': ([], 404225), 'gen_sse2_uavgv16qi3': ([], 404225), 'gen_sse2_uavgv8hi3': ([], 404225), 'gen_ssse3_pmulhrswv8hi3': ([], 404225), 'gen_ssse3_pmulhrswv4hi3': ([], 404225), 'gen_split_2891': ([], 404225), 'gen_split_2892': ([], 404225), 'gen_split_2893': ([], 404225), 'gen_split_2894': ([], 404225), 'gen_rotlv2di3': ([], 404225), 'gen_rotrv2di3': ([], 404225), 'gen_ashrv16qi3': ([], 404225), 'gen_ashrv2di3': ([], 404225), 'gen_avx_vpermilv8sf': ([], 404225), 'gen_avx_vperm2f128v8sf3': ([], 404225), 'gen_split_2930': ([], 404225), 'gen_avx_vpermilv4df': ([], 404225), 'gen_avx_vperm2f128v4df3': ([], 404225), 'gen_split_2931': ([], 404225), 'gen_avx_vpermilv2df': ([], 404225), 'gen_avx_vpermilv4sf': ([], 404225), 'gen_avx_vperm2f128v8si3': ([], 404225)}, "PosixPath('602/lower-subreg.bc')": {'sbitmap_iter_init': ([], 7570), 'VEC_bitmap_base_space': ([], 7570), 'VEC_bitmap_heap_reserve_exact': ([], 7570), 'VEC_bitmap_heap_safe_grow': ([], 7570), 'find_decomposable_shift_zext': ([], 7570), 'recog_memoized': ([], 7570), 'simple_move_operand': ([0], 7564), 'simple_move': ([8], 7564), 'find_pseudo_copy': ([], 7570), 'bmp_iter_set_init': ([], 7570), 'bmp_iter_set': ([4], 7565), 'bmp_iter_next': ([], 7570), 'propagate_pseudo_copies': ([], 7570), 'decompose_register': ([], 7570), 'resolve_subreg_p': ([], 7570), 'simplify_subreg_concatn': ([1, 2], 7561), 'simplify_gen_subreg_concatn': ([], 7570), 'resolve_subreg_use': ([], 7570), 'resolve_reg_notes': ([], 7570), 'resolve_clobber': ([], 7570), 'adjust_decomposed_uses': ([], 7570), 'can_decompose_p': ([], 7570), 'resolve_simple_move': ([11, 29], 7560), 'resolve_shift_zext': ([], 7570), 'sbitmap_iter_cond': ([], 7570), 'sbitmap_iter_next': ([], 7570), 'VEC_bitmap_base_iterate': ([], 7570), 'find_decomposable_subregs': ([], 7570), 'decompose_multiword_subregs': ([23], 7569)}, "PosixPath('602/cfg.bc')": {'init_flow': ([], 13113), 'unlink_block': ([], 13113), 'free_edge': ([], 13113), 'ei_next': ([], 13113), 'clear_edges': ([35], 13109), 'link_block': ([], 13113), 'compact_blocks': ([], 13113), 'expunge_block': ([], 13113), 'VEC_edge_base_space': ([], 13113), 'VEC_edge_gc_reserve': ([], 13113), 'VEC_edge_base_quick_push': ([], 13113), 'VEC_edge_gc_safe_push': ([2], 13111), 'connect_dest': ([], 13113), 'unchecked_make_edge': ([], 13113), 'cached_make_edge': ([], 13113), 'make_single_succ_edge': ([], 13113), 'VEC_edge_base_unordered_remove': ([], 13113), 'disconnect_src': ([], 13113), 'disconnect_dest': ([], 13113), 'redirect_edge_succ_nodup': ([], 13113), 'clear_bb_flags': ([], 13113), 'check_bb_profile': ([27, 44], 13105), 'bmp_iter_set_init': ([], 13113), 'bmp_iter_set': ([], 13113), 'bmp_iter_next': ([], 13113), 'dump_regset': ([], 13113), 'dump_edge_info': ([], 13113), 'dump_bb_info': ([17], 13089), 'dump_reg_info': ([], 13113), 'dump_flow_info': ([], 13113), 'alloc_aux_for_block': ([], 13113), 'clear_aux_for_blocks': ([], 13113), 'alloc_aux_for_edge': ([], 13113), 'alloc_aux_for_edges': ([20, 32], 13108), 'clear_aux_for_edges': ([17, 28], 13108), 'debug_bb_n': ([], 13113), 'dump_cfg_bb_info': ([], 13113), 'brief_dump_cfg': ([], 13113), 'update_bb_profile_for_threading': ([4, 55, 57], 13088), 'scale_bbs_frequencies_int': ([13], 13111), 'scale_bbs_frequencies_gcov_type': ([21, 33], 13109), 'copy_original_table_set': ([], 13113), 'get_bb_original': ([], 13113), 'get_bb_copy': ([], 13113), 'copy_original_table_clear': ([], 13113), 'set_loop_copy': ([], 13113), 'get_loop': ([], 13113), 'get_loop_copy': ([], 13113)}, "PosixPath('602/c-typeck.bc')": {'parser_build_unary_op': ([3], 80030), 'parser_build_binary_op': ([], 80049), 'push_string': ([], 80049), 'push_member_name': ([], 80049), 'push_array_bounds': ([], 80049), 'push_range_stack': ([], 80049), 'c_incomplete_type_error': ([0], 80044), 'require_complete_type': ([], 80049), 'c_type_promotes_to': ([], 80049), 'c_vla_type_p': ([], 80049), 'c_build_qualified_type': ([], 80049), 'qualify_type': ([], 80049), 'same_translation_unit_p': ([], 80049), 'alloc_tagged_tu_seen_cache': ([], 80049), 'type_lists_compatible_p': ([], 80049), 'comptypes_internal': ([4, 40], 80042), 'tagged_types_tu_compatible_p': ([], 80049), 'composite_type': ([26], 80002), 'c_common_type': ([], 80049), 'common_type': ([], 80049), 'decl_constant_value': ([], 80049), 'lvalue_p': ([], 80049), 'remove_c_maybe_const_expr': ([], 80049), 'perform_integral_promotions': ([], 80049), 'default_conversion': ([], 80049), 'note_integer_operands': ([], 80049), 'c_objc_common_truthvalue_conversion': ([3], 80043), 'c_size_in_bytes': ([], 80049), 'readonly_error': ([], 80049), 'c_mark_addressable': ([], 80049), 'comp_target_types': ([], 80049), 'common_pointer_type': ([], 80049), 'null_pointer_constant_p': ([], 80049), 'array_to_pointer_conversion': ([], 80049), 'build_unary_op': ([13, 31], 80024), 'build_binary_op': ([0, 34, 45, 122], 80000), 'function_to_pointer_conversion': ([], 80049), 'default_function_array_conversion': ([], 80049), 'lookup_field': ([12], 80040), 'build_component_ref': ([8], 80041), 'build_indirect_ref': ([0, 4], 80041), 'build_array_ref': ([4], 80039), 'record_maybe_used_decl': ([], 80049), 'build_external_ref': ([0], 80046), 'pop_maybe_used': ([], 80049), 'c_expr_sizeof_expr': ([5, 17], 80017), 'c_expr_sizeof_type': ([4], 80034), 'VEC_tree_base_quick_push': ([], 80049), 'VEC_tree_base_iterate': ([], 80049), 'convert_for_assignment': ([47, 53], 80012), 'convert_arguments': ([], 80049), 'build_function_call': ([], 80049), 'build_function_call_vec': ([], 80049), 'build_conditional_expr': ([24, 54], 79995), 'build_compound_expr': ([], 80049), 'spelling_length': ([], 80049), 'print_spelling': ([1], 80039), 'maybe_warn_string_init': ([], 80049), 'valid_compound_expr_initializer': ([], 80049), 'digest_init': ([8], 80046), 'handle_warn_cast_qual': ([], 80049), 'build_c_cast': ([143], 80047), 'c_cast_expr': ([7], 80046), 'build_modify_expr': ([5], 80044), 'store_init_value': ([], 80049), 'start_init': ([], 80049), 'finish_init': ([0], 80021), 'really_start_incremental_init': ([], 80049), 'add_pending_init': ([], 80049), 'set_nonincremental_init': ([0], 80047), 'VEC_constructor_elt_base_space': ([], 80049), 'VEC_constructor_elt_gc_reserve': ([], 80049), 'VEC_constructor_elt_gc_safe_push': ([], 80049), 'output_init_element': ([4, 103, 104], 80010), 'output_pending_init_elements': ([], 80049), 'find_init_member': ([], 80049), 'set_nonincremental_init_from_string': ([], 80049), 'push_init_level': ([0], 80048), 'pop_init_level': ([5, 6, 108], 80026), 'process_init_element': ([16], 80038), 'set_designator': ([], 80049), 'set_init_index': ([], 80049), 'set_init_label': ([], 80049), 'build_asm_expr': ([], 80049), 'c_finish_return': ([], 80049), 'c_start_case': ([], 80049), 'do_case': ([], 80049), 'c_finish_case': ([], 80049), 'c_finish_if_stmt': ([], 80049), 'c_finish_loop': ([], 80049), 'c_finish_bc_stmt': ([], 80049), 'emit_side_effect_warnings': ([], 80049), 'c_process_expr_stmt': ([], 80049), 'c_end_compound_stmt': ([], 80049), 'tsi_next': ([], 80049), 'c_finish_stmt_expr': ([], 80049), 'c_expr_to_decl': ([], 80049), 'c_finish_omp_parallel': ([], 80049), 'c_finish_omp_task': ([], 80049), 'bitmap_initialize_stat': ([], 80049), 'c_finish_omp_clauses': ([0], 80039)}, "PosixPath('602/tree-cfgcleanup.bc')": {'VEC_gimple_base_pop': ([], 6579), 'ei_next': ([], 6579), 'remove_fallthru_edge': ([5], 6577), 'split_bbs_on_noreturn_calls': ([], 6579), 'single_pred_p': ([], 6579), 'single_pred_edge': ([], 6579), 'cleanup_omp_return': ([], 6579), 'bb_seq': ([], 6579), 'gsi_last_bb': ([], 6579), 'gsi_stmt': ([], 6579), 'single_succ_p': ([], 6579), 'gimple_ops': ([], 6579), 'gimple_op': ([], 6579), 'single_succ_edge': ([], 6579), 'cleanup_control_expr_graph': ([], 6579), 'cleanup_control_flow_bb': ([], 6579), 'phi_nodes': ([], 6579), 'gsi_prev': ([], 6579), 'tree_forwarder_block_p': ([18], 6568), 'has_abnormal_incoming_edge_p': ([5], 6577), 'gsi_next': ([], 6579), 'phi_alternatives_equal': ([], 6579), 'gsi_start_bb': ([], 6579), 'gsi_after_labels': ([], 6579), 'remove_forwarder_block': ([14], 6570), 'cleanup_tree_cfg_bb': ([], 6579), 'cleanup_tree_cfg_1': ([], 6579), 'loops_state_set': ([], 6579), 'cleanup_tree_cfg_noloop': ([], 6579), 'loops_state_satisfies_p': ([], 6579), 'loops_state_clear': ([], 6579), 'repair_loop_structures': ([], 6579), 'cleanup_tree_cfg': ([], 6579), 'has_zero_uses': ([], 6579), 'single_imm_use': ([], 6579), 'remove_forwarder_block_with_phi': ([], 6579), 'merge_phi_nodes': ([43], 6576)}, "PosixPath('602/concat.bc')": {'concat_copy2': ([], 1418), 'vconcat_length': ([], 1418), 'concat_length': ([], 1418), 'vconcat_copy': ([], 1418), 'concat': ([], 1418), 'reconcat': ([], 1418)}, "PosixPath('602/cfgexpand.bc')": {'add_stack_var': ([], 28777), 'expand_used_vars': ([], 28777), 'expand_gimple_basic_block': ([], 28777), 'construct_exit_block': ([124], 28774), 'union_stack_vars': ([], 28777), 'gsi_last': ([], 28777), 'gsi_start': ([], 28777), 'first_imm_use_on_stmt': ([], 28777), 'next_imm_use_on_stmt': ([], 28777), 'expand_gimple_cond': ([], 28777), 'expand_gimple_tailcall': ([], 28777), 'gimple_ops': ([], 28777), 'gimple_op': ([], 28777), 'gimple_assign_rhs_to_tree': ([], 28777), 'clear_tree_used': ([], 28777), 'init_vars_expansion': ([], 28777), 'var_to_partition': ([], 28777), 'set_rtl': ([], 28777), 'expand_one_register_var': ([], 28777), 'expand_one_stack_var_at': ([], 28777), 'expand_one_stack_var': ([], 28777), 'expand_one_var': ([11], 28770), 'account_used_vars_for_block': ([], 28777), 'account_stack_vars': ([], 28777), 'fini_vars_expansion': ([], 28777), 'estimated_stack_frame_size': ([5], 28768), 'bb_seq': ([], 28777), 'gsi_start_bb': ([], 28777), 'gsi_stmt': ([], 28777), 'gsi_next': ([], 28777), 'discover_nonconstant_array_refs_r': ([0, 1], 28770), 'discover_nonconstant_array_refs': ([], 28777), 'partition_to_var': ([], 28777), 'add_stack_var_conflict': ([2], 28772), 'expand_used_vars_for_block': ([], 28777), 'aggregate_contains_union_type': ([], 28777), 'add_alias_set_conflicts': ([], 28777), 'stack_protect_classify_type': ([], 28777), 'add_stack_protection_conflicts': ([], 28777), 'stack_var_conflict_p': ([], 28777), 'bmp_iter_set_init': ([], 28777), 'bmp_iter_set': ([4], 28772), 'bmp_iter_next': ([], 28777), 'add_partitioned_vars_to_ptset': ([4], 28768), 'update_alias_info_with_stack_vars': ([], 28777), 'stack_var_size_cmp': ([], 28777), 'partition_stack_vars': ([], 28777), 'dump_stack_var_partition': ([], 28777), 'expand_stack_vars': ([], 28777), 'construct_init_block': ([], 28777), 'ei_next': ([], 28777), 'single_succ_p': ([], 28777), 'single_succ_edge': ([], 28777), 'gimple_call_fndecl': ([], 28777), 'expand_call_stmt': ([], 28777), 'expand_gimple_stmt_1': ([], 28777), 'expand_gimple_stmt': ([], 28777), 'gimple_def_ops': ([], 28777), 'gimple_vdef': ([], 28777), 'gimple_use_ops': ([], 28777), 'gimple_vuse': ([], 28777), 'op_iter_init': ([], 28777), 'op_iter_next_tree': ([], 28777), 'end_readonly_imm_use_p': ([], 28777), 'first_readonly_imm_use': ([], 28777), 'next_readonly_imm_use': ([], 28777), 'end_imm_use_stmt_p': ([], 28777), 'clear_and_done_ssa_iter': ([], 28777), 'op_iter_next_use': ([], 28777), 'op_iter_init_phiuse': ([], 28777), 'delink_imm_use': ([], 28777), 'link_imm_use_to_list': ([], 28777), 'move_use_after_head': ([], 28777), 'gimple_vuse_op': ([], 28777), 'link_use_stmts_after': ([], 28777), 'first_imm_use_stmt': ([], 28777), 'link_imm_use': ([], 28777), 'set_ssa_use_from_ptr': ([], 28777), 'next_imm_use_stmt': ([], 28777), 'gimple_cond_single_var_p': ([], 28777), 'label_rtx_for_bb': ([], 28777), 'delink_stmt_imm_use': ([], 28777), 'op_iter_next_def': ([], 28777), 'op_iter_init_def': ([], 28777), 'single_ssa_def_operand': ([], 28777), 'expand_debug_expr': ([15, 149, 200], 28765), 'expand_debug_locations': ([], 28777), 'expand_stack_alignment': ([], 28777), 'set_block_levels': ([], 28777), 'gimple_expand_cfg': ([15, 422, 965, 1389, 1653], 28761)}, "PosixPath('602/graphite-blocking.bc')": {}, "PosixPath('602/tree-predcom.bc')": {'replace_phis_by_defined_names': ([], 16856), 'combine_chains': ([], 16856), 'combinable_refs_p': ([], 16856), 'reassociate_to_the_same_stmt': ([], 16856), 'initialize_root_vars_lm': ([], 16856), 'dump_dref': ([], 16856), 'VEC_tree_base_iterate': ([], 16856), 'VEC_dref_base_iterate': ([], 16856), 'dump_chain': ([], 16856), 'VEC_chain_p_base_iterate': ([], 16856), 'dump_chains': ([], 16856), 'dump_component': ([], 16856), 'gimple_vuse': ([], 16856), 'gimple_vop': ([], 16856), 'mark_virtual_ops_for_renaming': ([], 16856), 'number_of_loops': ([], 16856), 'VEC_loop_p_base_iterate': ([], 16856), 'VEC_int_base_quick_push': ([], 16856), 'VEC_int_base_iterate': ([], 16856), 'get_loop': ([], 16856), 'fel_next': ([5], 16853), 'fel_init': ([], 16856), 'VEC_edge_base_iterate': ([], 16856), 'last_always_executed_block': ([], 16856), 'VEC_data_reference_p_base_iterate': ([], 16856), 'suitable_reference_p': ([], 16856), 'component_of': ([], 16856), 'merge_comps': ([], 16856), 'VEC_ddr_p_base_iterate': ([], 16856), 'aff_combination_dr_offset': ([], 16856), 'determine_offset': ([], 16856), 'VEC_dref_base_quick_push': ([], 16856), 'split_data_refs_to_components': ([], 16856), 'suitable_component_p': ([], 16856), 'filter_suitable_components': ([], 16856), 'VEC_dref_base_space': ([], 16856), 'VEC_dref_heap_reserve': ([], 16856), 'VEC_dref_heap_safe_push': ([], 16856), 'make_invariant_chain': ([], 16856), 'VEC_chain_p_base_space': ([], 16856), 'VEC_chain_p_heap_reserve': ([], 16856), 'VEC_chain_p_base_quick_push': ([], 16856), 'VEC_chain_p_heap_safe_push': ([2], 16854), 'nontrivial_chain_p': ([], 16856), 'gimple_ops': ([], 16856), 'gimple_op': ([], 16856), 'gsi_stmt': ([], 16856), 'gsi_next': ([], 16856), 'valid_initializer_p': ([], 16856), 'find_looparound_phi': ([], 16856), 'VEC_dref_base_quick_insert': ([], 16856), 'VEC_dref_heap_safe_insert': ([], 16856), 'insert_looparound_copy': ([], 16856), 'add_looparound_copies': ([], 16856), 'release_chain': ([], 16856), 'make_rooted_chain': ([], 16856), 'add_ref_to_chain': ([], 16856), 'order_drefs': ([], 16856), 'determine_roots_comp': ([], 16856), 'determine_roots': ([], 16856), 'VEC_tree_base_quick_push': ([], 16856), 'ref_at_iteration': ([1], 16854), 'prepare_initializers_chain': ([], 16856), 'VEC_chain_p_base_unordered_remove': ([], 16856), 'prepare_initializers': ([], 16856), 'chain_can_be_combined_p': ([], 16856), 'VEC_chain_p_base_pop': ([], 16856), 'name_for_ref': ([], 16856), 'end_readonly_imm_use_p': ([], 16856), 'first_readonly_imm_use': ([], 16856), 'next_readonly_imm_use': ([], 16856), 'single_nonlooparound_use': ([], 16856), 'find_use_stmt': ([], 16856), 'may_reassociate_p': ([], 16856), 'find_associative_operation_root': ([], 16856), 'remove_name_from_operation': ([], 16856), 'stmt_combining_refs': ([], 16856), 'try_combine_chains': ([], 16856), 'determine_unroll_factor': ([], 16856), 'single_pred_p': ([], 16856), 'end_imm_use_stmt_p': ([], 16856), 'clear_and_done_ssa_iter': ([], 16856), 'op_iter_next_use': ([], 16856), 'op_iter_init_phiuse': ([], 16856), 'delink_imm_use': ([], 16856), 'link_imm_use_to_list': ([], 16856), 'move_use_after_head': ([], 16856), 'gimple_def_ops': ([], 16856), 'gimple_vdef': ([], 16856), 'gimple_use_ops': ([], 16856), 'op_iter_init': ([], 16856), 'op_iter_init_use': ([], 16856), 'gimple_vuse_op': ([], 16856), 'link_use_stmts_after': ([], 16856), 'first_imm_use_stmt': ([], 16856), 'next_imm_use_stmt': ([], 16856), 'base_names_in_chain_on': ([], 16856), 'eliminate_temp_copies': ([], 16856), 'bb_seq': ([], 16856), 'gsi_start_bb': ([], 16856), 'gsi_after_labels': ([], 16856), 'replace_ref_with': ([], 16856), 'execute_load_motion': ([], 16856), 'remove_stmt': ([], 16856), 'get_init_expr': ([], 16856), 'initialize_root_vars': ([], 16856), 'initialize_root': ([], 16856), 'execute_pred_commoning_chain': ([], 16856), 'execute_pred_commoning': ([], 16856), 'release_chains': ([], 16856), 'replace_names_by_phis': ([], 16856), 'execute_pred_commoning_cbck': ([23], 16852), 'tree_predictive_commoning_loop': ([], 16856), 'tree_predictive_commoning': ([], 16856)}, "PosixPath('602/fibheap.bc')": {'fibheap_union': ([], 1857), 'fibnode_remove': ([], 1857), 'fibnode_new': ([], 1857), 'fibnode_insert_after': ([], 1857), 'fibheap_ins_root': ([], 1857), 'fibheap_insert': ([], 1857), 'fibheap_min': ([], 1857), 'fibheap_min_key': ([], 1857), 'fibheap_rem_root': ([], 1857), 'fibheap_link': ([], 1857), 'fibheap_consolidate': ([], 1857), 'fibheap_extr_min_node': ([], 1857), 'fibheap_cut': ([], 1857), 'fibheap_cascading_cut': ([], 1857), 'fibheap_replace_key_data': ([], 1857), 'fibheap_replace_key': ([], 1857), 'fibheap_delete_node': ([], 1857)}, "PosixPath('602/cpp_identifiers.bc')": {'alloc_node': ([0, 22], 852), '_cpp_init_hashtable': ([], 867), '_cpp_destroy_hashtable': ([], 867)}, "PosixPath('602/c-pretty-print.bc')": {'pp_c_space_for_pointer_operator': ([], 17310), 'pp_c_identifier': ([], 17310), 'pp_c_type_qualifier_list': ([0], 17307), 'pp_c_tree_decl_identifier': ([], 17310), 'pp_c_type_specifier': ([0], 17306), 'pp_c_specifier_qualifier_list': ([], 17310), 'pp_c_parameter_type_list': ([], 17310), 'pp_c_storage_class_specifier': ([], 17310), 'pp_c_function_specifier': ([], 17310), 'pp_c_declaration_specifiers': ([], 17310), 'pp_c_direct_declarator': ([], 17310), 'pp_c_constructor_elts': ([], 17310), 'pp_c_integer_constant': ([], 17310), 'pp_c_char': ([], 17310), 'pp_c_cast_expression': ([], 17310), 'pp_c_unary_expression': ([], 17310), 'pp_c_additive_expression': ([], 17310), 'pp_c_shift_expression': ([], 17310), 'pp_c_relational_expression': ([], 17310), 'pp_c_equality_expression': ([], 17310), 'pp_c_and_expression': ([], 17310), 'pp_c_exclusive_or_expression': ([], 17310), 'pp_c_inclusive_or_expression': ([], 17310), 'pp_c_logical_and_expression': ([], 17310), 'pp_c_logical_or_expression': ([], 17310), 'pp_c_expression': ([], 17310), 'pp_c_expression_list': ([0], 17306), 'pp_c_primary_expression': ([], 17310), 'pp_c_brace_enclosed_initializer_list': ([], 17310), 'pp_c_constant': ([], 17310), 'pp_c_init_declarator': ([], 17310), 'pp_c_attributes': ([2], 17300), 'pp_c_function_definition': ([], 17310), 'pp_c_id_expression': ([], 17310), 'init_call_expr_arg_iterator': ([], 17310), 'next_call_expr_arg': ([], 17310), 'first_call_expr_arg': ([], 17310), 'more_call_expr_args_p': ([], 17310), 'pp_c_complex_expr': ([], 17310), 'pp_c_postfix_expression': ([], 17310), 'pp_c_statement': ([], 17310), 'pp_c_conditional_expression': ([], 17310), 'pp_c_assignment_expression': ([], 17310), 'pp_c_multiplicative_expression': ([], 17310), 'pp_c_pointer': ([], 17310), 'pp_c_abstract_declarator': ([2], 17308), 'pp_c_pretty_printer_init': ([], 17310), 'print_c_tree': ([], 17310)}, "PosixPath('602/dyn-string.bc')": {'dyn_string_init': ([], 1707), 'dyn_string_release': ([], 1707), 'dyn_string_resize': ([], 1707), 'dyn_string_insert': ([], 1707), 'dyn_string_insert_cstr': ([], 1707), 'dyn_string_insert_char': ([], 1707), 'dyn_string_append': ([], 1707), 'dyn_string_append_cstr': ([], 1707), 'dyn_string_append_char': ([], 1707), 'dyn_string_eq': ([], 1707)}, "PosixPath('602/tree-inline.bc')": {'gsi_start': ([1], 34174), 'unsave_expr_now': ([], 34176), 'copy_gimple_seq_and_replace_locals': ([], 34176), 'initialize_cfun': ([], 34176), 'remap_blocks': ([], 34176), 'build_duplicate_type': ([], 34176), 'expand_call_inline': ([], 34176), 'copy_cfg_body': ([], 34176), 'copy_phis_for_bb': ([], 34176), 'bb_seq': ([], 34176), 'gsi_last_bb': ([], 34176), 'tsi_next': ([], 34176), 'copy_statement_list': ([], 34176), 'remap_save_expr': ([], 34176), 'VEC_constructor_elt_gc_copy': ([], 34176), 'copy_tree_r': ([], 34176), 'VEC_tree_gc_copy': ([], 34176), 'var_ann': ([], 34176), 'can_be_nonlocal': ([0], 34173), 'VEC_tree_base_space': ([], 34176), 'VEC_tree_gc_reserve': ([], 34176), 'VEC_tree_base_quick_push': ([], 34176), 'VEC_tree_gc_safe_push': ([2], 34174), 'get_var_ann': ([], 34176), 'remap_decl': ([], 34176), 'remap_type_1': ([], 34176), 'remap_ssa_name': ([], 34176), 'remap_decls': ([], 34176), 'remap_block': ([], 34176), 'copy_bind_expr': ([], 34176), 'copy_tree_body_r': ([0], 34175), 'gsi_stmt': ([], 34176), 'gimple_ops': ([], 34176), 'gimple_omp_for_index': ([], 34176), 'gimple_omp_for_set_index': ([], 34176), 'gimple_omp_for_initial': ([], 34176), 'gimple_omp_for_set_initial': ([], 34176), 'gimple_omp_for_final': ([], 34176), 'gimple_omp_for_set_final': ([], 34176), 'gimple_omp_for_incr': ([], 34176), 'gimple_omp_for_set_incr': ([], 34176), 'gimple_omp_for_cond': ([], 34176), 'gimple_omp_for_set_cond': ([], 34176), 'VEC_gimple_base_space': ([], 34176), 'VEC_gimple_heap_reserve': ([], 34176), 'VEC_gimple_base_quick_push': ([], 34176), 'VEC_gimple_heap_safe_push': ([2], 34174), 'gimple_call_fndecl': ([], 34176), 'remap_eh_region_nr': ([], 34176), 'gimple_set_op': ([], 34176), 'remap_gimple_op_r': ([11, 12], 34167), 'gsi_next': ([], 34176), 'remap_gimple_seq': ([], 34176), 'remap_gimple_stmt': ([], 34176), 'has_label_address_in_static_1': ([], 34176), 'copy_forbidden': ([0], 34171), 'inline_forbidden_p_stmt': ([], 34176), 'inline_forbidden_p': ([], 34176), 'tree_inlinable_function_p': ([], 34176), 'estimate_num_insns': ([], 34176), 'estimate_num_insns_seq': ([], 34176), 'gsi_start_bb': ([], 34176), 'estimate_num_insns_fn': ([], 34176), 'count_insns_seq': ([], 34176), 'get_indirect_callee_fndecl': ([], 34176), 'prepend_lexical_block': ([], 34176), 'copy_decl_for_dup_finish': ([0], 34158), 'copy_decl_to_var': ([], 34176), 'self_inlining_addr_expr': ([], 34176), 'insert_debug_decl_map': ([], 34176), 'insert_init_debug_bind': ([], 34176), 'insert_init_stmt': ([], 34176), 'setup_one_parameter': ([], 34176), 'declare_inline_vars': ([], 34176), 'initialize_inlined_parameters': ([], 34176), 'is_global_var': ([], 34176), 'copy_result_decl_to_var': ([], 34176), 'declare_return_variable': ([], 34176), 'VEC_tree_heap_reserve_exact': ([], 34176), 'VEC_tree_heap_safe_grow': ([], 34176), 'gimple_def_ops': ([], 34176), 'gimple_vdef': ([], 34176), 'op_iter_init': ([], 34176), 'op_iter_next_tree': ([], 34176), 'op_iter_init_tree': ([], 34176), 'copy_bb': ([], 34176), 'ei_next': ([], 34176), 'delink_imm_use': ([], 34176), 'link_imm_use_to_list': ([], 34176), 'link_imm_use': ([], 34176), 'set_ssa_use_from_ptr': ([], 34176), 'update_ssa_across_abnormal_edges': ([], 34176), 'copy_edges_for_bb': ([], 34176), 'phi_nodes': ([], 34176), 'VEC_gimple_base_iterate': ([], 34176), 'copy_debug_stmt': ([], 34176), 'copy_debug_stmts': ([], 34176), 'copy_body': ([79], 34173), 'gimple_expand_calls_inline': ([], 34176), 'gsi_prev': ([], 34176), 'fold_marked_statements': ([], 34176), 'delete_unreachable_blocks_update_callgraph': ([31], 34173), 'copy_decl_no_change': ([], 34176), 'optimize_inline_calls': ([], 34176), 'unsave_expr_1': ([], 34176), 'unsave_r': ([], 34176), 'mark_local_for_remap_r': ([], 34176), 'replace_locals_op': ([], 34176), 'replace_locals_stmt': ([], 34176), 'mark_local_labels_stmt': ([], 34176), 'VEC_ipa_opt_pass_heap_copy': ([], 34176), 'VEC_ipa_opt_pass_base_space': ([], 34176), 'VEC_ipa_opt_pass_heap_reserve': ([], 34176), 'VEC_ipa_opt_pass_base_quick_push': ([], 34176), 'VEC_ipa_opt_pass_heap_safe_push': ([], 34176), 'copy_static_chain': ([], 34176), 'copy_arguments_for_versioning': ([], 34176), 'single_succ_p': ([], 34176), 'single_succ_edge': ([], 34176), 'VEC_gimple_base_pop': ([], 34176), 'update_clone_info': ([], 34176), 'tree_function_versioning': ([3, 41, 118], 34138), 'init_call_expr_arg_iterator': ([], 34176), 'next_call_expr_arg': ([], 34176), 'first_call_expr_arg': ([], 34176), 'copy_tree_body': ([], 34176), 'maybe_inline_call_in_expr': ([], 34176), 'tree_can_inline_p': ([], 34176)}, "PosixPath('602/tree-ssa-phiprop.bc')": {'single_succ_p': ([], 4597), 'single_succ_edge': ([], 4597), 'single_succ': ([], 4597), 'VEC_basic_block_base_iterate': ([], 4597), 'gsi_stmt': ([], 4597), 'clear_and_done_ssa_iter': ([], 4597), 'op_iter_next_use': ([], 4597), 'op_iter_init_phiuse': ([], 4597), 'gimple_ops': ([], 4597), 'end_imm_use_stmt_p': ([], 4597), 'delink_imm_use': ([], 4597), 'link_imm_use_to_list': ([], 4597), 'move_use_after_head': ([], 4597), 'gimple_def_ops': ([], 4597), 'gimple_vdef': ([], 4597), 'gimple_use_ops': ([], 4597), 'gimple_vuse': ([], 4597), 'op_iter_init': ([], 4597), 'op_iter_init_use': ([], 4597), 'gimple_vuse_op': ([], 4597), 'link_use_stmts_after': ([0], 4595), 'first_imm_use_stmt': ([], 4597), 'next_imm_use_stmt': ([], 4597), 'phivn_valid_p': ([], 4597), 'single_imm_use': ([], 4597), 'gimple_set_op': ([], 4597), 'ei_next': ([], 4597), 'phiprop_insert_phi': ([], 4597), 'propagate_with_phi': ([], 4597), 'gsi_next': ([], 4597), 'tree_ssa_phiprop': ([48], 4592)}, "PosixPath('602/cpp_files.bc')": {'new_file_hash_entry': ([3], 9691), '_cpp_report_missing_guards': ([], 9692), '_cpp_save_file_entries': ([], 9692), '_cpp_read_file_entries': ([], 9692), 'read_file': ([], 9692), 'search_cache': ([], 9692), 'make_cpp_file': ([], 9692), 'append_file_to_dir': ([], 9692), 'read_name_map': ([], 9692), 'allocate_file_hash_entries': ([], 9692), 'make_cpp_dir': ([], 9692), 'remap_filename': ([], 9692), 'open_file': ([0], 9665), 'validate_pch': ([], 9692), 'pch_open_file': ([], 9692), 'open_file_failed': ([], 9692), 'find_file_in_dir': ([], 9692), 'search_path_exhausted': ([], 9692), '_cpp_find_file': ([], 9692), '_cpp_mark_file_once_only': ([], 9692), 'read_file_guts': ([], 9692), 'pchf_compare': ([], 9692), 'check_file_against_entries': ([], 9692), 'should_stack_file': ([], 9692), '_cpp_stack_file': ([], 9692), 'dir_name_of_file': ([], 9692), 'search_path_head': ([], 9692), '_cpp_stack_include': ([], 9692), 'cpp_included': ([], 9692), 'cpp_included_before': ([], 9692), 'file_hash_eq': ([], 9692), 'file_hash_hash': ([], 9692), '_cpp_cleanup_files': ([], 9692), 'cpp_clear_file_cache': ([], 9692), '_cpp_fake_include': ([], 9692), 'cpp_make_system_header': ([], 9692), 'report_missing_guard': ([], 9692), '_cpp_compare_file_date': ([], 9692), '_cpp_pop_file_buffer': ([], 9692), 'cpp_set_include_chains': ([], 9692)}, "PosixPath('602/insn-extract.bc')": {'insn_extract': ([], 37845)}, "PosixPath('602/lto-streamer-in.bc')": {'input_cfg': ([], 18652), 'fixup_eh_region_pointers': ([], 18652), 'lto_input_eh_catch_list': ([], 18652), 'lto_data_in_create': ([], 18652), 'VEC_basic_block_base_space': ([], 18652), 'VEC_basic_block_gc_reserve_exact': ([], 18652), 'VEC_basic_block_gc_safe_grow': ([0], 18650), 'VEC_basic_block_gc_safe_grow_cleared': ([], 18652), 'set_bb_seq': ([], 18652), 'make_new_block': ([], 18652), 'clear_line_info': ([], 18652), 'VEC_bitpack_word_t_base_space': ([], 18652), 'VEC_bitpack_word_t_heap_reserve': ([], 18652), 'VEC_bitpack_word_t_base_quick_push': ([], 18652), 'VEC_bitpack_word_t_heap_safe_push': ([], 18652), 'lto_input_bitpack': ([], 18652), 'lto_file_decl_data_get_type': ([], 18652), 'lto_file_decl_data_get_field_decl': ([], 18652), 'lto_file_decl_data_get_fn_decl': ([], 18652), 'lto_file_decl_data_get_type_decl': ([], 18652), 'lto_file_decl_data_get_namespace_decl': ([], 18652), 'lto_file_decl_data_get_var_decl': ([], 18652), 'lto_input_tree_ref': ([], 18652), 'input_string_internal': ([10], 18648), 'input_string': ([], 18652), 'input_string_cst': ([], 18652), 'input_identifier': ([], 18652), 'unpack_ts_base_value_fields': ([], 18652), 'unpack_ts_real_cst_value_fields': ([], 18652), 'unpack_ts_fixed_cst_value_fields': ([], 18652), 'unpack_ts_decl_common_value_fields': ([], 18652), 'unpack_ts_decl_with_vis_value_fields': ([], 18652), 'unpack_ts_type_value_fields': ([], 18652), 'unpack_value_fields': ([], 18652), 'lto_materialize_tree': ([], 18652), 'canon_file_name': ([], 18652), 'lto_input_location': ([], 18652), 'tree_operand_length': ([], 18652), 'VEC_tree_base_space': ([], 18652), 'VEC_tree_gc_reserve': ([], 18652), 'VEC_tree_base_quick_push': ([], 18652), 'VEC_tree_gc_safe_push': ([2], 18650), 'VEC_constructor_elt_base_space': ([], 18652), 'VEC_constructor_elt_gc_reserve': ([], 18652), 'VEC_constructor_elt_gc_safe_push': ([], 18652), 'lto_stream_as_builtin_p': ([], 18652), 'get_resolution': ([], 18652), 'lto_register_var_decl_in_symtab': ([], 18652), 'lto_register_function_decl_in_symtab': ([], 18652), 'lto_input_tree': ([0], 18643), 'input_ssa_names': ([], 18652), 'VEC_eh_region_base_space': ([], 18652), 'VEC_eh_region_gc_reserve_exact': ([], 18652), 'VEC_eh_region_gc_safe_grow': ([], 18652), 'input_eh_region': ([], 18652), 'VEC_eh_landing_pad_base_space': ([], 18652), 'VEC_eh_landing_pad_gc_reserve_exact': ([], 18652), 'VEC_eh_landing_pad_gc_safe_grow': ([], 18652), 'VEC_tree_gc_reserve_exact': ([], 18652), 'VEC_tree_gc_safe_grow': ([], 18652), 'VEC_uchar_base_space': ([], 18652), 'VEC_uchar_gc_reserve_exact': ([], 18652), 'VEC_uchar_gc_safe_grow': ([], 18652), 'VEC_eh_region_base_iterate': ([], 18652), 'VEC_eh_landing_pad_base_iterate': ([], 18652), 'input_eh_regions': ([], 18652), 'bb_seq': ([], 18652), 'gsi_start_bb': ([], 18652), 'gimple_ops': ([], 18652), 'gimple_set_op': ([], 18652), 'maybe_fixup_handled_component': ([], 18652), 'emit_label_in_global_context_p': ([], 18652), 'gimple_asm_output_op': ([], 18652), 'maybe_fixup_decls': ([], 18652), 'input_gimple_stmt': ([], 18652), 'lto_tag_check_set': ([], 18652), 'input_phi': ([], 18652), 'input_bb': ([], 18652), 'gsi_stmt': ([], 18652), 'gsi_next': ([], 18652), 'fixup_call_stmt_edges_1': ([], 18652), 'fixup_call_stmt_edges': ([], 18652), 'input_function': ([], 18652), 'VEC_alias_pair_base_space': ([], 18652), 'VEC_alias_pair_gc_reserve': ([], 18652), 'VEC_alias_pair_gc_safe_push': ([], 18652), 'input_alias_pairs': ([], 18652), 'lto_data_in_delete': ([], 18652), 'lto_read_body': ([], 18652)}, "PosixPath('602/timevar.bc')": {'get_time': ([], 6958), 'timevar_accumulate': ([], 6958), 'timevar_push_1': ([2], 6941), 'timevar_pop_1': ([], 6958), 'timevar_start': ([], 6958), 'timevar_stop': ([], 6958), 'timevar_print': ([], 6958)}, "PosixPath('602/profile.bc')": {'branch_prob': ([165, 387, 1078, 1339, 1340], 10098), 'compute_branch_probabilities': ([39, 70, 931], 10100), 'bb_seq': ([], 10114), 'gsi_last_bb': ([], 10114), 'gsi_stmt': ([], 10114), 'gsi_prev': ([], 10114), 'single_succ_p': ([], 10114), 'single_succ_edge': ([], 10114), 'ei_next': ([], 10114), 'find_group': ([], 10114), 'find_spanning_tree': ([], 10114), 'gsi_start_bb': ([], 10114), 'gimple_filename': ([], 10114), 'gimple_lineno': ([], 10114), 'gsi_next': ([], 10114), 'get_exec_counts': ([], 10114), 'read_profile_edge_counts': ([], 10114), 'is_edge_inconsistent': ([6], 10112), 'is_inconsistent': ([], 10114), 'correct_negative_edge_counts': ([], 10114), 'set_bb_counts': ([], 10114), 'compute_value_histograms': ([], 10114), 'instrument_edges': ([], 10114), 'instrument_values': ([], 10114), 'init_branch_prob': ([], 10114), 'end_branch_prob': ([], 10114)}, "PosixPath('602/sched-deps.bc')": {'sd_iterator_cond': ([], 27491), 'init_deps_global': ([], 27491), 'setup_insn_reg_uses': ([], 27491), 'init_dep_1': ([], 27491), 'init_dep': ([], 27491), 'dump_dep': ([], 27491), 'sched_get_condition_with_rev': ([], 27491), 'conditions_mutex_p': ([], 27491), 'sched_insns_conditions_mutex_p': ([], 27491), 'sched_insn_is_legitimate_for_speculation_p': ([], 27491), 'sd_next_list': ([], 27491), 'sd_lists_size': ([], 27491), 'sd_lists_empty_p': ([], 27491), 'create_deps_list': ([], 27491), 'free_deps_list': ([], 27491), 'sd_finish_insn': ([0], 27486), 'sd_iterator_start': ([], 27491), 'sd_find_dep_between_no_cache': ([], 27491), 'sd_find_dep_between': ([], 27491), 'create_dep_node': ([], 27491), 'get_back_and_forw_lists': ([], 27491), 'attach_dep_link': ([], 27491), 'depl_on_debug_p': ([], 27491), 'add_to_deps_list': ([], 27491), 'set_dependency_caches': ([], 27491), 'sd_add_dep': ([], 27491), 'ask_dependency_caches': ([], 27491), 'detach_dep_link': ([], 27491), 'remove_from_deps_list': ([], 27491), 'change_spec_dep_to_hard': ([], 27491), 'estimate_dep_weak': ([], 27491), 'update_dependency_caches': ([], 27491), 'update_dep': ([], 27491), 'add_or_update_dep_1': ([], 27491), 'sd_resolve_dep': ([], 27491), 'sd_copy_back_deps': ([], 27491), 'delete_dep_node': ([], 27491), 'sd_delete_dep': ([], 27491), 'dump_lists': ([], 27491), 'sd_debug_lists': ([], 27491), 'maybe_extend_reg_info_p': ([], 27491), 'add_dependence': ([], 27491), 'add_dependence_list_and_free': ([], 27491), 'flush_pending_lists': ([], 27491), 'extend_deps_reg_info': ([], 27491), 'deps_may_trap_p': ([], 27491), 'add_insn_mem_dependence': ([], 27491), 'sched_analyze_2': ([], 27491), 'sched_analyze_1': ([5], 27489), 'sched_analyze_reg': ([], 27491), 'bitmap_initialize_stat': ([], 27491), 'bmp_iter_set_init': ([], 27491), 'bmp_iter_set': ([4], 27486), 'bmp_iter_next': ([], 27491), 'create_insn_reg_use': ([], 27491), 'mark_hard_regno_death': ([], 27491), 'mark_pseudo_death': ([], 27491), 'mark_reg_death': ([], 27491), 'insn_use_p': ([], 27491), 'create_insn_reg_set': ([], 27491), 'mark_insn_hard_regno_birth': ([], 27491), 'mark_insn_pseudo_birth': ([], 27491), 'mark_insn_reg_birth': ([0], 27489), 'setup_insn_reg_pressure_info': ([], 27491), 'sched_analyze_insn': ([9, 15, 19, 23, 29, 85, 86, 138, 152, 1002, 1007], 27287), 'call_may_noreturn_p': ([], 27491), 'delete_all_dependences': ([], 27491), 'fixup_sched_groups': ([], 27491), 'deps_analyze_insn': ([33], 27488), 'deps_start_bb': ([], 27491), 'delete_dep_nodes_in_back_deps': ([], 27491), 'sched_free_deps': ([], 27491), 'init_deps': ([], 27491), 'init_deps_reg_last': ([], 27491), 'free_deps': ([], 27491), 'remove_from_both_dependence_lists': ([], 27491), 'remove_from_dependence_list': ([], 27491), 'remove_from_deps': ([7], 27484), 'VEC_haifa_deps_insn_data_def_base_space': ([], 27491), 'VEC_haifa_deps_insn_data_def_heap_reserve_exact': ([], 27491), 'VEC_haifa_deps_insn_data_def_heap_safe_grow': ([], 27491), 'VEC_haifa_deps_insn_data_def_heap_safe_grow_cleared': ([], 27491), 'init_deps_data_vector': ([], 27491), 'extend_dependency_caches': ([1, 3], 27486), 'sched_deps_init': ([], 27491), 'sched_deps_finish': ([], 27491), 'maybe_add_or_update_dep_1': ([], 27491), 'haifa_note_dep': ([], 27491), 'haifa_note_mem_dep': ([], 27491)}, "PosixPath('602/mkstemps.bc')": {'mkstemps': ([], 580)}, "PosixPath('602/tree-cfg.bc')": {'init_empty_tree_cfg_for_function': ([], 55635), 'first_imm_use_on_stmt': ([], 55635), 'next_imm_use_on_stmt': ([], 55635), 'clear_special_calls': ([], 55635), 'gimple_duplicate_sese_region': ([], 55635), 'replace_block_vars_by_duplicates': ([], 55635), 'gimple_verify_flow_info': ([75, 195], 55615), 'gimple_split_edge': ([], 55635), 'make_edges': ([], 55635), 'gsi_start': ([1], 55633), 'next_discriminator_for_locus': ([], 55635), 'VEC_basic_block_base_space': ([], 55635), 'VEC_basic_block_gc_reserve_exact': ([], 55635), 'VEC_basic_block_gc_safe_grow': ([0], 55633), 'VEC_basic_block_gc_safe_grow_cleared': ([], 55635), 'bb_seq': ([], 55635), 'gsi_last_bb': ([], 55635), 'gsi_stmt': ([], 55635), 'gsi_prev': ([], 55635), 'last_stmt': ([], 55635), 'gimple_ops': ([], 55635), 'gimple_set_op': ([], 55635), 'fold_cond_expr_cond': ([], 55635), 'edge_to_cases_cleanup': ([], 55635), 'gsi_start_bb': ([], 55635), 'label_to_block_fn': ([], 55635), 'gsi_next': ([], 55635), 'make_abnormal_goto_edges': ([], 55635), 'main_block_label': ([], 55635), 'gimple_asm_label_op': ([], 55635), 'VEC_eh_landing_pad_base_iterate': ([], 55635), 'ehr_next': ([], 55635), 'cleanup_dead_labels_eh': ([0], 55603), 'cleanup_dead_labels': ([2, 59], 55600), 'group_case_labels': ([], 55635), 'end_imm_use_stmt_p': ([], 55635), 'clear_and_done_ssa_iter': ([], 55635), 'op_iter_next_use': ([], 55635), 'op_iter_init_phiuse': ([], 55635), 'delink_imm_use': ([], 55635), 'link_imm_use_to_list': ([], 55635), 'move_use_after_head': ([], 55635), 'gimple_def_ops': ([], 55635), 'gimple_vdef': ([], 55635), 'gimple_use_ops': ([], 55635), 'gimple_vuse': ([], 55635), 'op_iter_init': ([], 55635), 'gimple_vuse_op': ([], 55635), 'link_use_stmts_after': ([], 55635), 'first_imm_use_stmt': ([], 55635), 'next_imm_use_stmt': ([], 55635), 'has_zero_uses': ([], 55635), 'number_of_loops': ([], 55635), 'VEC_int_base_quick_push': ([], 55635), 'loop_outer': ([], 55635), 'VEC_int_base_iterate': ([], 55635), 'get_loop': ([], 55635), 'fel_next': ([5], 55632), 'fel_init': ([], 55635), 'replace_uses_by': ([], 55635), 'single_noncomplex_succ': ([], 55635), 'notice_special_calls': ([], 55635), 'extract_true_false_edges_from_block': ([], 55635), 'find_taken_edge_cond_expr': ([], 55635), 'find_taken_edge_switch_expr': ([], 55635), 'find_taken_edge': ([], 55635), 'gimple_debug_bb_n': ([], 55635), 'dump_cfg_stats': ([], 55635), 'gimple_seq_first_stmt': ([], 55635), 'gimple_seq_last_stmt': ([], 55635), 'dump_function_to_file': ([], 55635), 'gimple_dump_cfg': ([], 55635), 'is_ctrl_altering_stmt': ([], 55635), 'first_stmt': ([], 55635), 'gsi_prev_nondebug': ([], 55635), 'gsi_last_nondebug_bb': ([], 55635), 'last_and_only_stmt': ([], 55635), 'verify_types_in_gimple_min_lval': ([], 55635), 'verify_types_in_gimple_reference': ([0], 55620), 'verify_gimple_assign_unary': ([], 55635), 'verify_gimple_comparison': ([2], 55628), 'verify_gimple_assign_binary': ([], 55635), 'verify_gimple_assign': ([], 55635), 'verify_gimple_call': ([], 55635), 'verify_gimple_return': ([], 55635), 'verify_gimple_phi': ([], 55635), 'verify_types_in_gimple_stmt': ([], 55635), 'verify_types_in_gimple_seq_2': ([], 55635), 'tree_node_can_be_shared': ([0, 1], 55623), 'gsi_one_before_end_p': ([], 55635), 'gimple_call_fndecl': ([], 55635), 'verify_expr': ([1], 55633), 'verify_stmt': ([], 55635), 'verify_stmts': ([], 55635), 'gimple_block_label': ([], 55635), 'phi_nodes': ([], 55635), 'ei_next': ([], 55635), 'add_phi_args_after_copy_edge': ([1, 28], 55632), 'add_phi_args_after_copy_bb': ([5], 55633), 'add_phi_args_after_copy': ([], 55635), 'split_edge_bb_loc': ([], 55635), 'VEC_basic_block_heap_reserve': ([], 55635), 'VEC_basic_block_base_quick_push': ([], 55635), 'VEC_basic_block_heap_safe_push': ([2], 55633), 'single_succ_p': ([], 55635), 'single_succ_edge': ([], 55635), 'gimple_duplicate_sese_tail': ([], 55635), 'mark_virtual_ops_in_bb': ([], 55635), 'VEC_basic_block_base_iterate': ([], 55635), 'find_outermost_region_in_block': ([], 55635), 'replace_by_duplicate_decl': ([], 55635), 'replace_ssa_name': ([], 55635), 'link_imm_use': ([], 55635), 'set_ssa_use_from_ptr': ([], 55635), 'is_global_var': ([], 55635), 'move_stmt_op': ([6], 55628), 'move_stmt_eh_region_nr': ([], 55635), 'move_stmt_r': ([], 55635), 'move_block_to_fn': ([], 55635), 'new_label_mapper': ([], 55635), 'move_sese_region_to_fn': ([0, 1, 7], 55566), 'print_pred_bbs': ([], 55635), 'print_succ_bbs': ([], 55635), 'print_loops_bb': ([], 55635), 'print_loop': ([], 55635), 'print_loops': ([], 55635), 'debug_loop_num': ([], 55635), 'bmp_iter_set_init': ([], 55635), 'bmp_iter_set': ([4], 55630), 'bmp_iter_next': ([], 55635), 'remove_edge_and_dominated_blocks': ([8, 93, 111], 55620), 'gimple_purge_dead_eh_edges': ([0, 4], 55614), 'gimple_purge_dead_abnormal_call_edges': ([0], 55620), 'gimple_purge_all_dead_eh_edges': ([4], 55621), 'do_warn_unused_result': ([], 55635), 'execute_warn_function_noreturn': ([], 55635), 'execute_warn_function_return': ([47, 70], 55627), 'single_pred_p': ([], 55635), 'split_critical_edges': ([24], 55633), 'gimple_lv_adjust_loop_header_phi': ([], 55635), 'gimple_lv_add_condition_to_bb': ([], 55635), 'need_fake_edge_p': ([], 55635), 'gimple_flow_call_edges_add': ([], 55635), 'gimple_block_ends_with_call_p': ([], 55635), 'gimple_make_forwarder_block': ([24], 55633), 'reinstall_phi_args': ([], 55635), 'op_iter_next_def': ([], 55635), 'op_iter_init_def': ([], 55635), 'gimple_duplicate_bb': ([22], 55618), 'loops_state_satisfies_p': ([], 55635), 'set_bb_seq': ([], 55635), 'gimple_merge_blocks': ([], 55635), 'gimple_can_merge_blocks_p': ([], 55635), 'gimple_split_block': ([17], 55633), 'remove_phi_nodes_and_edges_for_unreachable_block': ([], 55635), 'remove_bb': ([], 55635), 'gimple_try_redirect_by_replacing_jump': ([], 55635), 'get_cases_for_edge': ([], 55635), 'gimple_redirect_edge_and_branch': ([], 55635), 'create_bb': ([17], 55631), 'stmt_starts_bb_p': ([], 55635), 'make_blocks': ([], 55635), 'factor_computed_gotos': ([10], 55631), 'first_non_label_stmt': ([], 55635), 'same_line_p': ([], 55635), 'assign_discriminator': ([], 55635), 'make_goto_expr_edges': ([], 55635), 'make_cond_expr_edges': ([], 55635), 'make_gimple_switch_edges': ([], 55635), 'make_gimple_asm_edges': ([], 55635), 'get_lineno': ([], 55635), 'gimple_cfg2vcg': ([], 55635), 'build_gimple_cfg': ([], 55635), 'execute_build_cfg': ([], 55635)}, "PosixPath('602/explow.bc')": {'trunc_int_for_mode': ([], 8611), 'plus_constant': ([], 8611), 'eliminate_constant_term': ([], 8611), 'expr_size': ([], 8611), 'int_expr_size': ([], 8611), 'force_reg': ([4], 8608), 'break_out_memory_refs': ([0], 8602), 'memory_address_addr_space': ([], 8611), 'use_anchored_address': ([2], 8606), 'validize_mem': ([], 8611), 'promote_decl_mode': ([0], 8610), 'adjust_stack': ([], 8611), 'anti_adjust_stack': ([], 8611), 'update_nonlocal_goto_save_area': ([], 8611), 'round_push': ([], 8611), 'anti_adjust_stack_and_probe': ([0], 8604), 'allocate_dynamic_stack_space': ([], 8611), 'probe_stack_range': ([], 8611), 'hard_function_value': ([], 8611)}, "PosixPath('602/print-rtl.bc')": {'print_rtx': ([13, 53, 158], 6223), 'debug_rtx_find': ([], 6254), 'print_rtl': ([], 6254)}, "PosixPath('602/tree-ssa-ter.bc')": {'var_to_partition': ([], 4203), 'new_temp_expr_table': ([], 4203), 'bb_seq': ([], 4203), 'gsi_start_bb': ([], 4203), 'gsi_stmt': ([], 4203), 'gimple_def_ops': ([], 4203), 'gimple_vdef': ([], 4203), 'gimple_use_ops': ([], 4203), 'gimple_vuse': ([], 4203), 'op_iter_init': ([], 4203), 'op_iter_next_tree': ([], 4203), 'op_iter_init_tree': ([], 4203), 'single_ssa_tree_operand': ([], 4203), 'single_imm_use': ([], 4203), 'gimple_references_memory_p': ([], 4203), 'gimple_ops': ([], 4203), 'gimple_op': ([], 4203), 'is_replaceable_p': ([], 4203), 'bmp_iter_set_init': ([], 4203), 'bmp_iter_set': ([4], 4198), 'remove_from_partition_kill_list': ([], 4203), 'bmp_iter_next': ([], 4203), 'finished_with_expr': ([8], 4201), 'mark_replaceable': ([], 4203), 'add_to_partition_kill_list': ([0], 4201), 'make_dependent_on_partition': ([0], 4201), 'add_dependence': ([], 4203), 'process_replaceable': ([], 4203), 'gsi_next': ([], 4203), 'find_replaceable_in_bb': ([], 4203), 'free_temp_expr_table': ([], 4203), 'find_replaceable_exprs': ([], 4203), 'dump_replaceable_exprs': ([], 4203)}, "PosixPath('602/spaces.bc')": {'spaces': ([], 152)}, "PosixPath('602/tree-complex.bc')": {'gsi_stmt': ([], 13062), 'gsi_next': ([], 13062), 'bb_seq': ([], 13062), 'gsi_start_bb': ([], 13062), 'gimple_ops': ([], 13062), 'init_dont_simulate_again': ([], 13062), 'VEC_complex_lattice_t_base_space': ([], 13062), 'VEC_complex_lattice_t_heap_reserve_exact': ([], 13062), 'VEC_complex_lattice_t_heap_safe_grow': ([], 13062), 'VEC_complex_lattice_t_heap_safe_grow_cleared': ([], 13062), 'var_ann': ([], 13062), 'init_parameter_lattice_values': ([], 13062), 'VEC_tree_base_space': ([], 13062), 'VEC_tree_heap_reserve_exact': ([], 13062), 'VEC_tree_heap_safe_grow': ([], 13062), 'VEC_tree_heap_safe_grow_cleared': ([], 13062), 'single_succ_p': ([], 13062), 'single_succ_edge': ([], 13062), 'some_nonzerop': ([], 13062), 'find_lattice_value': ([], 13062), 'cvc_lookup': ([], 13062), 'create_one_component_var': ([], 13062), 'cvc_insert': ([], 13062), 'get_component_var': ([], 13062), 'get_component_ssa_name': ([], 13062), 'set_component_ssa_name': ([], 13062), 'update_parameter_components': ([], 13062), 'extract_component': ([], 13062), 'delink_imm_use': ([], 13062), 'link_imm_use_to_list': ([], 13062), 'link_imm_use': ([], 13062), 'set_ssa_use_from_ptr': ([], 13062), 'update_phi_components': ([], 13062), 'ei_next': ([], 13062), 'update_complex_assignment': ([], 13062), 'gimple_set_op': ([], 13062), 'expand_complex_move': ([], 13062), 'expand_complex_libcall': ([], 13062), 'expand_complex_multiplication': ([], 13062), 'gsi_last_bb': ([], 13062), 'expand_complex_div_wide': ([], 13062), 'expand_complex_division': ([], 13062), 'expand_complex_comparison': ([], 13062), 'expand_complex_operations_1': ([], 13062), 'complex_visit_phi': ([], 13062), 'complex_visit_stmt': ([], 13062), 'tree_lower_complex': ([149], 12885)}, "PosixPath('602/i386-c.bc')": {'ix86_pragma_target_parse': ([], 3300)}, "PosixPath('602/cpp_mkdeps.bc')": {'deps_add_vpath': ([4, 23], 2634), 'deps_free': ([], 2638), 'apply_vpath': ([], 2638), 'munge': ([], 2638), 'deps_add_target': ([], 2638), 'deps_add_default_target': ([], 2638), 'deps_add_dep': ([10], 2636), 'deps_write': ([], 2638), 'deps_phony_targets': ([], 2638), 'deps_save': ([], 2638), 'deps_restore': ([], 2638)}, "PosixPath('602/convert.bc')": {'convert_to_pointer': ([], 8954), 'strip_float_extensions': ([3, 4], 8943), 'convert_to_real': ([], 8954), 'convert_to_integer': ([0, 106], 8949), 'convert_to_complex': ([], 8954), 'convert_to_vector': ([], 8954), 'convert_to_fixed': ([], 8954)}, "PosixPath('602/insn-automata.bc')": {'dfa_insn_code_enlarge': ([], 148174), 'dfa_insn_code': ([], 148174), 'internal_min_issue_delay': ([], 148174), 'internal_state_transition': ([], 148174), 'min_insn_conflict_delay': ([], 148174), 'dfa_clean_insn_cache': ([1], 148170), 'dfa_clear_single_insn_cache': ([], 148174)}, "PosixPath('602/c-pch.bc')": {'pch_init': ([], 4158), 'c_common_valid_pch': ([2], 4155), 'c_common_read_pch': ([], 4158), 'c_common_write_pch': ([], 4158), 'c_common_no_more_pch': ([], 4158), 'c_common_pch_pragma': ([], 4158)}, "PosixPath('602/reginfo.bc')": {'init_move_cost': ([3], 8702), 'setup_reg_classes': ([], 8721), 'bmp_iter_set_init': ([], 8721), 'bmp_iter_set': ([], 8721), 'bmp_iter_next': ([], 8721), 'reg_set_to_hard_reg_set': ([], 8721), 'init_reg_sets': ([], 8721), 'choose_hard_reg_mode': ([], 8721), 'init_reg_modes_target': ([], 8721), 'init_reg_sets_1': ([], 8721), 'init_regs': ([], 8721), 'init_fake_stack_mems': ([], 8721), 'fix_register': ([], 8721), 'globalize_reg': ([], 8721), 'reg_preferred_class': ([], 8721), 'reg_alternate_class': ([], 8721), 'reg_cover_class': ([], 8721), 'resize_reg_info': ([], 8721), 'free_reg_info': ([], 8721), 'reg_scan_mark_refs': ([24], 8712), 'reg_scan': ([], 8721), 'record_subregs_of_mode': ([], 8721), 'find_subregs_of_mode': ([], 8721), 'init_subregs_of_mode': ([], 8721), 'invalid_mode_change_p': ([0], 8719)}, "PosixPath('602/gtype-desc.bc')": {'gt_ggc_mx_VEC_ipa_edge_args_t_gc': ([], 53383), 'gt_ggc_mx_ssa_operand_memory_d': ([1], 53370), 'gt_ggc_mx_section': ([], 53383), 'gt_ggc_mx_gimple_statement_d': ([141], 53374), 'gt_ggc_mx_basic_block_def': ([], 53383), 'gt_ggc_mx_rtl_bb_info': ([], 53383), 'gt_ggc_mx_gimple_bb_info': ([], 53383), 'gt_ggc_mx_loop': ([], 53383), 'gt_ggc_mx_loop_exit': ([], 53383), 'gt_ggc_mx_nb_iter_bound': ([5], 53370), 'gt_ggc_mx_edge_def': ([], 53383), 'gt_ggc_mx_rtx_def': ([10], 53378), 'gt_ggc_mx_mem_attrs': ([], 53383), 'gt_ggc_mx_object_block': ([], 53383), 'gt_ggc_mx_gimple_seq_d': ([7], 53370), 'gt_ggc_mx_gimple_seq_node_d': ([9], 53374), 'gt_ggc_mx_eh_catch_d': ([], 53383), 'gt_ggc_mx_eh_landing_pad_d': ([], 53383), 'gt_ggc_mx_eh_region_d': ([], 53383), 'gt_ggc_mx_constant_descriptor_tree': ([], 53383), 'gt_ggc_mx_cgraph_asm_node': ([], 53383), 'gt_ggc_mx_varpool_node': ([], 53383), 'gt_ggc_mx_ipa_replace_map': ([], 53383), 'gt_ggc_mx_bitmap_element_def': ([], 53383), 'gt_ggc_mx_bitmap_head_def': ([], 53383), 'gt_ggc_mx_bitmap_obstack': ([], 53383), 'gt_ggc_mx_cgraph_node': ([], 53383), 'gt_ggc_m_P11cgraph_edge4htab': ([], 53383), 'gt_ggc_mx_cgraph_edge': ([], 53383), 'gt_ggc_m_P27cgraph_node_set_element_def4htab': ([], 53383), 'gt_ggc_mx_elt_loc_list': ([], 53383), 'gt_ggc_mx_cselib_val_struct': ([], 53383), 'gt_ggc_mx_elt_list': ([], 53383), 'gt_ggc_mx_types_used_by_vars_entry': ([], 53383), 'gt_ggc_m_P9loop_exit4htab': ([], 53383), 'gt_ggc_mx_loops': ([], 53383), 'gt_ggc_mx_control_flow_graph': ([], 53383), 'gt_ggc_m_P15throw_stmt_node4htab': ([], 53383), 'gt_ggc_mx_eh_status': ([], 53383), 'gt_ggc_m_P9tree_node4htab': ([], 53383), 'gt_ggc_mx_gimple_df': ([], 53383), 'gt_ggc_mx_sequence_stack': ([], 53383), 'gt_ggc_mx_tree_map': ([], 53383), 'gt_ggc_mx_tree_statement_list_node': ([], 53383), 'gt_ggc_mx_varray_head_tag': ([], 53383), 'gt_ggc_mx_VEC_constructor_elt_gc': ([], 53383), 'gt_ggc_mx_VEC_alias_pair_gc': ([], 53383), 'gt_ggc_mx_machine_function': ([], 53383), 'gt_ggc_mx_function': ([], 53383), 'gt_ggc_mx_answer': ([], 53383), 'gt_ggc_mx_cpp_macro': ([], 53383), 'gt_ggc_mx_line_maps': ([], 53383), 'gt_ggc_m_SP9tree_node17splay_tree_node_s': ([], 53383), 'gt_ggc_m_P9tree_nodeP9tree_node17splay_tree_node_s': ([], 53383), 'gt_ggc_m_IP9tree_node17splay_tree_node_s': ([], 53383), 'gt_ggc_m_P12tree_int_map4htab': ([], 53383), 'gt_ggc_m_P12varpool_node4htab': ([], 53383), 'gt_ggc_m_P24constant_descriptor_tree4htab': ([], 53383), 'gt_ggc_m_P12object_block4htab': ([], 53383), 'gt_ggc_m_P7section4htab': ([], 53383), 'gt_ggc_m_P17tree_priority_map4htab': ([], 53383), 'gt_ggc_m_P8tree_map4htab': ([], 53383), 'gt_ggc_m_P9reg_attrs4htab': ([], 53383), 'gt_ggc_m_P9mem_attrs4htab': ([], 53383), 'gt_ggc_m_P7rtx_def4htab': ([], 53383), 'gt_ggc_m_P11cgraph_node4htab': ([], 53383), 'gt_ggc_m_P24types_used_by_vars_entry4htab': ([], 53383), 'gt_pch_p_22VEC_ipa_edge_args_t_gc': ([], 53383), 'gt_pch_nx_VEC_ipa_edge_args_t_gc': ([], 53383), 'gt_pch_nx_ssa_operand_memory_d': ([0], 53349), 'gt_pch_nx_section': ([], 53383), 'gt_pch_p_7rtx_def': ([], 53383), 'gt_pch_p_18gimple_statement_d': ([8], 53371), 'gt_pch_nx_gimple_statement_d': ([141], 53374), 'gt_pch_nx_basic_block_def': ([], 53383), 'gt_pch_nx_rtl_bb_info': ([], 53383), 'gt_pch_nx_gimple_bb_info': ([], 53383), 'gt_pch_nx_loop': ([], 53383), 'gt_pch_nx_loop_exit': ([], 53383), 'gt_pch_nx_nb_iter_bound': ([3], 53349), 'gt_pch_nx_edge_def': ([], 53383), 'gt_pch_nx_rtx_def': ([6], 53378), 'gt_pch_nx_mem_attrs': ([], 53383), 'gt_pch_nx_object_block': ([], 53383), 'gt_pch_nx_gimple_seq_d': ([5], 53367), 'gt_pch_nx_gimple_seq_node_d': ([7], 53374), 'gt_pch_nx_eh_catch_d': ([], 53383), 'gt_pch_nx_eh_landing_pad_d': ([], 53383), 'gt_pch_nx_eh_region_d': ([], 53383), 'gt_pch_nx_constant_descriptor_tree': ([], 53383), 'gt_pch_nx_cgraph_asm_node': ([], 53383), 'gt_pch_nx_varpool_node': ([], 53383), 'gt_pch_p_P11cgraph_edge4htab': ([], 53383), 'gt_pch_nx_ipa_replace_map': ([], 53383), 'gt_pch_nx_bitmap_element_def': ([], 53383), 'gt_pch_nx_bitmap_head_def': ([], 53383), 'gt_pch_nx_bitmap_obstack': ([], 53383), 'gt_pch_nx_cgraph_node': ([], 53383), 'gt_pch_n_P11cgraph_edge4htab': ([], 53383), 'gt_pch_nx_cgraph_edge': ([], 53383), 'gt_pch_p_P27cgraph_node_set_element_def4htab': ([], 53383), 'gt_pch_n_P27cgraph_node_set_element_def4htab': ([], 53383), 'gt_pch_nx_elt_loc_list': ([], 53383), 'gt_pch_nx_cselib_val_struct': ([], 53383), 'gt_pch_nx_elt_list': ([], 53383), 'gt_pch_nx_types_used_by_vars_entry': ([], 53383), 'gt_pch_p_P9loop_exit4htab': ([], 53383), 'gt_pch_n_P9loop_exit4htab': ([], 53383), 'gt_pch_nx_loops': ([], 53383), 'gt_pch_nx_control_flow_graph': ([], 53383), 'gt_pch_p_P15throw_stmt_node4htab': ([], 53383), 'gt_pch_n_P15throw_stmt_node4htab': ([], 53383), 'gt_pch_nx_eh_status': ([], 53383), 'gt_pch_p_P9tree_node4htab': ([], 53383), 'gt_pch_n_P9tree_node4htab': ([], 53383), 'gt_pch_nx_gimple_df': ([], 53383), 'gt_pch_nx_sequence_stack': ([], 53383), 'gt_pch_nx_tree_map': ([], 53383), 'gt_pch_nx_tree_statement_list_node': ([], 53383), 'gt_pch_p_15varray_head_tag': ([], 53383), 'gt_pch_nx_varray_head_tag': ([], 53383), 'gt_pch_nx_VEC_constructor_elt_gc': ([], 53383), 'gt_pch_nx_VEC_alias_pair_gc': ([], 53383), 'gt_pch_nx_machine_function': ([], 53383), 'gt_pch_nx_function': ([], 53383), 'gt_pch_p_9cpp_token': ([], 53383), 'gt_pch_p_6answer': ([], 53383), 'gt_pch_nx_answer': ([], 53383), 'gt_pch_p_9cpp_macro': ([], 53383), 'gt_pch_nx_cpp_macro': ([], 53383), 'gt_pch_p_9line_maps': ([], 53383), 'gt_pch_nx_line_maps': ([], 53383), 'gt_pch_n_SP9tree_node17splay_tree_node_s': ([], 53383), 'gt_pch_n_P9tree_nodeP9tree_node17splay_tree_node_s': ([], 53383), 'gt_pch_n_IP9tree_node17splay_tree_node_s': ([], 53383), 'gt_pch_p_P12tree_int_map4htab': ([], 53383), 'gt_pch_n_P12tree_int_map4htab': ([], 53383), 'gt_pch_p_P12varpool_node4htab': ([], 53383), 'gt_pch_n_P12varpool_node4htab': ([], 53383), 'gt_pch_p_P24constant_descriptor_tree4htab': ([], 53383), 'gt_pch_n_P24constant_descriptor_tree4htab': ([], 53383), 'gt_pch_p_P12object_block4htab': ([], 53383), 'gt_pch_n_P12object_block4htab': ([], 53383), 'gt_pch_p_P7section4htab': ([], 53383), 'gt_pch_n_P7section4htab': ([], 53383), 'gt_pch_p_P17tree_priority_map4htab': ([], 53383), 'gt_pch_n_P17tree_priority_map4htab': ([], 53383), 'gt_pch_p_P8tree_map4htab': ([], 53383), 'gt_pch_n_P8tree_map4htab': ([], 53383), 'gt_pch_p_P9reg_attrs4htab': ([], 53383), 'gt_pch_n_P9reg_attrs4htab': ([], 53383), 'gt_pch_p_P9mem_attrs4htab': ([], 53383), 'gt_pch_n_P9mem_attrs4htab': ([], 53383), 'gt_pch_p_P7rtx_def4htab': ([], 53383), 'gt_pch_n_P7rtx_def4htab': ([], 53383), 'gt_pch_p_P11cgraph_node4htab': ([], 53383), 'gt_pch_n_P11cgraph_node4htab': ([], 53383), 'gt_pch_p_P24types_used_by_vars_entry4htab': ([], 53383), 'gt_pch_n_P24types_used_by_vars_entry4htab': ([], 53383), 'gt_pch_na_regno_reg_rtx': ([], 53383), 'gt_ggc_ma_regno_reg_rtx': ([], 53383), 'gt_pch_na_reg_equiv_init': ([], 53383), 'gt_ggc_ma_reg_equiv_init': ([], 53383)}, "PosixPath('602/bid2dpd_dpd2bid.bc')": {'_bid_to_dpd32': ([], 92016), '_dpd_to_bid32': ([], 92016), '_bid_to_dpd64': ([], 92016), '_dpd_to_bid64': ([], 92016), '_bid_to_dpd128': ([], 92016), '_dpd_to_bid128': ([], 92016)}, "PosixPath('602/plugin.bc')": {'parse_plugin_arg_opt': ([], 5089), 'get_named_event_id': ([5], 5082), 'register_callback': ([], 5089), 'add_new_plugin': ([], 5089), 'register_plugin_info': ([], 5089), 'unregister_callback': ([], 5089), 'invoke_plugin_callbacks': ([], 5089), 'print_version_one_plugin': ([], 5089), 'print_plugins_versions': ([], 5089), 'print_help_one_plugin': ([], 5089), 'print_plugins_help': ([], 5089), 'dump_active_plugins': ([], 5089), 'plugin_default_version_check': ([], 5089)}, "PosixPath('602/decimal128.bc')": {'__dpd128FromNumber': ([3, 28], 3559), '__dpd128ToNumber': ([4, 5, 6], 3520), '__dpd128ToString': ([], 3564), 'decimal128FromNumber': ([], 3564), 'decimal128ToNumber': ([], 3564)}, "PosixPath('602/lto-wpa-fixup.bc')": {'lto_fixup_nothrow_decls': ([], 1418), 'lto_mark_nothrow_fndecl': ([], 1418), 'lto_file_decl_data_get_fn_decl': ([], 1418), 'lto_input_wpa_fixup_1': ([], 1418), 'lto_input_wpa_fixup': ([], 1418), 'csi_end_p': ([], 1418), 'VEC_tree_base_space': ([], 1418), 'VEC_tree_heap_reserve': ([], 1418), 'VEC_tree_base_quick_push': ([], 1418), 'VEC_tree_heap_safe_push': ([2], 1416), 'lto_output_wpa_fixup': ([], 1418)}, "PosixPath('602/cfgrtl.bc')": {'force_nonfallthru_and_redirect': ([159], 22144), 'can_delete_label_p': ([], 22151), 'delete_insn': ([0], 22141), 'ei_next': ([], 22151), 'single_succ_p': ([], 22151), 'single_succ_edge': ([], 22151), 'purge_dead_edges': ([4, 8, 10, 11, 69, 70, 73, 86], 22100), 'delete_insn_and_edges': ([], 22151), 'delete_insn_chain': ([], 22151), 'update_bb_for_insn_chain': ([], 22151), 'update_bb_for_insn': ([], 22151), 'create_basic_block_structure': ([], 22151), 'compute_bb_for_insn': ([], 22151), 'free_bb_for_insn': ([], 22151), 'entry_of_function': ([], 22151), 'insert_insn_on_edge': ([], 22151), 'single_pred_p': ([], 22151), 'commit_one_edge_insertion': ([13, 70], 22134), 'commit_edge_insertions': ([3, 30, 40, 73], 22138), 'emit_insn_at_entry': ([], 22151), 'block_label': ([], 22151), 'try_redirect_by_replacing_jump': ([], 22151), 'VEC_edge_base_unordered_remove': ([], 22151), 'VEC_edge_base_space': ([], 22151), 'VEC_edge_gc_reserve': ([], 22151), 'VEC_edge_base_quick_push': ([], 22151), 'VEC_edge_gc_safe_push': ([], 22151), 'print_rtl_with_bb': ([49, 67, 107], 22116), 'update_br_prob_note': ([], 22151), 'get_last_bb_insn': ([], 22151), 'purge_all_dead_edges': ([], 22151), 'insert_insn_end_bb_new': ([4], 22145), 'rtl_extract_cond_bb_edges': ([], 22151), 'rtl_lv_add_condition_to_bb': ([], 22151), 'need_fake_edge_p': ([], 22151), 'rtl_flow_call_edges_add': ([], 22151), 'rtl_block_ends_with_call_p': ([0], 22131), 'cfg_layout_split_edge': ([], 22151), 'cfg_layout_merge_blocks': ([17, 55], 22141), 'cfg_layout_can_merge_blocks_p': ([], 22151), 'first_insn_after_basic_block_note': ([], 22151), 'rtl_split_block': ([34, 37], 22146), 'cfg_layout_delete_block': ([], 22151), 'rtl_can_remove_branch_p': ([], 22151), 'patch_jump_insn': ([19], 22147), 'redirect_branch_edge': ([], 22151), 'cfg_layout_redirect_edge_and_branch': ([0, 14, 22], 22131), 'VEC_basic_block_base_space': ([], 22151), 'VEC_basic_block_gc_reserve_exact': ([], 22151), 'VEC_basic_block_gc_safe_grow': ([], 22151), 'VEC_basic_block_gc_safe_grow_cleared': ([], 22151), 'rtl_create_basic_block': ([19], 22150), 'rtl_dump_bb': ([], 22151), 'rtl_verify_flow_info_1': ([98, 177, 187, 223], 22135), 'rtl_tidy_fallthru_edge': ([], 22151), 'rtl_split_edge': ([25, 33, 36], 22122), 'rtl_merge_blocks': ([17], 22146), 'rtl_can_merge_blocks': ([], 22151), 'rtl_redirect_edge_and_branch_force': ([], 22151), 'rtl_redirect_edge_and_branch': ([], 22151), 'rtl_verify_flow_info': ([28], 22149)}, "PosixPath('602/dbgcnt.bc')": {'dbg_cnt_is_enabled': ([], 2016), 'dbg_cnt': ([], 2016), 'dbg_cnt_set_limit_by_index': ([], 2016), 'dbg_cnt_set_limit_by_name': ([], 2016), 'dbg_cnt_process_single_pair': ([], 2016), 'dbg_cnt_process_opt': ([], 2016), 'dbg_cnt_list_all_counters': ([], 2016)}, "PosixPath('602/c-objc-common.bc')": {'c_warn_unused_global_decl': ([], 1001), 'c_tree_printer': ([], 1001)}, "PosixPath('602/varpool.bc')": {'varpool_node': ([], 3722), 'cgraph_variable_initializer_availability': ([], 3722), 'dump_varpool_node': ([2], 3717), 'varpool_enqueue_needed_node': ([], 3722), 'varpool_mark_needed_node': ([2, 7], 3713), 'decide_is_variable_needed': ([0], 3719), 'varpool_analyze_pending_decls': ([], 3722), 'varpool_assemble_decl': ([], 3722), 'varpool_assemble_pending_decls': ([], 3722), 'varpool_finalize_decl': ([0], 3718), 'varpool_remove_unreferenced_decls': ([], 3722), 'varpool_empty_needed_queue': ([0], 3719), 'add_new_static_var': ([], 3722), 'varpool_extra_name_alias': ([], 3722)}, "PosixPath('602/insn-output.bc')": {'output_1755': ([], 334835), 'output_1471': ([], 334835), 'output_1470': ([], 334835), 'output_1469': ([], 334835), 'output_1462': ([], 334835), 'output_1461': ([], 334835), 'output_1460': ([], 334835), 'output_1459': ([], 334835), 'output_1458': ([], 334835), 'output_1246': ([], 334835), 'output_1245': ([], 334835), 'output_1244': ([], 334835), 'output_1243': ([], 334835), 'output_1238': ([], 334835), 'output_1186': ([], 334835), 'output_1185': ([], 334835), 'output_1184': ([], 334835), 'output_1183': ([], 334835), 'output_1182': ([], 334835), 'output_819': ([], 334835), 'output_817': ([], 334835), 'output_693': ([], 334835), 'output_498': ([], 334835), 'output_496': ([], 334835), 'output_393': ([], 334835), 'output_392': ([], 334835), 'output_391': ([], 334835), 'output_390': ([], 334835), 'output_389': ([], 334835), 'output_388': ([], 334835), 'output_387': ([], 334835), 'output_386': ([], 334835), 'output_385': ([], 334835), 'output_384': ([], 334835), 'output_383': ([], 334835), 'output_293': ([], 334835), 'output_290': ([], 334835), 'output_289': ([], 334835), 'output_281': ([], 334835), 'output_219': ([], 334835), 'output_218': ([], 334835), 'output_217': ([], 334835), 'output_216': ([], 334835), 'output_215': ([], 334835), 'output_214': ([], 334835), 'output_213': ([], 334835), 'output_212': ([], 334835), 'output_211': ([], 334835), 'output_210': ([], 334835), 'output_209': ([], 334835), 'output_208': ([], 334835), 'output_207': ([], 334835), 'output_206': ([], 334835), 'output_205': ([], 334835), 'output_204': ([], 334835), 'output_203': ([], 334835), 'output_202': ([], 334835), 'output_201': ([], 334835), 'output_200': ([], 334835), 'output_199': ([], 334835), 'output_198': ([], 334835), 'output_197': ([], 334835), 'output_83': ([], 334835), 'output_76': ([], 334835), 'output_74': ([], 334835), 'output_71': ([], 334835), 'output_53': ([], 334835)}, "PosixPath('602/tree-ssa-ccp.bc')": {'do_dbg_cnt': ([], 22143), 'gsi_start': ([], 22143), 'gimple_referenced_vars': ([], 22143), 'get_symbol_constant_value': ([], 22143), 'may_propagate_address_into_dereference': ([], 22143), 'gimple_ops': ([], 22143), 'get_default_value': ([], 22143), 'canonicalize_float_value': ([], 22143), 'get_value': ([], 22143), 'fold_const_aggregate_ref': ([32], 22139), 'maybe_fold_offset_to_array_ref': ([], 22143), 'maybe_fold_offset_to_component_ref': ([], 22143), 'maybe_fold_offset_to_reference': ([], 22143), 'maybe_fold_offset_to_address': ([2], 22142), 'maybe_fold_stmt_addition': ([], 22143), 'gsi_stmt': ([], 22143), 'maybe_fold_stmt_indirect': ([], 22143), 'maybe_fold_reference': ([], 22143), 'fold_gimple_assign': ([], 22143), 'fold_gimple_cond': ([], 22143), 'gimple_set_op': ([], 22143), 'gimple_call_fndecl': ([], 22143), 'get_maxval_strlen': ([], 22143), 'ccp_fold_builtin': ([], 22143), 'gsi_next': ([], 22143), 'gimple_vuse': ([], 22143), 'gimple_vdef': ([], 22143), 'gimplify_and_update_call_from_tree': ([], 22143), 'fold_gimple_call': ([], 22143), 'gimple_asm_output_op': ([], 22143), 'fold_stmt_1': ([], 22143), 'fold_stmt_inplace': ([], 22143), 'bb_seq': ([], 22143), 'gsi_start_bb': ([], 22143), 'single_succ_p': ([], 22143), 'single_succ_edge': ([], 22143), 'has_single_use': ([], 22143), 'optimize_stack_restore': ([], 22143), 'optimize_stdarg_builtin': ([], 22143), 'execute_fold_all_builtins': ([], 22143), 'surely_varying_stmt_p': ([], 22143), 'gimple_def_ops': ([], 22143), 'gimple_use_ops': ([], 22143), 'op_iter_init': ([], 22143), 'op_iter_next_tree': ([], 22143), 'op_iter_init_tree': ([], 22143), 'set_value_varying': ([], 22143), 'ccp_initialize': ([50], 22140), 'gimple_references_memory_p': ([], 22143), 'likely_value': ([], 22143), 'ccp_fold': ([39], 22140), 'evaluate_stmt': ([], 22143), 'ccp_fold_stmt': ([], 22143), 'ccp_finalize': ([], 22143), 'ccp_lattice_meet': ([], 22143), 'set_lattice_value': ([], 22143), 'ccp_visit_phi_node': ([], 22143), 'visit_assignment': ([], 22143), 'ccp_visit_stmt': ([], 22143), 'do_ssa_ccp': ([], 22143)}, "PosixPath('602/graphite-interchange.bc')": {}, "PosixPath('602/cpp_charset.bc')": {'init_iconv_desc': ([], 13248), 'cpp_interpret_string': ([16, 28], 13221), '_cpp_convert_input': ([], 13248), 'conversion_loop': ([0], 13244), 'one_cppchar_to_utf8': ([], 13248), 'one_utf16_to_utf8': ([], 13248), 'one_utf32_to_utf8': ([], 13248), 'one_utf8_to_cppchar': ([0, 1], 13235), 'one_utf8_to_utf16': ([], 13248), 'one_utf8_to_utf32': ([5], 13246), 'convert_no_conversion': ([6], 13247), 'cpp_init_iconv': ([], 13248), 'cpp_host_to_exec_charset': ([], 13248), 'ucn_valid_in_identifier': ([], 13248), '_cpp_valid_ucn': ([], 13248), 'convert_ucn': ([], 13248), 'emit_numeric_escape': ([29], 13247), 'convert_hex': ([], 13248), 'convert_oct': ([], 13248), 'convert_escape': ([], 13248), 'cpp_interpret_string_notranslate': ([], 13248), 'wide_str_to_charconst': ([], 13248), 'narrow_str_to_charconst': ([], 13248), 'cpp_interpret_charconst': ([], 13248), '_cpp_interpret_identifier': ([], 13248)}, "PosixPath('602/tree-ssa-coalesce.bc')": {'coalesce_pair_map_eq': ([], 9886), 'coalesce_pair_map_hash': ([], 9886), 'create_coalesce_list': ([], 9886), 'gsi_stmt': ([], 9886), 'ei_next': ([], 9886), 'coalesce_cost_edge': ([], 9886), 'has_single_use': ([], 9886), 'add_cost_one_coalesce': ([], 9886), 'find_coalesce_pair': ([2], 9883), 'add_coalesce': ([], 9886), 'abnormal_corrupt': ([], 9886), 'gsi_next': ([], 9886), 'bb_seq': ([], 9886), 'gsi_start_bb': ([], 9886), 'gimple_def_ops': ([], 9886), 'gimple_vdef': ([], 9886), 'gimple_use_ops': ([], 9886), 'gimple_vuse': ([], 9886), 'op_iter_init': ([], 9886), 'op_iter_next_tree': ([], 9886), 'op_iter_init_tree': ([], 9886), 'gimple_ops': ([], 9886), 'gimple_op': ([], 9886), 'gimple_asm_output_op': ([], 9886), 'has_zero_uses': ([], 9886), 'create_outofssa_var_map': ([4, 309], 9879), 'delete_coalesce_list': ([], 9886), 'ssa_conflicts_new': ([], 9886), 'new_live_track': ([], 9886), 'live_on_exit': ([], 9886), 'bmp_iter_set_init': ([], 9886), 'bmp_iter_set': ([4], 9881), 'basevar_index': ([], 9886), 'bmp_iter_next': ([], 9886), 'live_track_init': ([], 9886), 'gsi_last_bb': ([], 9886), 'var_to_partition': ([], 9886), 'live_track_remove_partition': ([], 9886), 'ssa_conflicts_add_one': ([0], 9884), 'live_track_process_def': ([5], 9885), 'gsi_prev': ([], 9886), 'delete_live_track': ([], 9886), 'build_ssa_conflict_graph': ([], 9886), 'ssa_conflicts_dump': ([], 9886), 'first_htab_element': ([], 9886), 'first_coalesce_pair': ([], 9886), 'end_htab_p': ([], 9886), 'end_coalesce_pair_p': ([], 9886), 'next_htab_element': ([], 9886), 'next_coalesce_pair': ([], 9886), 'compare_pairs': ([], 9886), 'sort_coalesce_list': ([], 9886), 'dump_coalesce_list': ([], 9886), 'partition_to_var': ([], 9886), 'ssa_conflicts_test_p': ([], 9886), 'ssa_conflicts_merge': ([7], 9872), 'attempt_coalesce': ([], 9886), 'fail_abnormal_edge_coalesce': ([], 9886), 'pop_cost_one_pair': ([], 9886), 'pop_best_coalesce': ([], 9886), 'coalesce_partitions': ([], 9886), 'ssa_conflicts_delete': ([], 9886), 'coalesce_ssa_name': ([], 9886)}, "PosixPath('602/regrename.bc')": {'bitmap_initialize_stat': ([], 10667), 'df_scan_get_bb_info': ([], 10667), 'df_get_artificial_defs': ([], 10667), 'verify_reg_in_set': ([], 10667), 'VEC_du_head_p_base_space': ([], 10667), 'VEC_du_head_p_heap_reserve': ([], 10667), 'VEC_du_head_p_base_quick_push': ([], 10667), 'VEC_du_head_p_heap_safe_push': ([], 10667), 'create_new_chain': ([], 10667), 'hide_operands': ([0], 10659), 'restore_operands': ([0, 1], 10647), 'scan_rtx_reg': ([9, 262], 10659), 'regno_ok_for_base_p': ([], 10667), 'scan_rtx_address': ([], 10667), 'scan_rtx': ([2], 10659), 'record_out_operands': ([], 10667), 'remove_from_hard_reg_set': ([], 10667), 'add_to_hard_reg_set': ([], 10667), 'note_sets_clobbers': ([2, 4], 10664), 'build_def_use': ([], 10667), 'dump_def_use_chain': ([], 10667), 'bmp_iter_set_init': ([], 10667), 'bmp_iter_set': ([], 10667), 'bmp_iter_next': ([], 10667), 'merge_overlapping_regs': ([], 10667), 'do_replace': ([], 10667), 'VEC_du_head_p_base_iterate': ([], 10667), 'free_chain_data': ([], 10667), 'regrename_optimize': ([3], 10631)}, "PosixPath('602/hex.bc')": {}, "PosixPath('602/version.bc')": {}, "PosixPath('602/ipa-utils.bc')": {'searchc': ([1, 7, 11], 1178), 'ipa_utils_reduced_inorder': ([], 1197), 'get_base_var': ([], 1197)}, "PosixPath('602/ggc-page.bc')": {'push_by_depth': ([], 6986), 'debug_print_page_list': ([], 6986), 'set_page_group_in_use': ([], 6986), 'set_page_table_entry': ([], 6986), 'alloc_page': ([], 6986), 'push_depth': ([], 6986), 'ggc_alloc_stat': ([50], 6975), 'ggc_allocated_p': ([], 6986), 'lookup_page_table_entry': ([], 6986), 'gt_ggc_m_S': ([], 6986), 'ggc_set_mark': ([], 6986), 'ggc_marked_p': ([], 6986), 'ggc_get_size': ([], 6986), 'ggc_free': ([], 6986), 'compute_inverse': ([], 6986), 'init_ggc': ([0, 12], 6975), 'release_pages': ([], 6986), 'ggc_print_statistics': ([51], 6983), 'ggc_pch_total_size': ([], 6986), 'ggc_pch_this_base': ([], 6986), 'ggc_pch_alloc_object': ([1], 6983), 'ggc_pch_write_object': ([], 6986), 'clear_marks': ([], 6986), 'move_ptes_to_front': ([], 6986), 'ggc_pch_read': ([1], 6980)}, "PosixPath('602/strerror.bc')": {'init_error_tables': ([], 7518), 'strerror': ([], 7518), 'strerrno': ([], 7518)}, "PosixPath('602/lists.bc')": {'find_list_elem': ([], 1026), 'remove_list_elem': ([], 1026), 'alloc_INSN_LIST': ([], 1026), 'alloc_EXPR_LIST': ([], 1026), 'free_list': ([], 1026), 'remove_free_INSN_LIST_node': ([], 1026), 'remove_free_EXPR_LIST_node': ([], 1026)}, "PosixPath('602/xmemdup.bc')": {}, "PosixPath('602/combine.bc')": {'setup_incoming_promotions': ([16, 19], 87601), 'try_combine': ([1, 7, 15, 28, 31, 32, 209, 266, 298, 491, 539, 1070, 1074], 87280), 'record_value_for_reg': ([37], 87606), 'combine_validate_cost': ([], 87608), 'distribute_links': ([47], 87606), 'combine_simplify_rtx': ([0, 113, 161, 508, 598, 775, 843], 86913), 'simplify_set': ([], 87608), 'reg_truncated_to_mode': ([], 87608), 'df_lr_get_bb_info': ([], 87608), 'get_last_value_validate': ([], 87608), 'get_last_value': ([], 87608), 'reg_num_sign_bit_copies_for_combine': ([], 87608), 'reg_nonzero_bits_for_combine': ([], 87608), 'gen_lowpart_for_combine': ([], 87608), 'VEC_reg_stat_type_base_space': ([], 87608), 'VEC_reg_stat_type_heap_reserve_exact': ([], 87608), 'VEC_reg_stat_type_heap_safe_grow': ([], 87608), 'VEC_reg_stat_type_heap_safe_grow_cleared': ([], 87608), 'count_rtxs': ([], 87608), 'update_table_tick': ([0], 87606), 'create_log_links': ([], 87608), 'single_pred_p': ([], 87608), 'single_pred_edge': ([], 87608), 'single_pred': ([], 87608), 'record_dead_and_set_regs_1': ([], 87608), 'record_dead_and_set_regs': ([], 87608), 'init_reg_last': ([], 87608), 'record_promoted_value': ([], 87608), 'check_promoted_subreg': ([3, 4], 87604), 'cant_combine_insn_p': ([], 87608), 'likely_spilled_retval_1': ([], 87608), 'likely_spilled_retval_p': ([], 87608), 'do_SUBST': ([2], 87603), 'reg_subword_p': ([], 87608), 'expand_field_assignment': ([15], 87606), 'use_crosses_set_p': ([], 87608), 'can_combine_p': ([5], 87597), 'undo_all': ([], 87608), 'combinable_i3pat': ([8], 87584), 'find_single_use_1': ([], 87608), 'find_single_use': ([], 87608), 'can_change_dest_mode': ([], 87608), 'do_SUBST_MODE': ([], 87608), 'if_then_else_cond': ([6, 16], 87572), 'try_widen_shift_mode': ([], 87608), 'force_to_mode': ([30, 39, 131], 87556), 'simplify_and_const_int': ([], 87608), 'expand_compound_operation': ([0, 7], 87587), 'simplify_shift_const_1': ([3, 5, 312, 365], 87468), 'apply_distributive_law': ([5], 87587), 'make_extraction': ([0, 6], 87442), 'extract_left_shift': ([], 87608), 'make_compound_operation': ([13, 27], 87527), 'simplify_comparison': ([1, 111, 131, 138, 219], 87465), 'distribute_and_simplify_rtx': ([], 87608), 'known_cond': ([], 87608), 'do_SUBST_INT': ([], 87608), 'reg_dead_at_p_1': ([], 87608), 'reg_dead_at_p': ([], 87608), 'recog_for_combine': ([72], 87604), 'rtx_equal_for_field_assignment_p': ([0], 87605), 'canon_reg_for_combine': ([], 87608), 'make_field_assignment': ([], 87608), 'simplify_logical': ([], 87608), 'subst': ([13], 87496), 'add_to_hard_reg_set': ([], 87608), 'mark_used_regs_combine': ([], 87608), 'find_split_point': ([1, 21], 87584), 'contains_muldiv': ([], 87608), 'propagate_for_debug': ([], 87608), 'reg_bitfield_target_p': ([], 87608), 'distribute_notes': ([154], 87531), 'move_deaths': ([6, 8, 31], 87561), 'single_succ_p': ([], 87608), 'single_succ_edge': ([], 87608), 'update_cfg_for_uncondjump': ([], 87608), 'undo_commit': ([], 87608), 'set_nonzero_bits_and_sign_copies': ([], 87608), 'clear_log_links': ([], 87608), 'delete_noop_moves': ([], 87608), 'record_truncated_value': ([], 87608), 'combine_instructions': ([7], 87606), 'rest_of_handle_combine': ([], 87608)}, "PosixPath('602/ira-costs.bc')": {'ira_init_costs': ([], 13190), 'ira_init_costs_once': ([], 13190), 'free_ira_costs': ([], 13190), 'ira_allocno_iter_cond': ([], 13190), 'ok_for_base_p_nonstrict': ([], 13190), 'ok_for_index_p_nonstrict': ([], 13190), 'ira_get_may_move_cost': ([], 13190), 'record_address_regs': ([], 13190), 'copy_cost': ([3, 10], 13180), 'ira_get_register_move_cost': ([0], 13185), 'record_reg_classes': ([9, 16, 18, 146, 150, 167], 13124), 'record_operand_costs': ([], 13190), 'scan_one_insn': ([48], 13189), 'process_bb_for_costs': ([], 13190), 'print_allocno_costs': ([], 13190), 'print_pseudo_costs': ([], 13190), 'find_costs_and_classes': ([11, 20, 24, 32], 13157), 'ira_allocate_and_set_costs': ([], 13190), 'process_bb_node_for_hard_reg_moves': ([], 13190), 'setup_allocno_cover_class_and_costs': ([], 13190), 'ira_costs': ([], 13190), 'ira_tune_allocno_costs_and_cover_classes': ([21], 13188)}, "PosixPath('602/df-problems.bc')": {'df_rd_free': ([], 31154), 'df_lr_finalize': ([], 31154), 'df_lr_free': ([], 31154), 'df_lr_verify_solution_start': ([], 31154), 'df_lr_verify_solution_end': ([], 31154), 'df_live_free': ([], 31154), 'df_live_verify_solution_start': ([], 31154), 'df_live_verify_solution_end': ([], 31154), 'df_chain_alloc': ([], 31154), 'df_chain_free': ([], 31154), 'df_chain_fully_remove_problem': ([], 31154), 'df_byte_lr_alloc': ([15], 31151), 'df_byte_lr_free': ([], 31154), 'df_note_bb_compute': ([], 31154), 'df_md_free': ([], 31154), 'df_live_get_bb_info': ([], 31154), 'df_lr_get_bb_info': ([], 31154), 'df_get_live_out': ([], 31154), 'df_get_live_in': ([], 31154), 'df_grow_bb_info': ([], 31154), 'df_chain_dump': ([], 31154), 'ei_next': ([], 31154), 'df_print_bb_index': ([7], 31150), 'df_scan_get_bb_info': ([], 31154), 'df_get_artificial_defs': ([], 31154), 'df_rd_simulate_artificial_defs_at_top': ([], 31154), 'df_rd_simulate_one_insn': ([8], 31146), 'df_rd_get_bb_info': ([], 31154), 'df_rd_bottom_dump': ([], 31154), 'df_rd_top_dump': ([], 31154), 'df_rd_start_dump': ([], 31154), 'bmp_iter_set_init': ([19], 31151), 'bmp_iter_set': ([4], 31149), 'bmp_iter_next': ([], 31154), 'df_rd_transfer_function': ([5], 31151), 'df_rd_confluence_n': ([3], 31147), 'df_rd_init_solution': ([0], 31139), 'df_rd_bb_local_compute_process_def': ([], 31154), 'df_rd_bb_local_compute': ([], 31154), 'df_rd_local_compute': ([12], 31150), 'df_rd_free_bb_info': ([], 31154), 'df_rd_set_bb_info': ([], 31154), 'df_rd_alloc': ([9], 31151), 'df_lr_bottom_dump': ([], 31154), 'df_lr_top_dump': ([], 31154), 'df_lr_set_bb_info': ([], 31154), 'df_lr_alloc': ([9], 31150), 'df_get_artificial_uses': ([], 31154), 'df_lr_bb_local_compute': ([], 31154), 'df_lr_local_compute': ([3, 37], 31137), 'df_lr_transfer_function': ([], 31154), 'df_lr_confluence_n': ([], 31154), 'df_lr_confluence_0': ([], 31154), 'df_lr_init': ([0], 31139), 'df_lr_free_bb_info': ([], 31154), 'df_lr_reset': ([0], 31138), 'df_lr_verify_transfer_functions': ([], 31154), 'df_live_bottom_dump': ([], 31154), 'df_live_top_dump': ([], 31154), 'df_live_finalize': ([5], 31139), 'df_live_transfer_function': ([], 31154), 'df_live_confluence_n': ([], 31154), 'df_live_init': ([5], 31138), 'df_live_bb_local_compute': ([], 31154), 'df_live_local_compute': ([3], 31140), 'df_live_free_bb_info': ([], 31154), 'df_live_reset': ([0], 31138), 'df_live_set_bb_info': ([], 31154), 'df_live_alloc': ([8], 31150), 'df_live_set_all_dirty': ([], 31154), 'df_live_verify_transfer_functions': ([], 31154), 'df_chain_create': ([], 31154), 'df_chain_unlink_1': ([], 31154), 'df_chain_unlink': ([], 31154), 'df_chain_copy': ([], 31154), 'df_chain_bottom_dump': ([], 31154), 'df_chain_top_dump': ([], 31154), 'df_chain_remove_problem': ([0, 3, 6, 136], 31128), 'df_chain_create_bb_process_use': ([0, 93], 31148), 'df_chain_create_bb': ([], 31154), 'df_chain_finalize': ([], 31154), 'df_byte_lr_get_regno_start': ([], 31154), 'df_byte_lr_get_regno_len': ([], 31154), 'df_byte_lr_get_bb_info': ([], 31154), 'df_byte_lr_bottom_dump': ([], 31154), 'df_byte_lr_top_dump': ([], 31154), 'df_byte_lr_transfer_function': ([], 31154), 'df_byte_lr_confluence_n': ([], 31154), 'df_byte_lr_confluence_0': ([], 31154), 'df_byte_lr_init': ([0], 31139), 'df_byte_lr_expand_bitmap': ([0], 31146), 'df_byte_lr_bb_local_compute': ([], 31154), 'df_byte_lr_local_compute': ([2], 31147), 'df_byte_lr_free_bb_info': ([], 31154), 'df_byte_lr_reset': ([0], 31138), 'df_byte_lr_check_regs': ([], 31154), 'df_byte_lr_set_bb_info': ([], 31154), 'df_byte_lr_simulate_defs': ([], 31154), 'df_byte_lr_simulate_uses': ([], 31154), 'df_byte_lr_simulate_artificial_refs_at_top': ([], 31154), 'df_byte_lr_simulate_artificial_refs_at_end': ([], 31154), 'df_kill_notes': ([], 31154), 'df_whole_mw_reg_unused_p': ([], 31154), 'df_set_note': ([], 31154), 'df_set_unused_notes_for_mw': ([], 31154), 'df_create_unused_note': ([], 31154), 'df_whole_mw_reg_dead_p': ([], 31154), 'df_set_dead_notes_for_mw': ([], 31154), 'df_note_compute': ([0], 31139), 'df_simulate_find_defs': ([], 31154), 'df_simulate_defs': ([], 31154), 'df_simulate_uses': ([], 31154), 'df_simulate_initialize_backwards': ([], 31154), 'bb_has_eh_pred': ([], 31154), 'df_simulate_fixup_sets': ([], 31154), 'df_simulate_finalize_backwards': ([], 31154), 'df_simulate_initialize_forwards': ([], 31154), 'df_simulate_one_insn_forwards': ([], 31154), 'df_md_simulate_artificial_defs_at_top': ([], 31154), 'df_md_simulate_one_insn': ([], 31154), 'df_md_get_bb_info': ([], 31154), 'df_md_bottom_dump': ([], 31154), 'df_md_top_dump': ([], 31154), 'df_md_transfer_function': ([], 31154), 'df_md_confluence_n': ([], 31154), 'df_md_confluence_0': ([], 31154), 'df_md_init': ([2], 31150), 'df_md_bb_local_compute_process_def': ([], 31154), 'df_md_bb_local_compute': ([], 31154), 'df_md_local_compute': ([11, 13, 16], 31127), 'df_md_free_bb_info': ([], 31154), 'df_md_reset': ([0], 31138), 'df_md_set_bb_info': ([], 31154), 'df_md_alloc': ([9], 31150)}, "PosixPath('602/tree-ssa-copy.bc')": {'may_propagate_copy': ([], 6195), 'gimple_ops': ([], 6195), 'may_propagate_copy_into_stmt': ([], 6195), 'may_propagate_copy_into_asm': ([], 6195), 'delink_imm_use': ([], 6195), 'link_imm_use_to_list': ([], 6195), 'link_imm_use': ([], 6195), 'set_ssa_use_from_ptr': ([], 6195), 'gsi_stmt': ([], 6195), 'gimple_set_op': ([], 6195), 'propagate_tree_value_into_stmt': ([22], 6192), 'bb_seq': ([], 6195), 'gsi_start_bb': ([], 6195), 'gimple_vuse': ([], 6195), 'stmt_may_generate_copy': ([], 6195), 'gimple_def_ops': ([], 6195), 'op_iter_init': ([], 6195), 'op_iter_next_tree': ([], 6195), 'op_iter_init_tree': ([], 6195), 'set_copy_of_val': ([], 6195), 'gsi_next': ([], 6195), 'loops_state_satisfies_p': ([], 6195), 'ei_next': ([], 6195), 'init_copy_prop': ([], 6195), 'fini_copy_prop': ([], 6195), 'get_copy_of_val': ([], 6195), 'dump_copy_of': ([], 6195), 'copy_prop_visit_phi_node': ([], 6195), 'copy_prop_visit_cond_stmt': ([], 6195), 'copy_prop_visit_stmt': ([], 6195), 'execute_copy_prop': ([], 6195)}, "PosixPath('602/tree-ssa-dom.bc')": {'tree_ssa_dominator_optimize': ([], 20210), 'record_conditions': ([], 20210), 'first_imm_use_on_stmt': ([], 20210), 'next_imm_use_on_stmt': ([], 20210), 'loop_depth_of_name': ([], 20210), 'degenerate_phi_result': ([], 20210), 'gsi_stmt': ([], 20210), 'gimple_ops': ([], 20210), 'get_lhs_or_phi_result': ([], 20210), 'has_zero_uses': ([], 20210), 'end_imm_use_stmt_p': ([], 20210), 'clear_and_done_ssa_iter': ([], 20210), 'op_iter_next_use': ([], 20210), 'op_iter_init_phiuse': ([], 20210), 'delink_imm_use': ([], 20210), 'link_imm_use_to_list': ([], 20210), 'move_use_after_head': ([], 20210), 'gimple_def_ops': ([], 20210), 'gimple_vdef': ([], 20210), 'gimple_use_ops': ([], 20210), 'gimple_vuse': ([], 20210), 'op_iter_init': ([], 20210), 'op_iter_init_use': ([], 20210), 'gimple_vuse_op': ([], 20210), 'link_use_stmts_after': ([], 20210), 'first_imm_use_stmt': ([], 20210), 'gsi_next': ([], 20210), 'ei_next': ([], 20210), 'bb_seq': ([], 20210), 'gsi_last_bb': ([], 20210), 'next_imm_use_stmt': ([], 20210), 'propagate_rhs_into_lhs': ([], 20210), 'eliminate_const_or_copy': ([], 20210), 'eliminate_degenerate_phis_1': ([], 20210), 'bmp_iter_set_init': ([], 20210), 'bmp_iter_set': ([4], 20205), 'bmp_iter_next': ([], 20210), 'eliminate_degenerate_phis': ([], 20210), 'gsi_start_bb': ([], 20210), 'free_all_edge_infos': ([], 20210), 'single_succ_p': ([], 20210), 'single_succ_edge': ([], 20210), 'iterative_hash_hashable_expr': ([], 20210), 'avail_expr_hash': ([], 20210), 'initialize_hash_element': ([], 20210), 'print_expr_hash_elt': ([], 20210), 'VEC_expr_hash_elt_t_base_space': ([], 20210), 'VEC_expr_hash_elt_t_heap_reserve': ([], 20210), 'VEC_expr_hash_elt_t_base_quick_push': ([], 20210), 'VEC_expr_hash_elt_t_heap_safe_push': ([0], 20208), 'lookup_avail_expr': ([], 20210), 'dom_thread_across_edge': ([], 20210), 'VEC_tree_base_space': ([], 20210), 'VEC_tree_heap_reserve': ([], 20210), 'VEC_tree_base_quick_push': ([], 20210), 'VEC_tree_heap_safe_push': ([], 20210), 'record_const_or_copy_1': ([], 20210), 'record_const_or_copy': ([], 20210), 'initialize_hash_element_from_expr': ([], 20210), 'record_cond': ([], 20210), 'VEC_expr_hash_elt_t_base_pop': ([], 20210), 'remove_local_expressions_from_table': ([], 20210), 'VEC_tree_base_pop': ([], 20210), 'restore_vars_to_original_value': ([], 20210), 'dom_opt_leave_block': ([], 20210), 'single_incoming_edge_ignoring_loop_edges': ([], 20210), 'record_equality': ([], 20210), 'record_equivalences_from_incoming_edge': ([], 20210), 'record_equivalences_from_phis': ([], 20210), 'gimple_set_op': ([], 20210), 'simple_iv_increment_p': ([], 20210), 'cprop_operand': ([], 20210), 'cprop_into_stmt': ([], 20210), 'gimple_call_fndecl': ([], 20210), 'eliminate_redundant_computations': ([], 20210), 'gimple_references_memory_p': ([], 20210), 'record_equivalences_from_stmt': ([], 20210), 'optimize_stmt': ([], 20210), 'build_and_record_new_cond': ([], 20210), 'initialize_expr_from_cond': ([], 20210), 'record_edge_info': ([], 20210), 'cprop_into_successor_phis': ([], 20210), 'dom_opt_enter_block': ([], 20210), 'free_expr_hash_elt': ([], 20210), 'hashable_expr_equal_p': ([], 20210), 'avail_expr_eq': ([], 20210)}, "PosixPath('602/sreal.bc')": {'normalize': ([0, 7], 1271), 'dump_sreal': ([], 1276), 'sreal_init': ([], 1276), 'sreal_to_int': ([], 1276), 'sreal_compare': ([], 1276), 'copy': ([], 1276), 'shift_right': ([0], 1271), 'sreal_add': ([], 1276), 'sreal_sub': ([], 1276), 'sreal_mul': ([], 1276), 'sreal_div': ([0], 1271)}, "PosixPath('602/tree-vectorizer.bc')": {'vect_print_dump_info': ([], 2124), 'number_of_loops': ([], 2124), 'VEC_int_base_quick_push': ([], 2124), 'loop_outer': ([], 2124), 'VEC_int_base_iterate': ([], 2124), 'get_loop': ([], 2124), 'fel_next': ([5], 2121), 'fel_init': ([], 2124), 'gimple_vop': ([], 2124), 'vectorize_loops': ([], 2124), 'increase_alignment': ([], 2124), 'execute_vect_slp': ([], 2124)}, "PosixPath('602/recog.bc')": {'extract_insn': ([], 21452), 'validate_change_1': ([2], 21451), 'extract_asm_operands': ([], 21452), 'asm_noperands': ([], 21452), 'decode_asm_operands': ([], 21452), 'recog_memoized': ([], 21452), 'skip_alternative': ([], 21452), 'reg_fits_class_p': ([], 21452), 'general_operand': ([0, 27], 21441), 'find_constant_term_loc': ([], 21452), 'offsettable_address_addr_space_p': ([], 21452), 'offsettable_memref_p': ([], 21452), 'offsettable_nonstrict_memref_p': ([], 21452), 'constrain_operands': ([0, 1, 2, 5, 144, 304], 21413), 'memory_operand': ([0], 21446), 'register_operand': ([0, 2], 21425), 'asm_operand_ok': ([13], 21444), 'check_asm_operands': ([], 21452), 'insn_invalid_p': ([5], 21435), 'confirm_change_group': ([], 21452), 'cancel_changes': ([], 21452), 'verify_changes': ([], 21452), 'canonicalize_change_group': ([], 21452), 'simplify_while_replacing': ([], 21452), 'validate_replace_rtx_1': ([1, 2, 57], 21431), 'validate_replace_rtx_group': ([], 21452), 'validate_replace_src_1': ([], 21452), 'validate_replace_src_group': ([], 21452), 'validate_simplify_insn': ([], 21452), 'scratch_operand': ([], 21452), 'immediate_operand': ([0], 21450), 'const_int_operand': ([], 21452), 'nonmemory_operand': ([1], 21447), 'push_operand': ([], 21452), 'pop_operand': ([], 21452), 'indirect_operand': ([], 21452), 'ordered_comparison_operator': ([0], 21448), 'comparison_operator': ([0], 21446), 'preprocess_constraints': ([11, 12], 21426), 'split_insn': ([], 21452), 'split_all_insns': ([], 21452), 'split_all_insns_noflow': ([], 21452), 'peep2_regno_dead_p': ([], 21452), 'peep2_reg_dead_p': ([], 21452), 'add_to_hard_reg_set': ([], 21452), 'peep2_find_free_register': ([], 21452), 'store_data_bypass_p': ([], 21452), 'if_test_bypass_p': ([0], 21441), 'df_lr_get_bb_info': ([], 21452), 'peep2_reinit_state': ([], 21452), 'ei_next': ([], 21452), 'peephole2_optimize': ([88], 21444), 'rest_of_handle_peephole2': ([], 21452)}, "PosixPath('602/decimal32.bc')": {'__dpd32FromNumber': ([6, 7, 29], 2659), '__dpd32ToNumber': ([], 2669), '__dpd32ToString': ([], 2669), 'decimal32FromNumber': ([], 2669), 'decimal32ToNumber': ([], 2669)}, "PosixPath('602/lto-section-in.bc')": {'lto_input_1_unsigned': ([6], 2040), 'lto_free_section_data': ([], 2044), 'lto_create_simple_input_block': ([], 2044), 'lto_record_renamed_decl': ([], 2044), 'lto_get_decl_name_mapping': ([], 2044), 'lto_get_function_in_decl_state': ([], 2044)}, "PosixPath('602/tree-pretty-print.bc')": {'maybe_init_pretty_print': ([], 23543), 'dump_location': ([], 23543), 'dump_decl_name': ([], 23543), 'tree_operand_length': ([], 23543), 'op_prio': ([], 23543), 'tsi_next': ([], 23543), 'dump_function_name': ([], 23543), 'init_call_expr_arg_iterator': ([], 23543), 'next_call_expr_arg': ([], 23543), 'first_call_expr_arg': ([], 23543), 'more_call_expr_args_p': ([], 23543), 'VEC_tree_base_iterate': ([], 23543), 'dump_generic_node': ([50, 80, 114], 23473), 'print_call_name': ([], 23543), 'print_declaration': ([0], 23528), 'dump_array_domain': ([], 23543), 'do_niy': ([], 23543), 'dump_function_declaration': ([], 23543)}, "PosixPath('602/init-regs.bc')": {'df_lr_get_bb_info': ([], 760), 'df_live_get_bb_info': ([], 760), 'initialize_uninitialized_regs': ([], 760), 'rest_of_handle_initialize_regs': ([], 760)}, "PosixPath('602/expr.bc')": {'init_block_move_fn': ([], 75328), 'init_block_clear_fn': ([], 75328), 'expand_expr_real_1': ([2, 3, 20, 22, 23, 25, 38, 66, 198, 569, 769, 815, 998, 1013, 1116, 1928], 74972), 'init_expr_target': ([], 75328), 'compress_float_constant': ([], 75328), 'get_subtarget': ([], 75328), 'get_rtx_for_ssa_name': ([], 75328), 'const_vector_from_tree': ([], 75328), 'count_type_elements': ([], 75328), 'categorize_ctor_elements_1': ([44], 75327), 'all_zeros_p': ([], 75328), 'move_by_pieces_ninsns': ([], 75328), 'store_by_pieces_2': ([], 75328), 'store_by_pieces_1': ([], 75328), 'clear_by_pieces': ([], 75328), 'tree_operand_length': ([], 75328), 'safe_from_p': ([4, 13], 75314), 'mostly_zeros_p': ([], 75328), 'highest_pow2_factor': ([], 75328), 'can_store_by_pieces': ([], 75328), 'store_by_pieces': ([], 75328), 'block_move_libcall_safe_for_call_parm': ([], 75328), 'emit_storent_insn': ([], 75328), 'gimple_ops': ([], 75328), 'gimple_op': ([], 75328), 'component_ref_field_offset': ([], 75328), 'array_ref_low_bound': ([], 75328), 'array_ref_element_size': ([], 75328), 'get_inner_reference': ([21], 75324), 'target_align': ([], 75328), 'is_aligning_offset': ([], 75328), 'tsi_next': ([], 75328), 'emit_move_change_mode': ([], 75328), 'emit_move_via_integer': ([], 75328), 'undefined_operand_subword_p': ([], 75328), 'emit_single_push_insn': ([], 75328), 'move_by_pieces': ([2, 3], 75292), 'expand_expr_addr_expr_1': ([40], 75317), 'expand_expr_real': ([], 75328), 'expand_expr_real_2': ([1, 95, 126, 249, 298, 301, 486], 75282), 'reduce_to_bit_field_precision': ([0], 75325), 'expand_constructor': ([8], 75322), 'store_constructor': ([], 75328), 'expand_assignment': ([4, 35, 42, 137, 151, 153, 154, 155], 75256), 'store_constructor_field': ([], 75328), 'store_field': ([0], 75327), 'store_expr': ([17, 26], 75306), 'emit_group_load': ([], 75328), 'emit_group_load_1': ([26], 75320), 'clear_storage_hints': ([], 75328), 'set_storage_via_libcall': ([], 75328), 'set_storage_via_setmem': ([], 75328), 'emit_move_insn': ([2], 75322), 'emit_move_insn_1': ([6], 75321), 'write_complex_part': ([], 75328), 'emit_block_move_hints': ([4, 98], 75313), 'force_operand': ([0], 75322), 'emit_block_move_via_libcall': ([], 75328), 'convert_modes': ([20], 75322), 'convert_move': ([46], 75305), 'emit_move_complex_push': ([1], 75297), 'read_complex_part': ([1], 75324), 'emit_move_multi_word': ([], 75328), 'emit_move_resolve_push': ([], 75328), 'move_block_to_reg': ([], 75328), 'gen_group_rtx': ([], 75328), 'emit_group_load_into_temps': ([], 75328), 'emit_group_move': ([], 75328), 'emit_group_move_into_temps': ([], 75328), 'emit_group_store': ([30], 75275), 'copy_blkmode_from_reg': ([], 75328), 'use_reg': ([], 75328), 'use_group_regs': ([], 75328), 'push_block': ([], 75328), 'emit_push_insn': ([], 75328), 'contains_packed_reference': ([], 75328), 'string_constant': ([], 75328), 'do_tablejump': ([], 75328), 'try_tablejump': ([0], 75322), 'vector_mode_valid_p': ([], 75328), 'build_personality_function': ([], 75328), 'get_personality_function': ([], 75328)}, "PosixPath('602/lambda-trans.bc')": {'lambda_trans_matrix_new': ([], 293), 'lambda_trans_matrix_id_p': ([], 293), 'lambda_trans_matrix_inverse': ([], 293), 'print_lambda_trans_matrix': ([], 293)}, "PosixPath('602/tree-optimize.bc')": {'execute_fixup_cfg': ([50], 2455), 'bb_seq': ([], 2458), 'gsi_start_bb': ([], 2458), 'gsi_stmt': ([], 2458), 'gimple_ops': ([], 2458), 'gimple_op': ([], 2458), 'gimple_call_fn': ([], 2458), 'gimple_call_fndecl': ([], 2458), 'gsi_next': ([], 2458), 'ei_next': ([], 2458), 'gate_all_early_local_passes': ([], 2458), 'tree_rest_of_compilation': ([], 2458), 'gate_all_early_optimizations': ([], 2458), 'gate_all_optimizations': ([], 2458)}, "PosixPath('602/tree-nested.bc')": {'convert_nonlocal_reference_op': ([], 15754), 'convert_local_reference_op': ([], 15754), 'get_chain_decl': ([0], 15738), 'gsi_last': ([1], 15752), 'get_trampoline_type': ([], 15754), 'finalize_nesting_tree_1': ([], 15754), 'remap_vla_decls': ([57], 15752), 'build_addr': ([], 15754), 'insert_field_into_struct': ([], 15754), 'check_for_nested_with_variably_modified': ([], 15754), 'create_nesting_tree': ([], 15754), 'walk_body': ([], 15754), 'iter_nestinfo_next': ([], 15754), 'gsi_stmt': ([], 15754), 'gimple_ops': ([], 15754), 'gimple_call_fndecl': ([], 15754), 'create_tmp_var_for': ([], 15754), 'get_chain_field': ([], 15754), 'init_tmp_var': ([], 15754), 'get_static_chain': ([], 15754), 'gimple_set_op': ([], 15754), 'convert_gimple_call': ([], 15754), 'lookup_tramp_for_decl': ([0, 8], 15752), 'get_frame_field': ([], 15754), 'init_tmp_var_with_call': ([], 15754), 'convert_tramp_reference_op': ([], 15754), 'convert_tramp_reference_stmt': ([], 15754), 'convert_all_function_calls': ([], 15754), 'gimple_seq_first_stmt': ([], 15754), 'use_pointer_in_frame': ([], 15754), 'lookup_field_for_decl': ([], 15754), 'nesting_copy_decl': ([], 15754), 'contains_remapped_vars': ([], 15754), 'finalize_nesting_tree': ([], 15754), 'unnest_nesting_tree_1': ([], 15754), 'unnest_nesting_tree': ([], 15754), 'gsi_prev': ([], 15754), 'convert_nl_goto_receiver': ([], 15754), 'get_nl_goto_field': ([], 15754), 'convert_nl_goto_reference': ([], 15754), 'get_local_debug_decl': ([0], 15745), 'save_tmp_var': ([], 15754), 'gimple_omp_for_index_ptr': ([], 15754), 'gimple_omp_for_initial_ptr': ([], 15754), 'gimple_omp_for_final_ptr': ([], 15754), 'gimple_omp_for_incr': ([], 15754), 'walk_gimple_omp_for': ([], 15754), 'convert_local_omp_clauses': ([], 15754), 'convert_local_reference_stmt': ([], 15754), 'get_nonlocal_debug_decl': ([2], 15745), 'note_nonlocal_vla_type': ([0], 15752), 'note_nonlocal_block_vlas': ([], 15754), 'convert_nonlocal_omp_clauses': ([], 15754), 'convert_nonlocal_reference_stmt': ([], 15754), 'lower_nested_functions': ([], 15754)}, "PosixPath('602/cplus-dem.bc')": {'demangle_template': ([0, 5], 28195), 'string_need': ([], 28258), 'string_prependn': ([], 28258), 'consume_count': ([0], 28253), 'consume_count_with_underscores': ([], 28258), 'register_Btype': ([8], 28254), 'get_count': ([0], 28253), 'string_appends': ([], 28258), 'ada_demangle': ([4], 28241), 'do_hpacc_template_const_value': ([], 28258), 'arm_pt': ([], 28258), 'snarf_numeric_literal': ([5], 28250), 'arm_special': ([], 28258), 'forget_types': ([], 28258), 'delete_non_B_K_work_stuff': ([], 28258), 'forget_B_and_K_types': ([], 28258), 'squangle_mop_up': ([], 28258), 'work_stuff_copy_to_from': ([], 28258), 'remember_type': ([], 28258), 'string_prepends': ([], 28258), 'remember_Ktype': ([], 28258), 'iterate_demangle_function': ([], 28258), 'demangle_function_name': ([5, 13, 17], 28237), 'demangle_arm_hp_template': ([], 28258), 'do_type': ([0, 96], 28214), 'demangle_nested_args': ([], 28258), 'demangle_template_value_parm': ([], 28258), 'demangle_expression': ([], 28258), 'demangle_qualified': ([4], 28225), 'cplus_demangle': ([], 28258), 'internal_cplus_demangle': ([4, 5, 9], 28214), 'demangle_signature': ([1, 12, 13, 14, 16, 154], 28133), 'demangle_class_name': ([], 28258), 'demangle_args': ([2], 28228), 'do_arg': ([], 28258), 'gnu_special': ([0, 4], 28206), 'demangle_template_template_parm': ([0], 28239), 'cplus_demangle_opname': ([36], 28252), 'cplus_mangle_opname': ([], 28258), 'cplus_demangle_name_to_style': ([], 28258)}, "PosixPath('602/stack-ptr-mod.bc')": {'notice_stack_pointer_modification_1': ([], 360), 'notice_stack_pointer_modification': ([], 360), 'rest_of_handle_stack_ptr_mod': ([], 360)}, "PosixPath('602/cpp_macro.bc')": {'next_context': ([], 12784), 'enter_macro_context': ([9], 12695), '_cpp_create_definition': ([11, 12], 12762), '_cpp_warn_if_unused_macro': ([], 12784), 'cpp_quote_string': ([], 12784), 'cpp_in_system_header': ([], 12784), '_cpp_builtin_macro_text': ([32], 12782), '_cpp_arguments_ok': ([], 12784), '_cpp_push_token_context': ([], 12784), '_cpp_push_text_context': ([], 12784), '_cpp_pop_context': ([], 12784), '_cpp_backup_tokens_direct': ([], 12784), '_cpp_backup_tokens': ([], 12784), 'paste_tokens': ([], 12784), 'paste_all_tokens': ([], 12784), 'padding_token': ([], 12784), 'macro_real_token_count': ([], 12784), 'new_string_token': ([], 12784), 'stringify_arg': ([], 12784), 'push_ptoken_context': ([], 12784), 'builtin_macro': ([], 12784), 'cpp_get_token': ([], 12784), 'cpp_get_token_with_location': ([], 12784), 'cpp_sys_macro_p': ([], 12784), 'cpp_scan_nooutput': ([], 12784), '_cpp_save_parameter': ([14, 17], 12769), 'parse_params': ([], 12784), 'alloc_expansion_token': ([10, 13], 12771), 'check_trad_stringification': ([], 12784), 'lex_expansion_token': ([], 12784), 'create_iso_definition': ([], 12784), 'warn_of_redefinition': ([], 12784), 'cpp_macro_definition': ([72], 12780)}, "PosixPath('602/obstack.bc')": {}, "PosixPath('602/cp-demint.bc')": {'cplus_demangle_fill_component': ([], 873), 'cplus_demangle_fill_builtin_type': ([], 873), 'cplus_demangle_fill_operator': ([], 873), 'cplus_demangle_v3_components': ([0], 867)}, "PosixPath('602/bt-load.bc')": {'compute_defs_uses_and_gen': ([], 11312), 'sbitmap_iter_init': ([], 11312), 'find_btr_reference': ([], 11312), 'insn_sets_btr_p': ([4], 11307), 'find_btr_def_group': ([], 11312), 'add_btr_def': ([], 11312), 'note_other_use_this_block': ([], 11312), 'new_btr_user': ([], 11312), 'note_btr_set': ([], 11312), 'dump_btrs_live': ([], 11312), 'compute_kill': ([], 11312), 'compute_out': ([], 11312), 'sbitmap_iter_cond': ([], 11312), 'sbitmap_iter_next': ([], 11312), 'link_btr_uses': ([], 11312), 'build_btr_def_use_webs': ([], 11312), 'ei_next': ([], 11312), 'augment_live_range': ([27, 60], 11308), 'bmp_iter_set_init': ([], 11312), 'bmp_iter_set': ([4], 11307), 'bmp_iter_next': ([], 11312), 'btr_def_live_range': ([5, 54, 55], 11294), 'block_at_edge_of_live_range_p': ([], 11312), 'clear_btr_from_live_range': ([1], 11299), 'combine_btr_defs': ([], 11312), 'add_btr_to_live_range': ([], 11312), 'move_btr_def': ([], 11312), 'migrate_btr_def': ([], 11312), 'migrate_btr_defs': ([], 11312), 'branch_target_load_optimize': ([], 11312)}, "PosixPath('602/sched-ebb.bc')": {'schedule_ebb': ([], 4233), 'begin_schedule_ready': ([14], 4231), 'sd_iterator_cond': ([], 4233), 'ei_next': ([], 4233), 'ebb_compute_jump_reg_dependencies': ([7], 4232), 'sd_iterator_start': ([], 4233), 'earliest_block_with_similiar_load': ([], 4233), 'add_deps_for_risky_insns': ([], 4233), 'advance_target_bb': ([], 4233), 'ebb_print_insn': ([], 4233), 'rank': ([], 4233), 'init_ready_list': ([], 4233), 'ebb_add_block': ([], 4233), 'ebb_fix_recovery_cfg': ([1], 4229), 'schedule_ebbs': ([43], 4228)}, "PosixPath('602/df-scan.bc')": {'df_scan_alloc': ([], 34191), 'df_scan_free_internal': ([4], 34184), 'df_grow_reg_info': ([], 34191), 'df_grow_insn_info': ([], 34191), 'df_scan_blocks': ([], 34191), 'df_ref_create_structure': ([0], 34158), 'df_install_ref': ([0], 34188), 'df_maybe_reorganize_use_refs': ([], 34191), 'df_maybe_reorganize_def_refs': ([], 34191), 'df_scan_free': ([], 34191), 'df_scan_get_bb_info': ([], 34191), 'df_scan_start_block': ([], 34191), 'df_scan_start_dump': ([], 34191), 'df_mw_hardreg_chain_delete': ([], 34191), 'df_ref_chain_delete_du_chain': ([], 34191), 'df_free_ref': ([], 34191), 'df_reg_chain_unlink': ([65], 34187), 'df_ref_chain_delete': ([], 34191), 'df_insn_delete': ([], 34191), 'df_scan_free_bb_info': ([], 34191), 'df_get_regular_block_artificial_uses': ([1], 34190), 'df_get_entry_block_def_set': ([], 34191), 'bmp_iter_set_init': ([], 34191), 'bmp_iter_set': ([4], 34186), 'VEC_df_mw_hardreg_ptr_base_space': ([], 34191), 'VEC_df_mw_hardreg_ptr_stack_reserve': ([], 34191), 'VEC_df_mw_hardreg_ptr_base_quick_push': ([], 34191), 'VEC_df_mw_hardreg_ptr_stack_safe_push': ([], 34191), 'VEC_df_ref_base_space': ([], 34191), 'VEC_df_ref_stack_reserve': ([], 34191), 'VEC_df_ref_base_quick_push': ([], 34191), 'VEC_df_ref_stack_safe_push': ([2], 34189), 'df_ref_record': ([20], 34189), 'bmp_iter_next': ([], 34191), 'df_ref_compare': ([], 34191), 'df_swap_refs': ([], 34191), 'df_ref_equal_p': ([], 34191), 'df_sort_and_compress_refs': ([], 34191), 'df_mw_compare': ([], 34191), 'df_mw_equal_p': ([], 34191), 'df_sort_and_compress_mws': ([], 34191), 'df_canonize_collection_rec': ([], 34191), 'df_entry_block_defs_collect': ([], 34191), 'VEC_df_ref_base_iterate': ([], 34191), 'df_grow_ref_info': ([], 34191), 'df_check_and_grow_ref_info': ([], 34191), 'df_install_refs': ([], 34191), 'df_refs_add_to_chains': ([4, 18, 34, 54], 34174), 'df_record_entry_block_defs': ([], 34191), 'df_mark_reg': ([], 34191), 'df_get_exit_block_use_set': ([2], 34187), 'ei_next': ([], 34191), 'bb_has_eh_pred': ([], 34191), 'df_exit_block_uses_collect': ([4], 34177), 'df_record_exit_block_uses': ([], 34191), 'df_insn_create_insn_record': ([], 34191), 'df_read_modify_subreg_p': ([], 34191), 'df_def_record_1': ([0, 2], 34183), 'df_defs_record': ([], 34191), 'df_uses_record': ([], 34191), 'df_get_call_refs': ([], 34191), 'df_get_conditional_uses': ([], 34191), 'df_insn_refs_collect': ([56], 34186), 'df_bb_refs_collect': ([], 34191), 'df_bb_refs_record': ([], 34191), 'df_ref_create': ([], 34191), 'df_ref_compress_rec': ([], 34191), 'df_ref_remove': ([], 34191), 'df_refs_verify': ([3], 34185), 'VEC_df_mw_hardreg_ptr_base_iterate': ([], 34191), 'df_mws_verify': ([], 34191), 'df_insn_refs_verify': ([8], 34189), 'df_free_collection_rec': ([], 34191), 'df_insn_rescan': ([], 34191), 'df_insn_rescan_debug_internal': ([], 34191), 'df_insn_rescan_all': ([7, 30], 34176), 'df_mw_hardreg_chain_delete_eq_uses': ([], 34191), 'df_notes_rescan': ([], 34191), 'df_update_entry_block_defs': ([], 34191), 'df_update_exit_block_uses': ([], 34191), 'df_update_entry_exit_and_calls': ([], 34191), 'df_process_deferred_rescans': ([12, 80], 34187), 'df_count_refs': ([], 34191), 'df_get_artificial_defs': ([], 34191), 'df_get_artificial_uses': ([], 34191), 'df_reorganize_refs_by_reg_by_insn': ([], 34191), 'df_reorganize_refs_by_reg_by_reg': ([], 34191), 'df_reorganize_refs_by_reg': ([], 34191), 'df_add_refs_to_table': ([], 34191), 'df_reorganize_refs_by_insn_bb': ([], 34191), 'df_reorganize_refs_by_insn': ([], 34191), 'df_insn_change_bb': ([], 34191), 'df_ref_change_reg_with_loc_1': ([], 34191), 'df_ref_change_reg_with_loc': ([], 34191), 'df_recompute_luids': ([], 34191), 'df_hard_reg_init': ([], 34191), 'df_hard_reg_used_p': ([], 34191), 'df_hard_reg_used_count': ([], 34191), 'df_set_regs_ever_live': ([], 34191), 'df_compute_regs_ever_live': ([], 34191), 'df_reg_chain_mark': ([0], 34176), 'df_bb_verify': ([], 34191), 'df_reg_chain_verify_unmarked': ([], 34191), 'df_scan_verify': ([], 34191)}, "PosixPath('602/tree-ssa-loop-prefetch.bc')": {'determine_loop_nest_reuse': ([], 9024), 'gather_memory_references_ref': ([], 9024), 'record_ref': ([], 9024), 'number_of_loops': ([], 9024), 'VEC_int_base_quick_push': ([], 9024), 'loop_outer': ([], 9024), 'VEC_int_base_iterate': ([], 9024), 'get_loop': ([], 9024), 'fel_next': ([5], 9021), 'fel_init': ([], 9024), 'bb_seq': ([], 9024), 'gsi_start_bb': ([], 9024), 'gsi_stmt': ([], 9024), 'gimple_vuse': ([], 9024), 'gimple_ops': ([], 9024), 'gimple_op': ([], 9024), 'idx_analyze_ref': ([], 9024), 'analyze_ref': ([], 9024), 'find_or_create_group': ([], 9024), 'dump_mem_ref': ([], 9024), 'gsi_next': ([], 9024), 'gather_memory_references': ([], 9024), 'prune_ref_by_self_reuse': ([], 9024), 'prune_ref_by_group_reuse': ([], 9024), 'prune_ref_by_reuse': ([], 9024), 'prune_group_by_reuse': ([], 9024), 'prune_by_reuse': ([], 9024), 'should_issue_prefetch_p': ([], 9024), 'estimate_prefetch_count': ([], 9024), 'volume_of_references': ([], 9024), 'VEC_data_reference_p_base_space': ([], 9024), 'VEC_data_reference_p_heap_reserve': ([], 9024), 'VEC_data_reference_p_base_quick_push': ([], 9024), 'VEC_data_reference_p_heap_safe_push': ([], 9024), 'VEC_data_reference_p_base_iterate': ([], 9024), 'VEC_tree_base_iterate': ([], 9024), 'loop_depth': ([], 9024), 'get_chrec_loop': ([], 9024), 'add_subscript_strides': ([], 9024), 'self_reuse_distance': ([], 9024), 'VEC_ddr_p_base_iterate': ([], 9024), 'volume_of_dist_vector': ([], 9024), 'determine_unroll_factor': ([], 9024), 'is_loop_prefetching_profitable': ([], 9024), 'VEC_edge_base_iterate': ([], 9024), 'may_use_storent_in_loop_p': ([], 9024), 'nontemporal_store_p': ([], 9024), 'mark_nontemporal_store': ([], 9024), 'single_pred_p': ([], 9024), 'gsi_after_labels': ([], 9024), 'emit_mfence_after_loop': ([], 9024), 'mark_nontemporal_stores': ([], 9024), 'schedule_prefetches': ([], 9024), 'issue_prefetch_ref': ([], 9024), 'issue_prefetches': ([], 9024), 'release_mem_refs': ([], 9024), 'loop_prefetch_arrays': ([], 9024), 'tree_ssa_prefetch_arrays': ([], 9024)}, "PosixPath('602/prefix.bc')": {'translate_name': ([], 871), 'update_path': ([7], 870), 'set_std_prefix': ([], 871)}, "PosixPath('602/tree-ssa-sccvn.bc')": {'get_constant_value_id': ([], 25418), 'get_or_alloc_constant_value_id': ([], 25418), 'valueize_refs': ([1, 2], 25394), 'vn_nary_op_insert_pieces': ([22], 25412), 'vn_nary_op_insert': ([33], 25412), 'vn_nary_op_insert_stmt': ([32], 25412), 'DFS': ([], 25418), 'copy_nary': ([7, 22], 25404), 'visit_reference_op_call': ([], 25418), 'VEC_vn_ssa_aux_t_base_space': ([], 25418), 'VEC_vn_ssa_aux_t_heap_reserve_exact': ([], 25418), 'VEC_vn_ssa_aux_t_heap_safe_grow': ([], 25418), 'VN_INFO_GET': ([3], 25416), 'gimple_ops': ([], 25418), 'gimple_op': ([], 25418), 'vn_get_expr_for': ([], 25418), 'vn_hash_constant_with_type': ([], 25418), 'vn_reference_op_compute_hash': ([], 25418), 'vn_reference_compute_hash': ([], 25418), 'vn_reference_op_eq': ([], 25418), 'vn_reference_eq': ([], 25418), 'VEC_vn_reference_op_s_base_space': ([], 25418), 'VEC_vn_reference_op_s_heap_reserve': ([], 25418), 'VEC_vn_reference_op_s_base_quick_push': ([], 25418), 'VEC_vn_reference_op_s_heap_safe_push': ([], 25418), 'copy_reference_ops_from_ref': ([0], 25414), 'ao_ref_init_from_vn_reference': ([], 25418), 'copy_reference_ops_from_call': ([], 25418), 'VEC_vn_reference_op_s_base_ordered_remove': ([], 25418), 'VEC_vn_reference_op_s_base_quick_insert': ([], 25418), 'VEC_vn_reference_op_s_heap_safe_insert': ([], 25418), 'vn_reference_fold_indirect': ([74], 25414), 'VEC_vn_reference_op_s_heap_reserve_exact': ([], 25418), 'VEC_vn_reference_op_s_heap_safe_grow': ([], 25418), 'vn_reference_lookup_1': ([], 25418), 'gimple_call_fndecl': ([], 25418), 'VEC_vn_reference_op_s_heap_copy': ([], 25418), 'vn_reference_insert_pieces': ([2], 25416), 'vn_reference_lookup_3': ([], 25418), 'vn_reference_lookup_2': ([], 25418), 'vn_reference_lookup_pieces': ([24], 25416), 'vn_reference_lookup': ([], 25418), 'create_reference_ops_from_ref': ([], 25418), 'vn_reference_insert': ([3], 25416), 'vn_nary_op_compute_hash': ([], 25418), 'vn_nary_op_eq': ([], 25418), 'vn_nary_op_lookup_pieces': ([], 25418), 'vn_nary_op_lookup': ([], 25418), 'vn_nary_op_lookup_stmt': ([0], 25391), 'free_vn_table': ([], 25418), 'free_scc_vn': ([], 25418), 'VEC_tree_base_iterate': ([], 25418), 'vn_phi_eq': ([], 25418), 'vn_constant_eq': ([], 25418), 'init_scc_vn': ([], 25418), 'has_zero_uses': ([], 25418), 'VEC_tree_base_space': ([], 25418), 'VEC_tree_heap_reserve': ([], 25418), 'VEC_tree_base_quick_push': ([], 25418), 'VEC_tree_heap_safe_push': ([2], 25416), 'clear_and_done_ssa_iter': ([], 25418), 'op_iter_next_use': ([], 25418), 'op_iter_init_phiuse': ([], 25418), 'gimple_def_ops': ([], 25418), 'gimple_vdef': ([], 25418), 'gimple_use_ops': ([], 25418), 'gimple_vuse': ([], 25418), 'op_iter_init': ([], 25418), 'VEC_tree_base_pop': ([], 25418), 'compare_ops': ([], 25418), 'print_scc': ([], 25418), 'set_ssa_val_to': ([], 25418), 'visit_copy': ([0], 25412), 'vn_phi_compute_hash': ([8], 25415), 'vn_phi_lookup': ([], 25418), 'vn_phi_insert': ([], 25418), 'visit_phi': ([], 25418), 'op_iter_next_def': ([], 25418), 'op_iter_init_def': ([], 25418), 'defs_to_varying': ([0, 4], 25394), 'valueize_expr': ([], 25418), 'expr_has_constants': ([], 25418), 'visit_reference_op_store': ([], 25418), 'visit_reference_op_load': ([], 25418), 'create_reference_ops_from_call': ([], 25418), 'visit_use': ([49, 49, 50, 64], 25406), 'copy_references': ([], 25418), 'copy_phis': ([], 25418), 'process_scc': ([], 25418), 'extract_and_process_scc_for_name': ([], 25418), 'VEC_ssa_op_iter_base_space': ([], 25418), 'VEC_ssa_op_iter_heap_reserve': ([], 25418), 'VEC_ssa_op_iter_base_quick_push': ([], 25418), 'VEC_ssa_op_iter_heap_safe_push': ([], 25418), 'first_htab_element': ([], 25418), 'end_htab_p': ([], 25418), 'next_htab_element': ([2], 25415), 'set_hashtable_value_ids': ([], 25418), 'run_scc_vn': ([], 25418), 'vn_nary_may_trap': ([], 25418)}, "PosixPath('602/regstat.bc')": {'regstat_compute_ri': ([3, 8], 4244), 'regstat_bb_compute_ri': ([], 4248), 'regstat_init_n_sets_and_refs': ([], 4248), 'bmp_iter_set_init': ([], 4248), 'bmp_iter_set': ([4], 4243), 'bmp_iter_next': ([], 4248), 'df_scan_get_bb_info': ([], 4248), 'df_get_artificial_defs': ([], 4248), 'df_get_artificial_uses': ([], 4248), 'regstat_free_ri': ([], 4248), 'regstat_bb_compute_calls_crossed': ([], 4248), 'regstat_compute_calls_crossed': ([], 4248)}, "PosixPath('602/graphite.bc')": {}, "PosixPath('602/mini-gmp.bc')": {'mp_get_memory_functions': ([], 30767), 'mpn_addmul_1': ([], 30767), 'mpn_submul_1': ([], 30767), 'mpn_mul': ([], 30767), 'mpn_get_str_bits': ([], 30767), 'mpn_get_base_info': ([], 30767), 'mpn_div_qr_1_invert': ([], 30767), 'mpn_div_qr_1_preinv': ([4], 30763), 'mpn_limb_get_str': ([], 30767), 'mpn_get_str_other': ([], 30767), 'mpn_get_str': ([], 30767), 'mpn_set_str_bits': ([], 30767), 'mpn_set_str_other': ([], 30767), 'mpn_set_str': ([], 30767), 'mpz_init': ([], 30767), 'mpz_init2': ([], 30767), 'mpz_set_ui': ([1], 30741), 'mpz_set_si': ([], 30767), 'mpz_realloc': ([], 30767), 'mpz_set': ([], 30767), 'mpz_init_set_si': ([], 30767), 'mpz_init_set_ui': ([], 30767), 'mpz_init_set': ([], 30767), 'mpz_fits_slong_p': ([], 30767), 'mpz_get_si': ([], 30767), 'mpz_get_ui': ([], 30767), 'mpz_getlimbn': ([], 30767), 'mpz_limbs_modify': ([], 30767), 'mpz_roinit_n': ([], 30767), 'mpz_set_d': ([], 30767), 'mpz_init_set_d': ([], 30767), 'mpz_get_d': ([], 30767), 'mpz_cmpabs_d': ([], 30767), 'mpz_cmp_ui': ([], 30767), 'mpz_cmp_si': ([], 30767), 'mpz_cmp': ([], 30767), 'mpz_cmpabs_ui': ([], 30767), 'mpz_cmpabs': ([], 30767), 'mpz_swap': ([], 30767), 'mpz_abs_add_ui': ([], 30767), 'mpz_abs_sub_ui': ([], 30767), 'mpz_add_ui': ([], 30767), 'mpz_sub_ui': ([], 30767), 'mpz_ui_sub': ([], 30767), 'mpz_abs_add': ([], 30767), 'mpz_abs_sub': ([15, 17], 30722), 'mpz_mul_ui': ([], 30767), 'mpz_mul': ([0], 30760), 'mpz_mul_2exp': ([], 30767), 'mpz_addmul_ui': ([], 30767), 'mpz_submul_ui': ([], 30767), 'mpz_addmul': ([], 30767), 'mpz_submul': ([], 30767), 'mpn_div_qr_2_invert': ([], 30767), 'mpn_div_qr_invert': ([], 30767), 'mpn_div_qr_2_preinv': ([], 30767), 'mpn_div_qr_pi1': ([], 30767), 'mpn_div_qr_preinv': ([], 30767), 'mpn_div_qr': ([], 30767), 'mpz_div_qr': ([0], 30765), 'mpz_div_q_2exp': ([], 30767), 'mpz_div_r_2exp': ([], 30767), 'mpz_congruent_p': ([], 30767), 'mpn_div_qr_1': ([], 30767), 'mpz_div_qr_ui': ([], 30767), 'mpz_gcd_ui': ([], 30767), 'mpz_make_odd': ([], 30767), 'mpz_gcd': ([21], 30729), 'mpz_tstbit': ([], 30767), 'mpz_abs_add_bit': ([], 30767), 'mpz_abs_sub_bit': ([], 30767), 'mpz_gcdext': ([123], 30757), 'mpz_lcm': ([], 30767), 'mpz_invert': ([], 30767), 'mpz_pow_ui': ([], 30767), 'mpz_ui_pow_ui': ([0], 30757), 'mpz_powm': ([9, 13], 30755), 'mpz_powm_ui': ([0], 30759), 'mpz_sizeinbase': ([], 30767), 'mpz_rootrem': ([0], 30659), 'mpz_root': ([], 30767), 'mpn_sqrtrem': ([], 30767), 'mpz_bin_uiui': ([], 30767), 'mpz_scan1': ([], 30767), 'mpz_probab_prime_p': ([], 30767), 'mpz_and': ([], 30767), 'mpz_ior': ([], 30767), 'mpz_xor': ([], 30767), 'mpz_popcount': ([], 30767), 'mpz_hamdist': ([], 30767), 'mpz_scan0': ([], 30767), 'mpz_get_str': ([], 30767), 'mpz_set_str': ([], 30767), 'mpz_init_set_str': ([], 30767), 'mpz_import': ([], 30767), 'mpz_export': ([], 30767)}, "PosixPath('602/df-core.bc')": {'df_add_problem': ([], 13129), 'df_set_blocks': ([2, 8, 125], 13119), 'df_finish_pass': ([15], 13125), 'rest_of_handle_df_initialize': ([], 13129), 'df_analyze': ([], 13129), 'bmp_iter_set_init': ([19], 13126), 'bmp_iter_set': ([4], 13124), 'df_get_bb_info': ([], 13129), 'df_set_bb_info': ([0], 13127), 'bmp_iter_next': ([], 13129), 'df_mark_solutions_dirty': ([], 13129), 'df_remove_problem': ([12], 13127), 'ei_next': ([], 13129), 'df_worklist_propagate_forward': ([], 13129), 'df_worklist_propagate_backward': ([], 13129), 'df_worklist_dataflow_doublequeue': ([], 13129), 'df_worklist_dataflow': ([11], 13125), 'df_analyze_problem': ([3], 13128), 'df_prune_to_subcfg': ([], 13129), 'df_get_n_blocks': ([], 13129), 'df_get_postorder': ([], 13129), 'df_get_bb_dirty': ([], 13129), 'df_set_bb_dirty': ([], 13129), 'df_set_bb_dirty_nonlr': ([], 13129), 'df_compact_blocks': ([], 13129), 'df_clear_bb_dirty': ([], 13129), 'df_bb_replace': ([], 13129), 'df_bb_delete': ([], 13129), 'df_bb_regno_first_def_find': ([], 13129), 'df_bb_regno_last_def_find': ([], 13129), 'df_find_def': ([0], 13125), 'df_find_use': ([0], 13125), 'df_print_regset': ([3], 13125), 'df_print_byte_regset': ([2], 13085), 'df_dump_start': ([], 13129), 'df_dump_top': ([], 13129), 'df_dump_bottom': ([], 13129), 'df_dump_region': ([0], 13107), 'df_refs_chain_dump': ([], 13129), 'df_regs_chain_dump': ([], 13129), 'df_mws_dump': ([], 13129), 'df_insn_uid_debug': ([], 13129), 'df_insn_debug': ([], 13129), 'df_insn_debug_regno': ([], 13129), 'df_regno_debug': ([], 13129), 'df_ref_debug': ([], 13129), 'debug_df_reg': ([], 13129), 'debug_df_defno': ([], 13129), 'debug_df_useno': ([], 13129), 'rest_of_handle_df_finish': ([], 13129)}, "PosixPath('602/tree-ssa-pre.bc')": {'remove_dead_inserted_code': ([3, 8, 43], 35389), 'compute_antic': ([], 35397), 'eliminate': ([], 35397), 'compute_partial_antic_aux': ([], 35397), 'sorted_array_from_bitmap_set': ([], 35397), 'phi_translate_1': ([], 35397), 'gsi_start': ([1], 35395), 'VEC_bitmap_set_t_base_space': ([], 35397), 'VEC_bitmap_set_t_heap_reserve_exact': ([], 35397), 'VEC_bitmap_set_t_heap_safe_grow': ([], 35397), 'VEC_bitmap_set_t_heap_safe_grow_cleared': ([], 35397), 'lookup_expression_id': ([], 35397), 'VEC_pre_expr_base_space': ([], 35397), 'VEC_pre_expr_heap_reserve': ([], 35397), 'VEC_pre_expr_base_quick_push': ([], 35397), 'VEC_pre_expr_heap_safe_push': ([2], 35395), 'VEC_unsigned_base_space': ([], 35397), 'VEC_unsigned_heap_reserve': ([], 35397), 'VEC_unsigned_heap_reserve_exact': ([], 35397), 'VEC_unsigned_heap_safe_grow': ([], 35397), 'VEC_unsigned_heap_safe_grow_cleared': ([], 35397), 'alloc_expression_id': ([25], 35382), 'add_to_value': ([], 35397), 'get_expr_value_id': ([], 35397), 'print_pre_expr': ([], 35397), 'bmp_iter_set_init': ([], 35397), 'bmp_iter_set': ([4], 35392), 'bmp_iter_next': ([], 35397), 'print_bitmap_set': ([], 35397), 'print_value_expressions': ([], 35397), 'VEC_gimple_base_iterate': ([], 35397), 'VEC_gimple_base_quick_push': ([], 35397), 'VEC_gimple_base_pop': ([], 35397), 'VEC_gimple_base_space': ([], 35397), 'VEC_gimple_heap_reserve': ([], 35397), 'mark_operand_necessary': ([], 35397), 'gimple_def_ops': ([], 35397), 'gimple_vdef': ([], 35397), 'gimple_use_ops': ([], 35397), 'gimple_vuse': ([], 35397), 'op_iter_init': ([], 35397), 'op_iter_next_tree': ([], 35397), 'op_iter_init_tree': ([], 35397), 'VEC_gimple_heap_safe_push': ([], 35397), 'ei_next': ([], 35397), 'my_rev_post_order_compute': ([], 35397), 'pre_expr_eq': ([], 35397), 'vn_hash_constant_with_type': ([], 35397), 'pre_expr_hash': ([], 35397), 'expr_pred_trans_eq': ([], 35397), 'init_pre': ([], 35397), 'has_zero_uses': ([], 35397), 'get_or_alloc_expr_for_name': ([], 35397), 'bitmap_value_insert_into_set': ([], 35397), 'gsi_stmt': ([], 35397), 'make_values_for_phi': ([], 35397), 'gsi_next': ([], 35397), 'bb_seq': ([], 35397), 'gsi_start_bb': ([], 35397), 'add_to_exp_gen': ([], 35397), 'gimple_ops': ([], 35397), 'compute_avail': ([], 35397), 'single_succ_p': ([], 35397), 'single_succ_edge': ([], 35397), 'phi_nodes': ([], 35397), 'VEC_pre_expr_base_iterate': ([], 35397), 'phi_trans_lookup': ([], 35397), 'bitmap_set_contains_value': ([], 35397), 'bmp_iter_and_init': ([0], 35395), 'bmp_iter_and': ([], 35397), 'bitmap_find_leader': ([26], 35387), 'get_expr_type': ([], 35397), 'get_var_ann': ([], 35397), 'get_representative_for': ([], 35397), 'get_or_alloc_expr_for_constant': ([], 35397), 'get_or_alloc_expr_for': ([], 35397), 'get_constant_for_value_id': ([26], 35385), 'fully_constant_expression': ([], 35397), 'VEC_vn_reference_op_s_heap_copy': ([], 35397), 'translate_vuse_through_block': ([], 35397), 'phi_trans_add': ([], 35397), 'phi_translate': ([1, 2, 11, 12, 13, 14, 122], 35250), 'bitmap_set_replace_value': ([], 35397), 'bitmap_value_replace_in_set': ([], 35397), 'phi_translate_set': ([], 35397), 'defer_or_phi_translate_block': ([], 35397), 'VEC_basic_block_base_quick_push': ([], 35397), 'VEC_basic_block_base_iterate': ([], 35397), 'bitmap_set_and': ([], 35397), 'bitmap_set_free': ([], 35397), 'bitmap_set_subtract': ([4], 35385), 'bitmap_set_contains_expr': ([], 35397), 'vro_valid_in_sets': ([], 35397), 'value_dies_in_block_x': ([], 35397), 'valid_in_sets': ([], 35397), 'bitmap_remove_from_set': ([], 35397), 'clean': ([], 35397), 'compute_antic_aux': ([], 35397), 'bitmap_set_subtract_values': ([], 35397), 'dependent_clean': ([], 35397), 'single_pred_p': ([], 35397), 'inhibit_phi_insertion': ([], 35397), 'gimple_set_op': ([], 35397), 'create_component_ref_by_pieces_1': ([], 35397), 'create_expression_by_pieces': ([], 35397), 'find_or_generate_expression': ([30], 35390), 'insert_into_preds_of_block': ([], 35397), 'do_regular_insertion': ([], 35397), 'do_partial_partial_insertion': ([], 35397), 'insert_aux': ([], 35397), 'insert': ([], 35397), 'do_SCCVN_insertion': ([], 35397), 'gsi_after_labels': ([], 35397), 'single_imm_use': ([], 35397), 'delink_imm_use': ([], 35397), 'link_imm_use_to_list': ([], 35397), 'link_imm_use': ([], 35397), 'set_ssa_use_from_ptr': ([], 35397), 'fini_pre': ([], 35397), 'execute_pre': ([], 35397)}, "PosixPath('602/tree-ssa-loop-ivcanon.bc')": {'bb_seq': ([], 5592), 'gsi_start_bb': ([], 5592), 'gsi_stmt': ([], 5592), 'gsi_next': ([], 5592), 'tree_num_loop_insns': ([], 5592), 'number_of_loops': ([], 5592), 'VEC_loop_p_base_iterate': ([], 5592), 'VEC_int_base_quick_push': ([], 5592), 'loop_outer': ([], 5592), 'VEC_int_base_iterate': ([], 5592), 'get_loop': ([], 5592), 'fel_next': ([5], 5589), 'fel_init': ([5], 5590), 'gimple_ops': ([], 5592), 'constant_after_peeling': ([0], 5583), 'gimple_assign_rhs_class': ([], 5592), 'tree_estimate_loop_size': ([], 5592), 'estimated_unrolled_size': ([], 5592), 'RESET_BIT': ([], 5592), 'VEC_edge_base_iterate': ([], 5592), 'gimple_set_op': ([], 5592), 'try_unroll_loop_completely': ([], 5592), 'gsi_last_bb': ([], 5592), 'create_canonical_iv': ([], 5592), 'canonicalize_loop_induction_variables': ([], 5592), 'canonicalize_induction_variables': ([], 5592), 'tree_unroll_loops_completely': ([], 5592)}, "PosixPath('602/cfglayout.bc')": {'fixup_reorder_chain': ([288], 8498), 'VEC_int_base_space': ([], 8501), 'VEC_int_heap_reserve': ([], 8501), 'VEC_int_base_quick_push': ([], 8501), 'VEC_int_heap_safe_push': ([2], 8499), 'VEC_tree_base_space': ([], 8501), 'VEC_tree_gc_reserve': ([], 8501), 'VEC_tree_base_quick_push': ([], 8501), 'VEC_tree_gc_safe_push': ([], 8501), 'VEC_location_t_base_space': ([], 8501), 'VEC_location_t_heap_reserve': ([], 8501), 'VEC_location_t_base_quick_push': ([], 8501), 'VEC_location_t_heap_safe_push': ([], 8501), 'curr_insn_locator': ([10], 8497), 'locator_scope': ([], 8501), 'change_scope': ([], 8501), 'reemit_insn_block_notes': ([], 8501), 'relink_block_chain': ([], 8501), 'verify_insn_chain': ([], 8501), 'cfg_layout_can_duplicate_bb_p': ([3], 8498), 'duplicate_insn_chain': ([], 8501), 'cfg_layout_duplicate_bb': ([], 8501), 'skip_insns_after_block': ([], 8501), 'record_effective_endpoints': ([56], 8495), 'cfg_layout_initialize': ([], 8501), 'break_superblocks': ([0, 37], 8496), 'ei_next': ([], 8501), 'force_one_exit_fallthru': ([], 8501), 'label_for_bb': ([], 8501), 'single_pred_p': ([], 8501), 'single_pred_edge': ([], 8501), 'single_pred': ([], 8501), 'cfg_layout_finalize': ([], 8501), 'can_copy_bbs_p': ([13], 8495), 'copy_bbs': ([23], 8499), 'outof_cfg_layout_mode': ([], 8501)}, "PosixPath('602/cpp_directives-only.bc')": {'_cpp_preprocess_dir_only': ([], 1357)}, "PosixPath('602/et-forest.bc')": {'et_split': ([], 2550), 'et_new_occ': ([], 2550), 'et_new_tree': ([], 2550), 'set_depth_add': ([], 2550), 'set_prev': ([], 2550), 'set_next': ([], 2550), 'set_depth': ([], 2550), 'et_recomp_min': ([0], 2545), 'et_splay': ([108], 2548), 'et_free_tree': ([], 2550), 'et_free_tree_force': ([], 2550), 'et_set_father': ([], 2550), 'et_nca': ([], 2550), 'et_below': ([], 2550)}, "PosixPath('602/main.bc')": {}, "PosixPath('602/ipa-struct-reorg.bc')": {'exclude_alloc_and_field_accs_1': ([], 23420), 'build_basic_struct': ([], 23420), 'program_redefines_malloc_p': ([], 23420), 'get_type_of_var': ([], 23420), 'strip_type': ([], 23420), 'VEC_tree_base_iterate': ([], 23420), 'get_type_name': ([], 23420), 'is_equal_types': ([], 23420), 'compare_fields': ([], 23420), 'VEC_tree_base_space': ([], 23420), 'VEC_tree_heap_reserve': ([], 23420), 'VEC_tree_base_quick_push': ([], 23420), 'VEC_tree_heap_safe_push': ([2], 23418), 'add_unsuitable_type': ([1], 23376), 'is_candidate': ([], 23420), 'find_structure': ([], 23420), 'get_fields': ([], 23420), 'VEC_structure_base_space': ([], 23420), 'VEC_structure_heap_reserve': ([], 23420), 'VEC_structure_base_quick_push': ([], 23420), 'VEC_structure_heap_safe_push': ([], 23420), 'add_structure': ([], 23420), 'build_data_structure': ([], 23420), 'check_struct_form': ([], 23420), 'analyze_struct_form': ([], 23420), 'exclude_types_passed_to_local_func': ([], 23420), 'exclude_returned_types': ([], 23420), 'exclude_escaping_types_1': ([], 23420), 'exclude_escaping_types': ([], 23420), 'check_bitfields': ([], 23420), 'exclude_types_with_bit_fields': ([], 23420), 'VEC_alloc_site_t_base_ordered_remove': ([], 23420), 'remove_str_allocs_in_func': ([], 23420), 'free_struct_cluster': ([], 23420), 'free_data_struct': ([], 23420), 'VEC_structure_base_ordered_remove': ([], 23420), 'remove_structure': ([], 23420), 'remove_unsuitable_types': ([], 23420), 'collect_structures': ([], 23420), 'gimple_ops': ([], 23420), 'gimple_call_fndecl': ([], 23420), 'single_imm_use': ([], 23420), 'get_final_alloc_stmt': ([], 23420), 'is_alloc_of_struct': ([], 23420), 'VEC_alloc_site_t_base_space': ([], 23420), 'VEC_alloc_site_t_heap_reserve': ([], 23420), 'VEC_alloc_site_t_base_quick_push': ([], 23420), 'VEC_alloc_site_t_heap_safe_push': ([], 23420), 'add_alloc_site': ([], 23420), 'collect_alloc_sites': ([], 23420), 'collect_allocation_sites': ([], 23420), 'bb_seq': ([], 23420), 'gsi_start_bb': ([], 23420), 'gsi_stmt': ([], 23420), 'gsi_next': ([], 23420), 'add_access_to_acc_sites': ([], 23420), 'find_field_in_struct_1': ([], 23420), 'find_field_in_struct': ([], 23420), 'gimple_use_ops': ([], 23420), 'gimple_vuse': ([], 23420), 'op_iter_init': ([], 23420), 'op_iter_next_tree': ([], 23420), 'op_iter_init_tree': ([], 23420), 'single_ssa_tree_operand': ([], 23420), 'decompose_indirect_ref_acc': ([], 23420), 'decompose_access': ([], 23420), 'get_stmt_accesses': ([55], 23418), 'collect_accesses_in_bb': ([], 23420), 'collect_accesses_in_func': ([], 23420), 'is_part_of_malloc': ([], 23420), 'find_in_field_accs': ([], 23420), 'is_part_of_field_access': ([], 23420), 'exclude_from_accs': ([], 23420), 'exclude_alloc_and_field_accs': ([], 23420), 'is_safe_cond_expr': ([], 23420), 'safe_cond_expr_check': ([], 23420), 'check_cond_exprs': ([], 23420), 'dump_field_acc': ([], 23420), 'dump_acc': ([], 23420), 'dump_accs': ([], 23420), 'dump_accesses': ([], 23420), 'collect_data_accesses': ([], 23420), 'sum_counts': ([], 23420), 'exclude_cold_structs': ([], 23420), 'get_max_field_count': ([], 23420), 'peel_field': ([], 23420), 'gen_cluster': ([], 23420), 'peel_hot_fields': ([], 23420), 'peel_structs': ([], 23420), 'gen_cluster_name': ([], 23420), 'create_fields': ([], 23420), 'update_fields_mapping': ([], 23420), 'create_new_type': ([], 23420), 'create_new_types': ([], 23420), 'dump_new_types': ([], 23420), 'create_new_var_node': ([], 23420), 'gen_var_name': ([], 23420), 'VEC_type_wrapper_t_base_space': ([], 23420), 'VEC_type_wrapper_t_heap_reserve': ([], 23420), 'VEC_type_wrapper_t_base_quick_push': ([], 23420), 'VEC_type_wrapper_t_heap_safe_push': ([2], 23418), 'gen_struct_type': ([], 23420), 'is_global_var': ([], 23420), 'copy_decl_attributes': ([], 23420), 'create_new_var_1': ([], 23420), 'create_new_var': ([], 23420), 'update_varpool_with_new_var': ([], 23420), 'new_var_eq': ([], 23420), 'create_new_global_vars': ([], 23420), 'dump_new_var': ([], 23420), 'gimple_referenced_vars': ([], 23420), 'first_htab_element': ([], 23420), 'first_referenced_var': ([], 23420), 'end_htab_p': ([], 23420), 'end_referenced_vars_p': ([], 23420), 'next_htab_element': ([], 23420), 'next_referenced_var': ([], 23420), 'finalize_new_vars_creation': ([], 23420), 'create_new_local_vars': ([], 23420), 'gen_num_of_structs_in_malloc': ([], 23420), 'gimple_seq_last_stmt': ([], 23420), 'gimple_set_op': ([], 23420), 'find_var_in_new_vars_vec': ([], 23420), 'find_new_var_of_type': ([], 23420), 'create_new_malloc': ([], 23420), 'create_new_alloc_sites': ([], 23420), 'create_new_alloc_sites_for_func': ([], 23420), 'make_edge_and_fix_phis_of_dest': ([], 23420), 'create_new_stmts_for_cond_expr_1': ([], 23420), 'create_new_stmts_for_cond_expr': ([], 23420), 'find_pos_in_stmt_1': ([], 23420), 'find_pos_in_stmt': ([], 23420), 'create_general_new_stmt': ([], 23420), 'create_new_stmts_for_general_acc': ([], 23420), 'create_new_general_access': ([], 23420), 'create_new_acc': ([], 23420), 'create_base_plus_offset': ([], 23420), 'finalize_global_creation': ([], 23420), 'build_comp_ref': ([], 23420), 'replace_field_acc': ([], 23420), 'replace_field_access_stmt': ([], 23420), 'create_new_field_access': ([], 23420), 'create_new_field_acc': ([], 23420), 'create_new_accs_for_struct': ([], 23420), 'create_new_accesses_in_bb': ([], 23420), 'create_new_accesses_for_func': ([], 23420), 'do_reorg_for_func': ([], 23420), 'do_reorg_1': ([], 23420), 'do_reorg': ([], 23420), 'free_falloc_sites': ([], 23420), 'reorg_structs': ([], 23420), 'reorg_structs_drive': ([], 23420)}, "PosixPath('602/xatexit.bc')": {'xatexit_cleanup': ([], 264), 'xatexit': ([0], 241)}, "PosixPath('602/lto-streamer.bc')": {'bp_unpack_value': ([1], 5821), 'print_lto_report': ([], 5827), 'bitpack_delete': ([], 5827), 'bp_get_next_word': ([], 5827), 'VEC_bitpack_word_t_base_space': ([], 5827), 'VEC_bitpack_word_t_heap_reserve': ([], 5827), 'VEC_bitpack_word_t_base_quick_push': ([], 5827), 'VEC_bitpack_word_t_heap_safe_push': ([], 5827), 'bp_pack_value': ([17], 5825), 'VEC_tree_base_space': ([], 5827), 'VEC_tree_gc_reserve_exact': ([], 5827), 'VEC_tree_gc_safe_grow': ([], 5827), 'VEC_tree_gc_safe_grow_cleared': ([], 5827), 'VEC_unsigned_base_space': ([], 5827), 'VEC_unsigned_heap_reserve_exact': ([], 5827), 'VEC_unsigned_heap_safe_grow': ([], 5827), 'VEC_unsigned_heap_safe_grow_cleared': ([], 5827), 'lto_streamer_cache_add_to_node_array': ([], 5827), 'lto_stream_as_builtin_p': ([], 5827), 'lto_streamer_cache_insert_1': ([10], 5822), 'lto_streamer_cache_lookup': ([], 5827), 'lto_streamer_cache_get': ([], 5827), 'VEC_tree_heap_reserve': ([], 5827), 'VEC_tree_base_quick_push': ([], 5827), 'VEC_tree_heap_safe_push': ([], 5827), 'lto_record_common_node': ([], 5827), 'lto_get_common_nodes': ([], 5827), 'VEC_tree_base_iterate': ([], 5827), 'preload_common_node': ([], 5827), 'lto_streamer_cache_create': ([], 5827), 'lto_streamer_cache_delete': ([], 5827), 'check_handled_ts_structures': ([], 5827), 'lto_streamer_init': ([], 5827), 'gate_lto_out': ([], 5827)}, "PosixPath('602/vec.bc')": {'calculate_allocation': ([], 1458), 'vec_gc_o_reserve_1': ([], 1458), 'vec_heap_o_reserve_1': ([], 1458), 'VEC_void_p_base_space': ([], 1458), 'VEC_void_p_heap_reserve': ([], 1458), 'VEC_void_p_base_quick_push': ([], 1458), 'VEC_void_p_heap_safe_push': ([], 1458), 'vec_stack_p_reserve_exact_1': ([], 1458), 'VEC_void_p_base_unordered_remove': ([], 1458), 'vec_stack_o_reserve_1': ([], 1458), 'vec_stack_free': ([], 1458)}, "PosixPath('602/cc1-checksum.bc')": {}, "PosixPath('602/dfp.bc')": {'decimal_from_decnumber': ([], 4472), 'decimal_to_decnumber': ([], 4472), 'decode_decimal32': ([], 4472), 'encode_decimal64': ([], 4472), 'decode_decimal64': ([], 4472), 'encode_decimal128': ([], 4472), 'decode_decimal128': ([], 4472), 'decimal_do_compare': ([], 4472), 'decimal_round_for_format': ([], 4472), 'decimal_real_convert': ([], 4472), 'decimal_do_fix_trunc': ([], 4472), 'decimal_real_to_integer': ([], 4472), 'decimal_real_to_integer2': ([], 4472), 'decimal_real_arithmetic': ([], 4472)}, "PosixPath('602/web.bc')": {'unionfind_root': ([], 2440), 'union_defs': ([], 2440), 'entry_register': ([], 2440), 'replace_ref': ([], 2440), 'web_main': ([], 2440)}, "PosixPath('602/lbasename.bc')": {'lbasename': ([], 79)}, "PosixPath('602/ipa-pure-const.bc')": {'bb_seq': ([], 9105), 'gsi_start_bb': ([], 9105), 'gsi_stmt': ([], 9105), 'gimple_ops': ([], 9105), 'gimple_op': ([], 9105), 'gimple_call_fndecl': ([], 9105), 'check_call': ([], 9105), 'gimple_asm_clobber_op': ([], 9105), 'check_decl': ([1], 9098), 'check_op': ([], 9105), 'check_stmt': ([], 9105), 'gsi_next': ([], 9105), 'number_of_loops': ([], 9105), 'VEC_int_base_quick_push': ([], 9105), 'loop_outer': ([], 9105), 'VEC_int_base_iterate': ([], 9105), 'get_loop': ([], 9105), 'fel_next': ([5], 9102), 'fel_init': ([], 9105), 'analyze_function': ([5], 9093), 'local_pure_const': ([], 9105), 'gate_pure_const': ([], 9105), 'VEC_funct_state_base_space': ([], 9105), 'VEC_funct_state_heap_reserve_exact': ([], 9105), 'VEC_funct_state_heap_safe_grow': ([], 9105), 'VEC_funct_state_heap_safe_grow_cleared': ([], 9105), 'set_function_state': ([3, 8], 9102), 'get_function_state': ([], 9105), 'pure_const_read_summary': ([], 9105), 'csi_end_p': ([], 9105), 'pure_const_write_summary': ([], 9105), 'generate_summary': ([], 9105), 'self_recursive_p': ([], 9105), 'propagate': ([], 9105)}, "PosixPath('602/tree-parloops.bc')": {'create_parallel_loop': ([], 15952), 'create_loop_fn': ([0], 15951), 'take_address_of': ([], 15952), 'parallelized_function_p': ([], 15952), 'number_of_loops': ([], 15952), 'VEC_int_base_quick_push': ([], 15952), 'loop_outer': ([], 15952), 'VEC_int_base_iterate': ([], 15952), 'get_loop': ([], 15952), 'fel_next': ([5], 15949), 'fel_init': ([], 15952), 'loop_has_blocks_with_irreducible_flag': ([], 15952), 'gsi_stmt': ([], 15952), 'gsi_next': ([], 15952), 'loop_has_vector_phi_nodes': ([], 15952), 'gimple_ops': ([], 15952), 'build_new_reduction': ([], 15952), 'gather_scalar_reductions': ([], 15952), 'end_readonly_imm_use_p': ([], 15952), 'first_readonly_imm_use': ([], 15952), 'next_readonly_imm_use': ([], 15952), 'try_create_reduction_list': ([], 15952), 'loop_parallel_p': ([], 15952), 'single_succ_p': ([], 15952), 'single_succ_edge': ([], 15952), 'gimple_set_op': ([], 15952), 'bb_seq': ([], 15952), 'gsi_start_bb': ([], 15952), 'gsi_after_labels': ([], 15952), 'transform_to_exit_first_loop': ([], 15952), 'VEC_basic_block_base_iterate': ([], 15952), 'eliminate_local_variables_1': ([], 15952), 'eliminate_local_variables_stmt': ([], 15952), 'eliminate_local_variables': ([], 15952), 'single_pred_p': ([], 15952), 'single_pred_edge': ([], 15952), 'single_pred': ([], 15952), 'clear_and_done_ssa_iter': ([], 15952), 'op_iter_init_phidef': ([], 15952), 'gimple_def_ops': ([], 15952), 'gimple_vdef': ([], 15952), 'gimple_use_ops': ([], 15952), 'gimple_vuse': ([], 15952), 'op_iter_init': ([], 15952), 'op_iter_next_def': ([], 15952), 'op_iter_init_def': ([], 15952), 'separate_decls_in_region_name': ([], 15952), 'op_iter_next_use': ([], 15952), 'op_iter_init_phiuse': ([], 15952), 'expr_invariant_in_region_p': ([], 15952), 'delink_imm_use': ([], 15952), 'link_imm_use_to_list': ([], 15952), 'link_imm_use': ([], 15952), 'set_ssa_use_from_ptr': ([], 15952), 'separate_decls_in_region_stmt': ([12], 15940), 'separate_decls_in_region_debug_bind': ([], 15952), 'create_loads_for_reductions': ([], 15952), 'create_final_loads_for_reduction': ([], 15952), 'gsi_last_bb': ([], 15952), 'create_stores_for_reduction': ([], 15952), 'create_loads_and_stores_for_name': ([], 15952), 'add_field_for_reduction': ([], 15952), 'add_field_for_name': ([], 15952), 'separate_decls_in_region': ([], 15952), 'gimple_omp_for_set_index': ([], 15952), 'gimple_omp_for_set_initial': ([], 15952), 'gimple_omp_for_set_final': ([], 15952), 'gimple_omp_for_set_cond': ([], 15952), 'gimple_omp_for_set_incr': ([], 15952), 'create_call_for_reduction_1': ([], 15952), 'create_phi_for_local_result': ([], 15952), 'create_call_for_reduction': ([], 15952), 'initialize_reductions': ([], 15952), 'gen_parallel_loop': ([], 15952), 'parallelize_loops': ([34], 15879)}, "PosixPath('602/cpp_expr.bc')": {'append_digit': ([], 14507), 'reduce': ([], 14507), '_cpp_expand_op_stack': ([], 14507), 'num_binary_op': ([], 14507), 'num_mul': ([6], 14417), 'num_div_op': ([], 14507), 'num_lshift': ([0], 14501), 'num_rshift': ([0, 2], 14494), 'interpret_float_suffix': ([0], 14499), 'interpret_int_suffix': ([], 14507), 'cpp_classify_number': ([16], 14504), 'num_trim': ([], 14507), 'cpp_interpret_integer': ([0, 2], 14485), 'parse_defined': ([], 14507), 'eval_token': ([], 14507), 'check_promotion': ([], 14507), 'num_negate': ([], 14507), 'num_unary_op': ([], 14507), 'num_greater_eq': ([9], 14504), 'num_inequality_op': ([], 14507), 'num_equality_op': ([], 14507), 'num_bitwise_op': ([], 14507), 'num_part_mul': ([], 14507), '_cpp_parse_expr': ([258, 665], 14481), 'cpp_num_sign_extend': ([], 14507)}, "PosixPath('602/passes.bc')": {'print_current_pass': ([], 14256), 'rest_of_decl_compilation': ([0], 14253), 'rest_of_type_compilation': ([], 14256), 'set_pass_for_id': ([], 14256), 'register_one_dump_file': ([], 14256), 'make_pass_instance': ([], 14256), 'position_pass': ([], 14256), 'register_pass': ([2], 14254), 'register_dump_files_1': ([], 14256), 'gate_rest_of_compilation': ([], 14256), 'do_per_function_toporder': ([], 14256), 'pass_init_dump_file': ([], 14256), 'execute_ipa_summary_passes': ([], 14256), 'do_per_function': ([], 14256), 'execute_function_todo': ([], 14256), 'execute_one_ipa_transform_pass': ([], 14256), 'execute_all_ipa_transforms': ([17], 14252), 'VEC_ipa_opt_pass_base_space': ([], 14256), 'VEC_ipa_opt_pass_heap_reserve': ([], 14256), 'VEC_ipa_opt_pass_base_quick_push': ([], 14256), 'VEC_ipa_opt_pass_heap_safe_push': ([], 14256), 'update_properties_after_pass': ([], 14256), 'execute_one_pass': ([], 14256), 'execute_pass_list': ([], 14256), 'ipa_write_summaries_2': ([], 14256), 'ipa_write_summaries': ([], 14256), 'ipa_write_summaries_of_cgraph_node_set': ([], 14256), 'ipa_read_summaries_1': ([29], 14251), 'execute_ipa_pass_list': ([], 14256), 'execute_ipa_stmt_fixups': ([], 14256), 'function_called_by_processed_nodes_p': ([], 14256), 'gt_pch_na_order': ([], 14256), 'gt_ggc_ma_order': ([], 14256)}, "PosixPath('602/argv.bc')": {'dupargv': ([0], 1769), 'consume_whitespace': ([], 1796), 'buildargv': ([], 1796), 'only_whitespace': ([], 1796), 'expandargv': ([], 1796)}, "PosixPath('602/alloc-pool.bc')": {'pool_alloc': ([5, 51], 837), 'create_alloc_pool': ([], 842), 'empty_alloc_pool': ([], 842), 'free_alloc_pool_if_empty': ([], 842), 'pool_free': ([1], 835)}, "PosixPath('602/floatformat.bc')": {'mant_bits_set': ([], 4508), 'floatformat_to_double': ([], 4508), 'put_field': ([], 4508), 'floatformat_from_double': ([], 4508), 'floatformat_ibm_long_double_is_valid': ([], 4508), 'floatformat_i387_ext_is_valid': ([], 4508)}, "PosixPath('602/ddg.bc')": {'create_ddg': ([6, 60], 8676), 'sbitmap_iter_init': ([], 8690), 'sd_iterator_cond': ([], 8690), 'sd_iterator_start': ([], 8690), 'get_node_of_insn': ([], 8690), 'rtx_mem_access_p': ([], 8690), 'df_rd_get_bb_info': ([], 8690), 'create_ddg_edge': ([], 8690), 'add_edge_to_ddg': ([8], 8688), 'create_ddg_dep_from_intra_loop_link': ([], 8690), 'add_backarc_to_ddg': ([], 8690), 'create_ddg_dep_no_link': ([], 8690), 'add_inter_loop_mem_dep': ([], 8690), 'build_intra_loop_deps': ([], 8690), 'bmp_iter_set_init': ([], 8690), 'bmp_iter_set': ([], 8690), 'add_cross_iteration_register_deps': ([], 8690), 'bmp_iter_next': ([], 8690), 'build_inter_loop_deps': ([], 8690), 'free_ddg': ([], 8690), 'print_ddg_edge': ([], 8690), 'print_ddg': ([], 8690), 'vcg_print_ddg': ([], 8690), 'sbitmap_iter_cond': ([20], 8688), 'sbitmap_iter_next': ([], 8690), 'print_sccs': ([], 8690), 'find_successors': ([], 8690), 'find_predecessors': ([], 8690), 'find_nodes_on_paths': ([], 8690), 'add_backarc_to_scc': ([], 8690), 'update_dist_to_successors': ([], 8690), 'longest_simple_path': ([], 8690), 'set_recurrence_length': ([], 8690), 'create_scc': ([], 8690), 'add_scc_to_ddg': ([], 8690), 'compare_sccs': ([], 8690), 'order_sccs': ([], 8690), 'create_ddg_all_sccs': ([], 8690), 'free_scc': ([], 8690), 'free_ddg_all_sccs': ([], 8690)}, "PosixPath('602/except.bc')": {'gen_eh_region': ([], 17828), 'dw2_build_landing_pads': ([], 17828), 'VEC_eh_region_base_space': ([], 17828), 'VEC_eh_region_gc_reserve': ([], 17828), 'VEC_eh_region_base_quick_push': ([], 17828), 'VEC_eh_region_gc_safe_push': ([2], 17826), 'VEC_eh_landing_pad_base_space': ([], 17828), 'VEC_eh_landing_pad_gc_reserve': ([], 17828), 'VEC_eh_landing_pad_base_quick_push': ([], 17828), 'VEC_eh_landing_pad_gc_safe_push': ([2], 17826), 'gen_eh_region_catch': ([], 17828), 'gen_eh_landing_pad': ([], 17828), 'get_eh_region_from_number_fn': ([], 17828), 'get_eh_region_from_number': ([], 17828), 'get_eh_landing_pad_from_number_fn': ([], 17828), 'get_eh_landing_pad_from_number': ([], 17828), 'get_eh_region_from_lp_number_fn': ([], 17828), 'current_function_has_exception_handlers': ([], 17828), 'duplicate_eh_regions_1': ([], 17828), 'duplicate_eh_regions': ([], 17828), 'eh_region_outermost': ([], 17828), 'VEC_eh_region_base_iterate': ([], 17828), 'VEC_tree_base_space': ([], 17828), 'VEC_tree_gc_reserve': ([], 17828), 'VEC_tree_base_quick_push': ([], 17828), 'VEC_tree_gc_safe_push': ([2], 17826), 'add_ttypes_entry': ([], 17828), 'VEC_uchar_base_space': ([], 17828), 'VEC_uchar_gc_reserve': ([], 17828), 'VEC_uchar_base_quick_push': ([], 17828), 'VEC_uchar_gc_safe_push': ([2], 17826), 'add_ehspec_entry': ([], 17828), 'ehspec_filter_hash': ([], 17828), 'assign_filter_values': ([], 17828), 'remove_eh_landing_pad': ([], 17828), 'remove_eh_handler': ([], 17828), 'VEC_eh_landing_pad_base_iterate': ([], 17828), 'for_each_eh_label': ([], 17828), 'insn_could_throw_p': ([], 17828), 'get_eh_region_and_lp_from_rtx': ([], 17828), 'get_eh_landing_pad_from_rtx': ([], 17828), 'get_eh_region_from_rtx': ([], 17828), 'can_throw_external': ([], 17828), 'insn_nothrow_p': ([], 17828), 'expand_builtin_eh_common': ([], 17828), 'expand_builtin_eh_pointer': ([], 17828), 'expand_builtin_eh_filter': ([], 17828), 'expand_builtin_eh_copy_values': ([], 17828), 'dw2_output_call_site_table': ([], 17828), 'VEC_uchar_base_iterate': ([], 17828), 'output_ttype': ([], 17828), 'VEC_tree_base_iterate': ([], 17828), 'output_one_function_exception_table': ([], 17828), 'get_eh_throw_stmt_table': ([], 17828), 'ehr_next': ([], 17828), 'function_needs_eh_personality': ([], 17828), 'dump_eh_tree': ([], 17828), 'verify_eh_tree': ([], 17828), 'add_action_record': ([], 17828), 'collect_one_action_chain': ([], 17828), 'VEC_call_site_record_base_space': ([], 17828), 'VEC_call_site_record_gc_reserve': ([], 17828), 'VEC_call_site_record_base_quick_push': ([], 17828), 'VEC_call_site_record_gc_safe_push': ([], 17828), 'add_call_site': ([], 17828), 'ei_next': ([], 17828), 'action_record_eq': ([], 17828), 'action_record_hash': ([], 17828), 'convert_to_eh_region_ranges': ([35], 17820), 'gate_convert_to_eh_region_ranges': ([], 17828), 'set_nothrow_function_flags': ([], 17828), 'emit_to_new_bb_before': ([], 17828), 'single_succ_p': ([], 17828), 'single_succ_edge': ([], 17828), 'finish_eh_generation': ([], 17828), 'rest_of_handle_eh': ([], 17828), 'gate_handle_eh': ([], 17828)}, "PosixPath('602/tree-ssa-reassoc.bc')": {'sbitmap_iter_init': ([], 18212), 'VEC_operand_entry_t_base_iterate': ([], 18212), 'dump_ops_vector': ([], 18212), 'init_reassoc': ([], 18212), 'bb_seq': ([], 18212), 'gsi_start_bb': ([], 18212), 'gsi_stmt': ([], 18212), 'gimple_ops': ([], 18212), 'has_single_use': ([], 18212), 'single_imm_use': ([], 18212), 'get_single_immediate_use': ([], 18212), 'should_break_up_subtract': ([], 18212), 'gimple_set_op': ([], 18212), 'VEC_tree_base_space': ([], 18212), 'VEC_tree_heap_reserve': ([], 18212), 'VEC_tree_base_quick_push': ([], 18212), 'VEC_tree_heap_safe_push': ([], 18212), 'negate_value': ([], 18212), 'gsi_next': ([], 18212), 'break_up_subtract_bb': ([], 18212), 'gsi_last_bb': ([], 18212), 'has_zero_uses': ([], 18212), 'gimple_vdef': ([], 18212), 'tree_operand_length': ([], 18212), 'get_rank': ([], 18212), 'VEC_operand_entry_t_base_space': ([], 18212), 'VEC_operand_entry_t_heap_reserve': ([], 18212), 'VEC_operand_entry_t_base_quick_push': ([], 18212), 'VEC_operand_entry_t_heap_safe_push': ([2], 18210), 'linearize_expr': ([], 18212), 'linearize_expr_tree': ([], 18212), 'VEC_operand_entry_t_base_last': ([], 18212), 'VEC_operand_entry_t_base_pop': ([], 18212), 'eliminate_using_constants': ([], 18212), 'eliminate_not_pairs': ([], 18212), 'VEC_operand_entry_t_base_ordered_remove': ([], 18212), 'eliminate_duplicate_pair': ([], 18212), 'eliminate_plus_minus_pair': ([], 18212), 'optimize_ops_list': ([], 18212), 'sbitmap_iter_cond': ([20], 18210), 'VEC_oecount_base_space': ([], 18212), 'VEC_oecount_heap_reserve': ([], 18212), 'VEC_oecount_base_quick_push': ([], 18212), 'VEC_oecount_heap_safe_push': ([], 18212), 'sbitmap_iter_next': ([], 18212), 'delink_imm_use': ([], 18212), 'link_imm_use_to_list': ([], 18212), 'link_imm_use': ([], 18212), 'set_ssa_use_from_ptr': ([], 18212), 'zero_one_operation': ([], 18212), 'single_succ_p': ([], 18212), 'single_succ_edge': ([], 18212), 'single_succ': ([], 18212), 'gsi_after_labels': ([], 18212), 'ei_next': ([], 18212), 'build_and_add_sum': ([35, 41, 49], 18200), 'oecount_eq': ([], 18212), 'undistribute_ops_list': ([], 18212), 'remove_visited_stmt_chain': ([], 18212), 'clear_and_done_ssa_iter': ([], 18212), 'op_iter_next_use': ([], 18212), 'op_iter_init_phiuse': ([], 18212), 'is_phi_for_stmt': ([], 18212), 'gsi_prev': ([], 18212), 'rewrite_expr_tree': ([36, 46, 86], 18205), 'sort_by_operand_rank': ([], 18212), 'reassociate_bb': ([], 18212), 'do_reassoc': ([], 18212), 'VEC_tree_base_iterate': ([], 18212), 'repropagate_negates': ([], 18212), 'execute_reassoc': ([], 18212)}, "PosixPath('602/ira-color.bc')": {'ira_reassign_conflict_allocnos': ([3], 24963), 'ira_sort_regnos_for_alter_reg': ([1, 2, 17], 24937), 'update_copy_costs': ([4], 24939), 'ira_color': ([], 24968), 'fast_allocation': ([], 24968), 'push_allocno_to_stack': ([5], 24965), 'add_allocno_to_ordered_bucket': ([6], 24934), 'df_lr_get_bb_info': ([], 24968), 'ei_next': ([], 24968), 'VEC_edge_base_iterate': ([], 24968), 'ira_loop_edge_freq': ([91], 24966), 'ira_allocno_iter_cond': ([], 24968), 'ira_allocno_conflict_iter_init': ([], 24968), 'ira_allocno_conflict_iter_cond': ([], 24968), 'ira_allocno_conflict_iter_next': ([], 24968), 'setup_allocno_priorities': ([4], 24967), 'ira_get_register_move_cost': ([0], 24963), 'ira_allocate_and_set_or_copy_costs': ([], 24968), 'update_curr_costs': ([], 24968), 'ira_allocate_and_copy_costs': ([], 24968), 'queue_update_cost': ([], 24968), 'get_next_update_cost': ([], 24968), 'update_conflict_hard_regno_costs': ([0, 3], 24930), 'VEC_ira_allocno_t_base_space': ([], 24968), 'VEC_ira_allocno_t_heap_reserve': ([], 24968), 'VEC_ira_allocno_t_base_quick_push': ([], 24968), 'VEC_ira_allocno_t_heap_safe_push': ([2], 24966), 'allocno_cost_compare_func': ([], 24968), 'assign_hard_reg': ([4, 5], 24963), 'allocno_priority_compare_func': ([], 24968), 'bmp_iter_set_init': ([], 24968), 'bmp_iter_set': ([4], 24963), 'bmp_iter_next': ([], 24968), 'allocnos_have_intersected_live_ranges_p': ([], 24968), 'coalesced_allocno_conflict_p': ([], 24968), 'merge_allocnos': ([], 24968), 'copy_freq_compare_func': ([], 24968), 'coalesce_allocnos': ([6], 24964), 'setup_coalesced_allocno_costs_and_nums': ([0, 6, 10], 24956), 'collect_spilled_coalesced_allocnos': ([], 24968), 'slot_coalesced_allocno_live_ranges_intersect_p': ([], 24968), 'setup_slot_coalesced_allocno_live_ranges': ([], 24968), 'coalesce_spill_slots': ([], 24968), 'coalesced_pseudo_reg_slot_compare': ([], 24968), 'coalesced_pseudo_reg_freq_compare': ([], 24968), 'ira_mark_allocation_change': ([21], 24957), 'ira_mark_memory_move_deletion': ([], 24968), 'allocno_reload_assign': ([1, 91], 24961), 'pseudo_reg_compare': ([], 24968), 'ira_reassign_pseudos': ([], 24968), 'ira_reuse_stack_slot': ([3], 24918), 'bitmap_initialize_stat': ([], 24968), 'ira_mark_new_stack_slot': ([], 24968), 'calculate_spill_cost': ([], 24968), 'ira_better_spill_reload_regno_p': ([], 24968), 'loop_depth': ([], 24968), 'print_loop_title': ([], 24968), 'setup_allocno_left_conflicts_size': ([], 24968), 'setup_allocno_available_regs_num': ([], 24968), 'add_allocno_to_bucket': ([], 24968), 'put_allocno_into_bucket': ([], 24968), 'calculate_allocno_spill_cost': ([], 24968), 'get_coalesced_allocnos_attributes': ([], 24968), 'bucket_allocno_compare_func': ([], 24968), 'sort_bucket': ([], 24968), 'delete_allocno_from_bucket': ([], 24968), 'allocno_spill_priority': ([], 24968), 'remove_allocno_from_bucket_and_push': ([], 24968), 'push_only_colorable': ([], 24968), 'push_allocno_to_spill': ([], 24968), 'VEC_ira_allocno_t_base_pop': ([], 24968), 'splay_tree_free': ([], 24968), 'allocno_spill_priority_compare': ([], 24968), 'push_allocnos_to_stack': ([], 24968), 'pop_allocnos_from_stack': ([], 24968), 'color_allocnos': ([], 24968), 'color_pass': ([29, 37, 41], 24932), 'move_spill_restore': ([], 24968), 'color': ([], 24968)}, "PosixPath('602/cpp_errors.bc')": {'cpp_error': ([], 578)}, "PosixPath('602/tree-vect-loop-manip.bc')": {'slpeel_tree_duplicate_loop_to_edge_cfg': ([], 16312), 'first_imm_use_on_stmt': ([], 16312), 'next_imm_use_on_stmt': ([], 16312), 'bb_seq': ([], 16312), 'gsi_start_bb': ([], 16312), 'gsi_stmt': ([], 16312), 'gimple_def_ops': ([], 16312), 'gimple_vdef': ([], 16312), 'gimple_use_ops': ([], 16312), 'gimple_vuse': ([], 16312), 'op_iter_init': ([], 16312), 'op_iter_next_use': ([], 16312), 'op_iter_init_use': ([], 16312), 'delink_imm_use': ([], 16312), 'link_imm_use_to_list': ([], 16312), 'link_imm_use': ([], 16312), 'set_ssa_use_from_ptr': ([], 16312), 'gsi_next': ([], 16312), 'ei_next': ([], 16312), 'rename_variables_in_bb': ([], 16312), 'rename_variables_in_loop': ([], 16312), 'find_loop_location': ([], 16312), 'slpeel_make_loop_iterate_ntimes': ([], 16312), 'loop_outer': ([], 16312), 'gsi_last_bb': ([], 16312), 'slpeel_can_duplicate_loop_p': ([], 16312), 'vinfo_for_stmt': ([], 16312), 'vect_can_advance_ivs_p': ([], 16312), 'vect_build_loop_niters': ([6], 16303), 'vect_generate_tmps_on_preheader': ([13], 16303), 'conservative_cost_threshold': ([], 16312), 'gimple_vop': ([], 16312), 'VEC_adjust_info_base_space': ([], 16312), 'VEC_adjust_info_stack_reserve': ([], 16312), 'VEC_adjust_info_base_quick_push': ([], 16312), 'VEC_adjust_info_stack_safe_push': ([], 16312), 'end_imm_use_stmt_p': ([], 16312), 'clear_and_done_ssa_iter': ([], 16312), 'op_iter_init_phiuse': ([], 16312), 'move_use_after_head': ([], 16312), 'gimple_vuse_op': ([], 16312), 'link_use_stmts_after': ([], 16312), 'first_imm_use_stmt': ([], 16312), 'gimple_ops': ([], 16312), 'gimple_set_op': ([], 16312), 'gimple_debug_bind_reset_value': ([], 16312), 'next_imm_use_stmt': ([], 16312), 'adjust_debug_stmts_now': ([], 16312), 'adjust_debug_stmts': ([], 16312), 'adjust_phi_and_debug_stmts': ([], 16312), 'slpeel_update_phis_for_duplicate_loop': ([], 16312), 'single_pred_p': ([], 16312), 'single_pred_edge': ([], 16312), 'set_prologue_iterations': ([], 16312), 'slpeel_add_loop_guard': ([], 16312), 'slpeel_update_phi_nodes_for_guard1': ([], 16312), 'slpeel_update_phi_nodes_for_guard2': ([], 16312), 'adjust_vec_debug_stmts': ([], 16312), 'slpeel_tree_peel_loop_to_edge': ([], 16312), 'vect_update_ivs_after_vectorizer': ([], 16312), 'vect_do_peeling_for_loop_bound': ([], 16312), 'vect_gen_niters_for_prolog_loop': ([], 16312), 'VEC_data_reference_p_base_iterate': ([], 16312), 'vect_update_init_of_dr': ([], 16312), 'vect_update_inits_of_drs': ([], 16312), 'vect_do_peeling_for_alignment': ([], 16312), 'VEC_gimple_base_iterate': ([], 16312), 'vect_create_cond_for_align_checks': ([], 16312), 'VEC_ddr_p_base_iterate': ([], 16312), 'vect_create_cond_for_alias_checks': ([], 16312), 'vect_loop_versioning': ([], 16312)}, "PosixPath('602/getpwd.bc')": {'getpwd': ([], 319)}, "PosixPath('602/simplify-rtx.bc')": {'mode_signbit_p': ([1], 42385), 'simplify_immed_subreg': ([], 42390), 'plus_minus_operand_p': ([], 42390), 'simplify_plus_minus_op_data_cmp': ([], 42390), 'simplify_rtx': ([], 42390), 'simplify_relational_operation': ([], 42390), 'simplify_const_relational_operation': ([12, 18], 42346), 'avoid_constant_pool_reference': ([5, 12], 42386), 'simplify_subreg': ([126], 42388), 'simplify_unary_operation': ([0, 91], 42304), 'simplify_binary_operation_1': ([11, 12, 174, 175, 177, 399, 400], 42284), 'simplify_associative_operation': ([], 42390), 'simplify_plus_minus': ([89], 42385), 'simplify_const_binary_operation': ([85], 42378), 'simplify_const_unary_operation': ([7, 9, 124], 42267), 'simplify_ternary_operation': ([], 42390), 'delegitimize_mem_from_attrs': ([35], 42385), 'simplify_replace_fn_rtx': ([], 42390)}, "PosixPath('602/opts-common.bc')": {'find_opt': ([3], 1013), 'prune_options': ([], 1016)}, "PosixPath('602/tree-into-ssa.bc')": {'sbitmap_iter_init': ([], 25754), 'VEC_ssa_name_info_p_base_space': ([], 25754), 'VEC_ssa_name_info_p_heap_reserve': ([], 25754), 'VEC_ssa_name_info_p_base_quick_push': ([], 25754), 'get_ssa_name_ann': ([], 25754), 'var_ann': ([], 25754), 'set_current_def': ([], 25754), 'bmp_iter_set_init': ([], 25754), 'bmp_iter_set': ([4], 25749), 'bmp_iter_next': ([], 25754), 'ei_next': ([], 25754), 'compute_global_livein': ([47], 25748), 'dump_decl_set': ([5], 25735), 'dump_defs_stack': ([], 25754), 'gimple_referenced_vars': ([], 25754), 'first_htab_element': ([], 25754), 'first_referenced_var': ([], 25754), 'end_htab_p': ([], 25754), 'end_referenced_vars_p': ([], 25754), 'next_htab_element': ([], 25754), 'next_referenced_var': ([], 25754), 'dump_currdefs': ([], 25754), 'debug_def_blocks_r': ([], 25754), 'names_replaced_by': ([], 25754), 'dump_names_replaced_by': ([5], 25743), 'need_ssa_update_p': ([], 25754), 'sbitmap_iter_cond': ([20], 25752), 'sbitmap_iter_next': ([], 25754), 'dump_update_ssa': ([9], 25741), 'fini_ssa_renamer': ([], 25754), 'delete_update_ssa': ([8], 25750), 'repl_map_free': ([], 25754), 'init_update_ssa': ([], 25754), 'add_to_repl_tbl': ([], 25754), 'is_new_name': ([], 25754), 'add_new_name_mapping': ([], 25754), 'create_new_def_for': ([9], 25752), 'mark_sym_for_renaming': ([], 25754), 'mark_set_for_renaming': ([5], 25745), 'is_old_name': ([], 25754), 'ssa_names_to_replace': ([], 25754), 'switch_virtuals_to_full_rewrite_p': ([], 25754), 'switch_virtuals_to_full_rewrite': ([], 25754), 'gsi_stmt': ([], 25754), 'gsi_next': ([], 25754), 'bb_seq': ([], 25754), 'gsi_start_bb': ([], 25754), 'initialize_flags_in_bb': ([], 25754), 'mark_block_for_update': ([], 25754), 'get_def_blocks_for': ([], 25754), 'set_def_block': ([], 25754), 'mark_def_interesting': ([5], 25743), 'prepare_def_site_for': ([], 25754), 'end_readonly_imm_use_p': ([], 25754), 'first_readonly_imm_use': ([], 25754), 'VEC_gimple_vec_base_space': ([], 25754), 'VEC_gimple_vec_heap_reserve': ([], 25754), 'VEC_gimple_vec_base_quick_push': ([], 25754), 'VEC_gimple_base_space': ([], 25754), 'VEC_gimple_heap_reserve': ([], 25754), 'VEC_gimple_base_quick_push': ([], 25754), 'VEC_gimple_heap_safe_push': ([], 25754), 'mark_phi_for_rewrite': ([], 25754), 'set_livein_block': ([], 25754), 'mark_use_interesting': ([], 25754), 'next_readonly_imm_use': ([], 25754), 'prepare_use_sites_for': ([], 25754), 'prepare_names_to_update': ([], 25754), 'symbol_marked_for_renaming': ([], 25754), 'gimple_def_ops': ([], 25754), 'gimple_vdef': ([], 25754), 'gimple_use_ops': ([], 25754), 'gimple_vuse': ([], 25754), 'op_iter_init': ([], 25754), 'op_iter_next_use': ([], 25754), 'op_iter_next_def': ([], 25754), 'op_iter_init_def': ([], 25754), 'prepare_block_for_update': ([2, 32], 25738), 'find_def_blocks_for': ([], 25754), 'VEC_int_base_quick_push': ([], 25754), 'VEC_int_base_pop': ([], 25754), 'VEC_int_base_space': ([], 25754), 'VEC_int_heap_reserve': ([], 25754), 'VEC_int_heap_safe_push': ([2], 25752), 'prune_unused_phi_nodes': ([], 25754), 'gsi_after_labels': ([], 25754), 'insert_phi_nodes_for': ([17, 194], 25746), 'insert_updated_phi_nodes_for': ([79], 25752), 'VEC_tree_base_pop': ([], 25754), 'rewrite_update_leave_block': ([], 25754), 'VEC_tree_base_space': ([], 25754), 'VEC_tree_heap_reserve': ([], 25754), 'VEC_tree_base_quick_push': ([], 25754), 'VEC_tree_heap_safe_push': ([], 25754), 'register_new_update_single': ([], 25754), 'register_new_update_set': ([4], 25743), 'delink_imm_use': ([], 25754), 'link_imm_use_to_list': ([], 25754), 'link_imm_use': ([], 25754), 'set_ssa_use_from_ptr': ([], 25754), 'maybe_replace_use_in_debug_stmt': ([], 25754), 'gimple_ops': ([], 25754), 'gimple_set_op': ([], 25754), 'gimple_debug_bind_reset_value': ([], 25754), 'get_reaching_def': ([], 25754), 'maybe_replace_use': ([], 25754), 'gsi_one_before_end_p': ([], 25754), 'single_pred_p': ([], 25754), 'phi_nodes': ([], 25754), 'maybe_register_def': ([], 25754), 'rewrite_update_stmt': ([], 25754), 'VEC_gimple_base_iterate': ([], 25754), 'rewrite_update_phi_arguments': ([], 25754), 'rewrite_update_enter_block': ([181], 25750), 'rewrite_leave_block': ([], 25754), 'rewrite_stmt': ([], 25754), 'rewrite_add_phi_arguments': ([], 25754), 'rewrite_enter_block': ([], 25754), 'rewrite_blocks': ([], 25754), 'def_blocks_free': ([], 25754), 'update_ssa': ([], 25754), 'init_ssa_renamer': ([], 25754), 'op_iter_next_tree': ([], 25754), 'mark_def_sites': ([], 25754), 'mark_def_sites_block': ([0, 2], 25696), 'mark_def_site_blocks': ([], 25754), 'insert_phi_nodes': ([], 25754), 'rewrite_into_ssa': ([], 25754)}, "PosixPath('602/gcse.bc')": {'can_assign_to_reg_without_clobbers_p': ([4], 26376), 'dump_hash_table': ([], 26399), 'compute_can_copy': ([], 26399), 'is_too_expensive': ([], 26399), 'alloc_gcse_mem': ([], 26399), 'alloc_hash_table': ([], 26399), 'bmp_iter_set_init': ([], 26399), 'bmp_iter_set': ([4], 26394), 'free_insn_expr_list_list': ([], 26399), 'bmp_iter_next': ([], 26399), 'clear_modify_mem_tables': ([], 26399), 'record_last_reg_set_info': ([], 26399), 'canon_list_insert': ([], 26399), 'record_last_mem_set_info': ([], 26399), 'gcse_constant_p': ([6], 26396), 'want_to_gcse_p': ([0], 26397), 'find_rtx_in_ldst': ([], 26399), 'mems_conflict_for_gcse_p': ([], 26399), 'load_killed_in_block_p': ([], 26399), 'oprs_unchanged_p': ([], 26399), 'insert_expr_in_table': ([], 26399), 'insert_set_in_table': ([], 26399), 'hash_scan_set': ([], 26399), 'hash_scan_insn': ([], 26399), 'record_last_set_info': ([0], 26397), 'compute_hash_table_work': ([], 26399), 'compute_hash_table': ([], 26399), 'bmp_iter_and_compl_init': ([], 26399), 'bmp_iter_and_compl': ([], 26399), 'compute_transp': ([182], 26387), 'compute_local_properties': ([], 26399), 'compute_transpout': ([13], 26395), 'compute_code_hoist_vbeinout': ([], 26399), 'compute_code_hoist_data': ([], 26399), 'VEC_basic_block_base_iterate': ([], 26399), 'ei_next': ([], 26399), 'hoist_expr_reaches_here_p': ([23], 26394), 'gcse_emit_move_after': ([], 26399), 'process_insert_insn': ([], 26399), 'single_succ_p': ([], 26399), 'single_succ_edge': ([], 26399), 'add_label_notes': ([], 26399), 'insert_insn_end_basic_block': ([2], 26393), 'hoist_code': ([], 26399), 'free_code_hoist_mem': ([], 26399), 'free_modify_mem_tables': ([], 26399), 'free_gcse_mem': ([], 26399), 'one_code_hoisting_pass': ([], 26399), 'execute_rtl_hoist': ([], 26399), 'ldst_entry': ([], 26399), 'invalidate_any_buried_refs': ([], 26399), 'pre_ldst_expr_hash': ([], 26399), 'compute_ld_motion_mems': ([], 26399), 'print_ldst_list': ([], 26399), 'trim_ld_motion_mems': ([], 26399), 'compute_pre_data': ([], 26399), 'pre_delete': ([], 26399), 'update_ld_motion_stores': ([18], 26396), 'pre_edge_insert': ([], 26399), 'pre_expr_reaches_here_p_work': ([18], 26396), 'pre_expr_reaches_here_p': ([], 26399), 'pre_insert_copy_insn': ([], 26399), 'pre_insert_copies': ([], 26399), 'pre_gcse': ([], 26399), 'free_pre_mem': ([], 26399), 'free_ldst_mems': ([], 26399), 'one_pre_gcse_pass': ([], 26399), 'execute_rtl_pre': ([], 26399), 'find_used_regs': ([0], 26397), 'local_cprop_find_used_regs': ([], 26399), 'cprop_jump': ([10], 26397), 'try_replace_reg': ([], 26399), 'constprop_register': ([], 26399), 'do_local_cprop': ([], 26399), 'local_cprop_pass': ([], 26399), 'implicit_set_cond_p': ([], 26399), 'single_pred_p': ([], 26399), 'find_implicit_sets': ([], 26399), 'oprs_not_set_p': ([], 26399), 'lookup_set': ([], 26399), 'next_set': ([], 26399), 'find_avail_set': ([], 26399), 'cprop_insn': ([], 26399), 'mark_set': ([], 26399), 'mark_clobber': ([], 26399), 'mark_oprs_set': ([], 26399), 'find_bypass_set': ([], 26399), 'reg_killed_on_edge': ([], 26399), 'bypass_block': ([], 26399), 'bypass_conditional_jumps': ([], 26399), 'free_cprop_mem': ([], 26399), 'one_cprop_pass': ([59], 26391), 'execute_rtl_cprop': ([], 26399)}, "PosixPath('602/loop-unswitch.bc')": {'compare_and_jump_seq': ([], 3841), 'number_of_loops': ([], 3841), 'VEC_loop_p_base_iterate': ([], 3841), 'VEC_int_base_quick_push': ([], 3841), 'VEC_int_base_iterate': ([], 3841), 'get_loop': ([], 3841), 'fel_next': ([5], 3838), 'fel_init': ([], 3841), 'may_unswitch_on': ([], 3841), 'reversed_condition': ([], 3841), 'single_succ_p': ([], 3841), 'single_succ_edge': ([], 3841), 'single_pred_p': ([], 3841), 'single_pred_edge': ([], 3841), 'unswitch_loop': ([], 3841), 'unswitch_single_loop': ([24], 3838), 'unswitch_loops': ([], 3841)}, "PosixPath('602/c-opts.bc')": {'c_common_init_options': ([8], 13038), 'c_common_handle_option': ([], 13039), 'defer_opt': ([0, 2], 12985), 'c_common_post_options': ([], 13039), 'check_deps_environment_vars': ([], 13039), 'sanitize_cpp_opts': ([], 13039), 'c_common_init': ([], 13039), 'push_command_line_include': ([], 13039), 'handle_OPT_d': ([], 13039), 'handle_deferred_opts': ([], 13039), 'cb_file_change': ([], 13039), 'finish_options': ([], 13039), 'c_common_parse_file': ([], 13039), 'c_common_finish': ([], 13039)}, "PosixPath('602/ipa-inline.bc')": {'cgraph_clone_inlined_nodes': ([37], 16154), 'inline_transform': ([], 16157), 'cgraph_mark_inline_edge': ([2, 33], 16155), 'cgraph_can_remove_if_no_direct_calls_p': ([], 16157), 'update_noncloned_frequencies': ([], 16157), 'bb_seq': ([], 16157), 'gsi_start_bb': ([], 16157), 'gsi_stmt': ([], 16157), 'gimple_ops': ([], 16157), 'gimple_op': ([], 16157), 'likely_eliminated_by_inlining_p': ([], 16157), 'gsi_next': ([], 16157), 'estimate_function_body_sizes': ([], 16157), 'compute_inline_parameters': ([27], 16151), 'inline_indirect_intraprocedural_analysis': ([], 16157), 'analyze_function': ([], 16157), 'VEC_ipa_node_params_t_base_space': ([], 16157), 'VEC_ipa_node_params_t_heap_reserve_exact': ([], 16157), 'VEC_ipa_node_params_t_heap_safe_grow': ([], 16157), 'VEC_ipa_node_params_t_heap_safe_grow_cleared': ([], 16157), 'ipa_check_create_node_params': ([], 16157), 'VEC_ipa_edge_args_t_base_space': ([], 16157), 'VEC_ipa_edge_args_t_gc_reserve_exact': ([], 16157), 'VEC_ipa_edge_args_t_gc_safe_grow': ([], 16157), 'VEC_ipa_edge_args_t_gc_safe_grow_cleared': ([], 16157), 'ipa_check_create_edge_args': ([], 16157), 'inline_generate_summary': ([], 16157), 'cgraph_estimate_size_after_inlining': ([], 16157), 'cgraph_estimate_time_after_inlining': ([], 16157), 'cgraph_mark_inline': ([], 16157), 'cgraph_recursive_inlining_p': ([], 16157), 'leaf_node_p': ([], 16157), 'cgraph_only_called_directly_p': ([], 16157), 'cgraph_estimate_growth': ([], 16157), 'cgraph_check_inline_limits': ([], 16157), 'cgraph_default_inline_p': ([], 16157), 'cgraph_decide_inlining_incrementally': ([], 16157), 'try_inline': ([0, 7], 16124), 'cgraph_set_inline_failed': ([], 16157), 'cgraph_edge_badness': ([], 16157), 'compute_max_insns': ([], 16157), 'gimple_filename': ([], 16157), 'gimple_lineno': ([], 16157), 'lookup_recursive_calls': ([], 16157), 'cgraph_decide_recursive_inlining': ([], 16157), 'VEC_cgraph_edge_p_base_pop': ([], 16157), 'add_new_edges_to_heap': ([], 16157), 'update_caller_keys': ([], 16157), 'update_callee_keys': ([], 16157), 'cgraph_decide_inlining_of_small_functions': ([], 16157), 'cgraph_decide_inlining': ([], 16157), 'cgraph_early_inlining': ([], 16157)}, "PosixPath('602/lto-streamer-out.bc')": {'eq_string_slot_node': ([], 15887), 'create_output_block': ([], 15887), 'destroy_output_block': ([], 15887), 'VEC_bitpack_word_t_base_iterate': ([], 15887), 'lto_output_bitpack': ([], 15887), 'tree_is_indexable': ([], 15887), 'output_type_ref': ([], 15887), 'lto_stream_as_builtin_p': ([], 15887), 'output_string_with_length': ([], 15887), 'lto_output_builtin_tree': ([], 15887), 'output_identifier': ([], 15887), 'lto_output_tree_header': ([], 15887), 'pack_ts_base_value_fields': ([], 15887), 'pack_ts_real_cst_value_fields': ([], 15887), 'pack_ts_fixed_cst_value_fields': ([], 15887), 'pack_ts_decl_common_value_fields': ([], 15887), 'pack_ts_decl_with_vis_value_fields': ([], 15887), 'pack_ts_type_value_fields': ([], 15887), 'pack_value_fields': ([], 15887), 'lto_output_location': ([], 15887), 'tree_operand_length': ([], 15887), 'VEC_tree_base_iterate': ([], 15887), 'lto_output_chain': ([], 15887), 'lto_output_tree_ref': ([1], 15885), 'lto_output_tree': ([27], 15884), 'produce_asm': ([], 15887), 'csi_end_p': ([], 15887), 'output_alias_pair_p': ([], 15887), 'output_unreferenced_globals': ([], 15887), 'lto_tree_ref_encoder_size': ([], 15887), 'write_global_stream': ([], 15887), 'lto_output_decl_state_streams': ([], 15887), 'lto_out_decl_state_written_size': ([], 15887), 'write_global_references': ([], 15887), 'lto_output_decl_state_refs': ([], 15887), 'write_symbol_vec': ([8, 35], 15882), 'write_symbols_of_kind': ([], 15887), 'produce_asm_for_decls': ([], 15887), 'output_ssa_names': ([], 15887), 'VEC_eh_region_base_iterate': ([], 15887), 'output_eh_region': ([], 15887), 'VEC_eh_landing_pad_base_iterate': ([], 15887), 'output_eh_lp': ([], 15887), 'VEC_uchar_base_iterate': ([], 15887), 'output_eh_regions': ([], 15887), 'bb_seq': ([], 15887), 'gsi_start_bb': ([], 15887), 'phi_nodes': ([], 15887), 'gsi_stmt': ([], 15887), 'gimple_ops': ([], 15887), 'gimple_op': ([], 15887), 'output_gimple_stmt': ([], 15887), 'gsi_next': ([], 15887), 'output_phi': ([], 15887), 'output_bb': ([11, 31], 15883), 'ei_next': ([], 15887), 'output_cfg': ([], 15887), 'output_function': ([], 15887), 'VEC_tree_base_space': ([], 15887), 'VEC_tree_heap_reserve': ([], 15887), 'VEC_tree_base_quick_push': ([], 15887), 'VEC_tree_heap_safe_push': ([], 15887), 'copy_function': ([], 15887), 'lto_output': ([], 15887)}, "PosixPath('602/incpath.bc')": {'add_cpp_dir_path': ([], 2939), 'add_path': ([], 2939), 'add_env_var_paths': ([], 2939), 'add_standard_paths': ([], 2939), 'add_sysroot_to_chain': ([], 2939), 'remove_duplicates': ([9], 2898), 'register_include_chains': ([], 2939)}, "PosixPath('602/predict.bc')": {'compute_function_frequency': ([0, 8], 16713), 'maybe_hot_count_p': ([], 16740), 'maybe_hot_frequency_p': ([], 16740), 'maybe_hot_bb_p': ([], 16740), 'cgraph_maybe_hot_edge_p': ([], 16740), 'maybe_hot_edge_p': ([], 16740), 'probably_never_executed_bb_p': ([], 16740), 'loop_outer': ([], 16740), 'optimize_loop_nest_for_speed_p': ([], 16740), 'predictable_edge_p': ([], 16740), 'rtl_predicted_by_p': ([], 16740), 'gimple_predicted_by_p': ([], 16740), 'probability_reliable_p': ([], 16740), 'br_prob_note_reliable_p': ([], 16740), 'rtl_predict_edge': ([], 16740), 'gimple_predict_edge': ([], 16740), 'remove_predictions_associated_with_edge': ([], 16740), 'invert_br_probabilities': ([], 16740), 'can_predict_insn_p': ([], 16740), 'bb_estimate_probability_locally': ([], 16740), 'ei_next': ([], 16740), 'set_even_probabilities': ([9], 16736), 'dump_prediction': ([6], 16738), 'single_succ_p': ([], 16740), 'single_succ_edge': ([], 16740), 'combine_predictions_for_insn': ([], 16740), 'guess_outgoing_edge_probabilities': ([], 16740), 'gimple_ops': ([], 16740), 'gimple_op': ([], 16740), 'return_prediction': ([0], 16736), 'predict_paths_for_bb': ([5], 16738), 'apply_return_prediction': ([], 16740), 'bb_seq': ([], 16740), 'gsi_start_bb': ([], 16740), 'gsi_stmt': ([], 16740), 'gimple_call_fndecl': ([], 16740), 'gsi_next': ([], 16740), 'tree_bb_level_predictions': ([], 16740), 'number_of_loops': ([], 16740), 'VEC_int_base_quick_push': ([], 16740), 'VEC_int_base_iterate': ([], 16740), 'get_loop': ([], 16740), 'fel_next': ([5], 16737), 'fel_init': ([], 16740), 'VEC_edge_base_iterate': ([], 16740), 'predict_loops': ([], 16740), 'expr_expected_value_1': ([], 16740), 'expr_expected_value': ([], 16740), 'tree_predict_by_opcode': ([], 16740), 'tree_estimate_probability_bb': ([], 16740), 'combine_predictions_for_bb': ([], 16740), 'counts_to_freqs': ([], 16740), 'bmp_iter_set_init': ([], 16740), 'bmp_iter_set': ([], 16740), 'bmp_iter_next': ([], 16740), 'propagate_freq': ([45, 62], 16734), 'estimate_loops_at_level': ([], 16740), 'estimate_loops': ([], 16740), 'choose_function_section': ([], 16740), 'estimate_bb_frequencies': ([20], 16738), 'tree_estimate_probability': ([338, 435], 16729), 'expensive_function_p': ([19], 16737), 'strip_predict_hints': ([], 16740), 'tree_estimate_probability_driver': ([], 16740)}, "PosixPath('602/tree-profile.bc')": {'tree_init_ic_make_global_vars': ([], 4398), 'prepare_instrumented_value': ([], 4398), 'gsi_stmt': ([], 4398), 'add_abnormal_goto_call_edges': ([], 4398), 'tree_gen_ior_profiler': ([], 4398), 'tree_gen_average_profiler': ([], 4398), 'tree_gen_ic_profiler': ([], 4398), 'tree_gen_one_value_profiler': ([], 4398), 'tree_gen_pow2_profiler': ([], 4398), 'tree_gen_interval_profiler': ([], 4398), 'tree_init_edge_profiler': ([], 4398), 'bb_seq': ([], 4398), 'gsi_start_bb': ([], 4398), 'ei_next': ([], 4398), 'tree_gen_ic_func_profiler': ([], 4398), 'tree_profiling': ([], 4398)}, "PosixPath('602/real.bc')": {'do_divide': ([], 22851), 'real_to_hexadecimal': ([3], 22847), 'get_zero': ([], 22851), 'get_canonical_qnan': ([], 22851), 'sticky_rshift_significand': ([], 22851), 'get_inf': ([], 22851), 'normalize': ([], 22851), 'do_add': ([4], 22831), 'do_multiply': ([], 22851), 'lshift_significand_1': ([], 22851), 'div_significands': ([], 22851), 'clear_significand_below': ([], 22851), 'do_fix_trunc': ([], 22851), 'real_arithmetic': ([], 22851), 'real_ldexp': ([], 22851), 'rtd_divmod': ([], 22851), 'round_for_format': ([0], 22839), 'real_convert': ([], 22851), 'times_pten': ([], 22851), 'real_from_integer': ([], 22851), 'exact_real_inverse': ([], 22851), 'real_can_shorten_arithmetic': ([], 22851), 'real_to_integer': ([], 22851), 'rshift_significand': ([], 22851), 'real_to_integer2': ([0], 22850), 'real_to_decimal_for_mode': ([4], 22802), 'get_canonical_snan': ([], 22851), 'real_from_string': ([10], 22839), 'real_inf': ([], 22851), 'real_nan': ([], 22851), 'real_maxval': ([], 22851), 'real_2expN': ([], 22851), 'exact_real_truncate': ([], 22851), 'real_to_target_fmt': ([], 22851), 'significand_size': ([], 22851), 'real_sqrt': ([], 22851), 'real_powi': ([], 22851), 'real_floor': ([], 22851), 'real_ceil': ([], 22851), 'get_max_float': ([], 22851), 'decode_ieee_half': ([], 22851), 'encode_ieee_half': ([], 22851), 'decode_vax_g': ([], 22851), 'encode_vax_g': ([], 22851), 'decode_vax_d': ([], 22851), 'encode_vax_d': ([], 22851), 'decode_vax_f': ([], 22851), 'encode_vax_f': ([], 22851), 'decode_ieee_quad': ([], 22851), 'encode_ieee_quad': ([0], 22849), 'decode_ieee_double': ([], 22851), 'encode_ieee_double': ([], 22851), 'decode_ibm_extended': ([], 22851), 'encode_ibm_extended': ([], 22851), 'decode_ieee_extended': ([], 22851), 'encode_ieee_extended': ([3], 22848), 'decode_ieee_extended_motorola': ([], 22851), 'encode_ieee_extended_motorola': ([], 22851), 'decode_ieee_single': ([], 22851), 'encode_ieee_single': ([], 22851)}, "PosixPath('602/dwarf2asm.bc')": {'dw2_assemble_integer': ([], 10337), 'dw2_asm_output_data_raw': ([], 10337), 'dw2_asm_output_nstring': ([], 10337), 'dw2_force_const_mem': ([], 10337), 'dw2_output_indirect_constant_1': ([], 10337)}, "PosixPath('602/hooks.bc')": {}, "PosixPath('602/matrix-reorg.bc')": {'analyze_transpose': ([12], 15350), 'check_allocation_function': ([3, 79, 80, 85], 15339), 'analyze_accesses_for_call_stmt': ([], 15351), 'first_imm_use_on_stmt': ([], 15351), 'next_imm_use_on_stmt': ([], 15351), 'bb_seq': ([], 15351), 'gsi_start_bb': ([], 15351), 'gsi_stmt': ([], 15351), 'gimple_ops': ([], 15351), 'may_flatten_matrices_1': ([], 15351), 'gsi_next': ([], 15351), 'may_flatten_matrices': ([], 15351), 'analyze_matrix_decl': ([], 15351), 'find_matrices_decl': ([], 15351), 'mark_min_matrix_escape_level': ([], 15351), 'gimple_call_fndecl': ([], 15351), 'collect_data_for_malloc_call': ([], 15351), 'add_allocation_site': ([], 15351), 'analyze_matrix_allocation_site': ([], 15351), 'update_type_size': ([3, 4], 15347), 'end_readonly_imm_use_p': ([], 15351), 'first_readonly_imm_use': ([], 15351), 'ssa_accessed_in_tree': ([], 15351), 'ssa_accessed_in_assign_rhs': ([], 15351), 'VEC_access_site_info_p_base_space': ([], 15351), 'VEC_access_site_info_p_heap_reserve': ([], 15351), 'VEC_access_site_info_p_base_quick_push': ([], 15351), 'VEC_access_site_info_p_heap_safe_push': ([], 15351), 'record_access_alloc_site_info': ([], 15351), 'next_readonly_imm_use': ([], 15351), 'analyze_matrix_accesses': ([36, 62], 15307), 'find_sites_in_func': ([], 15351), 'record_all_accesses_in_func': ([], 15351), 'dump_matrix_reorg_analysis': ([], 15351), 'VEC_access_site_info_p_base_iterate': ([], 15351), 'gimple_def_ops': ([], 15351), 'gimple_vdef': ([], 15351), 'gimple_use_ops': ([], 15351), 'gimple_vuse': ([], 15351), 'op_iter_init': ([], 15351), 'op_iter_next_tree': ([], 15351), 'end_imm_use_stmt_p': ([], 15351), 'clear_and_done_ssa_iter': ([], 15351), 'op_iter_next_use': ([], 15351), 'op_iter_init_phiuse': ([], 15351), 'delink_imm_use': ([], 15351), 'link_imm_use_to_list': ([], 15351), 'move_use_after_head': ([], 15351), 'gimple_vuse_op': ([], 15351), 'link_use_stmts_after': ([], 15351), 'first_imm_use_stmt': ([], 15351), 'gimple_set_op': ([], 15351), 'link_imm_use': ([], 15351), 'set_ssa_use_from_ptr': ([], 15351), 'next_imm_use_stmt': ([], 15351), 'transform_access_sites': ([38], 15341), 'sort_dim_hot_level': ([], 15351), 'check_var_notmodified_p': ([9], 15349), 'transform_allocation_sites': ([0, 84, 170], 15337), 'can_calculate_expr_before_stmt': ([], 15351), 'matrix_reorg': ([], 15351)}, "PosixPath('602/tree-ssa-dce.bc')": {'first_imm_use_on_stmt': ([], 12088), 'next_imm_use_on_stmt': ([], 12088), 'gsi_start': ([], 12088), 'end_imm_use_stmt_p': ([], 12088), 'clear_and_done_ssa_iter': ([], 12088), 'op_iter_next_use': ([], 12088), 'op_iter_init_phiuse': ([], 12088), 'delink_imm_use': ([], 12088), 'link_imm_use_to_list': ([], 12088), 'move_use_after_head': ([], 12088), 'gimple_def_ops': ([], 12088), 'gimple_vdef': ([], 12088), 'gimple_use_ops': ([], 12088), 'gimple_vuse': ([], 12088), 'op_iter_init': ([], 12088), 'gimple_vuse_op': ([], 12088), 'link_use_stmts_after': ([], 12088), 'first_imm_use_stmt': ([], 12088), 'link_imm_use': ([], 12088), 'set_ssa_use_from_ptr': ([], 12088), 'next_imm_use_stmt': ([], 12088), 'mark_virtual_phi_result_for_renaming': ([], 12088), 'tree_dce_init': ([], 12088), 'single_succ_p': ([], 12088), 'single_succ_edge': ([], 12088), 'single_succ': ([], 12088), 'find_pdom': ([], 12088), 'set_control_dependence_map_bit': ([], 12088), 'find_control_dependence': ([], 12088), 'find_all_control_dependences': ([], 12088), 'gsi_stmt': ([], 12088), 'gsi_next': ([], 12088), 'bb_seq': ([], 12088), 'gsi_start_bb': ([], 12088), 'VEC_gimple_base_space': ([], 12088), 'VEC_gimple_heap_reserve': ([], 12088), 'VEC_gimple_base_quick_push': ([], 12088), 'VEC_gimple_heap_safe_push': ([0], 12086), 'mark_stmt_necessary': ([1], 12081), 'gimple_ops': ([], 12088), 'mark_stmt_if_obviously_necessary': ([], 12088), 'bmp_iter_set_init': ([], 12088), 'bmp_iter_set': ([], 12088), 'bmp_iter_next': ([], 12088), 'mark_control_dependent_edges_necessary': ([], 12088), 'ei_next': ([], 12088), 'number_of_loops': ([], 12088), 'VEC_int_base_quick_push': ([], 12088), 'loop_outer': ([], 12088), 'VEC_int_base_iterate': ([], 12088), 'get_loop': ([], 12088), 'fel_next': ([5], 12085), 'fel_init': ([], 12088), 'find_obviously_necessary_stmts': ([], 12088), 'VEC_gimple_base_pop': ([], 12088), 'mark_operand_necessary': ([7], 12083), 'op_iter_next_tree': ([], 12088), 'may_be_aliased': ([], 12088), 'ref_may_be_aliased': ([], 12088), 'mark_all_reaching_defs_necessary_1': ([], 12088), 'mark_all_reaching_defs_necessary': ([], 12088), 'gimple_call_fndecl': ([], 12088), 'mark_aliased_reaching_defs_necessary_1': ([], 12088), 'mark_aliased_reaching_defs_necessary': ([], 12088), 'propagate_necessity': ([], 12088), 'VEC_basic_block_base_pop': ([], 12088), 'gsi_last_bb': ([], 12088), 'gsi_prev': ([], 12088), 'phi_nodes': ([], 12088), 'forward_edge_to_pdom': ([], 12088), 'remove_dead_stmt': ([], 12088), 'gimple_set_op': ([], 12088), 'gimple_call_set_lhs': ([], 12088), 'remove_dead_phis': ([], 12088), 'eliminate_unnecessary_stmts': ([], 12088), 'tree_dce_done': ([], 12088), 'perform_tree_ssa_dce': ([], 12088)}, "PosixPath('602/postreload.bc')": {'reload_cse_simplify_set': ([4], 8774), 'reload_cse_noop_set_p': ([], 8780), 'reload_cse_simplify_operands': ([1, 21, 24, 51, 65, 189], 8740), 'reload_cse_simplify': ([], 8780), 'reload_cse_regs_1': ([], 8780), 'reload_combine_note_use': ([3], 8768), 'reload_combine_note_store': ([0, 1, 2], 8775), 'reload_combine': ([6, 100], 8752), 'move2add_note_store': ([4, 5], 8773), 'reload_cse_move2add': ([], 8780), 'reload_cse_regs': ([77], 8741)}, "PosixPath('602/cselib.bc')": {'cselib_record_sets': ([], 13367), 'references_value_p': ([], 13367), 'preserve_only_constants': ([], 13367), 'cselib_reset_table': ([8, 11, 33], 13362), 'cselib_preserve_cfa_base_value': ([], 13367), 'unchain_one_elt_list': ([], 13367), 'unchain_one_elt_loc_list': ([], 13367), 'cselib_invalidate_regno': ([35], 13359), 'promote_debug_loc': ([], 13367), 'new_cselib_val': ([0], 13366), 'new_elt_loc_list': ([], 13367), 'new_elt_list': ([], 13367), 'add_mem_for_addr': ([], 13367), 'cselib_subst_to_values': ([], 13367), 'cselib_hash_rtx': ([], 13367), 'cselib_lookup_mem': ([], 13367), 'cselib_lookup': ([], 13367), 'cselib_invalidate_mem': ([], 13367), 'unchain_one_value': ([], 13367), 'discard_useless_values': ([], 13367), 'discard_useless_locs': ([3], 13362), 'remove_useless_values': ([], 13367), 'cselib_reg_set_mode': ([], 13367), 'rtx_equal_for_cselib_p': ([], 13367), 'cselib_expand_value_rtx_1': ([], 13367), 'expand_loc': ([5], 13362), 'cselib_expand_value_rtx': ([], 13367), 'cselib_expand_value_rtx_cb': ([], 13367), 'cselib_dummy_expand_value_rtx_cb': ([], 13367), 'cselib_invalidate_rtx': ([], 13367), 'cselib_record_set': ([], 13367), 'cselib_process_insn': ([37], 13364), 'entry_and_rtx_equal_p': ([], 13367), 'cselib_init': ([], 13367), 'cselib_finish': ([], 13367), 'dump_cselib_val': ([], 13367)}, "PosixPath('602/sel-sched-dump.bc')": {'replace_str_in_buf': ([], 11015), 'sel_prepare_string_for_dot_label': ([], 11015), 'dump_insn_rtx_1': ([], 11015), 'dump_vinsn_1': ([], 11015), 'dump_expr_1': ([], 11015), 'dump_insn_1': ([], 11015), '_list_iter_start': ([], 11015), '_list_iter_next': ([], 11015), 'dump_av_set': ([], 11015), 'bmp_iter_set_init': ([], 11015), 'bmp_iter_set': ([], 11015), 'bmp_iter_next': ([], 11015), 'dump_lv_set': ([], 11015), 'dump_blist': ([], 11015), 'VEC_rtx_base_iterate': ([], 11015), 'dump_insn_vector': ([], 11015), 'sel_print_insn': ([], 11015), 'ei_next': ([], 11015), 'has_preds_in_current_region_p': ([], 11015), 'sel_dump_cfg_edge': ([], 11015), 'sel_dump_cfg_2': ([], 11015), 'sel_dump_cfg_1': ([], 11015), 'sel_debug_cfg_1': ([], 11015), 'debug_mem_addr_value': ([], 11015)}, "PosixPath('602/c-errors.bc')": {'pedwarn_c99': ([], 534), 'pedwarn_c90': ([], 534)}, "PosixPath('602/c-lex.bc')": {'interpret_integer': ([], 7357), 'lex_string': ([28], 7350), 'get_fileinfo': ([], 7357), 'cb_undef': ([], 7357), 'cb_define': ([], 7357), 'cb_def_pragma': ([], 7357), 'cb_ident': ([], 7357), 'cb_line_change': ([], 7357), 'init_c_lex': ([], 7357), 'dump_one_header': ([], 7357), 'dump_time_statistics': ([], 7357), 'update_header_times': ([], 7357), 'fe_file_change': ([], 7357), 'narrowest_unsigned_type': ([], 7357), 'narrowest_signed_type': ([], 7357), 'interpret_fixed': ([], 7357), 'interpret_float': ([], 7357), 'lex_charconst': ([], 7357), 'c_lex_with_flags': ([], 7357)}, "PosixPath('602/df-byte-scan.bc')": {'df_compute_accessed_bytes_extract': ([], 985), 'df_compute_accessed_bytes_strict_low_part': ([], 985), 'df_compute_accessed_bytes_subreg': ([], 985), 'df_compute_accessed_bytes': ([], 985)}, "PosixPath('602/tree-dump.bc')": {'dump_register': ([], 9226), 'queue': ([], 9226), 'dump_maybe_newline': ([], 9226), 'queue_and_dump_index': ([], 9226), 'dump_string': ([], 9226), 'dump_string_field': ([], 9226), 'dump_flag': ([], 9226), 'VEC_tree_base_iterate': ([], 9226), 'tsi_next': ([], 9226), 'dump_real': ([], 9226), 'dump_fixed': ([], 9226), 'init_call_expr_arg_iterator': ([], 9226), 'next_call_expr_arg': ([], 9226), 'first_call_expr_arg': ([], 9226), 'dequeue_and_dump': ([], 9226), 'dump_node': ([], 9226), 'get_dump_file_name': ([], 9226), 'dump_enabled_p': ([], 9226), 'dump_enable_all': ([0, 8], 9214), 'dump_switch_p_1': ([], 9226)}, "PosixPath('602/i386.bc')": {'function_arg_advance_32': ([], 239127), 'ix86_compute_frame_layout': ([2, 15], 239122), 'ix86_expand_prologue': ([5, 6, 7, 286], 239073), 'ix86_expand_epilogue': ([], 239127), 'assign_386_stack_local': ([], 239127), 'ix86_expand_int_addcc': ([], 239127), 'ix86_split_long_move': ([1, 2], 239087), 'ix86_vectorize_builtin_vec_perm_ok': ([], 239127), 'expand_vec_perm_interleave2': ([], 239127), 'ix86_target_string': ([], 239127), 'ix86_expand_vec_perm_builtin': ([], 239127), 'ix86_can_inline_p': ([], 239127), 'ix86_function_specific_print': ([], 239127), 'ix86_function_specific_restore': ([], 239127), 'ix86_function_specific_save': ([1, 33], 239123), 'ix86_valid_target_attribute_inner_p': ([], 239127), 'ix86_get_builtin_type': ([], 239127), 'ix86_get_builtin_func_type': ([], 239127), 'ix86_add_new_builtins': ([], 239127), 'ix86_frame_pointer_required': ([], 239127), 'ix86_secondary_reload': ([], 239127), 'ix86_function_regparm': ([], 239127), 'ix86_static_chain': ([], 239127), 'ix86_trampoline_init': ([], 239127), 'find_drap_reg': ([], 239127), 'ix86_get_drap_rtx': ([], 239127), 'ix86_minimum_incoming_stack_boundary': ([], 239127), 'type_natural_mode': ([0, 1, 3], 239107), 'ix86_function_sseregparm': ([], 239127), 'function_value_32': ([], 239127), 'ix86_function_value_1': ([], 239127), 'ix86_function_value': ([], 239127), 'return_in_memory_32': ([], 239127), 'ix86_return_in_memory': ([], 239127), 'ix86_struct_value_rtx': ([], 239127), 'ix86_canonical_va_list_type': ([], 239127), 'ei_next': ([], 239127), 'ix86_pad_returns': ([], 239127), 'symbolic_reference_mentioned_p': ([], 239127), 'min_insn_size': ([], 239127), 'ix86_avoid_jump_mispredicts': ([], 239127), 'ix86_reorg': ([], 239127), 'ix86_decompose_address': ([45], 239120), 'ix86_address_cost': ([], 239127), 'standard_80387_constant_p': ([], 239127), 'ix86_rtx_costs': ([81], 239107), 'ix86_in_large_data_p': ([], 239127), 'ix86_encode_section_info': ([], 239127), 'legitimate_pic_address_disp_p': ([2], 239120), 'legitimate_constant_p': ([2], 239122), 'ix86_legitimate_address_p': ([57], 239122), 'ix86_pic_register_p': ([], 239127), 'ix86_delegitimize_address': ([0, 8], 239117), 'ix86_tls_module_base': ([], 239127), 'legitimize_pic_address': ([0], 239116), 'ix86_legitimize_address': ([5, 26, 30, 48], 239103), 'ix86_mangle_type': ([], 239127), 'recog_memoized': ([], 239127), 'expand_vselect': ([], 239127), 'expand_vec_perm_blend': ([], 239127), 'expand_vec_perm_vpermil': ([], 239127), 'expand_vec_perm_pshufb': ([], 239127), 'expand_vec_perm_1': ([], 239127), 'get_mode_wider_vector': ([], 239127), 'expand_vec_perm_broadcast_1': ([], 239127), 'ix86_expand_vector_init_duplicate': ([], 239127), 'ix86_expand_vector_extract': ([], 239127), 'ix86_expand_vector_set': ([], 239127), 'ix86_expand_vector_init_one_nonzero': ([], 239127), 'ix86_expand_vector_init_one_var': ([], 239127), 'ix86_expand_vector_init_interleave': ([], 239127), 'ix86_expand_vector_init': ([], 239127), 'ix86_expand_vector_init_general': ([], 239127), 'ix86_expand_vector_init_concat': ([], 239127), 'ix86_expand_vec_init_builtin': ([], 239127), 'ix86_expand_vec_ext_builtin': ([], 239127), 'ix86_expand_vec_set_builtin': ([], 239127), 'extract_vec_perm_cst': ([], 239127), 'expand_vec_perm_pshuflw_pshufhw': ([], 239127), 'expand_vec_perm_palignr': ([], 239127), 'expand_vec_perm_broadcast': ([], 239127), 'expand_vec_perm_pshufb2': ([], 239127), 'expand_vec_perm_even_odd_1': ([], 239127), 'expand_vec_perm_even_odd': ([], 239127), 'ix86_expand_vec_perm_builtin_1': ([9, 135, 176], 239114), 'ix86_expand_special_args_builtin': ([], 239127), 'ix86_expand_sse_ptest': ([], 239127), 'ix86_expand_unop_vec_merge_builtin': ([], 239127), 'ix86_expand_binop_builtin': ([], 239127), 'ix86_expand_sse_compare': ([], 239127), 'ix86_expand_args_builtin': ([], 239127), 'ix86_expand_sse_comi': ([], 239127), 'ix86_expand_sse_pcmpestr': ([], 239127), 'ix86_expand_sse_pcmpistr': ([], 239127), 'ix86_expand_multi_arg_builtin': ([], 239127), 'ix86_expand_builtin': ([], 239127), 'ix86_init_builtin_types': ([], 239127), 'def_builtin': ([], 239127), 'def_builtin_const': ([], 239127), 'ix86_init_mmx_sse_builtins': ([], 239127), 'ix86_init_builtins': ([], 239127), 'ix86_comp_type_attributes': ([], 239127), 'ix86_handle_struct_attribute': ([], 239127), 'ix86_vectorize_builtin_vec_perm': ([], 239127), 'ix86_builtin_vectorized_function': ([], 239127), 'ix86_agi_dependent': ([], 239127), 'ix86_flags_dependent': ([], 239127), 'ix86_adjust_cost': ([16], 239123), 'ix86_veclibabi_svml': ([], 239127), 'ix86_init_machine_status': ([], 239127), 'override_options': ([], 239127), 'ix86_function_ok_for_sibcall': ([], 239127), 'ix86_code_end': ([], 239127), 'output_set_got': ([], 239127), 'x86_output_mi_thunk': ([], 239127), 'ix86_valid_target_attribute_tree': ([1], 239125), 'ix86_valid_target_attribute_p': ([], 239127), 'ix86_conditional_register_usage': ([], 239127), 'x86_output_aligned_bss': ([], 239127), 'init_cumulative_args': ([], 239127), 'function_arg_advance': ([], 239127), 'function_arg_32': ([], 239127), 'function_arg': ([], 239127), 'contains_aligned_value_p': ([], 239127), 'ix86_function_arg_boundary': ([], 239127), 'ix86_sol10_return_in_memory': ([], 239127), 'ix86_check_movabs': ([0], 239123), 'ix86_select_alt_pic_regnum': ([], 239127), 'ix86_save_reg': ([], 239127), 'ix86_can_use_return_insn_p': ([], 239127), 'ix86_initial_elimination_offset': ([], 239127), 'gen_push': ([], 239127), 'ix86_add_queued_cfa_restore_notes': ([], 239127), 'pro_epilogue_adjust_stack': ([], 239127), 'ix86_eax_live_at_start_p': ([], 239127), 'ix86_emit_restore_regs_using_mov': ([], 239127), 'ix86_emit_leave': ([], 239127), 'ix86_emit_restore_reg_using_pop': ([], 239127), 'legitimate_pic_operand_p': ([2], 239122), 'print_reg': ([2], 239124), 'get_some_local_dynamic_name_1': ([], 239127), 'get_some_local_dynamic_name': ([], 239127), 'output_pic_addr_const': ([], 239127), 'print_operand': ([], 239127), 'print_operand_address': ([48], 239125), 'output_addr_const_extra': ([], 239127), 'split_di': ([], 239127), 'split_ti': ([], 239127), 'output_387_binary_op': ([], 239127), 'ix86_mode_needed': ([], 239127), 'output_fix_trunc': ([], 239127), 'output_fp_compare': ([], 239127), 'ix86_expand_clear': ([], 239127), 'ix86_expand_move': ([], 239127), 'ix86_expand_vector_move_misalign': ([], 239127), 'ix86_expand_vector_move': ([14], 239112), 'ix86_swap_binary_operands_p': ([], 239127), 'ix86_fixup_binary_operands': ([7], 239126), 'ix86_expand_binary_operator': ([], 239127), 'ix86_binary_operator_ok': ([], 239127), 'ix86_expand_unary_operator': ([], 239127), 'distance_non_agu_define': ([], 239127), 'distance_agu_use': ([], 239127), 'ix86_lea_for_add_ok': ([], 239127), 'ix86_dep_by_shift_count_body': ([], 239127), 'ix86_unary_operator_ok': ([], 239127), 'ix86_vec_interleave_v2df_operator_ok': ([], 239127), 'ix86_split_convert_uns_si_sse': ([], 239127), 'ix86_expand_fp_absneg_operator': ([], 239127), 'ix86_expand_copysign': ([], 239127), 'ix86_split_copysign_const': ([], 239127), 'ix86_split_copysign_var': ([], 239127), 'ix86_match_ccmode': ([0], 239123), 'ix86_cc_mode': ([], 239127), 'ix86_prepare_fp_compare_args': ([], 239127), 'ix86_expand_fp_compare': ([], 239127), 'ix86_expand_branch': ([], 239127), 'ix86_expand_carry_flag_compare': ([], 239127), 'ix86_expand_int_movcc': ([], 239127), 'ix86_expand_sse_movcc': ([], 239127), 'ix86_expand_fp_movcc': ([], 239127), 'ix86_expand_fp_vcond': ([], 239127), 'ix86_expand_int_vcond': ([], 239127), 'ix86_expand_sse_unpack': ([], 239127), 'ix86_expand_sse4_unpack': ([], 239127), 'ix86_split_to_parts': ([5, 25], 239109), 'ix86_expand_ashl_const': ([], 239127), 'ix86_split_ashl': ([], 239127), 'ix86_split_ashr': ([], 239127), 'ix86_split_lshr': ([], 239127), 'decide_alg': ([], 239127), 'expand_constant_movmem_prologue': ([], 239127), 'expand_set_or_movmem_via_loop': ([], 239127), 'scale_counter': ([0], 239120), 'expand_movmem_via_rep_mov': ([], 239127), 'expand_movmem_epilogue': ([], 239127), 'ix86_expand_movmem': ([20], 239122), 'promote_duplicated_reg': ([], 239127), 'expand_constant_setmem_prologue': ([], 239127), 'expand_setmem_via_rep_stos': ([], 239127), 'expand_setmem_epilogue': ([], 239127), 'ix86_expand_setmem': ([], 239127), 'ix86_expand_strlensi_unroll_1': ([], 239127), 'ix86_expand_strlen': ([], 239127), 'ix86_expand_call': ([], 239127), 'satisfies_constraint_K': ([], 239127), 'memory_address_length': ([2], 239111), 'ix86_attr_length_immediate_default': ([], 239127), 'ix86_attr_length_address_default': ([7], 239123), 'ix86_constant_alignment': ([], 239127), 'ix86_data_alignment': ([], 239127), 'ix86_local_alignment': ([], 239127), 'ix86_minimum_alignment': ([], 239127), 'avx_vpermilp_parallel': ([], 239127), 'avx_vperm2f128_parallel': ([], 239127), 'ix86_force_to_memory': ([], 239127), 'ix86_preferred_reload_class': ([], 239127), 'inline_memory_move_cost': ([], 239127), 'ix86_register_move_cost': ([], 239127), 'ix86_hard_regno_mode_ok': ([], 239127), 'x86_order_regs_for_local_alloc': ([0], 239125), 'x86_field_alignment': ([], 239127), 'x86_extended_QIreg_mentioned_p': ([], 239127), 'extended_reg_mentioned_1': ([], 239127), 'x86_extended_reg_mentioned_p': ([], 239127), 'x86_emit_floatuns': ([], 239127), 'output_387_reg_move': ([0], 239124), 'ix86_emit_i387_log1p': ([], 239127), 'ix86_emit_swsqrtsf': ([], 239127), 'ix86_expand_lround': ([], 239127), 'ix86_expand_rint': ([], 239127), 'ix86_expand_floorceildf_32': ([], 239127), 'ix86_expand_floorceil': ([], 239127), 'ix86_expand_rounddf_32': ([], 239127), 'ix86_expand_trunc': ([], 239127), 'ix86_expand_truncdf_32': ([], 239127), 'ix86_expand_round': ([], 239127), 'ix86_expand_vec_extract_even_odd': ([], 239127), 'gt_ggc_mx_stack_local_entry': ([], 239127), 'gt_pch_nx_stack_local_entry': ([], 239127)}, "PosixPath('602/integrate.bc')": {'get_hard_reg_initial_val': ([], 2547), 'function_attribute_inlinable_p': ([], 2547), 'set_decl_origin_self': ([], 2547), 'set_block_origin_self': ([], 2547), 'set_decl_abstract_flags': ([], 2547), 'set_block_abstract_flags': ([], 2547), 'get_hard_reg_initial_reg': ([], 2547), 'has_hard_reg_initial_val': ([], 2547), 'emit_initial_value_sets': ([], 2547), 'allocate_initial_values': ([0], 2542), 'gt_ggc_mx_initial_value_struct': ([6], 2544), 'gt_pch_p_20initial_value_struct': ([3], 2541), 'gt_pch_nx_initial_value_struct': ([6], 2544)}, "PosixPath('602/tree-ssa-forwprop.bc')": {'bb_seq': ([], 10812), 'gsi_start_bb': ([], 10812), 'gsi_stmt': ([], 10812), 'gimple_ops': ([], 10812), 'gsi_next': ([], 10812), 'has_single_use': ([], 10812), 'end_imm_use_stmt_p': ([], 10812), 'clear_and_done_ssa_iter': ([], 10812), 'op_iter_next_use': ([], 10812), 'op_iter_init_phiuse': ([], 10812), 'delink_imm_use': ([], 10812), 'link_imm_use_to_list': ([], 10812), 'move_use_after_head': ([], 10812), 'gimple_def_ops': ([], 10812), 'gimple_vdef': ([], 10812), 'gimple_use_ops': ([], 10812), 'gimple_vuse': ([], 10812), 'op_iter_init': ([], 10812), 'op_iter_init_use': ([], 10812), 'gimple_vuse_op': ([], 10812), 'link_use_stmts_after': ([], 10812), 'first_imm_use_stmt': ([], 10812), 'gimple_set_op': ([], 10812), 'forward_propagate_addr_into_variable_array_index': ([], 10812), 'has_zero_uses': ([], 10812), 'next_imm_use_stmt': ([], 10812), 'forward_propagate_addr_expr': ([152, 165], 10788), 'simplify_not_neg_expr': ([], 10812), 'can_propagate_from': ([2], 10811), 'forward_propagate_into_cond': ([], 10812), 'single_imm_use': ([], 10812), 'get_prop_dest_stmt': ([], 10812), 'forward_propagate_comparison': ([], 10812), 'simplify_bitwise_and': ([], 10812), 'gimple_switch_set_index': ([], 10812), 'simplify_gimple_switch': ([], 10812), 'forward_propagate_into_gimple_cond': ([], 10812), 'tree_ssa_forward_propagate_single_use_vars': ([], 10812)}, "PosixPath('602/statistics.bc')": {'lookup_or_add_counter': ([], 2518), 'hash_statistics_eq': ([], 2518), 'curr_statistics_hash': ([3], 2513), 'statistics_fini_pass_3': ([], 2518), 'statistics_fini_pass_2': ([], 2518), 'statistics_fini_pass_1': ([], 2518), 'statistics_fini_pass': ([], 2518), 'statistics_fini_1': ([], 2518), 'statistics_fini': ([], 2518), 'statistics_counter_event': ([], 2518), 'statistics_histogram_event': ([], 2518)}, "PosixPath('602/host-ieee128.bc')": {'__host_to_ieee_128': ([], 80), '__ieee_to_host_128': ([], 80)}, "PosixPath('602/host-ieee32.bc')": {}, "PosixPath('602/xexit.bc')": {}, "PosixPath('602/cpp_pch.bc')": {'cpp_save_state': ([], 5556), 'save_idents': ([], 5556), 'write_macdef': ([], 5556), 'write_defs': ([0], 5553), 'cpp_valid_state': ([], 5556), 'collect_ht_nodes': ([0], 5553), 'save_macros': ([5], 5543), '_cpp_restore_pushed_macros': ([], 5556), 'cpp_string_eq': ([], 5556), 'hashmem': ([], 5556), 'cpp_string_hash': ([], 5556), 'count_defs': ([], 5556), 'cpp_write_pch_deps': ([], 5556), '_cpp_save_pushed_macros': ([2, 30], 5549), 'cpp_write_pch_state': ([], 5556), 'cpp_prepare_state': ([], 5556), 'cpp_read_state': ([], 5556)}, "PosixPath('602/c-ppoutput.bc')": {'print_line': ([], 3972), 'maybe_print_line': ([], 3972), 'account_for_newlines': ([], 3972), 'scan_translation_unit_trad': ([], 3972), 'scan_translation_unit_directives_only': ([], 3972), 'dump_queued_macros': ([], 3972), 'do_line_change': ([], 3972), 'scan_translation_unit': ([], 3972), 'dump_macro': ([], 3972), 'preprocess_file': ([], 3972), 'cb_used_undef': ([], 3972), 'cb_used_define': ([], 3972), 'cb_define': ([], 3972), 'cb_include': ([], 3972), 'init_pp_output': ([], 3972), 'pp_dir_change': ([], 3972), 'pp_file_change': ([16], 3971)}, "PosixPath('602/builtins.bc')": {'expand_builtin_setjmp_setup': ([], 68549), 'gimplify_va_arg_expr': ([], 68549), 'fold_builtin_object_size': ([], 68549), 'is_builtin_fn': ([], 68549), 'get_object_alignment': ([19], 68546), 'get_pointer_alignment': ([], 68549), 'c_strlen': ([0], 68536), 'expand_builtin_setjmp_receiver': ([], 68549), 'c_readstr': ([], 68549), 'builtin_memset_read_str': ([], 68549), 'std_canonical_va_list_type': ([], 68549), 'build_va_arg_indirect_ref': ([], 68549), 'std_gimplify_va_arg_expr': ([], 68549), 'avoid_folding_inline_builtin': ([], 68549), 'fold_builtin_inf': ([], 68549), 'type_to_class': ([], 68549), 'fold_builtin_classify_type': ([], 68549), 'fold_builtin_0': ([], 68549), 'fold_builtin_constant_p': ([], 68549), 'c_getstr': ([], 68549), 'fold_builtin_nan': ([], 68549), 'init_const_call_expr_arg_iterator': ([], 68549), 'more_const_call_expr_args_p': ([], 68549), 'next_const_call_expr_arg': ([], 68549), 'builtin_mathfn_code': ([], 68549), 'integer_valued_real_p': ([], 68549), 'fold_builtin_bswap': ([], 68549), 'fold_builtin_bitop': ([], 68549), 'fold_builtin_signbit': ([], 68549), 'fold_builtin_significand': ([], 68549), 'fold_builtin_logb': ([], 68549), 'interclass_mathfn_icode': ([], 68549), 'build_string_literal': ([], 68549), 'fold_builtin_load_exponent': ([], 68549), 'fold_builtin_frexp': ([], 68549), 'fold_builtin_modf': ([], 68549), 'var_decl_component_p': ([], 68549), 'fold_builtin_memset': ([4], 68542), 'fold_builtin_strchr': ([], 68549), 'fold_builtin_powi': ([], 68549), 'fold_builtin_unordered_cmp': ([], 68549), 'readonly_data_expr': ([], 68549), 'fold_builtin_strncmp': ([], 68549), 'fold_builtin_memchr': ([], 68549), 'rewrite_call_expr': ([6], 68547), 'fold_builtin_sprintf_chk': ([], 68549), 'fold_builtin_snprintf_chk': ([], 68549), 'validate_arglist': ([2], 68526), 'fold_builtin_fpclassify': ([], 68549), 'fold_builtin_varargs': ([], 68549), 'build_builtin_expect_predicate': ([], 68549), 'build_call_expr_loc': ([5], 68548), 'fold_builtin_call_array': ([], 68549), 'fold_builtin_n': ([239, 350, 361], 68539), 'fold_builtin_memory_op': ([37], 68546), 'fold_builtin_fprintf': ([], 68549), 'fold_builtin_printf': ([], 68549), 'fold_builtin_interclass_mathfn': ([23], 68543), 'fold_builtin_classify': ([7, 84, 221], 68317), 'fold_fixed_mathfn': ([], 68549), 'init_call_expr_arg_iterator': ([], 68549), 'next_call_expr_arg': ([], 68549), 'first_call_expr_arg': ([], 68549), 'expand_builtin': ([14, 19], 68537), 'fold_call_expr': ([], 68549), 'build_function_call_expr': ([], 68549), 'gimple_ops': ([], 68549), 'gimple_op': ([], 68549), 'validate_gimple_arglist': ([], 68549), 'fold_builtin_next_arg': ([], 68549), 'gimple_rewrite_call_expr': ([5], 68548), 'gimple_call_fndecl': ([], 68549), 'fold_call_stmt': ([11, 14], 68541), 'set_builtin_user_assembler_name': ([0], 68544)}, "PosixPath('602/insn-preds.bc')": {'any_fp_register_operand': ([], 11630), 'fp_register_operand': ([], 11630), 'register_and_not_any_fp_reg_operand': ([], 11630), 'register_and_not_fp_reg_operand': ([], 11630), 'mmx_reg_operand': ([], 11630), 'q_regs_operand_1': ([], 11630), 'q_regs_operand': ([], 11630), 'ext_register_operand_1': ([], 11630), 'ext_register_operand': ([], 11630), 'ax_reg_operand': ([], 11630), 'flags_reg_operand': ([], 11630), 'reg_not_xmm0_operand': ([], 11630), 'nonimm_not_xmm0_operand': ([], 11630), 'x86_64_zext_immediate_operand_1': ([], 11630), 'x86_64_zext_immediate_operand': ([], 11630), 'symbolic_operand_1': ([], 11630), 'symbolic_operand': ([0], 11626), 'pic_symbolic_operand_1': ([], 11630), 'pic_symbolic_operand': ([], 11630), 'local_symbolic_operand_1': ([], 11630), 'local_symbolic_operand': ([], 11630), 'tls_symbolic_operand': ([], 11630), 'tp_or_register_operand': ([], 11630), 'register_no_elim_operand_1': ([], 11630), 'register_no_elim_operand': ([], 11630), 'call_register_no_elim_operand_1': ([], 11630), 'call_register_no_elim_operand': ([], 11630), 'index_register_operand_1': ([], 11630), 'index_register_operand': ([], 11630), 'const8_operand': ([], 11630), 'const128_operand': ([], 11630), 'const248_operand': ([], 11630), 'const_0_to_3_operand': ([], 11630), 'const_0_to_7_operand': ([], 11630), 'const_0_to_15_operand': ([], 11630), 'const_0_to_31_operand': ([], 11630), 'const_0_to_63_operand': ([], 11630), 'const_0_to_255_operand': ([], 11630), 'const_0_to_255_mul_8_operand': ([], 11630), 'const_1_to_31_operand': ([], 11630), 'const_1_to_63_operand': ([], 11630), 'const_2_to_3_operand': ([], 11630), 'const_4_to_5_operand': ([], 11630), 'const_4_to_7_operand': ([], 11630), 'const_6_to_7_operand': ([], 11630), 'const_8_to_11_operand': ([], 11630), 'const_12_to_15_operand': ([], 11630), 'const_pow2_1_to_2_operand': ([], 11630), 'const_pow2_1_to_8_operand': ([], 11630), 'const_pow2_1_to_128_operand': ([], 11630), 'const_pow2_1_to_32768_operand': ([], 11630), 'zero_extended_scalar_load_operand_1': ([], 11630), 'zero_extended_scalar_load_operand': ([], 11630), 'vector_all_ones_operand_1': ([], 11630), 'vector_all_ones_operand': ([], 11630), 'aligned_operand_1': ([], 11630), 'aligned_operand': ([], 11630), 'memory_displacement_operand_1': ([], 11630), 'memory_displacement_operand': ([], 11630), 'memory_displacement_only_operand_1': ([], 11630), 'memory_displacement_only_operand': ([], 11630), 'cmpxchg8b_pic_memory_operand_1': ([], 11630), 'cmpxchg8b_pic_memory_operand': ([], 11630), 'fcmov_comparison_operator_1': ([], 11630), 'fcmov_comparison_operator': ([], 11630), 'ix86_comparison_operator_1': ([], 11630), 'ix86_comparison_operator': ([], 11630), 'ix86_carry_flag_operator_1': ([], 11630), 'ix86_carry_flag_operator': ([], 11630), 'misaligned_operand': ([], 11630), 'emms_operation_1': ([], 11630), 'emms_operation': ([], 11630), 'vzeroall_operation_1': ([], 11630), 'vzeroall_operation': ([], 11630), 'vzeroupper_operation_1': ([], 11630), 'vzeroupper_operation': ([], 11630), 'avx_vbroadcast_operand_1': ([], 11630), 'avx_vbroadcast_operand': ([], 11630), 'satisfies_constraint_I': ([], 11630), 'satisfies_constraint_J': ([], 11630), 'satisfies_constraint_K': ([], 11630), 'satisfies_constraint_L': ([], 11630), 'satisfies_constraint_M': ([], 11630), 'satisfies_constraint_N': ([], 11630), 'satisfies_constraint_O': ([], 11630), 'constraint_satisfied_p': ([], 11630)}, "PosixPath('602/c-dump.bc')": {'dump_stmt': ([], 203), 'c_dump_tree': ([], 203)}, "PosixPath('602/rtl.bc')": {'rtx_equal_p_cb': ([], 8312), 'rtx_size': ([], 8312), 'rtx_alloc_stat': ([], 8312), 'shared_const_p': ([], 8312), 'copy_rtx': ([3], 8309), 'rtx_equal_p': ([], 8312)}, "PosixPath('602/loop-iv.bc')": {'iv_neg': ([], 21087), 'iv_analyze_biv': ([28, 49], 21077), 'iv_subreg': ([], 21087), 'iv_number_of_iterations': ([], 21087), 'dump_iv_info': ([0], 21085), 'check_iv_ref_table_size': ([], 21087), 'clear_iv_info': ([], 21087), 'iv_analysis_loop_init': ([], 21087), 'get_iv_value': ([], 21087), 'simple_reg_p': ([0], 21085), 'iv_get_reaching_def': ([0], 21083), 'iv_constant': ([], 21087), 'df_rd_get_bb_info': ([], 21087), 'latch_dominating_def': ([], 21087), 'get_biv_step_1': ([], 21087), 'get_biv_step': ([], 21087), 'record_biv': ([], 21087), 'iv_extend': ([], 21087), 'iv_add': ([], 21087), 'iv_mult': ([], 21087), 'iv_shift': ([], 21087), 'iv_analyze_expr': ([6, 11, 16], 20991), 'iv_analyze_op': ([], 21087), 'iv_analyze_def': ([8], 21085), 'iv_analyze': ([], 21087), 'biv_p': ([], 21087), 'iv_analysis_done': ([], 21087), 'canon_condition': ([], 21087), 'implies_p': ([14], 21082), 'altered_reg_used': ([], 21087), 'simplify_using_condition': ([], 21087), 'shorten_into_mode': ([], 21087), 'canonicalize_iv_subregs': ([127], 21079), 'simple_rhs_p': ([], 21087), 'suitable_set_for_replacement': ([], 21087), 'replace_single_def_regs': ([], 21087), 'single_pred_p': ([], 21087), 'single_pred_edge': ([], 21087), 'mark_altered': ([0], 21082), 'simplify_using_initial_values': ([116], 21079), 'determine_max_iter': ([], 21087), 'check_simple_exit': ([], 21087), 'ei_next': ([], 21087), 'find_simple_exit': ([], 21087), 'get_simple_loop_desc': ([25], 21083)}, "PosixPath('602/xcoffout.bc')": {}, "PosixPath('602/graphite-scop-detection.bc')": {}, "PosixPath('602/tree-ssa-phiopt.bc')": {'gsi_start': ([], 9401), 'single_pred_p': ([], 9401), 'single_pred_edge': ([], 9401), 'single_pred': ([], 9401), 'blocks_in_phiopt_order': ([], 9401), 'bb_seq': ([], 9401), 'gsi_start_bb': ([], 9401), 'gsi_stmt': ([], 9401), 'gsi_next': ([], 9401), 'gsi_after_labels': ([], 9401), 'gsi_next_nondebug': ([], 9401), 'empty_block_p': ([], 9401), 'gimple_ops': ([], 9401), 'add_or_mark_expr': ([], 9401), 'nt_init_block': ([], 9401), 'name_to_bb_eq': ([], 9401), 'get_non_trapping': ([], 9401), 'single_succ_p': ([], 9401), 'get_var_ann': ([], 9401), 'gimple_set_op': ([], 9401), 'gimple_assign_set_lhs': ([], 9401), 'gsi_last_bb': ([], 9401), 'cond_store_replacement': ([], 9401), 'phi_nodes': ([], 9401), 'gimple_seq_singleton_p': ([], 9401), 'delink_imm_use': ([], 9401), 'link_imm_use_to_list': ([], 9401), 'link_imm_use': ([], 9401), 'set_ssa_use_from_ptr': ([], 9401), 'replace_phi_edge_with_variable': ([15], 9397), 'conditional_replacement': ([], 9401), 'single_succ_edge': ([], 9401), 'value_replacement': ([], 9401), 'abs_replacement': ([], 9401), 'gsi_prev': ([], 9401), 'gsi_prev_nondebug': ([], 9401), 'gsi_last_nondebug_bb': ([], 9401), 'minmax_replacement': ([], 9401), 'tree_ssa_phiopt_worker': ([77], 9395)}, "PosixPath('602/omp-low.bc')": {'expand_omp_sections': ([], 56006), 'extract_omp_for_data': ([40, 163], 55999), 'gsi_start': ([1], 56004), 'scan_omp_task': ([], 56006), 'new_omp_context': ([], 56006), 'create_omp_child_function': ([0], 56005), 'create_task_copyfn': ([0], 55921), 'lower_rec_input_clauses': ([], 56006), 'lower_omp_single_copy': ([], 56006), 'find_omp_clause': ([], 56006), 'copy_var_decl': ([0], 56000), 'dump_omp_region': ([], 56006), 'new_omp_region': ([], 56006), 'omp_reduction_init': ([], 56006), 'bb_seq': ([], 56006), 'gsi_last_bb': ([], 56006), 'gsi_stmt': ([], 56006), 'build_omp_regions_1': ([], 56006), 'gsi_prev': ([], 56006), 'gimple_omp_subcode': ([0], 56003), 'ei_next': ([], 56006), 'remove_exit_barrier': ([], 56006), 'remove_exit_barriers': ([], 56006), 'single_succ_p': ([], 56006), 'single_succ_edge': ([], 56006), 'gimple_omp_for_index': ([], 56006), 'gimple_omp_for_initial': ([], 56006), 'gimple_omp_for_cond': ([], 56006), 'gimple_omp_for_final': ([], 56006), 'gimple_omp_for_incr': ([], 56006), 'workshare_safe_to_combine_p': ([], 56006), 'get_ws_args_for': ([], 56006), 'determine_parallel_type': ([], 56006), 'gsi_start_bb': ([], 56006), 'gimple_ops': ([], 56006), 'gsi_next': ([], 56006), 'gimple_set_op': ([], 56006), 'list2chain': ([], 56006), 'gimple_call_fndecl': ([], 56006), 'optimize_omp_library_calls': ([], 56006), 'gimple_build_cond_empty': ([], 56006), 'expand_parallel_call': ([], 56006), 'expand_task_call': ([], 56006), 'expand_omp_taskreg': ([], 56006), 'expand_omp_for_static_nochunk': ([], 56006), 'single_pred_p': ([], 56006), 'single_pred_edge': ([], 56006), 'expand_omp_for_static_chunk': ([], 56006), 'phi_nodes': ([], 56006), 'delink_imm_use': ([], 56006), 'link_imm_use_to_list': ([], 56006), 'link_imm_use': ([], 56006), 'set_ssa_use_from_ptr': ([], 56006), 'expand_omp_for_generic': ([40, 76, 174, 310], 55909), 'expand_omp_for': ([7, 96, 111, 119, 134, 385], 55917), 'VEC_tree_base_quick_push': ([], 56006), 'expand_omp_single': ([], 56006), 'expand_omp_synch': ([], 56006), 'gsi_after_labels': ([], 56006), 'expand_omp_atomic_fetch_op': ([], 56006), 'gimple_seq_first_stmt': ([], 56006), 'expand_omp_atomic_pipeline': ([], 56006), 'expand_omp_atomic_mutex': ([], 56006), 'expand_omp_atomic': ([], 56006), 'expand_omp': ([], 56006), 'diagnose_sb_2': ([], 56006), 'diagnose_sb_1': ([], 56006), 'diagnose_omp_structured_block_errors': ([], 56006), 'scan_omp_1_op': ([0], 56004), 'check_omp_nesting_restrictions': ([], 56006), 'is_global_var': ([], 56006), 'omp_copy_decl': ([], 56006), 'create_omp_child_function_name': ([], 56006), 'omp_copy_decl_2': ([], 56006), 'omp_copy_decl_1': ([], 56006), 'install_var_local': ([], 56006), 'use_pointer_for_field': ([], 56006), 'install_var_field': ([], 56006), 'scan_omp_op': ([], 56006), 'fixup_remapped_decl': ([4], 56000), 'fixup_child_record_type': ([], 56006), 'gimple_omp_for_index_ptr': ([], 56006), 'gimple_omp_for_initial_ptr': ([], 56006), 'gimple_omp_for_final_ptr': ([], 56006), 'gimple_omp_for_incr_ptr': ([], 56006), 'scan_omp': ([], 56006), 'scan_sharing_clauses': ([50], 56003), 'scan_omp_parallel': ([], 56006), 'scan_omp_for': ([], 56006), 'scan_omp_single': ([], 56006), 'scan_omp_1_stmt': ([], 56006), 'task_copyfn_remap_type': ([], 56006), 'task_copyfn_copy_decl': ([], 56006), 'build_receiver_ref': ([], 56006), 'build_outer_var_ref': ([], 56006), 'lookup_decl_in_outer_ctx': ([], 56006), 'lookup_sfield': ([], 56006), 'build_sender_ref': ([], 56006), 'lower_send_clauses': ([], 56006), 'lower_send_shared_vars': ([], 56006), 'check_combined_parallel': ([], 56006), 'lower_copyprivate_clauses': ([], 56006), 'lower_omp_regimplify_p': ([], 56006), 'lower_lastprivate_clauses': ([], 56006), 'lower_reduction_clauses': ([], 56006), 'lower_omp_critical': ([], 56006), 'lower_omp': ([3, 235], 55949), 'finalize_task_copyfn': ([], 56006), 'delete_omp_context': ([], 56006), 'execute_lower_omp': ([], 56006), 'build_omp_regions': ([], 56006), 'execute_expand_omp': ([], 56006)}, "PosixPath('602/c-gimplify.bc')": {'c_genericize': ([], 807), 'VEC_gimple_base_iterate': ([], 807), 'add_block_to_enclosing': ([], 807), 'c_build_bind_expr': ([], 807), 'c_gimplify_expr': ([], 807)}, "PosixPath('602/tree.bc')": {'decl_value_expr_insert': ([], 72804), 'build_int_cst_wide': ([], 72804), 'build_int_cst_wide_type': ([], 72804), 'build_fn_decl': ([], 72804), 'build_type_attribute_qual_variant': ([], 72804), 'free_lang_data': ([], 72804), 'decl_debug_expr_insert': ([], 72804), 'build_index_type': ([], 72804), 'build_function_type': ([], 72804), 'tree_code_size': ([], 72804), 'make_node_stat': ([0], 72794), 'initialize_tree_contains_struct': ([], 72804), 'cl_option_hash_hash': ([], 72804), 'int_cst_hash_eq': ([], 72804), 'int_cst_hash_hash': ([], 72804), 'is_attribute_with_length_p': ([], 72804), 'lookup_attribute': ([], 72804), 'init_const_call_expr_arg_iterator': ([], 72804), 'next_const_call_expr_arg': ([], 72804), 'first_const_call_expr_arg': ([], 72804), 'simple_cst_equal': ([2, 4, 7, 8, 11], 72774), 'attribute_list_contained': ([], 72804), 'type_list_equal': ([], 72804), 'tree_int_cst_equal': ([], 72804), 'type_hash_eq': ([18, 21], 72771), 'init_ttree': ([], 72804), 'decl_assembler_name': ([0], 72802), 'decl_assembler_name_equal': ([], 72804), 'decl_assembler_name_hash': ([], 72804), 'tree_size': ([], 72804), 'decl_value_expr_lookup': ([], 72804), 'decl_init_priority_lookup': ([], 72804), 'decl_priority_info': ([], 72804), 'copy_node_stat': ([0, 11], 72771), 'make_tree_vec_stat': ([], 72804), 'build_int_cst_type': ([], 72804), 'build_low_bits_mask': ([0], 72801), 'cst_and_fits_in_hwi': ([], 72804), 'build_vector': ([], 72804), 'tree_cons_stat': ([], 72804), 'nreverse': ([], 72804), 'build_vector_from_ctor': ([], 72804), 'build_constructor': ([], 72804), 'build_constructor_single': ([], 72804), 'build_constructor_from_list': ([0], 72803), 'build_fixed': ([], 72804), 'build_real': ([], 72804), 'real_value_from_int_cst': ([], 72804), 'build_real_from_int_cst': ([], 72804), 'build_string': ([], 72804), 'type_hash_lookup': ([], 72804), 'type_hash_add': ([], 72804), 'build_decl_stat': ([], 72804), 'check_qualified_type': ([], 72804), 'get_qualified_type': ([], 72804), 'build_distinct_type_copy': ([], 72804), 'build_variant_type_copy': ([], 72804), 'set_type_quals': ([], 72804), 'build_qualified_type': ([], 72804), 'build_complex_type': ([], 72804), 'build_complex': ([], 72804), 'build_one_cst': ([4], 72800), 'VEC_tree_base_embedded_init': ([], 72804), 'make_tree_binfo_stat': ([], 72804), 'tree_nop_conversion': ([], 72804), 'integer_zerop': ([], 72804), 'integer_onep': ([], 72804), 'integer_all_onesp': ([], 72804), 'integer_pow2p': ([], 72804), 'integer_nonzerop': ([], 72804), 'fixed_zerop': ([], 72804), 'tree_log2': ([], 72804), 'tree_floor_log2': ([], 72804), 'real_zerop': ([], 72804), 'real_onep': ([], 72804), 'real_twop': ([], 72804), 'real_minus_onep': ([], 72804), 'really_constant_p': ([], 72804), 'value_member': ([], 72804), 'purpose_member': ([], 72804), 'fields_length': ([], 72804), 'first_field': ([], 72804), 'build_tree_list_stat': ([], 72804), 'VEC_tree_base_iterate': ([], 72804), 'build_tree_list_vec_stat': ([], 72804), 'ctor_to_list': ([], 72804), 'VEC_tree_base_quick_push': ([], 72804), 'ctor_to_vec': ([], 72804), 'int_size_in_bytes': ([], 72804), 'host_integerp': ([], 72804), 'max_int_size_in_bytes': ([], 72804), 'tree_expr_size': ([], 72804), 'bit_position': ([], 72804), 'byte_position': ([], 72804), 'expr_align': ([], 72804), 'array_type_nelts': ([], 72804), 'staticp': ([], 72804), 'get_containing_scope': ([], 72804), 'decl_function_context': ([], 72804), 'decl_address_invariant_p': ([0], 72798), 'decl_address_ip_invariant_p': ([0], 72796), 'skip_simple_arithmetic': ([0], 72798), 'tree_invariant_p_1': ([], 72804), 'contains_placeholder_p': ([2, 3], 72762), 'recompute_tree_invariant_for_addr_expr': ([4, 5, 26, 33, 48], 72697), 'build1_stat': ([], 72804), 'save_expr': ([], 72804), 'type_contains_placeholder_p': ([], 72804), 'VEC_tree_base_space': ([], 72804), 'VEC_tree_heap_reserve': ([], 72804), 'VEC_tree_heap_safe_push': ([2], 72802), 'push_without_duplicates': ([], 72804), 'tree_operand_length': ([], 72804), 'find_placeholder_in_expr': ([0], 72802), 'build4_stat': ([0], 72796), 'process_call_operands': ([], 72804), 'substitute_in_expr': ([0], 72801), 'substitute_placeholder_in_expr': ([], 72804), 'build_nt': ([], 72804), 'stabilize_reference_1': ([], 72804), 'stabilize_reference': ([], 72804), 'build2_stat': ([0], 72795), 'build3_stat': ([], 72804), 'build5_stat': ([0], 72795), 'build6_stat': ([0], 72784), 'build_vl_exp_stat': ([], 72804), 'build_nt_call_list': ([], 72804), 'build_nt_call_vec': ([], 72804), 'build_block': ([], 72804), 'expand_location': ([], 72804), 'type_hash_list': ([], 72804), 'build_type_attribute_variant': ([], 72804), 'need_assembler_name_p': ([], 72804), 'assign_assembler_name_if_neeeded': ([], 72804), 'remove_attribute': ([], 72804), 'merge_attributes': ([], 72804), 'decl_fini_priority_lookup': ([], 72804), 'decl_debug_expr_lookup': ([], 72804), 'type_num_arguments': ([], 72804), 'tree_int_cst_sgn': ([], 72804), 'tree_int_cst_lt': ([], 72804), 'tree_int_cst_msb': ([], 72804), 'compare_tree_int': ([], 72804), 'iterative_hash_expr': ([], 72804), 'build_pointer_type_for_mode': ([], 72804), 'build_reference_type_for_mode': ([], 72804), 'build_type_no_quals': ([0], 72796), 'build_range_type': ([], 72804), 'subrange_type_for_debug_p': ([], 72804), 'build_array_type': ([], 72804), 'strip_array_types': ([], 72804), 'maybe_canonicalize_argtypes': ([0], 72799), 'build_function_type_skip_args': ([], 72804), 'build_function_type_list_1': ([], 72804), 'build_method_type_directly': ([], 72804), 'build_method_type': ([], 72804), 'build_offset_type': ([], 72804), 'excess_precision_type': ([], 72804), 'int_fits_type_p': ([], 72804), 'get_unwidened': ([], 72804), 'get_narrower': ([4, 5], 72772), 'get_type_static_bounds': ([], 72804), 'auto_var_in_fn_p': ([], 72804), 'tsi_next': ([], 72804), 'walk_tree_1': ([8], 72767), 'walk_type_fields': ([], 72804), 'variably_modified_type_p': ([0, 4, 5], 72785), 'decl_type_context': ([], 72804), 'get_callee_fndecl': ([2], 72799), 'crc32_string': ([], 72804), 'clean_symbol_name': ([], 72804), 'get_file_function_name': ([], 72804), 'build_common_tree_nodes': ([], 72804), 'build_common_tree_nodes_2': ([], 72804), 'local_define_builtin': ([], 72804), 'build_common_builtin_nodes': ([], 72804), 'reconstruct_complex_type': ([0], 72796), 'make_vector_type': ([], 72804), 'build_vector_type_for_mode': ([1, 2], 72792), 'initializer_zerop': ([], 72804), 'build_omp_clause': ([], 72804), 'build_call_list': ([], 72804), 'build_call_valist': ([], 72804), 'build_call_array_loc': ([], 72804), 'build_call_vec': ([], 72804), 'range_in_array_bounds_p': ([], 72804), 'is_global_var': ([], 72804), 'needs_to_live_in_memory': ([0], 72801), 'find_compatible_field': ([], 72804), 'int_cst_value': ([], 72804), 'widest_int_cst_value': ([], 72804), 'signed_or_unsigned_type_for': ([0], 72799), 'upper_bound_in_type': ([], 72804), 'lower_bound_in_type': ([], 72804), 'num_ending_zeros': ([], 72804), 'create_artificial_label': ([], 72804), 'get_name': ([], 72804), 'function_args_iter_init': ([], 72804), 'function_args_iter_next': ([], 72804), 'stdarg_p': ([], 72804), 'block_nonartificial_location': ([], 72804), 'tree_nonartificial_location': ([], 72804), 'block_ultimate_origin': ([], 72804), 'list_equal_p': ([], 72804), 'tree_sign_nop_conversion': ([], 72804), 'tree_strip_sign_nop_conversions': ([], 72804), 'gt_ggc_m_P9type_hash4htab': ([], 72804), 'gt_pch_p_P9type_hash4htab': ([], 72804), 'gt_pch_n_P9type_hash4htab': ([], 72804), 'VEC_tree_base_pop': ([], 72804), 'find_decls_types_r': ([6], 72802), 'find_decls_types': ([], 72804), 'find_decls_types_in_eh_region': ([], 72804), 'ehr_next': ([], 72804), 'gsi_stmt': ([], 72804), 'gsi_next': ([], 72804), 'bb_seq': ([], 72804), 'gsi_start_bb': ([], 72804), 'gimple_ops': ([], 72804), 'gimple_op': ([], 72804), 'find_decls_types_in_node': ([], 72804), 'free_lang_data_in_block': ([], 72804), 'free_lang_data_in_decl': ([1], 72801), 'free_lang_data_in_binfo': ([], 72804), 'free_lang_data_in_type': ([], 72804), 'free_lang_data_in_cgraph': ([], 72804)}, "PosixPath('602/c-aux-info.bc')": {'deserves_ellipsis': ([], 3298), 'affix_data_type': ([], 3298), 'gen_decl': ([0], 3282), 'gen_type': ([7, 30], 3285), 'gen_formal_list_for_func_def': ([], 3298), 'gen_aux_info_record': ([], 3298)}, "PosixPath('602/ggc-common.bc')": {'VEC_const_ggc_root_tab_t_base_space': ([], 4949), 'VEC_const_ggc_root_tab_t_heap_reserve': ([], 4949), 'VEC_const_ggc_root_tab_t_base_quick_push': ([], 4949), 'VEC_const_ggc_root_tab_t_heap_safe_push': ([], 4949), 'ggc_register_root_tab': ([], 4949), 'VEC_const_ggc_cache_tab_t_base_space': ([], 4949), 'VEC_const_ggc_cache_tab_t_heap_reserve': ([], 4949), 'VEC_const_ggc_cache_tab_t_base_quick_push': ([], 4949), 'VEC_const_ggc_cache_tab_t_heap_safe_push': ([], 4949), 'ggc_register_cache_tab': ([], 4949), 'VEC_const_ggc_root_tab_t_base_iterate': ([], 4949), 'ggc_scan_cache_tab': ([], 4949), 'VEC_const_ggc_cache_tab_t_base_iterate': ([], 4949), 'ggc_mark_roots': ([], 4949), 'gt_pch_note_object': ([], 4949), 'write_pch_globals': ([], 4949), 'relocate_ptrs': ([], 4949), 'call_alloc': ([], 4949), 'call_count': ([], 4949), 'gt_pch_save': ([100], 4943), 'gt_pch_restore': ([], 4949)}, "PosixPath('602/ebitmap.bc')": {'ebitmap_set_bit': ([14], 6539), 'ebitmap_bit_p': ([], 6548), 'sbitmap_iter_init': ([], 6548), 'ebitmap_iter_init': ([], 6548), 'sbitmap_iter_next': ([], 6548), 'sbitmap_iter_cond': ([20], 6546), 'ebitmap_iter_cond': ([], 6548), 'ebitmap_iter_next': ([], 6548), 'ebitmap_last_set_bit': ([0], 6537), 'ebitmap_array_clear': ([], 6548), 'ebitmap_clear': ([], 6548), 'ebitmap_array_init': ([], 6548), 'ebitmap_alloc': ([], 6548), 'ebitmap_clear_bit': ([], 6548), 'ebitmap_array_grow': ([], 6548), 'ebitmap_array_grow_get': ([], 6548), 'ebitmap_array_get': ([], 6548), 'ebitmap_copy': ([], 6548), 'ebitmap_and_into': ([], 6548), 'ebitmap_and': ([], 6548), 'ebitmap_ior_into': ([23], 6546), 'ebitmap_ior': ([], 6548), 'ebitmap_and_compl_into': ([], 6548), 'ebitmap_and_compl': ([], 6548), 'ebitmap_ior_and_compl': ([], 6548), 'ebitmap_equal_p': ([17], 6540)}, "PosixPath('602/c-format.bc')": {'init_dynamic_diag_info': ([], 60655), 'check_format_info_main': ([0, 2, 107, 179, 496], 60492), 'get_constant': ([], 60655), 'check_format_string': ([], 60655), 'handle_format_arg_attribute': ([], 60655), 'cmp_attribs': ([], 60655), 'convert_format_name_to_system_name': ([], 60655), 'decode_format_type': ([], 60655), 'decode_format_attr': ([], 60655), 'init_dollar_format_checking': ([], 60655), 'finish_dollar_format_checking': ([], 60655), 'maybe_read_dollar_number': ([10], 60654), 'avoid_dollar_number': ([], 60655), 'get_flag_spec': ([], 60655), 'format_type_warning': ([], 60655), 'check_format_types': ([], 60655), 'check_format_arg': ([3, 4, 300], 60539), 'check_format_info': ([], 60655), 'check_function_format': ([], 60655), 'find_length_info_modifier_index': ([], 60655), 'init_dynamic_asm_fprintf_info': ([], 60655), 'find_char_info_specifier_index': ([], 60655), 'init_dynamic_gfc_info': ([], 60655), 'handle_format_attribute': ([2], 60636)}, "PosixPath('602/graphds.bc')": {'graphds_dfs': ([8], 3148), 'dump_graph': ([], 3178), 'add_edge': ([], 3178), 'identify_vertices': ([], 3178), 'bmp_iter_set_init': ([], 3178), 'bmp_iter_set': ([4], 3173), 'bmp_iter_next': ([], 3178), 'VEC_int_base_space': ([], 3178), 'VEC_int_heap_reserve': ([], 3178), 'VEC_int_base_quick_push': ([], 3178), 'VEC_int_heap_safe_push': ([], 3178), 'graphds_scc': ([], 3178), 'for_each_edge': ([], 3178), 'free_graph': ([], 3178), 'tree_nca': ([], 3178), 'graphds_domtree': ([33], 3176)}, "PosixPath('602/sched-rgn.bc')": {'extend_rgns': ([11, 126, 144], 26641), 'sd_iterator_cond': ([], 26658), 'sched_rgn_init': ([742], 26643), 'find_single_block_region': ([], 26658), 'schedule_region': ([], 26658), 'rgn_make_new_region_out_of_new_block': ([], 26658), 'haifa_find_rgns': ([624], 26652), 'compute_trg_info': ([0], 26629), 'sbitmap_iter_init': ([], 26658), 'debug_regions': ([], 26658), 'debug_region': ([], 26658), 'ei_next': ([], 26658), 'dump_region_dot': ([29], 26656), 'gather_region_statistics': ([], 26658), 'too_large': ([], 26658), 'print_region_statistics': ([], 26658), 'debug_candidate': ([], 26658), 'contributes_to_priority': ([], 26658), 'bmp_iter_set_init': ([], 26658), 'bmp_iter_set': ([], 26658), 'bmp_iter_next': ([], 26658), 'deps_join': ([], 26658), 'recog_memoized': ([], 26658), 'sd_iterator_start': ([], 26658), 'debug_dependencies': ([], 26658), 'debug_rgn_dependencies': ([], 26658), 'sched_is_disabled_for_current_region_p': ([], 26658), 'free_rgn_deps': ([78], 26656), 'compute_priorities': ([91], 26656), 'extend_regions': ([], 26658), 'single_pred_p': ([], 26658), 'single_pred_edge': ([], 26658), 'is_cfg_nonregular': ([42], 26657), 'single_succ_p': ([], 26658), 'single_succ_edge': ([], 26658), 'single_succ': ([], 26658), 'find_rgns': ([], 26658), 'rgn_setup_region': ([], 26658), 'sets_likely_spilled_1': ([], 26658), 'add_branch_dependences': ([], 26658), 'propagate_deps': ([], 26658), 'compute_block_dependences': ([115], 26657), 'sched_rgn_compute_dependencies': ([279, 284], 26655), 'compute_dom_prob_ps': ([], 26658), 'sched_rgn_local_init': ([63, 349, 353, 358], 26643), 'sched_rgn_local_free': ([], 26658), 'rgn_estimate_number_of_insns': ([], 26658), 'rgn_add_block': ([5], 26656), 'rgn_fix_recovery_cfg': ([], 26658), 'advance_target_bb': ([2], 26657), 'check_live_1': ([], 26658), 'check_live': ([], 26658), 'update_live_1': ([], 26658), 'update_live': ([], 26658), 'set_spec_fed': ([], 26658), 'begin_schedule_ready': ([], 26658), 'rgn_add_remove_insn': ([], 26658), 'rgn_insn_finishes_block_p': ([], 26658), 'rgn_print_insn': ([], 26658), 'rgn_rank': ([], 26658), 'is_pfree': ([], 26658), 'find_conditional_protection': ([113], 26656), 'is_conditionally_protected': ([], 26658), 'is_exception_free': ([], 26658), 'new_ready': ([], 26658), 'can_schedule_ready_p': ([], 26658), 'sbitmap_iter_cond': ([], 26658), 'sbitmap_iter_next': ([], 26658), 'extract_edgelst': ([5], 26614), 'split_edges': ([], 26658), 'init_ready_list': ([], 26658), 'free_trg_info': ([], 26658), 'free_block_dependencies': ([], 26658), 'schedule_insns': ([], 26658)}, "PosixPath('602/loop-unroll.bc')": {'peel_loops_completely': ([], 14689), 'decide_unrolling_and_peeling': ([26], 14666), 'unroll_loop_constant_iterations': ([], 14689), 'number_of_loops': ([], 14689), 'VEC_int_base_quick_push': ([], 14689), 'loop_outer': ([], 14689), 'VEC_int_base_iterate': ([], 14689), 'get_loop': ([], 14689), 'fel_next': ([5], 14686), 'fel_init': ([0], 14653), 'decide_peel_once_rolling': ([], 14689), 'decide_peel_completely': ([], 14689), 'analyze_iv_to_split_insn': ([], 14689), 'referenced_in_one_insn_in_loop_p': ([], 14689), 'reset_debug_uses_in_loop': ([], 14689), 'analyze_insn_to_expand_var': ([], 14689), 'analyze_insns_in_loop': ([122], 14661), 'opt_info_start_duplication': ([], 14689), 'get_ivts_expr': ([], 14689), 'allocate_basic_variable': ([], 14689), 'insert_base_initialization': ([], 14689), 'split_iv': ([], 14689), 'get_expansion': ([], 14689), 'VEC_rtx_base_space': ([], 14689), 'VEC_rtx_heap_reserve': ([], 14689), 'VEC_rtx_base_quick_push': ([], 14689), 'VEC_rtx_heap_safe_push': ([], 14689), 'expand_var_during_unrolling': ([], 14689), 'VEC_rtx_base_iterate': ([], 14689), 'insert_var_expansion_initialization': ([], 14689), 'combine_var_copies_in_loop_exit': ([], 14689), 'apply_opt_in_copies': ([], 14689), 'free_opt_info': ([], 14689), 'VEC_edge_base_iterate': ([], 14689), 'peel_loop_completely': ([], 14689), 'loop_exit_at_end_p': ([], 14689), 'decide_unroll_constant_iterations': ([], 14689), 'decide_unroll_runtime_iterations': ([], 14689), 'decide_unroll_stupid': ([], 14689), 'decide_peel_simple': ([], 14689), 'peel_loop_simple': ([], 14689), 'SET_BIT': ([], 14689), 'VEC_basic_block_base_iterate': ([], 14689), 'VEC_basic_block_base_space': ([], 14689), 'VEC_basic_block_heap_reserve': ([], 14689), 'VEC_basic_block_base_quick_push': ([], 14689), 'VEC_basic_block_heap_safe_push': ([], 14689), 'single_pred_p': ([], 14689), 'single_pred_edge': ([], 14689), 'single_succ_p': ([], 14689), 'single_succ_edge': ([], 14689), 'unroll_loop_runtime_iterations': ([], 14689), 'unroll_loop_stupid': ([], 14689), 'unroll_and_peel_loops': ([], 14689)}, "PosixPath('602/cfgloopmanip.bc')": {'duplicate_loop_to_header_edge': ([9, 35, 100, 101, 102, 103, 122], 13624), 'set_zero_probability': ([43], 13696), 'single_pred_p': ([], 13698), 'single_pred_edge': ([], 13698), 'loop_outer': ([], 13698), 'single_succ_p': ([], 13698), 'single_succ_edge': ([], 13698), 'VEC_edge_base_iterate': ([], 13698), 'fix_loop_placement': ([], 13698), 'ei_next': ([], 13698), 'fix_bb_placement': ([], 13698), 'fix_bb_placements': ([82], 13694), 'unloop': ([], 13698), 'find_path': ([], 13698), 'VEC_basic_block_base_space': ([], 13698), 'VEC_basic_block_heap_reserve': ([], 13698), 'VEC_basic_block_base_quick_push': ([], 13698), 'VEC_basic_block_heap_safe_push': ([2], 13696), 'loops_state_satisfies_p': ([], 13698), 'remove_path': ([20, 30, 34], 13642), 'number_of_loops': ([], 13698), 'VEC_loop_p_base_space': ([], 13698), 'VEC_loop_p_gc_reserve': ([], 13698), 'VEC_loop_p_base_quick_push': ([], 13698), 'VEC_loop_p_gc_safe_push': ([], 13698), 'place_new_loop': ([], 13698), 'add_loop': ([12], 13696), 'bb_seq': ([], 13698), 'gsi_last_bb': ([], 13698), 'create_empty_if_region_on_edge': ([], 13698), 'update_dominators_in_loop': ([9], 13696), 'gimple_ops': ([], 13698), 'gimple_set_op': ([], 13698), 'gimple_cond_set_lhs': ([], 13698), 'create_empty_loop_on_edge': ([], 13698), 'loopify': ([], 13698), 'VEC_edge_base_space': ([], 13698), 'VEC_edge_heap_reserve': ([], 13698), 'VEC_edge_base_quick_push': ([], 13698), 'VEC_edge_heap_safe_push': ([2], 13696), 'bmp_iter_set_init': ([], 13698), 'bmp_iter_set': ([4], 13693), 'bmp_iter_next': ([], 13698), 'VEC_basic_block_base_iterate': ([], 13698), 'has_preds_from_loop': ([], 13698), 'create_preheader': ([22], 13696), 'VEC_int_base_quick_push': ([], 13698), 'VEC_int_base_iterate': ([], 13698), 'get_loop': ([], 13698), 'fel_next': ([5], 13695), 'fel_init': ([], 13698), 'loops_state_set': ([], 13698), 'create_preheaders': ([], 13698), 'force_single_succ_latches': ([], 13698), 'lv_adjust_loop_entry_edge': ([], 13698), 'loop_version': ([], 13698), 'loop_depth': ([], 13698), 'fix_loop_structure': ([10, 115, 120], 13692)}, "PosixPath('602/store-motion.bc')": {'remove_reachable_equiv_notes': ([], 8270), 'st_expr_entry': ([], 8270), 'extract_mentioned_regs': ([], 8270), 'store_ops_ok': ([], 8270), 'find_loads': ([0, 1], 8264), 'store_killed_in_pat': ([2], 8265), 'store_killed_in_insn': ([], 8270), 'find_moveable_store': ([], 8270), 'enumerate_store_motion_mems': ([], 8270), 'print_store_motion_mems': ([], 8270), 'pre_st_expr_hash': ([], 8270), 'compute_store_table': ([], 8270), 'ei_next': ([], 8270), 'replace_store_insn': ([1], 8253), 'build_store_vectors': ([], 8270), 'delete_store': ([], 8270), 'insert_insn_start_basic_block': ([], 8270), 'insert_store': ([], 8270), 'free_store_motion_mems': ([], 8270), 'free_store_memory': ([], 8270), 'one_store_motion_pass': ([1276], 8240), 'execute_rtl_store_motion': ([], 8270)}, "PosixPath('602/xstrerror.bc')": {}, "PosixPath('602/strsignal.bc')": {'init_signal_tables': ([], 1360), 'strsigno': ([], 1360)}, "PosixPath('602/dwarf2out.bc')": {'compute_barrier_args_size': ([], 145941), 'loc_list_from_tree': ([4, 7, 37, 235, 430], 145911), 'loc_descriptor': ([9], 145894), 'mem_loc_descriptor': ([5, 6, 139], 145819), 'address_of_int_loc_descriptor': ([], 145941), 'add_const_value_attribute': ([9], 145931), 'store_vcall_insn': ([], 145941), 'expand_builtin_init_dwarf_reg_sizes': ([], 145941), 'get_cfa_from_loc_descr': ([], 145941), 'lookup_cfa_1': ([], 145941), 'lookup_cfa': ([], 145941), 'cfa_equal_p': ([], 145941), 'new_cfi': ([], 145941), 'new_loc_descr': ([], 145941), 'build_cfa_loc': ([], 145941), 'size_of_loc_descr': ([], 145941), 'output_loc_operands_raw': ([], 145941), 'output_loc_sequence_raw': ([], 145941), 'output_cfa_loc_raw': ([], 145941), 'output_cfi_directive': ([], 145941), 'add_fde_cfi': ([], 145941), 'def_cfa_1': ([0, 4], 145924), 'dwarf2out_def_cfa': ([], 145941), 'loc_descr_plus_const': ([5], 145928), 'build_cfa_aligned_loc': ([], 145941), 'reg_save': ([], 145941), 'dwarf2out_reg_save_reg': ([], 145941), 'flush_queued_reg_saves': ([0], 145939), 'clobbers_queued_reg_save': ([], 145941), 'dwarf2out_args_size': ([], 145941), 'VEC_rtx_base_quick_push': ([], 145941), 'VEC_rtx_base_pop': ([], 145941), 'stack_adjust_offset': ([], 145941), 'VEC_rtx_base_space': ([], 145941), 'VEC_rtx_heap_reserve': ([], 145941), 'VEC_rtx_heap_safe_push': ([], 145941), 'compute_barrier_args_size_1': ([], 145941), 'dwarf2out_notice_stack_adjust': ([], 145941), 'dwarf2out_frame_debug_def_cfa': ([], 145941), 'dwarf2out_frame_debug_adjust_cfa': ([], 145941), 'dwarf2out_frame_debug_cfa_offset': ([], 145941), 'dwarf2out_frame_debug_cfa_register': ([], 145941), 'dwarf2out_frame_debug_cfa_restore': ([], 145941), 'reg_saved_in': ([], 145941), 'queue_reg_save': ([], 145941), 'dwarf2out_frame_debug_expr': ([1, 79, 97], 145922), 'dwarf2out_frame_debug': ([91], 145936), 'dwarf2out_begin_epilogue': ([0], 145932), 'lookup_filename': ([], 145941), 'maybe_emit_file': ([3], 145940), 'dwarf2out_do_cfi_startproc': ([], 145941), 'dwarf2out_begin_prologue': ([0, 2, 7], 145910), 'initial_return_save': ([], 145941), 'dwarf2out_frame_init': ([], 145941), 'output_loc_operands': ([], 145941), 'output_loc_sequence': ([], 145941), 'output_cfa_loc': ([], 145941), 'output_cfi': ([], 145941), 'VEC_dw_cfi_ref_base_space': ([], 145941), 'VEC_dw_cfi_ref_heap_reserve_exact': ([], 145941), 'VEC_dw_cfi_ref_heap_safe_grow': ([], 145941), 'VEC_dw_cfi_ref_heap_safe_grow_cleared': ([], 145941), 'output_cfis': ([52], 145916), 'output_fde': ([], 145941), 'output_call_frame_info': ([], 145941), 'dwarf2out_switch_text_section': ([13], 145938), 'AT_loc_list': ([], 145941), 'AT_int': ([], 145941), 'AT_unsigned': ([], 145941), 'AT_flag': ([], 145941), 'AT_ref': ([], 145941), 'AT_lbl': ([], 145941), 'AT_string': ([], 145941), 'AT_file': ([], 145941), 'print_die': ([], 145941), 'get_AT': ([], 145941), 'decl_ultimate_origin': ([7], 145938), 'class_or_namespace_scope_p': ([], 145941), 'local_scope_p': ([], 145941), 'add_child_die': ([0], 145939), 'new_die': ([], 145941), 'decl_class_context': ([], 145941), 'VEC_tree_base_space': ([], 145941), 'VEC_tree_gc_reserve': ([], 145941), 'VEC_tree_base_quick_push': ([], 145941), 'VEC_tree_gc_safe_push': ([2], 145939), 'member_declared_type': ([], 145941), 'find_AT_string': ([], 145941), 'VEC_dw_attr_node_base_space': ([], 145941), 'VEC_dw_attr_node_gc_reserve': ([], 145941), 'VEC_dw_attr_node_base_quick_push': ([], 145941), 'VEC_dw_attr_node_gc_safe_push': ([], 145941), 'add_dwarf_attr': ([], 145941), 'add_AT_string': ([], 145941), 'add_name_attribute': ([], 145941), 'add_AT_file': ([], 145941), 'add_AT_unsigned': ([], 145941), 'add_src_coords_attributes': ([], 145941), 'add_name_and_src_coords_attributes': ([], 145941), 'add_AT_die_ref': ([], 145941), 'field_type': ([], 145941), 'simple_type_size_in_bits': ([], 145941), 'add_bit_size_attribute': ([], 145941), 'simple_type_align_in_bits': ([], 145941), 'simple_decl_align_in_bits': ([], 145941), 'field_byte_offset': ([], 145941), 'add_bit_offset_attribute': ([], 145941), 'add_AT_int': ([], 145941), 'add_AT_loc': ([], 145941), 'add_data_member_location_attribute': ([], 145941), 'add_AT_flag': ([], 145941), 'equate_decl_number_to_die': ([], 145941), 'fortran_common': ([], 145941), 'add_loc_descr_to_each': ([], 145941), 'add_loc_list': ([], 145941), 'based_loc_descr': ([], 145941), 'const_ok_for_output_1': ([], 145941), 'const_ok_for_output': ([], 145941), 'VEC_rtx_gc_reserve': ([], 145941), 'VEC_rtx_gc_safe_push': ([], 145941), 'is_based_loc': ([], 145941), 'resolve_one_addr': ([], 145941), 'is_pseudo_reg': ([], 145941), 'reference_to_unused': ([1], 145934), 'rtl_for_decl_init': ([], 145941), 'rtl_for_decl_location': ([0], 145934), 'secname_for_decl': ([], 145941), 'one_reg_loc_descriptor': ([], 145941), 'add_loc_descr_op_piece': ([], 145941), 'multiple_reg_loc_descriptor': ([], 145941), 'reg_loc_descriptor': ([], 145941), 'insert_float': ([], 145941), 'new_loc_list': ([], 145941), 'gen_internal_sym': ([], 145941), 'dw_loc_list_1': ([5], 145938), 'tls_mem_loc_descriptor': ([], 145941), 'loc_descriptor_from_tree': ([], 145941), 'cst_pool_loc_descr': ([], 145941), 'single_element_loc_list_p': ([], 145941), 'add_AT_loc_list': ([], 145941), 'VEC_dw_attr_node_base_ordered_remove': ([], 145941), 'remove_AT': ([], 145941), 'VEC_pubname_entry_base_space': ([], 145941), 'VEC_pubname_entry_gc_reserve': ([], 145941), 'VEC_pubname_entry_base_quick_push': ([], 145941), 'VEC_pubname_entry_gc_safe_push': ([2], 145939), 'add_pubname_string': ([], 145941), 'decl_by_reference_p': ([], 145941), 'VEC_deferred_locations_base_space': ([], 145941), 'VEC_deferred_locations_gc_reserve': ([], 145941), 'VEC_deferred_locations_base_quick_push': ([], 145941), 'VEC_deferred_locations_gc_safe_push': ([], 145941), 'defer_location': ([], 145941), 'add_AT_vec': ([], 145941), 'add_AT_double': ([], 145941), 'native_encode_initializer': ([], 145941), 'tree_add_const_value_attribute': ([], 145941), 'tree_add_const_value_attribute_for_decl': ([], 145941), 'add_location_or_const_value_attribute': ([4], 145937), 'common_block_die_table_eq': ([], 145941), 'common_block_die_table_hash': ([], 145941), 'VEC_tree_base_pop': ([], 145941), 'remove_child_with_prev': ([], 145941), 'remove_child_TAG': ([], 145941), 'add_AT_lbl_id': ([], 145941), 'add_arange': ([], 145941), 'convert_cfa_to_fb_loc_list': ([], 145941), 'compute_frame_pointer_to_fb_displacement': ([], 145941), 'VEC_die_arg_entry_base_space': ([], 145941), 'VEC_die_arg_entry_gc_reserve': ([], 145941), 'VEC_die_arg_entry_base_quick_push': ([], 145941), 'VEC_die_arg_entry_gc_safe_push': ([], 145941), 'append_entry_to_tmpl_value_parm_die_table': ([], 145941), 'is_redundant_typedef': ([7], 145932), 'add_pubtype': ([0], 145938), 'base_type_die': ([0], 145937), 'dwarf2out_ignore_block': ([], 145941), 'add_ranges_num': ([0], 145929), 'add_AT_range_list': ([], 145941), 'add_high_low_attributes': ([], 145941), 'add_call_src_coords_attributes': ([], 145941), 'scope_die_for': ([2], 145936), 'type_tag': ([], 145941), 'descr_info_loc': ([], 145941), 'gen_enumeration_type_die': ([], 145941), 'VEC_tree_base_iterate': ([], 145941), 'splice_child_die': ([0], 145933), 'gen_decl_die': ([27], 145932), 'gen_type_die_with_usage': ([3, 56], 145935), 'declare_in_namespace': ([], 145941), 'setup_namespace_context': ([], 145941), 'gen_array_type_die': ([], 145941), 'get_context_die': ([], 145941), 'force_decl_die': ([], 145941), 'gen_subprogram_die': ([], 145941), 'decls_for_scope': ([], 145941), 'gen_block_die': ([], 145941), 'process_scope_var': ([0], 145939), 'dwarf2out_imported_module_or_decl_1': ([16], 145929), 'gen_typedef_die': ([], 145941), 'gen_formal_types_die': ([], 145941), 'gen_formal_parameter_die': ([], 145941), 'gen_generic_params_dies': ([5], 145939), 'generic_parameter_die': ([2], 145937), 'add_abstract_origin_attribute': ([], 145941), 'dwarf2out_decl': ([], 145941), 'gen_type_die_for_member': ([], 145941), 'gen_variable_die': ([], 145941), 'gen_field_die': ([], 145941), 'force_type_die': ([], 145941), 'modified_type_die': ([], 145941), 'add_bound_info': ([], 145941), 'add_type_attribute': ([0], 145936), 'gt_ggc_mx_die_struct': ([], 145941), 'gt_ggc_mx_VEC_dw_attr_node_gc': ([], 145941), 'gt_ggc_mx_dw_loc_list_struct': ([], 145941), 'gt_ggc_mx_dw_loc_descr_struct': ([], 145941), 'gt_ggc_mx_comdat_type_struct': ([], 145941), 'gt_ggc_mx_VEC_dcall_entry_gc': ([], 145941), 'gt_ggc_mx_var_loc_node': ([5], 145928), 'gt_ggc_mx_VEC_die_arg_entry_gc': ([], 145941), 'gt_ggc_mx_limbo_die_struct': ([], 145941), 'gt_ggc_mx_VEC_pubname_entry_gc': ([], 145941), 'gt_ggc_mx_VEC_deferred_locations_gc': ([], 145941), 'gt_ggc_mx_queued_reg_save': ([], 145941), 'gt_ggc_mx_dw_cfi_struct': ([], 145941), 'gt_ggc_mx_dw_fde_struct': ([], 145941), 'gt_ggc_m_P10vcall_insn4htab': ([], 145941), 'gt_ggc_m_P16var_loc_list_def4htab': ([], 145941), 'gt_ggc_m_P10die_struct4htab': ([], 145941), 'gt_ggc_m_P15dwarf_file_data4htab': ([], 145941), 'gt_ggc_m_P20indirect_string_node4htab': ([], 145941), 'gt_pch_p_19dw_loc_descr_struct': ([], 145941), 'gt_pch_p_19VEC_dw_attr_node_gc': ([], 145941), 'gt_pch_nx_die_struct': ([], 145941), 'gt_pch_nx_VEC_dw_attr_node_gc': ([], 145941), 'gt_pch_nx_dw_loc_list_struct': ([], 145941), 'gt_pch_nx_dw_loc_descr_struct': ([], 145941), 'gt_pch_nx_comdat_type_struct': ([], 145941), 'gt_pch_nx_VEC_dcall_entry_gc': ([], 145941), 'gt_pch_nx_var_loc_node': ([3], 145907), 'gt_pch_nx_VEC_die_arg_entry_gc': ([], 145941), 'gt_pch_nx_limbo_die_struct': ([], 145941), 'gt_pch_nx_VEC_pubname_entry_gc': ([], 145941), 'gt_pch_nx_VEC_deferred_locations_gc': ([], 145941), 'gt_pch_nx_queued_reg_save': ([], 145941), 'gt_pch_nx_dw_cfi_struct': ([], 145941), 'gt_pch_nx_dw_fde_struct': ([], 145941), 'gt_pch_p_P10vcall_insn4htab': ([], 145941), 'gt_pch_n_P10vcall_insn4htab': ([], 145941), 'gt_pch_p_P16var_loc_list_def4htab': ([], 145941), 'gt_pch_n_P16var_loc_list_def4htab': ([], 145941), 'gt_pch_p_P10die_struct4htab': ([], 145941), 'gt_pch_n_P10die_struct4htab': ([], 145941), 'gt_pch_p_P15dwarf_file_data4htab': ([], 145941), 'gt_pch_n_P15dwarf_file_data4htab': ([], 145941), 'gt_pch_p_P20indirect_string_node4htab': ([], 145941), 'gt_pch_n_P20indirect_string_node4htab': ([], 145941), 'gt_pch_na_fde_table': ([], 145941), 'gt_ggc_ma_fde_table': ([], 145941), 'gt_pch_na_abbrev_die_table': ([], 145941), 'gt_ggc_ma_abbrev_die_table': ([], 145941), 'gt_pch_na_arange_table': ([], 145941), 'gt_ggc_ma_arange_table': ([], 145941), 'lookup_vcall_insn': ([], 145941), 'VEC_vcall_entry_base_space': ([], 145941), 'VEC_vcall_entry_gc_reserve': ([], 145941), 'VEC_vcall_entry_base_quick_push': ([], 145941), 'VEC_vcall_entry_gc_safe_push': ([], 145941), 'dwarf2out_virtual_call': ([], 145941), 'dwarf2out_virtual_call_token': ([], 145941), 'VEC_dcall_entry_base_space': ([], 145941), 'VEC_dcall_entry_gc_reserve': ([], 145941), 'VEC_dcall_entry_base_quick_push': ([], 145941), 'VEC_dcall_entry_gc_safe_push': ([], 145941), 'dwarf2out_direct_call': ([], 145941), 'add_var_loc_to_decl': ([], 145941), 'dwarf2out_var_location': ([], 145941), 'dwarf2out_imported_module_or_decl': ([2], 145939), 'dwarf2out_global_decl': ([], 145941), 'gen_remaining_tmpl_value_param_die_attribute': ([], 145941), 'resolve_addr_in_expr': ([0], 145935), 'AT_loc': ([], 145941), 'resolve_addr': ([11], 145939), 'VEC_dw_attr_node_base_quick_insert': ([], 145941), 'move_linkage_attr': ([1], 145906), 'retry_incomplete_types': ([], 145941), 'verify_marks_clear': ([], 145941), 'premark_types_used_by_global_vars_helper': ([4], 145937), 'is_declaration_die': ([], 145941), 'prune_unused_types_walk': ([], 145941), 'prune_unused_types_walk_local_classes': ([], 145941), 'prune_unused_types_mark': ([], 145941), 'prune_unused_types_walk_attribs': ([], 145941), 'prune_unused_types_update_strings': ([], 145941), 'prune_unused_types_prune': ([40], 145925), 'prune_unmark_dies': ([], 145941), 'prune_indirect_string': ([], 145941), 'prune_unused_types': ([], 145941), 'gen_compile_unit_die': ([], 145941), 'assign_symbol_names': ([], 145941), 'AT_addr': ([], 145941), 'loc_checksum': ([], 145941), 'die_checksum': ([], 145941), 'unmark_all_dies': ([], 145941), 'compute_section_prefix': ([], 145941), 'same_dw_val_p': ([], 145941), 'same_die_p': ([], 145941), 'same_die_p_wrap': ([], 145941), 'check_duplicate_cu': ([], 145941), 'break_out_includes': ([], 145941), 'checksum_uleb128': ([], 145941), 'add_AT_data8': ([], 145941), 'collect_checksum_attributes': ([], 145941), 'loc_checksum_ordered': ([], 145941), 'die_checksum_ordered': ([], 145941), 'attr_checksum_ordered': ([], 145941), 'generate_type_signature': ([], 145941), 'clone_die': ([], 145941), 'clone_as_declaration': ([], 145941), 'copy_ancestor_tree': ([], 145941), 'copy_declaration_context': ([], 145941), 'move_all_children': ([], 145941), 'replace_child': ([], 145941), 'generate_skeleton_ancestor_tree': ([], 145941), 'generate_skeleton_bottom_up': ([], 145941), 'generate_skeleton': ([], 145941), 'remove_child_or_replace_with_skeleton': ([], 145941), 'break_out_comdat_types': ([], 145941), 'mark_dies': ([], 145941), 'copy_decls_walk': ([], 145941), 'unmark_dies': ([], 145941), 'add_sibling_attributes': ([7], 145939), 'add_AT_addr': ([], 145941), 'add_ranges_by_labels': ([0], 145912), 'output_loc_list': ([], 145941), 'output_location_lists': ([], 145941), 'add_AT_lineptr': ([], 145941), 'add_AT_macptr': ([], 145941), 'AT_ref_external': ([], 145941), 'gen_label_for_indirect_string': ([], 145941), 'AT_string_form': ([], 145941), 'value_format': ([], 145941), 'build_abbrev_table': ([], 145941), 'size_of_die': ([], 145941), 'calc_die_sizes': ([], 145941), 'output_die_symbol': ([], 145941), 'output_die': ([], 145941), 'output_comp_unit': ([], 145941), 'output_comdat_type_unit': ([], 145941), 'output_abbrev_section': ([], 145941), 'size_of_pubnames': ([], 145941), 'output_pubnames': ([], 145941), 'size_of_dcall_table': ([], 145941), 'output_dcall_table': ([], 145941), 'size_of_vcall_table': ([], 145941), 'output_vcall_table': ([], 145941), 'output_aranges': ([], 145941), 'output_ranges': ([], 145941), 'output_indirect_string': ([], 145941), 'dwarf2out_finish': ([96, 184], 145937)}, "PosixPath('602/c-pragma.bc')": {'maybe_apply_pending_pragma_weaks': ([], 11582), 'push_alignment': ([], 11582), 'apply_pragma_weak': ([], 11582), 'maybe_apply_pragma_weak': ([0], 11567), 'maybe_apply_renaming_pragma': ([], 11582), 'VEC_int_base_space': ([], 11582), 'VEC_int_heap_reserve': ([], 11582), 'VEC_int_base_quick_push': ([], 11582), 'VEC_int_heap_safe_push': ([], 11582), 'push_visibility': ([], 11582), 'VEC_int_base_last': ([], 11582), 'VEC_int_base_pop': ([], 11582), 'pop_visibility': ([], 11582), 'c_pp_lookup_pragma': ([], 11582), 'VEC_pragma_ns_name_base_space': ([], 11582), 'VEC_pragma_ns_name_heap_reserve': ([], 11582), 'VEC_pragma_ns_name_base_quick_push': ([], 11582), 'VEC_pragma_ns_name_heap_safe_push': ([], 11582), 'VEC_pragma_handler_base_space': ([], 11582), 'VEC_pragma_handler_heap_reserve': ([], 11582), 'VEC_pragma_handler_base_quick_push': ([], 11582), 'VEC_pragma_handler_heap_safe_push': ([], 11582), 'c_register_pragma_1': ([], 11582), 'handle_pragma_message': ([], 11582), 'handle_pragma_extern_prefix': ([], 11582), 'handle_pragma_redefine_extname': ([], 11582), 'handle_stdc_pragma': ([], 11582), 'handle_pragma_float_const_decimal64': ([], 11582), 'handle_pragma_reset_options': ([], 11582), 'handle_pragma_pop_options': ([], 11582), 'handle_pragma_optimize': ([], 11582), 'handle_pragma_target': ([], 11582), 'handle_pragma_diagnostic': ([], 11582), 'handle_pragma_visibility': ([], 11582), 'handle_pragma_weak': ([], 11582), 'pop_alignment': ([], 11582), 'handle_pragma_pack': ([], 11582), 'init_pragma': ([], 11582), 'gt_ggc_mx_opt_stack': ([], 11582), 'gt_ggc_mx_align_stack': ([], 11582), 'gt_pch_nx_opt_stack': ([], 11582), 'gt_pch_nx_align_stack': ([], 11582)}, "PosixPath('602/cfgloop.bc')": {'flow_loop_nodes_find': ([3, 39, 86], 14083), 'alloc_loop': ([], 14098), 'init_loops_structure': ([], 14098), 'rescan_loop_exit': ([], 14098), 'loop_exit_free': ([], 14098), 'record_loop_exits': ([23], 14096), 'merge_latch_edges': ([], 14098), 'loop_depth': ([], 14098), 'flow_loop_nested_p': ([], 14098), 'superloop_at_depth': ([], 14098), 'VEC_edge_base_space': ([], 14098), 'VEC_edge_heap_reserve': ([], 14098), 'VEC_edge_base_quick_push': ([], 14098), 'VEC_edge_heap_safe_push': ([2], 14096), 'ei_next': ([], 14098), 'get_loop_latch_edges': ([15], 14096), 'VEC_edge_base_iterate': ([], 14098), 'loop_outer': ([], 14098), 'get_loop_body': ([1], 14095), 'flow_loop_dump': ([], 14098), 'number_of_loops': ([], 14098), 'VEC_int_base_quick_push': ([], 14098), 'VEC_int_base_iterate': ([], 14098), 'get_loop': ([], 14098), 'fel_next': ([5], 14095), 'fel_init': ([0], 14096), 'flow_loops_cfg_dump': ([], 14098), 'flow_loops_dump': ([], 14098), 'flow_loop_free': ([], 14098), 'VEC_loop_p_base_iterate': ([], 14098), 'flow_loops_free': ([], 14098), 'VEC_basic_block_base_space': ([], 14098), 'VEC_basic_block_heap_reserve': ([], 14098), 'VEC_basic_block_base_quick_push': ([], 14098), 'VEC_basic_block_heap_safe_push': ([2], 14096), 'VEC_basic_block_base_pop': ([], 14098), 'VEC_loop_p_base_space': ([], 14098), 'VEC_loop_p_gc_reserve': ([], 14098), 'VEC_loop_p_base_quick_push': ([], 14098), 'establish_preds': ([0], 14097), 'flow_loop_tree_node_add': ([], 14098), 'flow_loop_tree_node_remove': ([], 14098), 'flow_bb_inside_loop_p': ([], 14098), 'flow_loops_find': ([1, 40, 60], 14083), 'find_subloop_latch_edge_by_profile': ([], 14098), 'gsi_stmt': ([], 14098), 'gsi_next': ([], 14098), 'find_subloop_latch_edge_by_ivs': ([], 14098), 'find_subloop_latch_edge': ([], 14098), 'form_subloop': ([], 14098), 'disambiguate_multiple_latches': ([], 14098), 'disambiguate_loops_with_multiple_latches': ([], 14098), 'fill_sons_in_loop': ([], 14098), 'get_loop_body_in_dom_order': ([2], 14095), 'get_loop_body_in_bfs_order': ([14], 14096), 'loops_state_satisfies_p': ([], 14098), 'find_common_loop': ([], 14098), 'loops_state_set': ([], 14098), 'dump_recorded_exit': ([], 14098), 'dump_recorded_exits': ([], 14098), 'loops_state_clear': ([], 14098), 'release_recorded_exits': ([], 14098), 'get_loop_exit_edges': ([21], 14096), 'num_loop_branches': ([], 14098), 'add_bb_to_loop': ([42], 14086), 'remove_bb_from_loops': ([27], 14086), 'delete_loop': ([], 14098), 'cancel_loop': ([], 14098), 'cancel_loop_tree': ([], 14098), 'single_succ_p': ([], 14098), 'single_succ_edge': ([2], 14096), 'single_succ': ([], 14098), 'loop_latch_edge': ([], 14098), 'get_exit_descriptions': ([], 14098), 'verify_loop_structure': ([12, 13, 22, 82, 97, 138, 196, 211, 366], 13985), 'loop_preheader_edge': ([23], 14096), 'loop_exit_edge_p': ([], 14098), 'single_exit': ([], 14098), 'is_loop_exit': ([5], 14096)}, "PosixPath('602/xstrdup.bc')": {}, "PosixPath('602/bitmap.bc')": {'bitmap_obstack_free': ([], 11188), 'bitmap_elt_clear_from': ([], 11188), 'bitmap_obstack_initialize': ([], 11188), 'bitmap_obstack_release': ([], 11188), 'bitmap_initialize_stat': ([], 11188), 'bitmap_obstack_alloc_stat': ([4], 11182), 'bitmap_gc_alloc_stat': ([], 11188), 'bitmap_element_allocate': ([4], 11182), 'bitmap_copy': ([], 11188), 'bitmap_find_bit': ([], 11188), 'bitmap_element_zerop': ([], 11188), 'bitmap_elem_to_freelist': ([], 11188), 'bitmap_element_free': ([], 11188), 'bitmap_clear_bit': ([], 11188), 'bitmap_element_link': ([], 11188), 'bitmap_set_bit': ([], 11188), 'bitmap_count_bits': ([], 11188), 'bitmap_single_bit_set_p': ([], 11188), 'bitmap_first_set_bit': ([], 11188), 'bitmap_last_set_bit': ([], 11188), 'bitmap_elt_insert_after': ([], 11188), 'bitmap_and': ([], 11188), 'bitmap_and_into': ([], 11188), 'bitmap_elt_copy': ([], 11188), 'bitmap_and_compl': ([14, 22], 11179), 'bitmap_and_compl_into': ([], 11188), 'bitmap_set_range': ([], 11188), 'bitmap_clear_range': ([], 11188), 'bitmap_compl_and_into': ([2], 11186), 'bitmap_elt_ior': ([1, 2], 11176), 'bitmap_ior': ([21], 11184), 'bitmap_ior_into': ([], 11188), 'bitmap_xor': ([22, 23], 11184), 'bitmap_xor_into': ([], 11188), 'bitmap_equal_p': ([], 11188), 'bitmap_intersect_p': ([], 11188), 'bitmap_intersect_compl_p': ([], 11188), 'bitmap_ior_and_compl': ([60], 11184), 'bitmap_ior_and_compl_into': ([], 11188), 'bitmap_ior_and_into': ([69], 11150), 'debug_bitmap_file': ([], 11188), 'bmp_iter_set_init': ([], 11188), 'bmp_iter_set': ([], 11188), 'bmp_iter_next': ([], 11188), 'bitmap_print': ([], 11188), 'bitmap_hash': ([], 11188)}, "PosixPath('602/caller-save.bc')": {'reg_save_code': ([4, 10], 9392), 'recog_memoized': ([], 9421), 'init_caller_save': ([], 9421), 'initiate_saved_hard_regs': ([], 9421), 'mark_set_regs': ([], 9421), 'new_saved_hard_reg': ([], 9421), 'bmp_iter_set_init': ([], 9421), 'bmp_iter_set': ([4], 9416), 'bmp_iter_next': ([], 9421), 'finish_saved_hard_regs': ([], 9421), 'saved_hard_reg_compare_func': ([], 9421), 'setup_save_areas': ([4, 32, 39, 135, 502], 9387), 'mark_referenced_regs': ([], 9421), 'add_stored_regs': ([], 9421), 'add_used_regs_1': ([], 9421), 'insert_one_insn': ([], 9421), 'insert_restore': ([], 9421), 'insert_save': ([], 9421), 'replace_reg_with_saved_mem': ([13, 14], 9417), 'add_to_hard_reg_set': ([], 9421), 'mark_reg_as_referenced': ([], 9421), 'save_call_clobbered_regs': ([3, 10, 158], 9381)}, "PosixPath('602/tree-vect-generic.bc')": {'bb_seq': ([], 5523), 'gsi_start_bb': ([], 5523), 'gsi_stmt': ([], 5523), 'gimple_ops': ([], 5523), 'gimple_op': ([], 5523), 'type_for_widest_vector_mode': ([], 5523), 'expand_vector_piecewise': ([], 5523), 'expand_vector_parallel': ([], 5523), 'expand_vector_addition': ([], 5523), 'do_negate': ([], 5523), 'do_plus_minus': ([], 5523), 'expand_vector_operation': ([], 5523), 'expand_vector_operations_1': ([], 5523), 'gsi_next': ([], 5523), 'expand_vector_operations': ([1], 5522)}, "PosixPath('602/sel-sched-ir.bc')": {'insert_in_history_vect': ([], 46930), 'sel_redirect_edge_and_branch': ([], 46930), 'init_lv_set': ([], 46930), 'free_lv_set': ([5], 46928), 'exchange_lv_sets': ([], 46930), 'exchange_av_sets': ([], 46930), 'sel_add_block_to_region': ([], 46930), 'make_regions_from_the_rest': ([235], 46927), 'ilist_copy': ([], 46930), 'ilist_invert': ([], 46930), 'blist_add': ([], 46930), '_list_iter_start': ([], 46930), 'return_regset_to_pool': ([], 46930), 'vinsn_delete': ([], 46930), 'vinsn_detach': ([0], 46924), 'free_history_vect': ([], 46930), '_list_iter_remove': ([], 46930), 'av_set_iter_remove': ([], 46930), '_list_iter_next': ([], 46930), 'av_set_clear': ([2], 46927), 'flist_tail_init': ([], 46930), 'flist_lookup': ([], 46930), 'fence_clear': ([], 46930), 'flist_remove': ([], 46930), 'flist_clear': ([], 46930), 'def_list_add': ([], 46930), '_succ_iter_start': ([], 46930), 'VEC_edge_base_iterate': ([], 46930), 'in_current_region_p': ([], 46930), 'sel_bb_head': ([], 46930), 'sel_bb_end': ([], 46930), 'sel_bb_empty_or_nop_p': ([], 46930), '_eligible_successor_edge_p': ([], 46930), 'single_succ_p': ([], 46930), 'single_succ_edge': ([], 46930), 'single_succ': ([], 46930), 'loop_depth': ([], 46930), 'inner_loop_header_p': ([], 46930), 'loop_outer': ([], 46930), 'VEC_edge_base_space': ([], 46930), 'VEC_edge_heap_reserve': ([], 46930), 'VEC_edge_base_quick_push': ([], 46930), 'VEC_edge_heap_safe_push': ([2], 46928), 'get_loop_exit_edges_unique_dests': ([], 46930), 'VEC_edge_base_ordered_remove': ([], 46930), 'get_all_loop_exits': ([3, 66], 46926), 'ei_next': ([], 46930), '_succ_iter_cond': ([88], 46929), 'init_fence_for_scheduling': ([], 46930), 'flist_add': ([], 46930), '_succ_iter_next': ([], 46930), 'init_fences': ([], 46930), 'VEC_rtx_base_block_remove': ([], 46930), 'merge_fences': ([1, 8, 32], 46903), 'move_fence_to_fences': ([], 46930), 'add_to_fences': ([], 46930), 'add_clean_fence_to_fences': ([], 46930), 'VEC_rtx_gc_copy': ([], 46930), 'add_dirty_fence_to_fences': ([], 46930), 'get_regset_from_pool': ([], 46930), 'free_regset_pool': ([], 46930), 'vinsn_attach': ([], 46930), 'init_expr': ([], 46930), 'copy_expr_onside': ([], 46930), 'VEC_sel_global_bb_info_def_base_space': ([], 46930), 'VEC_sel_global_bb_info_def_heap_reserve_exact': ([], 46930), 'VEC_sel_global_bb_info_def_heap_safe_grow': ([], 46930), 'VEC_sel_global_bb_info_def_heap_safe_grow_cleared': ([], 46930), 'sel_extend_global_bb_info': ([], 46930), 'VEC_sel_region_bb_info_def_base_space': ([], 46930), 'VEC_sel_region_bb_info_def_heap_reserve_exact': ([], 46930), 'VEC_sel_region_bb_info_def_heap_safe_grow': ([], 46930), 'VEC_sel_region_bb_info_def_heap_safe_grow_cleared': ([], 46930), 'extend_region_bb_info': ([], 46930), 'extend_bb_info': ([], 46930), 'invalidate_av_set': ([], 46930), 'create_initial_data_sets': ([], 46930), 'VEC_sel_insn_data_def_base_space': ([], 46930), 'VEC_sel_insn_data_def_heap_reserve_exact': ([], 46930), 'VEC_sel_insn_data_def_heap_safe_grow': ([], 46930), 'VEC_sel_insn_data_def_heap_safe_grow_cleared': ([], 46930), 'extend_insn_data': ([0], 46928), 'VEC_expr_history_def_heap_copy': ([], 46930), 'copy_expr': ([], 46930), 'prepare_insn_expr': ([], 46930), 'setup_id_lhs_rhs': ([], 46930), 'maybe_downgrade_id_to_use': ([], 46930), 'setup_id_reg_sets': ([], 46930), 'init_id_from_df': ([], 46930), 'deps_init_id_note_reg_use': ([], 46930), 'deps_init_id_note_reg_clobber': ([], 46930), 'deps_init_id_note_reg_set': ([], 46930), 'deps_init_id_start_lhs': ([], 46930), 'deps_init_id_finish_insn': ([], 46930), 'deps_init_id': ([], 46930), 'vinsn_init': ([], 46930), 'vinsn_create': ([], 46930), 'first_time_insn_init': ([], 46930), 'eq_transformed_insns': ([], 46930), 'hash_transformed_insns': ([], 46930), 'init_first_time_insn_data': ([], 46930), 'init_insn_data': ([], 46930), 'single_pred_p': ([], 46930), 'single_pred_edge': ([], 46930), 'cfg_preds_1': ([27, 36], 46916), 'cfg_preds': ([], 46930), 'get_seqno_of_a_pred': ([], 46930), 'init_simplejump_data': ([], 46930), 'sel_init_new_insn': ([], 46930), 'get_nop_from_pool': ([], 46930), 'bb_next_bb': ([], 46930), 'move_bb_info': ([], 46930), 'remove_bb_from_region': ([], 46930), 'delete_and_free_basic_block': ([3], 46927), 'sel_remove_bb': ([11], 46928), 'remove_empty_bb': ([4, 40], 46923), 'sel_remove_empty_bb': ([0, 10], 46910), 'considered_for_pipelining_p': ([], 46930), 'change_loops_latches': ([], 46930), 'sel_recompute_toporder': ([], 46930), 'maybe_tidy_empty_bb': ([8], 46917), 'jump_leads_only_to_bb_p': ([], 46930), 'sel_remove_insn': ([29], 46928), 'tidy_control_flow': ([], 46930), 'return_nop_to_pool': ([], 46930), 'free_nop_pool': ([], 46930), 'recog_memoized': ([], 46930), 'create_copy_of_insn_rtx': ([], 46930), 'create_vinsn_from_insn_rtx': ([], 46930), 'vinsn_copy': ([], 46930), 'vinsn_cond_branch_p': ([], 46930), 'sel_vinsn_cost': ([], 46930), 'sel_gen_recovery_insn_from_rtx_after': ([], 46930), 'sel_gen_insn_from_expr_after': ([], 46930), 'sel_move_insn': ([], 46930), 'skip_unspecs_callback': ([], 46930), 'vinsn_equal_p': ([], 46930), 'find_in_history_vect_1': ([], 46930), 'bmp_iter_set_init': ([], 46930), 'bmp_iter_set': ([4], 46925), 'bmp_iter_next': ([], 46930), 'find_in_history_vect': ([15], 46922), 'VEC_expr_history_def_base_space': ([], 46930), 'VEC_expr_history_def_heap_reserve': ([], 46930), 'VEC_expr_history_def_base_quick_insert': ([], 46930), 'VEC_expr_history_def_heap_safe_insert': ([], 46930), 'update_target_availability': ([], 46930), 'expr_dest_reg': ([], 46930), 'speculate_expr': ([], 46930), 'update_speculative_bits': ([], 46930), 'merge_expr_data': ([], 46930), 'merge_expr': ([], 46930), 'av_set_lookup': ([], 46930), 'set_unavailable_target_for_expr': ([8], 46922), 'mark_unavailable_targets': ([], 46930), 'av_set_add': ([], 46930), 'av_set_lookup_other_equiv_expr': ([], 46930), 'merge_with_other_exprs': ([], 46930), 'av_set_copy': ([1], 46927), 'av_set_union_and_clear': ([], 46930), '_list_iter_remove_nofree': ([], 46930), 'av_set_union_and_live': ([], 46930), 'av_set_leave_one_nonspec': ([], 46930), 'av_set_substract_cond_branches': ([], 46930), 'av_set_split_usefulness': ([], 46930), 'av_set_intersect': ([], 46930), 'free_data_for_scheduled_insn': ([], 46930), 'init_global_and_expr_for_insn': ([0], 46925), 'sel_init_global_and_expr': ([], 46930), 'VEC_basic_block_base_quick_push': ([], 46930), 'finish_insns': ([], 46930), 'free_first_time_insn_data': ([], 46930), 'finish_global_and_expr_insn': ([], 46930), 'sel_finish_global_and_expr': ([], 46930), 'sel_mark_hard_insn': ([], 46930), 'has_dependence_note_reg_use': ([], 46930), 'has_dependence_note_reg_clobber': ([], 46930), 'has_dependence_note_reg_set': ([], 46930), 'has_dependence_p': ([], 46930), 'tick_check_dep_with_dw': ([], 46930), 'tick_check_p': ([1], 46921), 'lhs_of_insn_equals_to_dest_p': ([], 46930), 'get_dest_and_mode': ([], 46930), 'sel_num_cfg_preds_gt_1': ([], 46930), 'bookkeeping_can_be_created_if_moved_through_p': ([], 46930), 'sel_is_loop_preheader_p': ([], 46930), 'purge_empty_blocks': ([], 46930), 'get_seqno_by_preds': ([], 46930), 'df_lr_get_bb_info': ([], 46930), 'init_lv_sets': ([], 46930), 'free_lv_sets': ([22], 46927), 'exchange_data_sets': ([], 46930), 'copy_data_sets': ([18, 47, 49, 64], 46917), 'get_av_set': ([], 46930), 'fallthru_bb_of_jump': ([], 46930), 'sel_init_bbs': ([], 46930), 'sel_restore_notes': ([], 46930), 'VEC_basic_block_base_space': ([], 46930), 'VEC_basic_block_heap_reserve': ([], 46930), 'VEC_basic_block_heap_safe_push': ([2], 46928), 'sel_create_new_region': ([], 46930), 'VEC_basic_block_base_iterate': ([], 46930), 'make_region_from_loop_preheader': ([], 46930), 'sel_remove_loop_preheader': ([], 46930), 'sel_finish_bbs': ([], 46930), 'sel_insn_has_single_succ_p': ([], 46930), 'VEC_int_base_block_remove': ([], 46930), 'free_succs_info': ([3], 46928), 'alloc_succs_info': ([], 46930), 'VEC_rtx_base_space': ([], 46930), 'VEC_rtx_heap_reserve': ([], 46930), 'VEC_rtx_base_quick_push': ([], 46930), 'VEC_rtx_heap_safe_push': ([2], 46928), 'VEC_int_base_space': ([], 46930), 'VEC_int_heap_reserve': ([], 46930), 'VEC_int_base_quick_push': ([], 46930), 'VEC_int_heap_safe_push': ([], 46930), 'compute_succs_info': ([5], 46911), 'bb_ends_ebb_p': ([24], 46928), 'clear_outdated_rtx_info': ([], 46930), 'recompute_rev_top_order': ([20], 46928), 'find_place_to_insert_bb': ([], 46930), 'add_block_to_current_region': ([2], 46909), 'sel_add_bb': ([], 46930), 'sel_split_edge': ([], 46930), 'copy_lv_set_from': ([], 46930), 'sel_create_recovery_block': ([], 46930), 'sel_create_empty_bb': ([], 46930), 'VEC_rtx_base_pop': ([], 46930), 'get_bb_note_from_pool': ([], 46930), 'sel_create_basic_block': ([], 46930), 'sel_split_block': ([], 46930), 'sel_register_cfg_hooks': ([], 46930), 'setup_nop_and_exit_insns': ([], 46930), 'free_nop_vinsn': ([], 46930), 'sel_estimate_number_of_insns': ([], 46930), 'sel_init_pipelining': ([], 46930), 'get_loop_nest_for_rgn': ([], 46930), 'number_of_loops': ([], 46930), 'VEC_loop_p_base_iterate': ([], 46930), 'VEC_int_base_iterate': ([], 46930), 'get_loop': ([], 46930), 'fel_next': ([5], 46927), 'fel_init': ([5], 46928), 'sel_finish_pipelining': ([], 46930), 'bb_top_order_comparator': ([], 46930), 'make_region_from_loop': ([], 46930), 'VEC_loop_p_base_space': ([], 46930), 'VEC_loop_p_heap_reserve': ([], 46930), 'VEC_loop_p_base_quick_push': ([], 46930), 'VEC_loop_p_heap_safe_push': ([], 46930), 'make_regions_from_loop_nest': ([], 46930), 'sel_find_rgns': ([], 46930), 'sel_add_loop_preheaders': ([], 46930)}, "PosixPath('602/graphite-sese-to-poly.bc')": {}, "PosixPath('602/toplev.bc')": {'announce_function': ([], 28463), 'read_integral_parameter': ([], 28463), 'wrapup_global_declaration_1': ([0], 28460), 'wrapup_global_declaration_2': ([3], 28459), 'check_global_declaration_1': ([], 28463), 'emit_debug_global_declarations': ([], 28463), 'warn_deprecated_use': ([], 28463), 'setup_core_dumping': ([], 28463), 'decode_d_option': ([], 28463), 'option_affects_pch_p': ([], 28463), 'default_get_pch_validity': ([], 28463), 'default_pch_valid_p': ([], 28463), 'default_tree_printer': ([], 28463), 'general_init': ([], 28463), 'init_local_tick': ([], 28463), 'print_switch_values': ([], 28463), 'process_options': ([], 28463), 'init_asm_output': ([], 28463), 'lang_dependent_init': ([], 28463), 'compile_file': ([], 28463), 'finalize': ([], 28463), 'do_compile': ([], 28463), 'toplev_main': ([], 28463)}, "PosixPath('602/tree-scalar-evolution.bc')": {'chrec_is_positive': ([], 20789), 'initialize_scalar_evolutions_analyzer': ([], 20789), 'get_loop': ([], 20789), 'tree_operand_length': ([], 20789), 'chrec_contains_symbols_defined_in_loop': ([], 20789), 'get_chrec_loop': ([], 20789), 'number_of_latch_executions': ([], 20789), 'loop_depth': ([], 20789), 'get_instantiated_value': ([], 20789), 'new_scev_info_str': ([], 20789), 'set_instantiated_value': ([], 20789), 'find_var_scev_info': ([], 20789), 'get_scalar_evolution': ([], 20789), 'gimple_ops': ([], 20789), 'gimple_op': ([], 20789), 'loop_phi_node_p': ([], 20789), 'analyze_initial_condition': ([], 20789), 'backedge_phi_arg_p': ([], 20789), 'build_polynomial_chrec': ([], 20789), 'add_to_evolution_1': ([], 20789), 'add_to_evolution': ([], 20789), 'set_scalar_evolution': ([], 20789), 'gsi_stmt': ([], 20789), 'gsi_next': ([], 20789), 'loop_closed_phi_def': ([], 20789), 'eq_scev_info': ([], 20789), 'follow_ssa_edge_expr': ([], 20789), 'follow_ssa_edge': ([], 20789), 'follow_ssa_edge_binary': ([], 20789), 'follow_ssa_edge_in_condition_phi_branch': ([], 20789), 'analyze_scalar_evolution': ([], 20789), 'analyze_scalar_evolution_1': ([1, 3], 20698), 'interpret_rhs_expr': ([], 20789), 'compute_scalar_evolution_in_loop': ([], 20789), 'compute_overall_effect_of_inner_loop': ([], 20789), 'instantiate_scev_r': ([], 20789), 'evolution_function_is_affine_p': ([], 20789), 'gather_chrec_stats': ([], 20789), 'gather_stats_on_scev_database': ([], 20789), 'number_of_loops': ([], 20789), 'VEC_int_base_quick_push': ([], 20789), 'loop_outer': ([], 20789), 'VEC_int_base_iterate': ([], 20789), 'fel_next': ([5], 20786), 'fel_init': ([], 20789), 'scev_initialize': ([], 20789), 'scev_reset': ([], 20789), 'analyze_scalar_evolution_in_loop': ([], 20789), 'simple_iv': ([], 20789), 'VEC_gimple_base_space': ([], 20789), 'VEC_gimple_heap_reserve': ([], 20789), 'VEC_gimple_base_quick_push': ([], 20789), 'VEC_gimple_heap_safe_push': ([], 20789), 'get_exit_conditions_rec': ([], 20789), 'select_loops_exit_conditions': ([], 20789), 'VEC_gimple_base_iterate': ([], 20789), 'analyze_scalar_evolution_for_all_loop_phi_nodes': ([], 20789), 'number_of_iterations_for_all_loops': ([], 20789), 'scev_analysis': ([], 20789), 'expression_expensive_p': ([], 20789), 'bmp_iter_set_init': ([], 20789), 'bmp_iter_set': ([], 20789), 'bmp_iter_next': ([], 20789), 'single_pred_p': ([], 20789), 'bb_seq': ([], 20789), 'gsi_start_bb': ([], 20789), 'gsi_after_labels': ([], 20789), 'scev_const_prop': ([], 20789), 'gt_ggc_mx_scev_info_str': ([], 20789), 'gt_ggc_m_P13scev_info_str4htab': ([], 20789), 'gt_pch_nx_scev_info_str': ([], 20789), 'gt_pch_p_P13scev_info_str4htab': ([], 20789), 'gt_pch_n_P13scev_info_str4htab': ([], 20789)}, "PosixPath('602/c-common.bc')": {'handle_aligned_attribute': ([1], 155719), 'c_addr_space_name': ([], 155722), 'start_fname_decls': ([], 155722), 'finish_fname_decls': ([], 155722), 'fname_as_string': ([], 155722), 'fname_decl': ([], 155722), 'fix_string_type': ([], 155722), 'decl_constant_value_for_optimization': ([], 155722), 'overflow_warning': ([], 155722), 'c_fully_fold_internal': ([0, 1, 31, 295], 155684), 'c_fully_fold': ([6], 155720), 'warn_logical_operator': ([], 155722), 'strict_aliasing_warning': ([], 155722), 'check_main_parameter_types': ([], 155722), 'vector_targets_convertible_p': ([], 155722), 'vector_types_convertible_p': ([], 155722), 'c_common_signed_or_unsigned_type': ([23], 155721), 'shorten_binary_op': ([3, 27], 155715), 'tree_operand_length': ([], 155722), 'conversion_warning': ([3, 38], 155717), 'warnings_for_convert_and_check': ([], 155722), 'convert_and_check': ([], 155722), 'warning_candidate_p': ([], 155722), 'new_tlist': ([], 155722), 'warn_for_collisions_1': ([], 155722), 'warn_for_collisions': ([], 155722), 'merge_tlist': ([], 155722), 'add_tlist': ([], 155722), 'init_call_expr_arg_iterator': ([], 155722), 'next_call_expr_arg': ([], 155722), 'first_call_expr_arg': ([], 155722), 'verify_tree': ([1, 27, 29, 31, 75], 155703), 'verify_sequence_points': ([], 155722), 'c_common_type_for_size': ([], 155722), 'c_common_type_for_mode': ([], 155722), 'c_common_fixed_point_type_for_size': ([], 155722), 'c_build_bitfield_integer_type': ([], 155722), 'shorten_compare': ([], 155722), 'pointer_int_sum': ([25], 155718), 'c_wrap_maybe_const': ([], 155722), 'c_save_expr': ([], 155722), 'decl_with_nonnull_addr_p': ([], 155722), 'c_common_truthvalue_conversion': ([], 155722), 'c_apply_type_quals_to_decl': ([], 155722), 'c_type_hash': ([], 155722), 'c_common_get_alias_set': ([0], 155716), 'c_sizeof_or_alignof_type': ([], 155722), 'c_alignof_expr': ([], 155722), 'def_fn_type': ([], 155722), 'builtin_function_disabled_p': ([], 155722), 'def_builtin_1': ([], 155722), 'c_define_builtins': ([], 155722), 'c_common_nodes_and_builtins': ([], 155722), 'set_compound_literal_name': ([], 155722), 'disable_builtin_function': ([], 155722), 'c_promoting_integer_type_p': ([], 155722), 'self_promoting_args_p': ([0], 155720), 'strip_pointer_operator': ([], 155722), 'strip_pointer_or_array_types': ([], 155722), 'check_case_value': ([2], 155711), 'check_case_bounds': ([], 155722), 'c_add_case_label': ([], 155722), 'match_case_to_enum_1': ([], 155722), 'match_case_to_enum': ([], 155722), 'c_do_switch_warnings': ([], 155722), 'boolean_increment': ([], 155722), 'c_determine_visibility': ([], 155722), 'VEC_const_char_p_base_space': ([], 155722), 'VEC_const_char_p_gc_reserve': ([], 155722), 'VEC_const_char_p_base_quick_push': ([], 155722), 'VEC_const_char_p_gc_safe_push': ([0], 155720), 'parse_optimize_options': ([], 155722), 'get_nonnull_operand': ([], 155722), 'nonnull_check_p': ([], 155722), 'check_function_arguments_recurse': ([34], 155719), 'check_function_nonnull': ([], 155722), 'check_function_sentinel': ([], 155722), 'check_function_arguments': ([], 155722), 'check_builtin_function_arguments': ([], 155722), 'field_decl_cmp': ([], 155722), 'resort_field_decl_cmp': ([], 155722), 'c_cpp_error': ([], 155722), 'fold_offsetof_1': ([17], 155717), 'complete_array_type': ([], 155722), 'sync_resolve_size': ([], 155722), 'sync_resolve_params': ([], 155722), 'resolve_overloaded_builtin': ([], 155722), 'warn_array_subscript_with_type_char': ([], 155722), 'warn_about_parentheses': ([], 155722), 'warn_for_unused_label': ([], 155722), 'warn_for_sign_compare': ([1, 75], 155710), 'set_underlying_type': ([], 155722), 'is_typedef_decl': ([], 155722), 'record_types_used_by_current_var_decl': ([], 155722), 'VEC_tree_gc_vec_base_pop': ([], 155722), 'make_tree_vector': ([], 155722), 'VEC_tree_gc_vec_base_space': ([], 155722), 'VEC_tree_gc_vec_gc_reserve': ([], 155722), 'VEC_tree_gc_vec_base_quick_push': ([], 155722), 'VEC_tree_gc_vec_gc_safe_push': ([], 155722), 'release_tree_vector': ([], 155722), 'VEC_tree_base_quick_push': ([], 155722), 'make_tree_vector_single': ([], 155722), 'VEC_tree_base_space': ([], 155722), 'VEC_tree_gc_reserve': ([], 155722), 'VEC_tree_base_iterate': ([], 155722), 'make_tree_vector_copy': ([], 155722), 'handle_optimize_attribute': ([], 155722), 'handle_hot_attribute': ([], 155722), 'handle_cold_attribute': ([], 155722), 'handle_alloc_size_attribute': ([], 155722), 'handle_type_generic_attribute': ([], 155722), 'handle_sentinel_attribute': ([], 155722), 'handle_nonnull_attribute': ([], 155722), 'handle_tls_model_attribute': ([4], 155691), 'handle_visibility_attribute': ([0], 155719), 'handle_vector_size_attribute': ([0], 155716), 'handle_deprecated_attribute': ([], 155722), 'handle_novops_attribute': ([], 155722), 'handle_pure_attribute': ([], 155722), 'handle_no_limit_stack_attribute': ([], 155722), 'handle_returns_twice_attribute': ([], 155722), 'handle_malloc_attribute': ([], 155722), 'handle_no_instrument_function_attribute': ([], 155722), 'handle_weakref_attribute': ([], 155722), 'handle_alias_attribute': ([], 155722), 'handle_weak_attribute': ([], 155722), 'handle_section_attribute': ([], 155722), 'handle_mode_attribute': ([], 155722), 'handle_destructor_attribute': ([], 155722), 'handle_constructor_attribute': ([], 155722), 'handle_transparent_union_attribute': ([], 155722), 'handle_const_attribute': ([], 155722), 'handle_externally_visible_attribute': ([], 155722), 'handle_unused_attribute': ([], 155722), 'handle_used_attribute': ([], 155722), 'handle_artificial_attribute': ([], 155722), 'handle_gnu_inline_attribute': ([], 155722), 'handle_always_inline_attribute': ([], 155722), 'handle_noinline_attribute': ([], 155722), 'handle_noreturn_attribute': ([], 155722), 'handle_common_attribute': ([], 155722), 'handle_nocommon_attribute': ([], 155722), 'handle_packed_attribute': ([], 155722)}, "PosixPath('602/spec_qsort/spec_qsort.bc')": {'swapfunc': ([], 1754), 'spec_qsort': ([], 1754)}}
change per query: {'trim_filename': [(2, '0')], 'diagnostic_report_diagnostic': [(11, '0')], 'fel_next': [(3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5'), (3, '5')], 'tree_unswitch_single_loop': [(3, '41')], 'push_reload': [(7, '35'), (5, '36'), (28, '164'), (11, '179'), (6, '191'), (16, '1287')], 'push_secondary_reload': [(10, '1'), (12, '2'), (17, '41')], 'find_reloads': [(7, '38'), (17, '45'), (315, '50'), (427, '51'), (36, '93'), (12, '140'), (8, '445'), (45, '483'), (1, '507'), (8, '508'), (3, '3561'), (40, '3714'), (10, '4486'), (3, '9858'), (1, '13042'), (10, '13044'), (4, '13045'), (6, '13548'), (2, '13665'), (5, '15096'), (59, '15271')], 'find_reloads_toplev': [(2, '0'), (8, '44')], 'find_reloads_subreg_address': [(2, '33'), (5, '41')], 'refers_to_regno_for_reload_p': [(5, '2'), (3, '5')], 'reg_overlap_mentioned_for_reload_p': [(2, '0'), (3, '14')], 'find_equiv_reg': [(5, '85'), (10, '89')], 'subst_indexed_address': [(9, '13')], 'get_secondary_mem': [(1, '2')], 'find_reloads_address_1': [(175, '1'), (40, '325')], 'find_reloads_address_part': [(16, '6')], 'operands_match_p': [(3, '0')], 'decompose': [(3, '4'), (5, '22')], 'push_replacement': [(8, '0')], 'move_replacements': [(14, '0')], 'find_replacement': [(2, '5')], 'debug_reload_to_stream': [(4, '14')], 'tree_fold_binomial': [(1, '39')], 'evolution_function_is_invariant_rec_p': [(1, '0')], 'chrec_fold_plus_1': [(13, '1'), (1, '2'), (4, '7'), (45, '28')], 'chrec_fold_multiply': [(6, '0'), (5, '4')], 'chrec_evaluate': [(6, '4')], 'reset_evolution_in_loop': [(12, '5')], 'scev_is_linear_expression': [(6, '0')], 'cgraph_build_static_cdtor': [(53, '1')], 'save_inline_function_body': [(5, '5')], 'cgraph_reset_node': [(5, '0')], 'VEC_tree_gc_safe_push': [(2, '2'), (2, '2'), (2, '2'), (2, '2'), (2, '2'), (2, '2'), (2, '2')], 'cgraph_finalize_function': [(4, '7')], 'verify_cgraph_node': [(2, '123')], 'build_cdtor': [(2, '0')], 'cgraph_optimize': [(8, '20')], 'cgraph_finalize_compilation_unit': [(7, '2'), (7, '6')], 'c_finish_omp_for': [(3, '2')], 'make_relative_prefix_1': [(35, '2')], 'find_call_stack_args': [(4, '99'), (7, '146')], 'bb_has_eh_pred': [(2, '5')], 'copyprop_hardreg_forward': [(3, '6')], 'create_variable_info_for': [(3, '79')], 'do_structure_copy': [(2, '65')], 'get_constraint_for_ssa_var': [(7, '7')], 'condense_visit': [(4, '484'), (2, '545'), (2, '547'), (2, '591'), (2, '593')], 'scc_visit': [(1, '0'), (1, '13'), (17, '25'), (1, '138')], 'bmp_iter_set': [(5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4'), (5, '4')], 'dump_solution_for_var': [(22, '8')], 'pt_solution_set': [(9, '5')], 'pt_solution_includes_1': [(1, '2')], 'pt_solutions_intersect_1': [(10, '0')], 'pt_solutions_same_restrict_base': [(2, '2'), (2, '3')], 'process_constraint': [(4, '10')], 'get_vi_for_tree': [(3, '67')], 'VEC_ce_s_heap_safe_push': [(2, '2')], 'get_constraint_for_1': [(5, '35'), (6, '37'), (7, '45')], 'get_constraint_for_address_of': [(1, '2')], 'add_pred_graph_edge': [(2, '0')], 'add_implicit_graph_edge': [(2, '0')], 'VEC_unsigned_heap_safe_push': [(2, '2')], 'label_visit': [(2, '12')], 'add_graph_edge': [(2, '0'), (2, '1')], 'topo_visit': [(9, '9')], 'solution_set_expand': [(14, '4')], 'solve_constraints': [(2, '83'), (18, '922')], 'find_what_var_points_to': [(5, '17')], 'delete_points_to_sets': [(1, '0')], 'ipa_pta_execute': [(2, '77')], 'dump_variable': [(6, '7')], 'set_default_def': [(2, '33')], 'remove_referenced_var': [(4, '0')], 'find_new_referenced_vars_1': [(16, '0')], 'dbxout_type': [(7, '7'), (8, '72'), (5, '100'), (5, '283')], 'dbxout_common_check': [(2, '9')], 'dbxout_symbol_location': [(15, '18'), (15, '25')], 'dbxout_parms': [(3, '41'), (5, '59')], 'create_if_region_on_edge': [(2, '47')], 'build_sese_loop_nests': [(4, '21')], 'get_vdef_before_sese': [(8, '12')], 'sese_adjust_liveout_phis': [(2, '11')], 'get_true_edge_from_guard_bb': [(2, '5')], 'get_false_edge_from_guard_bb': [(2, '5')], 'recognize_if_then_else': [(2, '32')], 'recognize_single_bit_test': [(6, '0')], 'ifcombine_iforif': [(8, '0')], 'print_node': [(72, '38'), (9, '52'), (6, '60'), (34, '66'), (6, '82'), (9, '86'), (2, '89'), (32, '97')], 'print_node_brief': [(2, '4'), (2, '10')], 'add_builtin_function_common': [(1, '6')], 'lhd_set_decl_assembler_name': [(6, '0')], 'lhd_decl_printable_name': [(2, '0')], 'addr_to_parts': [(13, '74')], 'create_mem_ref_raw': [(5, '2'), (4, '3')], 'create_mem_ref': [(23, '60'), (11, '81')], 'maybe_fold_tmr': [(17, '4'), (7, '5'), (1, '6')], 'copy_loop_headers': [(3, '7')], 'byte_re_match_2_internal': [(18, '1'), (12, '227'), (10, '245'), (10, '246'), (16, '270'), (4, '271'), (2, '540'), (2, '566')], 'xre_set_registers': [(6, '0')], 'byte_regex_compile': [(9, '0'), (504, '5'), (1, '20'), (2, '61'), (2, '75'), (2, '87'), (2, '122'), (2, '212'), (2, '513')], 'insert_debug_temp_for_var_def': [(5, '2'), (3, '3'), (37, '13'), (1, '31')], 'insert_debug_temps_for_defs': [(1, '20')], 'release_defs_bitset': [(1, '16')], 'verify_use': [(3, '1')], 'verify_ssa': [(14, '80')], 'useless_type_conversion_p': [(2, '64')], 'check_tree': [(4, '0')], 'close_type_full_escape': [(5, '6')], 'propagate_rtx': [(4, '4')], 'propagate_rtx_1': [(1, '2')], 'VEC_df_ref_heap_safe_grow': [(2, '0')], 'VEC_df_ref_heap_safe_push': [(2, '2')], 'all_uses_available_at': [(8, '7')], 'choose_mult_variant': [(20, '10')], 'choose_multiplier': [(11, '4'), (10, '6'), (3, '14')], 'synth_mult': [(10, '0')], 'init_expmed': [(24, '108')], 'expand_shift': [(3, '18')], 'extract_fixed_bit_field': [(5, '0'), (13, '12')], 'store_split_bit_field': [(4, '5')], 'store_bit_field_1': [(2, '1'), (2, '27'), (5, '31'), (5, '52'), (2, '53')], 'extract_bit_field_1': [(109, '43'), (14, '65')], 'emit_store_flag': [(10, '44')], 'gimple_vop': [(2, '0')], 'add_stmt_operand': [(6, '0'), (5, '2')], 'get_expr_operands': [(2, '0')], 'get_asm_expr_operands': [(4, '31'), (2, '48')], 'ssa_operand_alloc': [(18, '11'), (2, '25')], 'update_stmt_operands': [(3, '49')], 'dump_immediate_uses_for': [(4, '1')], 'for_each_index': [(3, '3')], 'VEC_mem_ref_loc_p_heap_safe_push': [(2, '2')], 'gather_mem_refs_in_loops': [(32, '230')], 'bmp_iter_and_compl_init': [(5, '49')], 'bmp_iter_and_compl': [(6, '5')], 'push_scope': [(12, '0')], 'pop_scope': [(12, '220')], 'pushdecl': [(5, '0'), (5, '55')], 'implicitly_declare': [(1, '3')], 'grokdeclarator': [(2, '23'), (5, '43'), (6, '45'), (6, '395'), (6, '510')], 'start_decl': [(7, '16')], 'finish_struct': [(3, '28')], 'start_function': [(5, '37')], 'merge_decls': [(3, '6')], 'duplicate_decls': [(6, '2')], 'pushdecl_top_level': [(10, '0')], 'finish_decl': [(20, '1')], 'start_struct': [(2, '10')], 'VEC_tree_heap_safe_push': [(2, '2'), (2, '2'), (2, '2'), (2, '2'), (2, '2'), (2, '2'), (2, '2'), (2, '2'), (2, '2')], 'start_enum': [(11, '6')], 'build_enumerator': [(13, '1')], 'declspecs_add_type': [(5, '2'), (2, '6'), (2, '13')], 'declspecs_add_scspec': [(2, '3')], 'finish_declspecs': [(56, '0'), (1, '6'), (17, '10')], 'gt_ggc_mx_c_inline_static': [(13, '4')], 'gt_pch_nx_lang_type': [(4, '0')], 'gt_pch_nx_c_inline_static': [(34, '4')], 'release_ssa_name': [(10, '0')], 'recog_32': [(1, '417'), (3, '418'), (1, '428'), (3, '429'), (7, '441'), (7, '443'), (7, '446'), (4, '531'), (4, '547')], 'recog_43': [(6, '1151')], 'recog_47': [(6, '431'), (6, '448')], 'recog': [(16, '260')], 'split_1': [(34, '487'), (6, '991'), (6, '996'), (3, '1395')], 'split_4': [(7, '432'), (7, '434'), (7, '437'), (34, '441')], 'peephole2_insns': [(9, '374'), (7, '663')], 'find_best_predecessor': [(17, '1'), (2, '5')], 'find_best_successor': [(10, '1'), (2, '5')], 'reorder_basic_blocks': [(8, '2')], 'copy_bb': [(3, '37')], 'bb_to_key': [(2, '15')], 'rotate_loop': [(65, '53')], 'find_rarely_executed_basic_blocks_and_crossing_edges': [(1, '102')], 'fix_up_fall_thru_edges': [(6, '125')], 'insert_section_boundary_note': [(1, '5')], 'duplicate_computed_gotos': [(2, '49'), (9, '119')], 'find_many_sub_basic_blocks': [(11, '1'), (3, '37')], 'rtl_make_eh_edge': [(2, '2')], 'create_block_for_bookkeeping': [(3, '95')], 'compute_av_set_inside_bb': [(5, '3')], 'fill_vec_av_set': [(2, '420')], 'advance_state_on_fence': [(7, '0')], 'compute_live_after_bb': [(2, '19')], 'VEC_edge_heap_safe_push': [(2, '2'), (2, '0'), (2, '2'), (2, '2'), (2, '2'), (2, '2')], 'init_seqno_1': [(5, '6')], 'init_seqno': [(2, '10')], 'is_ineligible_successor': [(4, '39')], 'try_transformation_cache': [(4, '0')], 'moving_insn_creates_bookkeeping_block_p': [(5, '2'), (2, '18'), (2, '37')], 'moveup_expr_cached': [(14, '21')], 'compute_av_set_at_bb_end': [(7, '2'), (3, '139'), (7, '143'), (3, '180'), (12, '189')], 'sel_target_adjust_priority': [(4, '5')], 'undo_transformations': [(3, '5')], 'code_motion_path_driver': [(24, '0'), (44, '27'), (4, '149')], 'hard_reg_set_iter_set': [(2, '8')], 'choose_best_reg_1': [(3, '2')], 'sel_rank_for_schedule': [(6, '26')], 'update_fence_and_insn': [(4, '43')], 'update_boundaries': [(10, '3')], 'fill_insns': [(1, '721')], 'extract_new_fences_from': [(12, '28')], 'sel_sched_region_2': [(9, '18')], 'reset_sched_cycles_in_current_ebb': [(2, '28'), (8, '41')], 'ira_emit': [(4, '272'), (3, '843')], 'add_range_and_copies_from_move_list': [(5, '9')], 'unify_moves': [(17, '0')], 'VEC_move_t_heap_safe_push': [(2, '0')], 'change_loop': [(28, '0'), (1, '7')], 'ht_lookup_with_hash': [(36, '1'), (16, '2'), (1, '9')], 'gsi_start': [(4, '1'), (2, '1'), (2, '1'), (2, '1'), (2, '1'), (2, '1'), (2, '1'), (2, '1'), (2, '1'), (2, '1'), (2, '1')], 'uncprop_into_successor_phis': [(4, '62')], 'tree_ssa_uncprop': [(2, '31')], 'expand_call': [(1, '0'), (3, '2'), (3, '4'), (205, '50'), (3, '137'), (12, '166'), (6, '167'), (6, '297')], 'initialize_argument_information': [(52, '3')], 'emit_library_call_value_1': [(1, '3'), (3, '6'), (10, '327')], 'special_function_p': [(10, '6'), (6, '7')], 'shift_return_value': [(6, '0')], 'mark_jump_label_1': [(5, '2')], 'pc_set': [(5, '2')], 'condjump_p': [(8, '4')], 'delete_related_insns': [(2, '3')], 'reg_or_subregno': [(4, '0')], 'force_const_mem': [(3, '4')], 'output_constructor': [(49, '69')], 'prefix_name': [(2, '0')], 'make_decl_one_only': [(11, '0')], 'get_variable_section': [(1, '6')], 'make_decl_rtl': [(20, '0')], 'switch_to_section': [(9, '0')], 'output_constant': [(6, '6'), (3, '10')], 'decode_addr_const': [(2, '0')], 'output_addressed_constants': [(3, '7')], 'output_constant_pool_1': [(5, '4')], 'assemble_variable': [(11, '25'), (1, '29')], 'initializer_constant_valid_p_1': [(9, '0'), (5, '64')], 'mark_weak': [(6, '8')], 'remove_unreachable_alias_pairs': [(5, '0')], 'assemble_alias': [(1, '12')], 'default_encode_section_info': [(14, '4')], 'c_parser_struct_declaration': [(4, '5')], 'c_parser_consume_token': [(2, '7')], 'c_parser_error': [(13, '0')], 'c_parser_skip_to_pragma_eol': [(5, '0')], 'c_token_starts_typename': [(4, '0')], 'c_parser_peek_2nd_token': [(5, '0')], 'c_token_starts_declspecs': [(3, '0')], 'c_parser_postfix_expression_after_paren_type': [(2, '12')], 'c_parser_expr_list': [(2, '0')], 'c_parser_expression': [(3, '0')], 'c_parse_file': [(3, '1')], 'decNumberToUInt32': [(1, '0')], 'decSetCoeff': [(10, '0')], 'decSetMaxValue': [(4, '0')], 'decApplyRound': [(5, '0'), (7, '1'), (19, '2')], 'decUnitCompare': [(12, '9')], 'decCompare': [(16, '6')], 'decFinalize': [(5, '3'), (6, '10')], 'decNumberFromString': [(9, '9'), (4, '89')], 'decAddOp': [(26, '16'), (1, '18'), (43, '35')], 'decDivideOp': [(14, '9'), (5, '18'), (10, '40')], 'decCheckMath': [(10, '0')], 'decMultiplyOp': [(2, '27')], 'decExpOp': [(9, '96')], 'decGetInt': [(8, '9')], 'decLnOp': [(5, '87')], 'decNumberLogB': [(4, '0')], 'decNumberPower': [(12, '10')], 'decQuantizeOp': [(22, '7')], 'decNumberRotate': [(8, '0')], 'decNumberSquareRoot': [(2, '219')], 'fixed_convert_from_int': [(10, '39')], 'fixed_arithmetic': [(2, '129'), (2, '174')], 'fixed_convert': [(8, '2')], 'redirect_eh_edge_1': [(2, '11')], 'tree_could_throw_p': [(1, '0'), (7, '1')], 'verify_eh_edges': [(26, '7')], 'verify_eh_dispatch_edge': [(4, '25')], 'unsplit_eh': [(4, '110')], 'cleanup_empty_eh_merge_phis': [(5, '4'), (6, '22')], 'lower_eh_constructs_1': [(2, '276')], 'reserve_phi_args_for_new_edge': [(3, '3')], 'VEC_cgraph_node_ptr_heap_safe_push': [(2, '2')], 'output_cgraph': [(17, '17')], 'VEC_tree_heap_safe_grow_cleared': [(4, '1')], 'set_ssa_name_value': [(1, '1'), (2, '4')], 'record_temporary_equivalence': [(2, '0')], 'compute_builtin_object_size': [(11, '53'), (7, '308')], 'addr_object_size': [(7, '71')], 'expr_object_size': [(2, '13'), (7, '15')], 'remove_ctrl_stmt_and_useless_edges': [(2, '7')], 'thread_block': [(2, '25'), (10, '63')], 'thread_through_loop_header': [(2, '30')], 'thread_through_all_blocks': [(2, '18')], 'process_bb_node_lives': [(2, '0'), (4, '44'), (4, '51'), (5, '512')], 'set_allocno_live': [(1, '40'), (3, '41')], 'ira_implicitly_set_insn_hard_regs': [(2, '11')], 'make_regno_born': [(2, '11')], 'ira_get_register_move_cost': [(5, '0'), (5, '0'), (5, '0'), (5, '0')], 'process_single_reg_class_operands': [(12, '41')], 'update_allocno_pressure_excess_length': [(5, '5')], 'make_pseudo_conflict': [(5, '0')], 'check_and_make_def_conflict': [(5, '1')], 'mark_hard_reg_early_clobbers': [(5, '5')], 'mark_referenced_resources': [(4, '14'), (2, '36')], 'mark_set_resources': [(3, '21'), (4, '26'), (2, '27')], 'mark_target_live_regs': [(2, '304'), (7, '359')], 'init_resource_info': [(3, '6')], 'free_resource_info': [(3, '11')], 'print_filtered_help': [(2, '38')], 'VEC_char_p_heap_safe_push': [(2, '2')], 'expand_function_end': [(1, '15')], 'VEC_function_p_heap_safe_push': [(2, '2')], 'temp_slots_at_level': [(1, '0')], 'assign_temp': [(3, '3'), (2, '5')], 'find_temp_slot_from_address': [(8, '1')], 'preserve_temp_slots': [(11, '0')], 'combine_temp_slots': [(6, '4')], 'assign_parm_find_data_types': [(6, '19')], 'gimplify_parameters': [(4, '27')], 'number_blocks': [(5, '0')], 'assign_parms': [(66, '337')], 'reposition_prologue_and_epilogue_notes': [(2, '32')], 'used_types_insert': [(7, '0')], 'rest_of_match_asm_constraints': [(4, '16'), (6, '24'), (4, '25')], 'instantiate_decls_1': [(6, '4')], 'mark_irreducible_loops': [(4, '27'), (3, '134'), (3, '146'), (4, '243')], 'expected_loop_iterations_unbounded': [(2, '32'), (2, '44')], 'mark_loop_exit_edges': [(2, '18')], 'single_set_for_csa': [(3, '0')], 'vt_initialize': [(3, '684')], 'VEC_rtx_heap_safe_push': [(2, '2'), (2, '2')], 'dv_onepart_p': [(1, '0')], 'loc_cmp': [(3, '0')], 'variable_was_changed': [(3, '0')], 'set_slot_part': [(18, '81')], 'VEC_micro_operation_heap_safe_push': [(2, '2')], 'adjust_mems': [(8, '2')], 'add_uses': [(7, '8'), (7, '15'), (1, '94'), (5, '95')], 'add_with_sets': [(8, '1')], 'shared_hash_destroy': [(5, '0')], 'remove_value_chain': [(1, '9'), (8, '14')], 'clobber_slot_part': [(20, '13')], 'canonicalize_values_star': [(4, '39'), (4, '70')], 'canonicalize_vars_star': [(6, '26')], 'variable_post_merge_new_vals': [(4, '0'), (2, '65')], 'find_mem_expr_in_1pdv': [(4, '0')], 'dataflow_set_preserve_mem_locs': [(5, '1'), (5, '68'), (3, '71'), (3, '101')], 'val_resolve': [(1, '4')], 'vt_find_locations': [(279, '1'), (3, '15'), (6, '268')], 'emit_note_insn_var_location': [(81, '0'), (11, '14'), (17, '46')], 'check_changed_vars_3': [(1, '20')], 'check_changed_vars_1': [(1, '0')], 'emit_notes_for_differences_2': [(5, '1')], 'build_cgraph_edges': [(5, '37')], 'fix_reg_equiv_init': [(12, '1')], 'ira_init_register_move_cost': [(2, '16')], 'setup_alloc_regs': [(8, '0')], 'setup_reg_class_relations': [(8, '136')], 'find_reg_class_closure': [(14, '14')], 'ira_init': [(8, '312')], 'validate_equiv_mem_from_store': [(5, '1')], 'setup_allocno_assignment_flags': [(3, '4')], 'init_live_subregs': [(1, '0')], 'ira': [(3, '28'), (3, '116')], 'place_field': [(5, '4')], 'finalize_type_size': [(18, '5')], 'layout_type': [(33, '0')], 'initialize_sizetypes': [(17, '0')], 'set_sizetype': [(4, '3')], 'layout_decl': [(1, '0'), (8, '2'), (20, '9')], 'make_fract_type': [(20, '0')], 'make_accum_type': [(20, '0')], '_cpp_handle_directive': [(65, '3'), (20, '260')], 'do_pragma_push_macro': [(6, '12')], 'destringize_and_run': [(4, '47')], 'find_answer': [(4, '3'), (3, '6')], 'do_assert': [(28, '2')], 'push_conditional': [(6, '5')], 'do_ifndef': [(3, '2')], 'do_ifdef': [(3, '2')], 'do_include_common': [(25, '20')], 'get__Pragma_string': [(1, '0'), (4, '1')], 'cpp_pop_definition': [(41, '0')], 'do_pragma_pop_macro': [(3, '0'), (6, '16'), (6, '23')], 'cpp_push_buffer': [(6, '5')], 'cplus_demangle_type': [(3, '70')], 'd_cv_qualifiers': [(3, '12')], 'd_add_substitution': [(3, '0')], 'd_number': [(2, '0')], 'd_compact_number': [(1, '0')], 'd_unqualified_name': [(4, '2')], 'd_template_args': [(8, '14')], 'cplus_demangle_mangled_name': [(5, '0')], 'd_encoding': [(9, '2')], 'd_append_char': [(2, '0')], 'd_print_comp': [(2, '172'), (10, '288')], 'd_print_function_type': [(12, '10')], 'ipa_detect_param_modifications': [(2, '16')], 'ipa_analyze_params_uses': [(9, '18')], 'vect_mark_stmts_to_be_vectorized': [(13, '7'), (8, '8'), (5, '236')], 'vect_stmt_relevant_p': [(4, '40')], 'vect_mark_relevant': [(1, '11'), (3, '13')], 'vect_is_simple_use': [(5, '0'), (3, '3')], 'vect_init_vector': [(9, '8')], 'vectorizable_type_promotion': [(7, '6'), (10, '8'), (40, '10'), (1, '11'), (14, '119'), (5, '122')], 'vectorizable_type_demotion': [(8, '4'), (18, '5'), (2, '39')], 'vectorizable_conversion': [(66, '0'), (25, '1'), (8, '2'), (11, '7'), (7, '9'), (14, '11'), (6, '13')], 'rename_ssa_copies': [(3, '48')], 'find_bswap_1': [(1, '1')], 'VEC_gimple_heap_safe_push': [(2, '2'), (2, '2'), (2, '2'), (2, '2'), (2, '2'), (2, '0')], 'execute_cse_reciprocals_1': [(1, '1')], 'pointer_set_insert': [(19, '0'), (6, '19')], 'pointer_map_insert': [(12, '0'), (1, '24')], 'gsi_last': [(2, '1'), (2, '1'), (2, '1')], 'gimple_alloc_stat': [(14, '0')], 'is_gimple_reg': [(3, '0')], 'is_gimple_val': [(3, '0')], 'gimple_cond_get_ops_from_tree': [(5, '3')], 'gimple_copy': [(3, '0'), (7, '1')], 'get_call_expr_in': [(3, '0'), (7, '1')], 'canonicalize_cond_expr_cond': [(8, '0')], 'iterative_hash_name': [(5, '0')], 'iterative_hash_gimple_type': [(6, '5'), (1, '60')], 'type_pair_eq': [(2, '3')], 'compare_type_names_p': [(5, '0'), (5, '1')], 'gimple_types_compatible_p': [(7, '6'), (5, '45')], 'gimple_signed_or_unsigned_type': [(2, '21')], 'count_uses_and_derefs': [(10, '7')], 'walk_stmt_load_store_addr_ops': [(4, '33')], 'VEC_int_heap_safe_push': [(2, '2'), (2, '2'), (2, '2'), (2, '2')], 'VEC_bitmap_heap_safe_push': [(2, '2')], 'rdg_build_partitions': [(3, '3')], 'ldist_gen': [(9, '1')], 'cse_insn': [(4, '27'), (11, '154'), (5, '309'), (3, '456'), (6, '475'), (8, '478'), (2, '832'), (12, '1090')], 'hash_rtx_cb': [(13, '17')], 'cse_rtx_varies_p': [(7, '0')], 'fold_rtx': [(1, '4'), (67, '7'), (74, '8'), (36, '10'), (1, '294')], 'rehash_using_reg': [(5, '1')], 'insert_with_costs': [(9, '6'), (3, '81')], 'merge_equiv_classes': [(5, '10')], 'count_reg_usage': [(8, '1')], 'cse_cc_succs': [(8, '2'), (2, '49')], 'expand_phi_nodes': [(4, '205')], 'emit_partition_copy': [(6, '0')], 'rewrite_out_of_ssa': [(3, '134')], 'coverage_counter_alloc': [(7, '0')], 'tree_coverage_counter_ref': [(4, '4')], 'tree_coverage_counter_addr': [(4, '4')], 'get_integer_term': [(5, '0')], 'offset_within_block_p': [(2, '0')], 'refers_to_regno_p': [(5, '2'), (3, '5')], 'note_stores': [(5, '0')], 'set_noop_p': [(5, '7')], 'noop_move_p': [(5, '2')], 'dead_or_set_regno_p': [(5, '2'), (5, '5')], 'may_trap_p_1': [(8, '109')], 'for_each_rtx_1': [(9, '1')], 'replace_label': [(2, '0')], 'find_first_parameter_load': [(2, '28')], 'rtx_cost': [(2, '0')], 'canonicalize_condition': [(6, '22')], 'truncated_to_mode': [(6, '0')], 'linemap_add': [(9, '65')], 'linemap_line_start': [(8, '1')], 'linemap_lookup': [(3, '1')], 'partition_view_fini': [(9, '13')], 'var_map_base_init': [(3, '28')], 'partition_view_bitmap': [(2, '4')], 'mark_all_vars_used_1': [(3, '2')], 'remove_unused_scope_block_p': [(8, '4')], 'remove_unused_locals': [(2, '130'), (16, '316')], 'calculate_live_on_exit': [(13, '1'), (2, '63'), (3, '114')], 'loe_visit_block': [(5, '37'), (5, '59')], 'dump_live_info': [(1, '5'), (1, '7')], 'compute_available': [(4, '25')], 'compute_antinout_edge': [(4, '24')], 'gather_interchange_stats': [(5, '7'), (6, '50'), (2, '153')], 'expr_first': [(8, '0')], 'expr_last': [(8, '0')], 'htab_find_with_hash': [(2, '29')], 'htab_find_slot_with_hash': [(2, '36')], 'noce_emit_move_insn': [(6, '7')], 'noce_try_cmove_arith': [(2, '61')], 'cond_move_convert_if_block': [(1, '9')], 'cond_move_process_if_block': [(23, '6'), (3, '19')], 'block_jumps_and_fallthru_p': [(2, '12')], 'block_fallthru': [(2, '5')], 'dead_or_predicable': [(19, '0')], 'find_if_header': [(12, '95')], 'cgraph_remove_node': [(9, '19'), (9, '29'), (3, '127')], 'cgraph_make_decl_local': [(8, '2')], 'cgraph_edge_remove_caller': [(2, '6')], 'cgraph_edge_remove_callee': [(2, '6')], 'dump_cgraph_node': [(7, '61'), (2, '90'), (3, '103'), (2, '122')], 'builtin_define_fixed_point_constants': [(18, '8')], 'fel_init': [(36, '0'), (2, '5'), (36, '0'), (2, '0'), (2, '5')], 'loop_single_full_bb_p': [(3, '5')], 'sbitmap_iter_cond': [(2, '20'), (2, '20'), (2, '20'), (2, '20'), (2, '20')], 'sms_order_nodes': [(9, '63')], 'normalize_sched_times': [(2, '61')], 'sms_schedule': [(19, '128')], 'VEC_dr_p_heap_safe_push': [(2, '2')], 'vect_supportable_dr_alignment': [(12, '65')], 'vector_alignment_reachable_p': [(4, '11')], 'vect_enhance_data_refs_alignment': [(4, '116')], 'link_imm_use_to_list': [(10, '5')], 'vect_setup_realignment': [(3, '4')], 'vect_transform_strided_load': [(5, '1')], 'lto_symtab_register_decl': [(7, '0')], 'lto_symtab_merge_decls_1': [(6, '80'), (2, '126')], 'tree_simplify_using_condition_1': [(21, '0')], 'finite_loop_p': [(13, '9')], 'chain_of_csts_start': [(6, '0')], 'emit_swap_insn': [(1, '10')], 'change_stack': [(5, '0'), (3, '16'), (4, '75')], 'check_asm_stack_operands': [(5, '1'), (36, '3'), (2, '50')], 'replace_reg': [(6, '0')], 'subst_asm_stack_regs': [(5, '7'), (7, '28'), (6, '52'), (12, '297')], 'move_for_stack_reg': [(24, '0')], 'next_flags_user': [(2, '8')], 'swap_rtx_condition': [(5, '3'), (3, '28'), (4, '29')], 'subst_stack_regs_pat': [(1, '10'), (2, '89')], 'subst_stack_regs': [(4, '0'), (4, '2'), (20, '8')], 'convert_regs_2': [(2, '41')], 'convert_regs': [(3, '147')], 'loop_optimizer_finalize': [(12, '1')], 'loop_optimizer_init': [(1, '0')], 'record_store': [(34, '5'), (9, '6'), (3, '34'), (35, '92'), (5, '121'), (3, '216')], 'check_mem_read_rtx': [(14, '19'), (5, '20'), (10, '49')], 'canon_address': [(1, '0'), (5, '44')], 'VEC_group_info_t_heap_safe_push': [(2, '0')], 'clear_alias_set_lookup': [(2, '1')], 'replace_inc_dec_mem': [(4, '1')], 'scan_reads_nospill': [(19, '69')], 'mark_reachable_blocks': [(8, '5')], 'gen_lowpart_general': [(7, '0')], 'save_replacement_text': [(3, '22'), (1, '28')], 'mf_xform_derefs_1': [(10, '62')], 'print_exp': [(2, '989')], 'create_tmp_var_raw': [(14, '0')], 'gimplify_asm_expr': [(3, '40')], 'force_gimple_operand': [(16, '1')], 'pop_gimplify_context': [(4, '1')], 'omp_notice_variable': [(3, '17')], 'omp_add_variable': [(10, '2')], 'canonicalize_component_ref': [(3, '5')], 'gimple_boolify': [(16, '13')], 'shortcut_cond_expr': [(40, '0'), (25, '1'), (26, '12'), (5, '64'), (15, '101')], 'gimplify_init_ctor_preeval_1': [(6, '4')], 'force_labels_r': [(3, '1')], 'gimple_fold_indirect_ref': [(9, '4')], 'voidify_wrapper_expr': [(1, '9')], 'gimplify_adjust_omp_clauses': [(13, '13')], 'annotate_all_with_location_after': [(1, '1')], 'gimplify_expr': [(3, '46'), (11, '111'), (12, '263'), (26, '430'), (4, '468'), (25, '579'), (15, '655'), (8, '674'), (29, '817'), (11, '848')], 'gimplify_scan_omp_clauses': [(1, '7')], 'gimplify_modify_expr_rhs': [(1, '13')], 'gimplify_init_constructor': [(7, '0'), (20, '5'), (1, '7')], 'internal_get_tmp_var': [(3, '5')], 'gimplify_body': [(4, '0'), (6, '1')], 'gimple_regimplify_operands': [(5, '38')], 'record_last_reg_set_info': [(1, '3')], 'record_last_set_info': [(2, '0'), (2, '0')], 'lower_function_body': [(11, '9'), (2, '22')], 'lower_gimple_bind': [(12, '1')], 'lower_sequence': [(6, '2')], 'sbitmap_copy': [(204, '0')], 'sbitmap_zero': [(163, '0')], 'sbitmap_ones': [(5, '0')], 'sbitmap_intersection_of_succs': [(2, '6')], 'sbitmap_intersection_of_preds': [(10, '2')], 'sbitmap_union_of_succs': [(2, '7')], 'sbitmap_union_of_preds': [(1, '4'), (2, '7')], 'regmove_forward_pass': [(11, '109')], 'set_reference_vars_info': [(1, '3'), (2, '8')], 'ipa_reference_write_summary': [(6, '12')], 'generate_summary': [(5, '17'), (78, '20')], 'propagate_bits': [(9, '1')], 'propagate': [(30, '11')], 'find_uses_to_rename_bb': [(2, '23')], 'bmp_iter_and_init': [(1, '0'), (5, '19'), (2, '0')], 'verify_loop_closed_ssa': [(2, '21')], 'gimple_set_op': [(2, '0')], 'try_crossjump_to_edge': [(1, '65'), (2, '264'), (2, '751')], 'delete_unreachable_blocks': [(3, '56')], 'thread_jump': [(3, '73')], 'merge_memattrs': [(2, '4'), (2, '9'), (2, '29')], 'try_crossjump_bb': [(4, '75')], 'try_optimize_cfg': [(7, '111')], 'cleanup_cfg': [(7, '114')], '_cpp_clean_line': [(4, '47'), (30, '48')], 'next_tokenrun': [(2, '1')], '_cpp_process_line_notes': [(12, '228')], '_cpp_get_fresh_line': [(2, '1'), (2, '25')], '_cpp_get_buff': [(1, '6')], 'lex_identifier': [(1, '0')], '_cpp_lex_direct': [(2, '8')], '_cpp_lex_token': [(1, '2')], 'create_new_iv': [(39, '43'), (2, '46')], 'multiplier_allowed_in_address_p': [(1, '3')], 'set_iv': [(3, '4')], 'find_interesting_uses_address': [(6, '9')], 'find_interesting_uses_stmt': [(4, '7')], 'find_depends': [(1, '14')], 'add_candidate_1': [(11, '30')], 'computation_cost': [(6, '8')], 'stmt_after_inc_pos': [(1, '3')], 'iv_ca_narrow': [(5, '8'), (5, '11')], 'iv_ca_prune': [(35, '30')], 'free_loop_data': [(2, '33')], 'tree_ssa_iv_optimize_loop': [(3, '37')], 'omega_pretty_print_problem': [(6, '4'), (1, '199')], 'omega_unprotect_variable': [(2, '1'), (1, '6'), (1, '69'), (5, '296'), (2, '414')], 'omega_unprotect_1': [(5, '95')], 'omega_constrain_variable_sign': [(6, '0'), (10, '5'), (1, '6'), (10, '9')], 'omega_delete_variable': [(1, '1'), (4, '34')], 'omega_substitute': [(7, '51'), (2, '104')], 'omega_print_term': [(3, '13')], 'omega_delete_geq': [(5, '2')], 'setup_packing': [(2, '2')], 'omega_substitute_red_1': [(2, '5')], 'omega_do_elimination': [(8, '96')], 'omega_add_new_wild_card': [(5, '161')], 'omega_delete_geq_extra': [(5, '2')], 'omega_eliminate_redundant': [(9, '1'), (13, '99')], 'omega_solve_problem': [(58, '8'), (7, '10'), (68, '104'), (3, '168')], 'omega_simplify_problem': [(2, '3'), (3, '9')], 'omega_problem_has_red_equations': [(2, '54')], 'omega_constrain_variable_value': [(8, '0')], 'query_coupled_variable': [(4, '14')], 'omega_query_variable_bounds': [(1, '14')], 'omega_initialize': [(3, '0')], '_objalloc_alloc': [(5, '2')], 'ira_flattening': [(10, '0'), (6, '17'), (4, '21'), (5, '43'), (1, '161')], 'ira_build': [(8, '26')], 'VEC_ira_allocno_t_heap_safe_push': [(2, '2'), (2, '2')], 'add_to_allocno_conflicts': [(10, '4'), (7, '35')], 'sparseset_set_bit': [(4, '2'), (3, '2')], 'compress_allocno_conflict_vec': [(2, '5')], 'create_loop_allocnos': [(4, '6'), (6, '115')], 'create_loop_tree_node_allocnos': [(2, '99')], 'mark_loops_for_removal': [(9, '0')], 'VEC_ira_loop_tree_node_t_heap_safe_push': [(2, '2')], 'remove_uneccesary_loop_nodes_from_loop_tree': [(6, '0'), (2, '7')], 'propagate_some_info_from_allocno': [(4, '107')], 'remove_unnecessary_regions': [(18, '180')], 'dump_gimple_stmt': [(9, '1')], 'dump_gimple_seq': [(8, '2')], 'no_conflict_move_test': [(5, '2')], 'prepare_cmp_insn': [(3, '32'), (77, '113')], 'expand_binop': [(5, '93')], 'have_add2_insn': [(1, '0')], 'have_sub2_insn': [(1, '0')], 'expand_float': [(53, '5'), (16, '6')], 'gen_fractuns_conv_libfunc': [(6, '0')], 'expand_vec_cond_expr': [(1, '0')], 'register_attribute': [(12, '0')], 'decl_attributes': [(6, '49'), (14, '98')], 'calc_dfs_tree': [(3, '0'), (3, '133')], 'calc_dfs_tree_nonrec': [(1, '78')], 'assign_dfs_numbers': [(6, '5')], 'VEC_basic_block_heap_safe_push': [(2, '2'), (2, '2'), (2, '2'), (2, '2'), (2, '2')], 'dominated_by_p': [(3, '1')], 'recompute_dominator': [(7, '16'), (2, '20')], 'iterate_fix_dominators': [(22, '7'), (6, '103')], 'vect_build_slp_tree': [(1, '3'), (7, '92'), (6, '115')], 'VEC_slp_tree_heap_safe_push': [(2, '2')], 'vect_transform_slp_perm_load': [(9, '6'), (32, '7')], 'vect_get_constant_vectors': [(2, '14')], 'sum_edge_counts': [(2, '5')], 'add_edge': [(5, '0')], 'enqueue': [(1, '6')], 'mcf_smooth_cfg': [(8, '578')], 'read_original_directory': [(8, '0')], 'sra_modify_assign': [(2, '6'), (4, '49'), (2, '80')], 'type_internals_preclude_sra_p': [(7, '0')], 'dump_dereferences_table': [(3, '1')], 'build_access_from_expr_1': [(5, '8')], 'ipa_early_sra': [(3, '1007')], 'relink_to_new_repr': [(1, '0')], 'add_access_to_work_queue': [(9, '0')], 'propagate_subaccesses_across_link': [(6, '4')], 'is_hidden_global_store': [(7, '2')], 'sink_code_in_bb': [(1, '59'), (15, '63')], 'make_preds_opaque': [(1, '8')], 'reg_becomes_live': [(2, '0')], 'optimize_mode_switching': [(43, '480')], 'do_compare_rtx_and_jump': [(37, '45')], 'do_jump_by_parts_greater': [(1, '0'), (1, '1')], 'do_jump': [(2, '10'), (6, '43')], 'lambda_matrix_mult': [(24, '0')], 'div_and_round_double': [(16, '4')], 'make_range': [(4, '104')], 'fold_binary_loc': [(3, '0'), (13, '15'), (6, '24'), (54, '227'), (6, '308'), (18, '754'), (3, '918'), (3, '919'), (6, '920'), (1, '1078'), (13, '1262')], 'fold_truthop': [(90, '2'), (6, '412')], 'neg_double': [(67, '0')], 'mul_double_with_sign': [(29, '16')], 'lshift_double': [(3, '1')], 'int_binop_types_match_p': [(5, '2')], 'fold_convert_const': [(1, '39')], 'operand_equal_p': [(13, '3'), (4, '5'), (2, '8'), (1, '10'), (16, '55')], 'fold_ignored_result': [(14, '0')], 'negate_expr_p': [(7, '0'), (7, '495')], 'tree_swap_operands_p': [(1, '0'), (3, '1')], 'sign_bit_p': [(1, '4')], 'tree_binary_nonnegative_warnv_p': [(3, '4')], 'fold_indirect_ref_1': [(4, '0')], 'fold_comparison': [(58, '31'), (43, '129'), (162, '236')], 'extract_muldiv': [(18, '53'), (17, '56')], 'split_tree': [(8, '11')], 'fold_convert_loc': [(11, '4'), (5, '5')], 'fold_unary_loc': [(16, '80'), (62, '129'), (9, '224')], 'build_fold_addr_expr_with_type_loc': [(8, '0')], 'fold_ternary_loc': [(5, '172')], 'fold_cond_expr_with_comparison': [(3, '96'), (3, '97')], 'fold_negate_expr': [(7, '8'), (2, '258')], 'const_binop': [(9, '16')], 'fold': [(12, '40')], 'dump_all_asserts': [(11, '4')], 'register_edge_assert_for_2': [(30, '49')], 'register_edge_assert_for': [(6, '10'), (7, '11')], 'check_array_bounds': [(9, '0')], 'compare_name_with_value': [(4, '0')], 'simplify_switch_using_ranges': [(2, '33')], 'vrp_visit_phi_node': [(3, '4')], 'extract_range_from_unary_expr': [(1, '0')], 'extract_range_from_assignment': [(1, '60')], 'vrp_visit_stmt': [(5, '27')], 'add_control_edge': [(5, '37')], 'VEC_gimple_gc_safe_push': [(2, '2')], 'simulate_stmt': [(2, '29')], 'substitute_and_fold': [(119, '5'), (1, '12'), (4, '14'), (19, '15'), (29, '17'), (2, '282'), (3, '327')], 'verify_flow_info': [(1, '17'), (4, '70'), (4, '266')], 'dump_bb': [(28, '22')], 'redirect_edge_and_branch': [(5, '3')], 'split_block': [(5, '3')], 'move_block_after': [(2, '3')], 'delete_basic_block': [(5, '3')], 'split_edge': [(2, '67')], 'create_basic_block': [(5, '3')], 'can_merge_blocks_p': [(2, '3')], 'predict_edge': [(2, '3')], 'merge_blocks': [(5, '23'), (2, '28')], 'make_forwarder_block': [(23, '0'), (2, '12'), (15, '81')], 'tidy_fallthru_edges': [(3, '23')], 'duplicate_block': [(2, '4'), (5, '51')], 'block_ends_with_call_p': [(5, '3')], 'block_ends_with_condjump_p': [(5, '3')], 'flow_call_edges_add': [(5, '3')], 'cfg_hook_duplicate_loop_to_header_edge': [(2, '1')], 'extract_cond_bb_edges': [(2, '1')], 'lv_add_condition_to_bb': [(2, '1')], '__dpd64FromNumber': [(1, '1'), (2, '2'), (4, '53')], 'decDigitsFromDPD': [(4, '0')], '__dpd64ToNumber': [(12, '5')], 'pp_append_r': [(7, '15')], 'pp_base_formatted_text': [(1, '10')], 'pp_base_newline': [(1, '10')], 'pp_base_character': [(1, '0')], 'pp_base_format': [(70, '3'), (83, '7'), (17, '78'), (21, '210'), (5, '386'), (6, '531')], 'lto_output_data_stream': [(4, '3')], 'VEC_lto_out_decl_state_ptr_heap_safe_push': [(2, '2')], 'independent_of_stmt_p': [(2, '14')], 'find_tail_calls': [(2, '157')], 'tree_optimize_tail_calls_1': [(4, '163')], 'destroy_loop_vec_info': [(4, '24')], 'vect_estimate_min_profitable_iters': [(1, '29'), (15, '38')], 'vect_analyze_loop_operations': [(17, '21')], 'get_initial_def_for_reduction': [(13, '11')], 'vectorizable_reduction': [(1, '17'), (32, '24')], 'vect_loop_kill_debug_uses': [(1, '43')], 'vect_recog_pow_pattern': [(6, '2')], 'vect_recog_dot_prod_pattern': [(11, '11')], 'mark_not_eliminable': [(10, '11')], 'finish_spills': [(2, '5'), (11, '7'), (6, '22'), (3, '24'), (5, '32'), (1, '34'), (1, '128')], 'eliminate_regs_in_insn': [(59, '7'), (7, '17')], 'find_reload_regs': [(51, '7')], 'compute_use_by_pseudos': [(5, '0')], 'has_nonexceptional_receiver': [(3, '89')], 'set_offsets_for_label': [(4, '0')], 'eliminate_regs_1': [(54, '6'), (1, '38'), (3, '50'), (5, '91')], 'elimination_effects': [(2, '19'), (6, '49')], 'update_eliminable_offsets': [(3, '3')], 'update_eliminables': [(9, '1'), (8, '39')], 'select_reload_regs': [(51, '0')], 'mark_reload_reg_in_use': [(22, '0'), (1, '1'), (11, '21'), (22, '55')], 'reload_reg_free_for_value_p': [(56, '40')], 'set_reload_reg': [(2, '3')], 'choose_reload_regs': [(11, '4'), (18, '16')], 'forget_old_reloads_1': [(10, '1')], 'reload_as_needed': [(6, '513')], 'fixup_abnormal_edges': [(3, '4'), (4, '24')], 'reload': [(51, '36'), (3, '118'), (5, '2222')], 'bb_with_exit_edge_p': [(3, '5')], 'gimple_mod_subtract_transform': [(9, '5')], 'set_histogram_value': [(6, '1')], 'label_rtx': [(13, '0')], 'decl_overlaps_hard_reg_set_p': [(4, '5')], 'expand_asm_operands': [(71, '35'), (5, '233'), (17, '264'), (4, '360'), (9, '398'), (3, '424')], 'expand_return': [(25, '20')], 'balance_case_nodes': [(7, '22')], 'emit_case_nodes': [(39, '3')], 'VEC_void_p_heap_safe_push': [(2, '2')], 'VEC_alias_set_entry_gc_safe_push': [(2, '0')], 'nonoverlapping_memrefs_p': [(59, '25'), (8, '39'), (5, '40'), (3, '53'), (8, '54'), (44, '57')], 'base_alias_check': [(48, '11')], 'memrefs_conflict_p': [(26, '1')], 'build_rdg': [(1, '4'), (5, '13')], 'init_omega_for_ddr_1': [(3, '80')], 'dump_conflict_function': [(2, '0')], 'dr_may_alias_p': [(5, '80')], 'free_conflict_function': [(2, '0')], 'VEC_lambda_vector_heap_safe_push': [(2, '2')], 'VEC_ddr_p_heap_safe_push': [(2, '2')], 'initialize_matrix_A': [(5, '0')], 'common_affine_function': [(2, '1')], 'init_omega_eq_with_af': [(6, '5')], 'compute_affine_dependence': [(2, '74')], 'compute_all_dependences': [(4, '66')], 'VEC_data_ref_loc_heap_safe_push': [(2, '2')], 'VEC_data_reference_p_heap_safe_push': [(2, '2')], 'VEC_loop_p_heap_safe_push': [(2, '2')], 'create_rdg_edges': [(6, '94')], 'set_mem_attributes_minus_bitpos': [(4, '8'), (2, '20')], 'set_mem_attrs_for_spill': [(16, '10')], 'get_mem_attrs': [(2, '12')], 'set_mem_alias_set': [(18, '6')], 'get_reg_attrs': [(3, '2')], 'set_reg_attrs_from_value': [(7, '2')], 'set_reg_attrs_for_decl_rtl': [(3, '1')], 'mark_user_reg': [(8, '0')], 'gen_lowpart_common': [(12, '3')], 'adjust_address_1': [(39, '12')], 'set_mem_addr_space': [(41, '9')], 'set_mem_expr': [(14, '6')], 'set_mem_offset': [(14, '6')], 'offset_address': [(5, '10')], 'copy_rtx_if_shared_1': [(8, '0'), (12, '8')], 'verify_rtx_sharing': [(7, '0')], 'emit_insn_after_1': [(5, '5')], 'add_insn_before': [(2, '0')], 'reorder_insns_nobb': [(4, '2')], 'restore_other_notes': [(5, '6')], 'schedule_insn': [(4, '167')], 'create_check_block_twin': [(4, '51')], 'ready_lastpos': [(3, '6')], 'rank_for_schedule': [(14, '2'), (7, '89')], 'setup_insn_max_reg_pressure': [(10, '0'), (3, '7'), (2, '29')], 'bb_note': [(5, '0')], 'max_issue': [(12, '2'), (7, '3'), (1, '33')], 'ready_remove': [(10, '1')], 'ready_add': [(16, '0')], 'move_succs': [(2, '11')], 'move_block_after_check': [(2, '13')], 'move_insn': [(6, '29'), (3, '36')], 'fix_tick_ready': [(2, '27')], 'try_ready': [(2, '91')], 'fix_recovery_deps': [(6, '12')], 'find_fallthru_edge': [(2, '28'), (2, '35')], 'extend_h_i_d': [(2, '0')], 'sched_finish_ready_list': [(25, '0')], 'unlink_bb_notes': [(5, '12')], 'sha1_process_block': [(127, '2'), (27, '7'), (62, '132')], 'rest_of_handle_final': [(6, '21')], 'compute_alignments': [(13, '5')], 'shorten_branches': [(2, '10'), (5, '23'), (7, '37'), (10, '439')], 'asm_fprintf': [(7, '162')], 'get_mem_expr_from_op': [(18, '6')], 'output_asm_label': [(5, '1')], 'output_addr_const': [(1, '0'), (4, '11')], 'output_asm_insn': [(133, '1'), (74, '82')], 'dump_points_to_solution': [(4, '0')], 'ao_ref_init_from_ptr_and_size': [(8, '0')], 'ptr_deref_may_alias_decl_p': [(5, '0')], 'aliasing_component_refs_p': [(3, '34'), (16, '38')], 'ptr_derefs_may_alias_p': [(8, '0')], 'get_continuation_for_phi': [(8, '0')], 'gsi_split_seq_after': [(2, '1')], 'ira_build_conflicts': [(6, '2'), (2, '25'), (2, '85')], 'print_conflicts': [(8, '1')], 'build_conflict_bit_table': [(3, '19')], 'ira_allocno_set_iter_cond': [(1, '1'), (2, '24')], 'process_regs_for_copy': [(6, '36')], 'execute_optimize_stdarg': [(10, '1'), (14, '36'), (4, '365')], 'reachable_at_most_once': [(6, '36')], 'find_va_list_reference': [(7, '0')], 'aff_combination_scale': [(2, '1')], 'aff_combination_add_elt': [(2, '1'), (7, '2'), (2, '6')], 'aff_combination_convert': [(2, '1')], 'aff_combination_remove_elt': [(1, '1')], 'aff_combination_expand': [(1, '0'), (5, '99'), (5, '124')], 'ipcp_versionable_function_p': [(2, '3')], 'ipcp_propagate_stage': [(10, '7'), (12, '8'), (13, '13'), (2, '736')], 'VEC_opt_t_heap_safe_push': [(2, '2')], 'lto_register_user_option': [(8, '0')], 'set_move_mark': [(17, '6')], 'mark_reg_store': [(1, '2'), (5, '5')], 'record_use': [(2, '0')], 'hash_invariant_expr_1': [(4, '1')], 'find_identical_invariants': [(19, '4')], 'invariant_expr_equal_p': [(2, '1')], 'get_cover_class_and_nregs': [(5, '2')], 'get_inv_cost': [(4, '84')], 'find_invariants_to_move': [(34, '5')], 'move_invariant_reg': [(3, '4'), (5, '78')], 'move_single_loop_invariants': [(34, '17')], 'move_loop_invariants': [(34, '20'), (3, '691')], 'lambda_body_vector_new': [(6, '5')], 'lambda_linear_expression_new': [(6, '5'), (13, '9')], 'lambda_loopnest_new': [(5, '2'), (6, '5')], 'lambda_lattice_compute_base': [(2, '53')], 'can_put_in_inner_loop': [(3, '0')], 'gcc_loopnest_to_lambda_loopnest': [(1, '54')], 'lle_to_gcc_expression': [(4, '8')], 'lambda_loopnest_to_gcc_loopnest': [(16, '9')], 'lambda_collect_parameters_from_af': [(4, '0')], 'cgraph_remove_unreachable_nodes': [(6, '4'), (1, '7'), (4, '12')], 'cgraph_postorder': [(13, '5')], 'function_and_variable_visibility': [(5, '57'), (1, '100'), (1, '190')], 'set_edge_can_fallthru_flag': [(2, '25')], 'forwarder_block_p': [(3, '12')], 'can_fallthru': [(4, '32')], 'could_fall_through': [(2, '17')], 'find_unreachable_blocks': [(4, '4'), (3, '15'), (4, '24')], 'create_edge_list': [(2, '33'), (4, '58')], 'verify_edge_list': [(7, '17'), (4, '107')], 'find_edge': [(2, '21'), (2, '25')], 'remove_fake_predecessors': [(2, '2')], 'inverted_post_order_compute': [(4, '35'), (3, '121')], 'dfs_enumerate_from': [(4, '39')], 'gen_split_1908': [(5, '11')], 'gen_smaxv16qi3': [(14, '4')], 'gen_smaxv4si3': [(14, '4')], 'gen_umaxv4si3': [(14, '4')], 'gen_sminv16qi3': [(14, '5')], 'gen_sminv4si3': [(14, '5')], 'gen_uminv8hi3': [(14, '5')], 'gen_uminv4si3': [(14, '5')], 'gen_split_1881': [(5, '2')], 'gen_split_1882': [(5, '2')], 'gen_split_1990': [(5, '6')], 'gen_split_1991': [(5, '6')], 'gen_split_1994': [(5, '5')], 'gen_split_1995': [(5, '5')], 'gen_split_2077': [(3, '9')], 'gen_asinxf2': [(21, '26')], 'gen_acosxf2': [(21, '26')], 'gen_expm1xf2': [(10, '0')], 'gen_strset': [(2, '0')], 'gen_split_2417': [(14, '8')], 'gen_peephole2_2485': [(4, '0')], 'gen_mulv4si3': [(2, '7')], 'gen_umaxv8hi3': [(10, '9')], 'simple_move_operand': [(6, '0')], 'simple_move': [(6, '8')], 'simplify_subreg_concatn': [(7, '1'), (2, '2')], 'resolve_simple_move': [(5, '11'), (5, '29')], 'decompose_multiword_subregs': [(1, '23')], 'clear_edges': [(4, '35')], 'VEC_edge_gc_safe_push': [(2, '2')], 'check_bb_profile': [(4, '27'), (4, '44')], 'dump_bb_info': [(24, '17')], 'alloc_aux_for_edges': [(2, '20'), (3, '32')], 'clear_aux_for_edges': [(2, '17'), (3, '28')], 'update_bb_profile_for_threading': [(15, '4'), (8, '55'), (2, '57')], 'scale_bbs_frequencies_int': [(2, '13')], 'scale_bbs_frequencies_gcov_type': [(2, '21'), (2, '33')], 'parser_build_unary_op': [(19, '3')], 'c_incomplete_type_error': [(5, '0')], 'comptypes_internal': [(5, '4'), (2, '40')], 'composite_type': [(47, '26')], 'c_objc_common_truthvalue_conversion': [(6, '3')], 'build_unary_op': [(9, '13'), (16, '31')], 'build_binary_op': [(8, '0'), (30, '34'), (5, '45'), (6, '122')], 'lookup_field': [(9, '12')], 'build_component_ref': [(8, '8')], 'build_indirect_ref': [(7, '0'), (1, '4')], 'build_array_ref': [(10, '4')], 'build_external_ref': [(3, '0')], 'c_expr_sizeof_expr': [(19, '5'), (13, '17')], 'c_expr_sizeof_type': [(15, '4')], 'convert_for_assignment': [(26, '47'), (11, '53')], 'build_conditional_expr': [(51, '24'), (3, '54')], 'print_spelling': [(10, '1')], 'digest_init': [(3, '8')], 'build_c_cast': [(2, '143')], 'c_cast_expr': [(3, '7')], 'build_modify_expr': [(5, '5')], 'finish_init': [(28, '0')], 'set_nonincremental_init': [(2, '0')], 'output_init_element': [(31, '4'), (7, '103'), (1, '104')], 'push_init_level': [(1, '0')], 'pop_init_level': [(17, '5'), (5, '6'), (1, '108')], 'process_init_element': [(11, '16')], 'c_finish_omp_clauses': [(10, '0')], 'remove_fallthru_edge': [(2, '5')], 'tree_forwarder_block_p': [(11, '18')], 'has_abnormal_incoming_edge_p': [(2, '5')], 'remove_forwarder_block': [(9, '14')], 'merge_phi_nodes': [(3, '43')], 'construct_exit_block': [(3, '124')], 'expand_one_var': [(7, '11')], 'estimated_stack_frame_size': [(9, '5')], 'discover_nonconstant_array_refs_r': [(2, '0'), (5, '1')], 'add_stack_var_conflict': [(5, '2')], 'add_partitioned_vars_to_ptset': [(9, '4')], 'expand_debug_expr': [(4, '15'), (7, '149'), (1, '200')], 'gimple_expand_cfg': [(2, '15'), (9, '422'), (2, '965'), (1, '1389'), (2, '1653')], 'VEC_chain_p_heap_safe_push': [(2, '2')], 'ref_at_iteration': [(2, '1')], 'execute_pred_commoning_cbck': [(4, '23')], 'alloc_node': [(6, '0'), (9, '22')], 'pp_c_type_qualifier_list': [(3, '0')], 'pp_c_type_specifier': [(4, '0')], 'pp_c_expression_list': [(4, '0')], 'pp_c_attributes': [(10, '2')], 'pp_c_abstract_declarator': [(2, '2')], 'can_be_nonlocal': [(3, '0')], 'copy_tree_body_r': [(1, '0')], 'remap_gimple_op_r': [(4, '11'), (5, '12')], 'copy_forbidden': [(5, '0')], 'copy_decl_for_dup_finish': [(18, '0')], 'copy_body': [(3, '79')], 'delete_unreachable_blocks_update_callgraph': [(3, '31')], 'tree_function_versioning': [(32, '3'), (3, '41'), (3, '118')], 'link_use_stmts_after': [(2, '0')], 'tree_ssa_phiprop': [(5, '48')], 'new_file_hash_entry': [(1, '3')], 'open_file': [(27, '0')], 'VEC_basic_block_gc_safe_grow': [(2, '0'), (2, '0')], 'input_string_internal': [(4, '10')], 'lto_input_tree': [(9, '0')], 'timevar_push_1': [(17, '2')], 'branch_prob': [(5, '165'), (2, '387'), (3, '1078'), (3, '1339'), (3, '1340')], 'compute_branch_probabilities': [(6, '39'), (5, '70'), (3, '931')], 'is_edge_inconsistent': [(2, '6')], 'sd_finish_insn': [(5, '0')], 'sched_analyze_1': [(2, '5')], 'mark_insn_reg_birth': [(2, '0')], 'sched_analyze_insn': [(3, '9'), (6, '15'), (17, '19'), (18, '23'), (137, '29'), (2, '85'), (6, '86'), (3, '138'), (5, '152'), (5, '1002'), (2, '1007')], 'deps_analyze_insn': [(3, '33')], 'remove_from_deps': [(7, '7')], 'extend_dependency_caches': [(3, '1'), (2, '3')], 'gimple_verify_flow_info': [(12, '75'), (8, '195')], 'cleanup_dead_labels_eh': [(32, '0')], 'cleanup_dead_labels': [(32, '2'), (3, '59')], 'verify_types_in_gimple_reference': [(15, '0')], 'verify_gimple_comparison': [(7, '2')], 'tree_node_can_be_shared': [(6, '0'), (6, '1')], 'verify_expr': [(2, '1')], 'add_phi_args_after_copy_edge': [(1, '1'), (2, '28')], 'add_phi_args_after_copy_bb': [(2, '5')], 'move_stmt_op': [(7, '6')], 'move_sese_region_to_fn': [(17, '0'), (5, '1'), (47, '7')], 'remove_edge_and_dominated_blocks': [(8, '8'), (4, '93'), (3, '111')], 'gimple_purge_dead_eh_edges': [(20, '0'), (1, '4')], 'gimple_purge_dead_abnormal_call_edges': [(15, '0')], 'gimple_purge_all_dead_eh_edges': [(14, '4')], 'execute_warn_function_return': [(2, '47'), (6, '70')], 'split_critical_edges': [(2, '24')], 'gimple_make_forwarder_block': [(2, '24')], 'gimple_duplicate_bb': [(17, '22')], 'gimple_split_block': [(2, '17')], 'create_bb': [(4, '17')], 'factor_computed_gotos': [(4, '10')], 'force_reg': [(3, '4')], 'break_out_memory_refs': [(9, '0')], 'use_anchored_address': [(5, '2')], 'promote_decl_mode': [(1, '0')], 'anti_adjust_stack_and_probe': [(7, '0')], 'print_rtx': [(11, '13'), (17, '53'), (3, '158')], 'finished_with_expr': [(2, '8')], 'add_to_partition_kill_list': [(2, '0')], 'make_dependent_on_partition': [(2, '0')], 'tree_lower_complex': [(177, '149')], 'deps_add_vpath': [(2, '4'), (2, '23')], 'deps_add_dep': [(2, '10')], 'strip_float_extensions': [(7, '3'), (4, '4')], 'convert_to_integer': [(2, '0'), (3, '106')], 'dfa_clean_insn_cache': [(4, '1')], 'c_common_valid_pch': [(3, '2')], 'init_move_cost': [(19, '3')], 'reg_scan_mark_refs': [(9, '24')], 'invalid_mode_change_p': [(2, '0')], 'gt_ggc_mx_ssa_operand_memory_d': [(13, '1')], 'gt_ggc_mx_gimple_statement_d': [(9, '141')], 'gt_ggc_mx_nb_iter_bound': [(13, '5')], 'gt_ggc_mx_rtx_def': [(5, '10')], 'gt_ggc_mx_gimple_seq_d': [(13, '7')], 'gt_ggc_mx_gimple_seq_node_d': [(9, '9')], 'gt_pch_nx_ssa_operand_memory_d': [(34, '0')], 'gt_pch_p_18gimple_statement_d': [(12, '8')], 'gt_pch_nx_gimple_statement_d': [(9, '141')], 'gt_pch_nx_nb_iter_bound': [(34, '3')], 'gt_pch_nx_rtx_def': [(5, '6')], 'gt_pch_nx_gimple_seq_d': [(16, '5')], 'gt_pch_nx_gimple_seq_node_d': [(9, '7')], 'get_named_event_id': [(7, '5')], '__dpd128FromNumber': [(1, '3'), (4, '28')], '__dpd128ToNumber': [(12, '4'), (12, '5'), (20, '6')], 'force_nonfallthru_and_redirect': [(7, '159')], 'delete_insn': [(10, '0')], 'purge_dead_edges': [(7, '4'), (5, '8'), (15, '10'), (2, '11'), (3, '69'), (5, '70'), (13, '73'), (1, '86')], 'commit_one_edge_insertion': [(5, '13'), (12, '70')], 'commit_edge_insertions': [(5, '3'), (2, '30'), (3, '40'), (3, '73')], 'print_rtl_with_bb': [(4, '49'), (22, '67'), (9, '107')], 'insert_insn_end_bb_new': [(6, '4')], 'rtl_block_ends_with_call_p': [(20, '0')], 'cfg_layout_merge_blocks': [(5, '17'), (5, '55')], 'rtl_split_block': [(3, '34'), (2, '37')], 'patch_jump_insn': [(4, '19')], 'cfg_layout_redirect_edge_and_branch': [(16, '0'), (3, '14'), (1, '22')], 'rtl_create_basic_block': [(1, '19')], 'rtl_verify_flow_info_1': [(3, '98'), (5, '177'), (3, '187'), (5, '223')], 'rtl_split_edge': [(25, '25'), (2, '33'), (2, '36')], 'rtl_merge_blocks': [(5, '17')], 'rtl_verify_flow_info': [(2, '28')], 'dump_varpool_node': [(5, '2')], 'varpool_mark_needed_node': [(1, '2'), (8, '7')], 'decide_is_variable_needed': [(3, '0')], 'varpool_finalize_decl': [(4, '0')], 'varpool_empty_needed_queue': [(3, '0')], 'fold_const_aggregate_ref': [(4, '32')], 'maybe_fold_offset_to_address': [(1, '2')], 'ccp_initialize': [(3, '50')], 'ccp_fold': [(3, '39')], 'cpp_interpret_string': [(19, '16'), (8, '28')], 'conversion_loop': [(4, '0')], 'one_utf8_to_cppchar': [(10, '0'), (3, '1')], 'one_utf8_to_utf32': [(2, '5')], 'convert_no_conversion': [(1, '6')], 'emit_numeric_escape': [(1, '29')], 'find_coalesce_pair': [(3, '2')], 'create_outofssa_var_map': [(4, '4'), (3, '309')], 'ssa_conflicts_add_one': [(2, '0')], 'live_track_process_def': [(1, '5')], 'ssa_conflicts_merge': [(14, '7')], 'hide_operands': [(8, '0')], 'restore_operands': [(9, '0'), (11, '1')], 'scan_rtx_reg': [(4, '9'), (4, '262')], 'scan_rtx': [(8, '2')], 'note_sets_clobbers': [(2, '2'), (1, '4')], 'regrename_optimize': [(36, '3')], 'searchc': [(2, '1'), (15, '7'), (2, '11')], 'ggc_alloc_stat': [(11, '50')], 'init_ggc': [(4, '0'), (7, '12')], 'ggc_print_statistics': [(3, '51')], 'ggc_pch_alloc_object': [(3, '1')], 'ggc_pch_read': [(6, '1')], 'setup_incoming_promotions': [(3, '16'), (4, '19')], 'try_combine': [(7, '1'), (100, '7'), (6, '15'), (7, '28'), (3, '31'), (68, '32'), (29, '209'), (59, '266'), (27, '298'), (7, '491'), (5, '539'), (5, '1070'), (5, '1074')], 'record_value_for_reg': [(2, '37')], 'distribute_links': [(2, '47')], 'combine_simplify_rtx': [(77, '0'), (545, '113'), (2, '161'), (6, '508'), (41, '598'), (17, '775'), (7, '843')], 'update_table_tick': [(2, '0')], 'check_promoted_subreg': [(2, '3'), (2, '4')], 'do_SUBST': [(5, '2')], 'expand_field_assignment': [(2, '15')], 'can_combine_p': [(11, '5')], 'combinable_i3pat': [(24, '8')], 'if_then_else_cond': [(21, '6'), (15, '16')], 'force_to_mode': [(29, '30'), (19, '39'), (4, '131')], 'expand_compound_operation': [(16, '0'), (5, '7')], 'simplify_shift_const_1': [(135, '3'), (1, '5'), (1, '312'), (3, '365')], 'apply_distributive_law': [(21, '5')], 'make_extraction': [(34, '0'), (132, '6')], 'make_compound_operation': [(42, '13'), (39, '27')], 'simplify_comparison': [(31, '1'), (6, '111'), (16, '131'), (86, '138'), (4, '219')], 'recog_for_combine': [(4, '72')], 'rtx_equal_for_field_assignment_p': [(3, '0')], 'subst': [(112, '13')], 'find_split_point': [(21, '1'), (3, '21')], 'distribute_notes': [(77, '154')], 'move_deaths': [(28, '6'), (5, '8'), (14, '31')], 'combine_instructions': [(2, '7')], 'copy_cost': [(5, '3'), (5, '10')], 'record_reg_classes': [(49, '9'), (1, '16'), (1, '18'), (6, '146'), (1, '150'), (8, '167')], 'scan_one_insn': [(1, '48')], 'find_costs_and_classes': [(3, '11'), (13, '20'), (9, '24'), (8, '32')], 'ira_tune_allocno_costs_and_cover_classes': [(2, '21')], 'df_byte_lr_alloc': [(3, '15')], 'df_print_bb_index': [(4, '7')], 'df_rd_simulate_one_insn': [(8, '8')], 'bmp_iter_set_init': [(3, '19'), (3, '19')], 'df_rd_transfer_function': [(3, '5')], 'df_rd_confluence_n': [(7, '3')], 'df_rd_init_solution': [(15, '0')], 'df_rd_local_compute': [(4, '12')], 'df_rd_alloc': [(3, '9')], 'df_lr_alloc': [(4, '9')], 'df_lr_local_compute': [(14, '3'), (3, '37')], 'df_lr_init': [(15, '0')], 'df_lr_reset': [(16, '0')], 'df_live_finalize': [(15, '5')], 'df_live_init': [(16, '5')], 'df_live_local_compute': [(14, '3')], 'df_live_reset': [(16, '0')], 'df_live_alloc': [(4, '8')], 'df_chain_remove_problem': [(13, '0'), (6, '3'), (3, '6'), (4, '136')], 'df_chain_create_bb_process_use': [(4, '0'), (2, '93')], 'df_byte_lr_init': [(15, '0')], 'df_byte_lr_expand_bitmap': [(8, '0')], 'df_byte_lr_local_compute': [(7, '2')], 'df_byte_lr_reset': [(16, '0')], 'df_note_compute': [(15, '0')], 'df_md_init': [(4, '2')], 'df_md_local_compute': [(22, '11'), (1, '13'), (4, '16')], 'df_md_reset': [(16, '0')], 'df_md_alloc': [(4, '9')], 'propagate_tree_value_into_stmt': [(3, '22')], 'VEC_expr_hash_elt_t_heap_safe_push': [(2, '0')], 'normalize': [(4, '0'), (1, '7')], 'shift_right': [(5, '0')], 'sreal_div': [(5, '0')], 'validate_change_1': [(1, '2')], 'general_operand': [(3, '0'), (8, '27')], 'constrain_operands': [(1, '0'), (14, '1'), (10, '2'), (9, '5'), (3, '144'), (2, '304')], 'memory_operand': [(6, '0')], 'register_operand': [(18, '0'), (9, '2')], 'asm_operand_ok': [(8, '13')], 'insn_invalid_p': [(17, '5')], 'validate_replace_rtx_1': [(14, '1'), (4, '2'), (3, '57')], 'immediate_operand': [(2, '0')], 'nonmemory_operand': [(5, '1')], 'ordered_comparison_operator': [(4, '0')], 'comparison_operator': [(6, '0')], 'preprocess_constraints': [(16, '11'), (10, '12')], 'if_test_bypass_p': [(11, '0')], 'peephole2_optimize': [(8, '88')], '__dpd32FromNumber': [(1, '6'), (1, '7'), (8, '29')], 'lto_input_1_unsigned': [(4, '6')], 'dump_generic_node': [(23, '50'), (36, '80'), (11, '114')], 'print_declaration': [(15, '0')], 'expand_expr_real_1': [(85, '2'), (5, '3'), (16, '20'), (21, '22'), (5, '23'), (21, '25'), (13, '38'), (3, '66'), (103, '198'), (14, '569'), (6, '769'), (6, '815'), (9, '998'), (10, '1013'), (17, '1116'), (22, '1928')], 'categorize_ctor_elements_1': [(1, '44')], 'safe_from_p': [(3, '4'), (11, '13')], 'get_inner_reference': [(4, '21')], 'move_by_pieces': [(6, '2'), (30, '3')], 'expand_expr_addr_expr_1': [(11, '40')], 'expand_expr_real_2': [(9, '1'), (13, '95'), (1, '126'), (2, '249'), (4, '298'), (15, '301'), (2, '486')], 'reduce_to_bit_field_precision': [(3, '0')], 'expand_constructor': [(6, '8')], 'expand_assignment': [(5, '4'), (19, '35'), (5, '42'), (11, '137'), (4, '151'), (17, '153'), (7, '154'), (4, '155')], 'store_field': [(1, '0')], 'store_expr': [(18, '17'), (4, '26')], 'emit_group_load_1': [(8, '26')], 'emit_move_insn': [(6, '2')], 'emit_move_insn_1': [(7, '6')], 'emit_block_move_hints': [(4, '4'), (11, '98')], 'force_operand': [(6, '0')], 'convert_modes': [(6, '20')], 'convert_move': [(23, '46')], 'emit_move_complex_push': [(31, '1')], 'read_complex_part': [(4, '1')], 'emit_group_store': [(53, '30')], 'try_tablejump': [(6, '0')], 'execute_fixup_cfg': [(3, '50')], 'get_chain_decl': [(16, '0')], 'remap_vla_decls': [(2, '57')], 'lookup_tramp_for_decl': [(1, '0'), (1, '8')], 'get_local_debug_decl': [(9, '0')], 'get_nonlocal_debug_decl': [(9, '2')], 'note_nonlocal_vla_type': [(2, '0')], 'demangle_template': [(4, '0'), (59, '5')], 'consume_count': [(5, '0')], 'register_Btype': [(4, '8')], 'get_count': [(5, '0')], 'ada_demangle': [(17, '4')], 'snarf_numeric_literal': [(8, '5')], 'demangle_function_name': [(4, '5'), (13, '13'), (4, '17')], 'do_type': [(34, '0'), (10, '96')], 'demangle_qualified': [(33, '4')], 'internal_cplus_demangle': [(35, '4'), (2, '5'), (7, '9')], 'demangle_signature': [(2, '1'), (7, '12'), (8, '13'), (3, '14'), (100, '16'), (5, '154')], 'demangle_args': [(30, '2')], 'gnu_special': [(32, '0'), (20, '4')], 'demangle_template_template_parm': [(19, '0')], 'cplus_demangle_opname': [(6, '36')], 'enter_macro_context': [(89, '9')], '_cpp_create_definition': [(19, '11'), (3, '12')], '_cpp_builtin_macro_text': [(2, '32')], '_cpp_save_parameter': [(4, '14'), (11, '17')], 'alloc_expansion_token': [(10, '10'), (3, '13')], 'cpp_macro_definition': [(4, '72')], 'cplus_demangle_v3_components': [(6, '0')], 'insn_sets_btr_p': [(5, '4')], 'augment_live_range': [(2, '27'), (2, '60')], 'btr_def_live_range': [(5, '5'), (12, '54'), (1, '55')], 'clear_btr_from_live_range': [(13, '1')], 'begin_schedule_ready': [(2, '14')], 'ebb_compute_jump_reg_dependencies': [(1, '7')], 'ebb_fix_recovery_cfg': [(4, '1')], 'schedule_ebbs': [(5, '43')], 'df_scan_free_internal': [(7, '4')], 'df_ref_create_structure': [(33, '0')], 'df_install_ref': [(3, '0')], 'df_reg_chain_unlink': [(4, '65')], 'df_get_regular_block_artificial_uses': [(1, '1')], 'VEC_df_ref_stack_safe_push': [(2, '2')], 'df_ref_record': [(2, '20')], 'df_refs_add_to_chains': [(2, '4'), (2, '18'), (2, '34'), (11, '54')], 'df_get_exit_block_use_set': [(4, '2')], 'df_exit_block_uses_collect': [(14, '4')], 'df_def_record_1': [(5, '0'), (3, '2')], 'df_insn_refs_collect': [(5, '56')], 'df_refs_verify': [(6, '3')], 'df_insn_refs_verify': [(2, '8')], 'df_insn_rescan_all': [(12, '7'), (3, '30')], 'df_process_deferred_rescans': [(1, '12'), (3, '80')], 'df_reg_chain_mark': [(15, '0')], 'update_path': [(1, '7')], 'valueize_refs': [(12, '1'), (12, '2')], 'vn_nary_op_insert_pieces': [(6, '22')], 'vn_nary_op_insert': [(6, '33')], 'vn_nary_op_insert_stmt': [(6, '32')], 'copy_nary': [(8, '7'), (6, '22')], 'VN_INFO_GET': [(2, '3')], 'copy_reference_ops_from_ref': [(4, '0')], 'vn_reference_fold_indirect': [(4, '74')], 'vn_reference_insert_pieces': [(2, '2')], 'vn_reference_lookup_pieces': [(2, '24')], 'vn_reference_insert': [(2, '3')], 'vn_nary_op_lookup_stmt': [(27, '0')], 'visit_copy': [(6, '0')], 'vn_phi_compute_hash': [(3, '8')], 'defs_to_varying': [(20, '0'), (4, '4')], 'visit_use': [(1, '49'), (3, '49'), (1, '50'), (7, '64')], 'next_htab_element': [(3, '2')], 'regstat_compute_ri': [(1, '3'), (3, '8')], 'mpn_div_qr_1_preinv': [(4, '4')], 'mpz_set_ui': [(26, '1')], 'mpz_abs_sub': [(9, '15'), (36, '17')], 'mpz_mul': [(7, '0')], 'mpz_div_qr': [(2, '0')], 'mpz_gcd': [(38, '21')], 'mpz_gcdext': [(10, '123')], 'mpz_ui_pow_ui': [(10, '0')], 'mpz_powm': [(11, '9'), (1, '13')], 'mpz_powm_ui': [(8, '0')], 'mpz_rootrem': [(108, '0')], 'df_set_blocks': [(2, '2'), (3, '8'), (5, '125')], 'df_finish_pass': [(4, '15')], 'df_set_bb_info': [(2, '0')], 'df_remove_problem': [(2, '12')], 'df_worklist_dataflow': [(4, '11')], 'df_analyze_problem': [(1, '3')], 'df_find_def': [(4, '0')], 'df_find_use': [(4, '0')], 'df_print_regset': [(4, '3')], 'df_print_byte_regset': [(44, '2')], 'df_dump_region': [(22, '0')], 'remove_dead_inserted_code': [(1, '3'), (3, '8'), (4, '43')], 'VEC_pre_expr_heap_safe_push': [(2, '2')], 'alloc_expression_id': [(15, '25')], 'bitmap_find_leader': [(10, '26')], 'get_constant_for_value_id': [(12, '26')], 'phi_translate': [(81, '1'), (35, '2'), (2, '11'), (2, '12'), (1, '13'), (9, '14'), (17, '122')], 'bitmap_set_subtract': [(12, '4')], 'find_or_generate_expression': [(7, '30')], 'constant_after_peeling': [(9, '0')], 'fixup_reorder_chain': [(3, '288')], 'curr_insn_locator': [(4, '10')], 'cfg_layout_can_duplicate_bb_p': [(3, '3')], 'record_effective_endpoints': [(6, '56')], 'break_superblocks': [(3, '0'), (2, '37')], 'can_copy_bbs_p': [(6, '13')], 'copy_bbs': [(2, '23')], 'et_recomp_min': [(5, '0')], 'et_splay': [(2, '108')], 'add_unsuitable_type': [(44, '1')], 'get_stmt_accesses': [(2, '55')], 'VEC_type_wrapper_t_heap_safe_push': [(2, '2')], 'xatexit': [(23, '0')], 'bp_unpack_value': [(6, '1')], 'bp_pack_value': [(2, '17')], 'lto_streamer_cache_insert_1': [(5, '10')], 'check_decl': [(7, '1')], 'analyze_function': [(12, '5')], 'set_function_state': [(1, '3'), (2, '8')], 'create_loop_fn': [(1, '0')], 'separate_decls_in_region_stmt': [(12, '12')], 'parallelize_loops': [(73, '34')], 'num_mul': [(90, '6')], 'num_lshift': [(6, '0')], 'num_rshift': [(5, '0'), (8, '2')], 'interpret_float_suffix': [(8, '0')], 'cpp_classify_number': [(3, '16')], 'cpp_interpret_integer': [(9, '0'), (13, '2')], 'num_greater_eq': [(3, '9')], '_cpp_parse_expr': [(5, '258'), (21, '665')], 'rest_of_decl_compilation': [(3, '0')], 'register_pass': [(2, '2')], 'execute_all_ipa_transforms': [(4, '17')], 'ipa_read_summaries_1': [(5, '29')], 'dupargv': [(27, '0')], 'pool_alloc': [(1, '5'), (4, '51')], 'pool_free': [(7, '1')], 'create_ddg': [(8, '6'), (6, '60')], 'add_edge_to_ddg': [(2, '8')], 'VEC_eh_region_gc_safe_push': [(2, '2')], 'VEC_eh_landing_pad_gc_safe_push': [(2, '2')], 'VEC_uchar_gc_safe_push': [(2, '2')], 'convert_to_eh_region_ranges': [(8, '35')], 'VEC_operand_entry_t_heap_safe_push': [(2, '2')], 'build_and_add_sum': [(8, '35'), (2, '41'), (2, '49')], 'rewrite_expr_tree': [(2, '36'), (2, '46'), (3, '86')], 'ira_reassign_conflict_allocnos': [(5, '3')], 'ira_sort_regnos_for_alter_reg': [(7, '1'), (20, '2'), (4, '17')], 'update_copy_costs': [(29, '4')], 'push_allocno_to_stack': [(3, '5')], 'add_allocno_to_ordered_bucket': [(34, '6')], 'ira_loop_edge_freq': [(2, '91')], 'setup_allocno_priorities': [(1, '4')], 'update_conflict_hard_regno_costs': [(15, '0'), (23, '3')], 'assign_hard_reg': [(4, '4'), (1, '5')], 'coalesce_allocnos': [(4, '6')], 'setup_coalesced_allocno_costs_and_nums': [(2, '0'), (5, '6'), (5, '10')], 'ira_mark_allocation_change': [(11, '21')], 'allocno_reload_assign': [(6, '1'), (1, '91')], 'ira_reuse_stack_slot': [(50, '3')], 'color_pass': [(26, '29'), (2, '37'), (8, '41')], 'vect_build_loop_niters': [(9, '6')], 'vect_generate_tmps_on_preheader': [(9, '13')], 'mode_signbit_p': [(5, '1')], 'simplify_const_relational_operation': [(3, '12'), (41, '18')], 'avoid_constant_pool_reference': [(2, '5'), (2, '12')], 'simplify_subreg': [(2, '126')], 'simplify_unary_operation': [(76, '0'), (10, '91')], 'simplify_binary_operation_1': [(23, '11'), (18, '12'), (8, '174'), (4, '175'), (7, '177'), (36, '399'), (10, '400')], 'simplify_plus_minus': [(5, '89')], 'simplify_const_binary_operation': [(12, '85')], 'simplify_const_unary_operation': [(8, '7'), (1, '9'), (114, '124')], 'delegitimize_mem_from_attrs': [(5, '35')], 'find_opt': [(3, '3')], 'compute_global_livein': [(6, '47')], 'dump_decl_set': [(19, '5')], 'dump_names_replaced_by': [(11, '5')], 'dump_update_ssa': [(13, '9')], 'delete_update_ssa': [(4, '8')], 'create_new_def_for': [(2, '9')], 'mark_set_for_renaming': [(9, '5')], 'mark_def_interesting': [(11, '5')], 'prepare_block_for_update': [(14, '2'), (2, '32')], 'insert_phi_nodes_for': [(2, '17'), (6, '194')], 'insert_updated_phi_nodes_for': [(2, '79')], 'register_new_update_set': [(11, '4')], 'rewrite_update_enter_block': [(4, '181')], 'mark_def_sites_block': [(48, '0'), (10, '2')], 'can_assign_to_reg_without_clobbers_p': [(23, '4')], 'gcse_constant_p': [(3, '6')], 'want_to_gcse_p': [(2, '0')], 'compute_transp': [(12, '182')], 'compute_transpout': [(4, '13')], 'hoist_expr_reaches_here_p': [(5, '23')], 'insert_insn_end_basic_block': [(6, '2')], 'update_ld_motion_stores': [(3, '18')], 'pre_expr_reaches_here_p_work': [(3, '18')], 'find_used_regs': [(2, '0')], 'cprop_jump': [(2, '10')], 'one_cprop_pass': [(8, '59')], 'unswitch_single_loop': [(3, '24')], 'c_common_init_options': [(1, '8')], 'defer_opt': [(48, '0'), (6, '2')], 'cgraph_clone_inlined_nodes': [(3, '37')], 'cgraph_mark_inline_edge': [(1, '2'), (1, '33')], 'compute_inline_parameters': [(6, '27')], 'try_inline': [(29, '0'), (4, '7')], 'lto_output_tree_ref': [(2, '1')], 'lto_output_tree': [(3, '27')], 'write_symbol_vec': [(4, '8'), (1, '35')], 'output_bb': [(2, '11'), (2, '31')], 'remove_duplicates': [(41, '9')], 'compute_function_frequency': [(6, '0'), (21, '8')], 'set_even_probabilities': [(4, '9')], 'dump_prediction': [(2, '6')], 'return_prediction': [(4, '0')], 'predict_paths_for_bb': [(2, '5')], 'propagate_freq': [(2, '45'), (4, '62')], 'estimate_bb_frequencies': [(2, '20')], 'tree_estimate_probability': [(2, '338'), (9, '435')], 'expensive_function_p': [(3, '19')], 'real_to_hexadecimal': [(4, '3')], 'do_add': [(20, '4')], 'round_for_format': [(12, '0')], 'real_to_integer2': [(1, '0')], 'real_to_decimal_for_mode': [(49, '4')], 'real_from_string': [(12, '10')], 'encode_ieee_quad': [(2, '0')], 'encode_ieee_extended': [(3, '3')], 'analyze_transpose': [(1, '12')], 'check_allocation_function': [(5, '3'), (3, '79'), (2, '80'), (2, '85')], 'update_type_size': [(1, '3'), (3, '4')], 'analyze_matrix_accesses': [(11, '36'), (33, '62')], 'transform_access_sites': [(10, '38')], 'check_var_notmodified_p': [(2, '9')], 'transform_allocation_sites': [(3, '0'), (6, '84'), (5, '170')], 'mark_stmt_necessary': [(7, '1')], 'mark_operand_necessary': [(5, '7')], 'reload_cse_simplify_set': [(6, '4')], 'reload_cse_simplify_operands': [(11, '1'), (5, '21'), (9, '24'), (6, '51'), (4, '65'), (5, '189')], 'reload_combine_note_use': [(12, '3')], 'reload_combine_note_store': [(1, '0'), (1, '1'), (3, '2')], 'reload_combine': [(22, '6'), (6, '100')], 'move2add_note_store': [(1, '4'), (6, '5')], 'reload_cse_regs': [(39, '77')], 'cselib_reset_table': [(1, '8'), (1, '11'), (3, '33')], 'cselib_invalidate_regno': [(8, '35')], 'new_cselib_val': [(1, '0')], 'discard_useless_locs': [(5, '3')], 'expand_loc': [(5, '5')], 'cselib_process_insn': [(3, '37')], 'lex_string': [(7, '28')], 'dump_enable_all': [(4, '0'), (8, '8')], 'ix86_compute_frame_layout': [(4, '2'), (1, '15')], 'ix86_expand_prologue': [(5, '5'), (10, '6'), (36, '7'), (3, '286')], 'ix86_split_long_move': [(21, '1'), (19, '2')], 'ix86_function_specific_save': [(2, '1'), (2, '33')], 'type_natural_mode': [(6, '0'), (5, '1'), (9, '3')], 'ix86_decompose_address': [(7, '45')], 'ix86_rtx_costs': [(20, '81')], 'legitimate_pic_address_disp_p': [(7, '2')], 'legitimate_constant_p': [(5, '2')], 'ix86_legitimate_address_p': [(5, '57')], 'ix86_delegitimize_address': [(5, '0'), (5, '8')], 'legitimize_pic_address': [(11, '0')], 'ix86_legitimize_address': [(12, '5'), (5, '26'), (5, '30'), (2, '48')], 'ix86_expand_vec_perm_builtin_1': [(4, '9'), (3, '135'), (6, '176')], 'ix86_adjust_cost': [(4, '16')], 'ix86_valid_target_attribute_tree': [(2, '1')], 'ix86_check_movabs': [(4, '0')], 'legitimate_pic_operand_p': [(5, '2')], 'print_reg': [(3, '2')], 'print_operand_address': [(2, '48')], 'ix86_expand_vector_move': [(15, '14')], 'ix86_fixup_binary_operands': [(1, '7')], 'ix86_match_ccmode': [(4, '0')], 'ix86_split_to_parts': [(13, '5'), (5, '25')], 'scale_counter': [(7, '0')], 'ix86_expand_movmem': [(5, '20')], 'memory_address_length': [(16, '2')], 'ix86_attr_length_address_default': [(4, '7')], 'x86_order_regs_for_local_alloc': [(2, '0')], 'output_387_reg_move': [(3, '0')], 'allocate_initial_values': [(5, '0')], 'gt_ggc_mx_initial_value_struct': [(3, '6')], 'gt_pch_p_20initial_value_struct': [(6, '3')], 'gt_pch_nx_initial_value_struct': [(3, '6')], 'forward_propagate_addr_expr': [(12, '152'), (12, '165')], 'can_propagate_from': [(1, '2')], 'curr_statistics_hash': [(5, '3')], 'write_defs': [(3, '0')], 'collect_ht_nodes': [(3, '0')], 'save_macros': [(13, '5')], '_cpp_save_pushed_macros': [(4, '2'), (3, '30')], 'pp_file_change': [(1, '16')], 'get_object_alignment': [(3, '19')], 'c_strlen': [(13, '0')], 'fold_builtin_memset': [(7, '4')], 'rewrite_call_expr': [(2, '6')], 'validate_arglist': [(23, '2')], 'build_call_expr_loc': [(1, '5')], 'fold_builtin_n': [(4, '239'), (3, '350'), (3, '361')], 'fold_builtin_memory_op': [(3, '37')], 'fold_builtin_interclass_mathfn': [(6, '23')], 'fold_builtin_classify': [(48, '7'), (122, '84'), (62, '221')], 'expand_builtin': [(6, '14'), (6, '19')], 'gimple_rewrite_call_expr': [(1, '5')], 'fold_call_stmt': [(5, '11'), (3, '14')], 'set_builtin_user_assembler_name': [(5, '0')], 'symbolic_operand': [(4, '0')], 'copy_rtx': [(3, '3')], 'iv_analyze_biv': [(5, '28'), (5, '49')], 'dump_iv_info': [(2, '0')], 'simple_reg_p': [(2, '0')], 'iv_get_reaching_def': [(4, '0')], 'iv_analyze_expr': [(17, '6'), (31, '11'), (48, '16')], 'iv_analyze_def': [(2, '8')], 'implies_p': [(5, '14')], 'canonicalize_iv_subregs': [(8, '127')], 'mark_altered': [(5, '0')], 'simplify_using_initial_values': [(8, '116')], 'get_simple_loop_desc': [(4, '25')], 'replace_phi_edge_with_variable': [(4, '15')], 'tree_ssa_phiopt_worker': [(6, '77')], 'extract_omp_for_data': [(2, '40'), (5, '163')], 'create_omp_child_function': [(1, '0')], 'create_task_copyfn': [(85, '0')], 'copy_var_decl': [(6, '0')], 'gimple_omp_subcode': [(3, '0')], 'expand_omp_for_generic': [(83, '40'), (6, '76'), (5, '174'), (3, '310')], 'expand_omp_for': [(7, '7'), (14, '96'), (39, '111'), (14, '119'), (5, '134'), (10, '385')], 'scan_omp_1_op': [(2, '0')], 'fixup_remapped_decl': [(6, '4')], 'scan_sharing_clauses': [(3, '50')], 'lower_omp': [(13, '3'), (44, '235')], 'make_node_stat': [(10, '0')], 'simple_cst_equal': [(1, '2'), (17, '4'), (3, '7'), (1, '8'), (8, '11')], 'type_hash_eq': [(7, '18'), (26, '21')], 'decl_assembler_name': [(2, '0')], 'copy_node_stat': [(27, '0'), (6, '11')], 'build_low_bits_mask': [(3, '0')], 'build_constructor_from_list': [(1, '0')], 'build_one_cst': [(4, '4')], 'decl_address_invariant_p': [(6, '0')], 'decl_address_ip_invariant_p': [(8, '0')], 'skip_simple_arithmetic': [(6, '0')], 'contains_placeholder_p': [(26, '2'), (16, '3')], 'recompute_tree_invariant_for_addr_expr': [(5, '4'), (93, '5'), (3, '26'), (3, '33'), (3, '48')], 'find_placeholder_in_expr': [(2, '0')], 'build4_stat': [(8, '0')], 'substitute_in_expr': [(3, '0')], 'build2_stat': [(9, '0')], 'build5_stat': [(9, '0')], 'build6_stat': [(20, '0')], 'build_type_no_quals': [(8, '0')], 'maybe_canonicalize_argtypes': [(5, '0')], 'get_narrower': [(7, '4'), (25, '5')], 'walk_tree_1': [(37, '8')], 'variably_modified_type_p': [(10, '0'), (3, '4'), (6, '5')], 'get_callee_fndecl': [(5, '2')], 'reconstruct_complex_type': [(8, '0')], 'build_vector_type_for_mode': [(6, '1'), (6, '2')], 'needs_to_live_in_memory': [(3, '0')], 'signed_or_unsigned_type_for': [(5, '0')], 'find_decls_types_r': [(2, '6')], 'free_lang_data_in_decl': [(3, '1')], 'gen_decl': [(16, '0')], 'gen_type': [(9, '7'), (4, '30')], 'gt_pch_save': [(6, '100')], 'ebitmap_set_bit': [(9, '14')], 'ebitmap_last_set_bit': [(11, '0')], 'ebitmap_ior_into': [(2, '23')], 'ebitmap_equal_p': [(8, '17')], 'check_format_info_main': [(15, '0'), (84, '2'), (9, '107'), (49, '179'), (6, '496')], 'maybe_read_dollar_number': [(1, '10')], 'check_format_arg': [(28, '3'), (82, '4'), (6, '300')], 'handle_format_attribute': [(19, '2')], 'graphds_dfs': [(30, '8')], 'graphds_domtree': [(2, '33')], 'extend_rgns': [(13, '11'), (2, '126'), (2, '144')], 'sched_rgn_init': [(15, '742')], 'haifa_find_rgns': [(6, '624')], 'compute_trg_info': [(29, '0')], 'dump_region_dot': [(2, '29')], 'free_rgn_deps': [(2, '78')], 'compute_priorities': [(2, '91')], 'is_cfg_nonregular': [(1, '42')], 'compute_block_dependences': [(1, '115')], 'sched_rgn_compute_dependencies': [(1, '279'), (2, '284')], 'sched_rgn_local_init': [(6, '63'), (3, '349'), (3, '353'), (3, '358')], 'rgn_add_block': [(2, '5')], 'advance_target_bb': [(1, '2')], 'find_conditional_protection': [(2, '113')], 'extract_edgelst': [(44, '5')], 'decide_unrolling_and_peeling': [(23, '26')], 'analyze_insns_in_loop': [(28, '122')], 'duplicate_loop_to_header_edge': [(12, '9'), (16, '35'), (9, '100'), (23, '101'), (3, '102'), (9, '103'), (2, '122')], 'set_zero_probability': [(2, '43')], 'fix_bb_placements': [(4, '82')], 'remove_path': [(12, '20'), (42, '30'), (2, '34')], 'add_loop': [(2, '12')], 'update_dominators_in_loop': [(2, '9')], 'create_preheader': [(2, '22')], 'fix_loop_structure': [(3, '10'), (1, '115'), (2, '120')], 'find_loads': [(2, '0'), (4, '1')], 'store_killed_in_pat': [(5, '2')], 'replace_store_insn': [(17, '1')], 'one_store_motion_pass': [(30, '1276')], 'loc_list_from_tree': [(4, '4'), (12, '7'), (5, '37'), (3, '235'), (6, '430')], 'loc_descriptor': [(47, '9')], 'mem_loc_descriptor': [(114, '5'), (5, '6'), (3, '139')], 'add_const_value_attribute': [(10, '9')], 'def_cfa_1': [(2, '0'), (15, '4')], 'loc_descr_plus_const': [(13, '5')], 'flush_queued_reg_saves': [(2, '0')], 'dwarf2out_frame_debug_expr': [(12, '1'), (4, '79'), (3, '97')], 'dwarf2out_frame_debug': [(5, '91')], 'dwarf2out_begin_epilogue': [(9, '0')], 'maybe_emit_file': [(1, '3')], 'dwarf2out_begin_prologue': [(14, '0'), (4, '2'), (13, '7')], 'output_cfis': [(25, '52')], 'dwarf2out_switch_text_section': [(3, '13')], 'decl_ultimate_origin': [(3, '7')], 'add_child_die': [(2, '0')], 'reference_to_unused': [(7, '1')], 'rtl_for_decl_location': [(7, '0')], 'dw_loc_list_1': [(3, '5')], 'VEC_pubname_entry_gc_safe_push': [(2, '2')], 'add_location_or_const_value_attribute': [(4, '4')], 'is_redundant_typedef': [(9, '7')], 'add_pubtype': [(3, '0')], 'base_type_die': [(4, '0')], 'add_ranges_num': [(12, '0')], 'scope_die_for': [(5, '2')], 'splice_child_die': [(8, '0')], 'gen_decl_die': [(9, '27')], 'gen_type_die_with_usage': [(3, '3'), (3, '56')], 'process_scope_var': [(2, '0')], 'dwarf2out_imported_module_or_decl_1': [(12, '16')], 'gen_generic_params_dies': [(2, '5')], 'generic_parameter_die': [(4, '2')], 'add_type_attribute': [(5, '0')], 'gt_ggc_mx_var_loc_node': [(13, '5')], 'gt_pch_nx_var_loc_node': [(34, '3')], 'dwarf2out_imported_module_or_decl': [(2, '2')], 'resolve_addr_in_expr': [(6, '0')], 'resolve_addr': [(2, '11')], 'move_linkage_attr': [(35, '1')], 'premark_types_used_by_global_vars_helper': [(4, '4')], 'prune_unused_types_prune': [(16, '40')], 'add_sibling_attributes': [(2, '7')], 'add_ranges_by_labels': [(29, '0')], 'dwarf2out_finish': [(2, '96'), (2, '184')], 'maybe_apply_pragma_weak': [(15, '0')], 'flow_loop_nodes_find': [(3, '3'), (2, '39'), (10, '86')], 'record_loop_exits': [(2, '23')], 'get_loop_latch_edges': [(2, '15')], 'get_loop_body': [(3, '1')], 'establish_preds': [(1, '0')], 'flow_loops_find': [(9, '1'), (4, '40'), (2, '60')], 'get_loop_body_in_dom_order': [(3, '2')], 'get_loop_body_in_bfs_order': [(2, '14')], 'get_loop_exit_edges': [(2, '21')], 'add_bb_to_loop': [(12, '42')], 'remove_bb_from_loops': [(12, '27')], 'single_succ_edge': [(2, '2')], 'verify_loop_structure': [(14, '12'), (3, '13'), (3, '22'), (2, '82'), (2, '97'), (2, '138'), (2, '196'), (81, '211'), (4, '366')], 'loop_preheader_edge': [(2, '23')], 'is_loop_exit': [(2, '5')], 'bitmap_obstack_alloc_stat': [(6, '4')], 'bitmap_element_allocate': [(6, '4')], 'bitmap_and_compl': [(4, '14'), (5, '22')], 'bitmap_compl_and_into': [(2, '2')], 'bitmap_elt_ior': [(2, '1'), (10, '2')], 'bitmap_ior': [(4, '21')], 'bitmap_xor': [(2, '22'), (2, '23')], 'bitmap_ior_and_compl': [(4, '60')], 'bitmap_ior_and_into': [(38, '69')], 'reg_save_code': [(20, '4'), (9, '10')], 'setup_save_areas': [(1, '4'), (6, '32'), (24, '39'), (1, '135'), (2, '502')], 'replace_reg_with_saved_mem': [(3, '13'), (1, '14')], 'save_call_clobbered_regs': [(5, '3'), (32, '10'), (3, '158')], 'expand_vector_operations': [(1, '1')], 'free_lv_set': [(2, '5')], 'make_regions_from_the_rest': [(3, '235')], 'vinsn_detach': [(6, '0')], 'av_set_clear': [(3, '2')], 'get_all_loop_exits': [(1, '3'), (3, '66')], '_succ_iter_cond': [(1, '88')], 'merge_fences': [(15, '1'), (10, '8'), (2, '32')], 'extend_insn_data': [(2, '0')], 'cfg_preds_1': [(2, '27'), (12, '36')], 'delete_and_free_basic_block': [(3, '3')], 'sel_remove_bb': [(2, '11')], 'remove_empty_bb': [(6, '4'), (1, '40')], 'sel_remove_empty_bb': [(2, '0'), (18, '10')], 'maybe_tidy_empty_bb': [(13, '8')], 'sel_remove_insn': [(2, '29')], 'find_in_history_vect': [(8, '15')], 'set_unavailable_target_for_expr': [(8, '8')], 'av_set_copy': [(3, '1')], 'init_global_and_expr_for_insn': [(5, '0')], 'tick_check_p': [(9, '1')], 'free_lv_sets': [(3, '22')], 'copy_data_sets': [(6, '18'), (1, '47'), (5, '49'), (1, '64')], 'free_succs_info': [(2, '3')], 'compute_succs_info': [(19, '5')], 'bb_ends_ebb_p': [(2, '24')], 'recompute_rev_top_order': [(2, '20')], 'add_block_to_current_region': [(21, '2')], 'wrapup_global_declaration_1': [(3, '0')], 'wrapup_global_declaration_2': [(4, '3')], 'analyze_scalar_evolution_1': [(80, '1'), (11, '3')], 'handle_aligned_attribute': [(3, '1')], 'c_fully_fold_internal': [(18, '0'), (1, '1'), (8, '31'), (11, '295')], 'c_fully_fold': [(2, '6')], 'c_common_signed_or_unsigned_type': [(1, '23')], 'shorten_binary_op': [(2, '3'), (5, '27')], 'conversion_warning': [(2, '3'), (3, '38')], 'verify_tree': [(2, '1'), (1, '27'), (3, '29'), (2, '31'), (11, '75')], 'pointer_int_sum': [(4, '25')], 'c_common_get_alias_set': [(6, '0')], 'self_promoting_args_p': [(2, '0')], 'check_case_value': [(11, '2')], 'VEC_const_char_p_gc_safe_push': [(2, '0')], 'check_function_arguments_recurse': [(3, '34')], 'fold_offsetof_1': [(5, '17')], 'warn_for_sign_compare': [(5, '1'), (7, '75')], 'handle_tls_model_attribute': [(31, '4')], 'handle_visibility_attribute': [(3, '0')], 'handle_vector_size_attribute': [(6, '0')]}
sizes per file: {'602/diagnostic.bc': (7968, 7981), '602/decContext.bc': (2047, 2047), '602/alloca.bc': (321, 321), '602/tree-ssa-loop-unswitch.bc': (2211, 2217), '602/reload.bc': (50151, 51507), '602/debug.bc': (576, 576), '602/tree-chrec.bc': (11006, 11106), '602/cgraphunit.bc': (16994, 17089), '602/c-omp.bc': (3341, 3344), '602/make-relative-prefix.bc': (1474, 1509), '602/dce.bc': (7802, 7815), '602/regcprop.bc': (6999, 7002), '602/tree-ssa-structalias.bc': (38085, 38246), '602/tree-dfa.bc': (9451, 9479), '602/dbxout.bc': (26916, 26981), '602/sese.bc': (13855, 13878), '602/tree-ssa-ifcombine.bc': (5340, 5356), '602/options.bc': (114683, 114683), '602/getopt1.bc': (0, 0), '602/graphite-poly.bc': (0, 0), '602/print-tree.bc': (10622, 10796), '602/unlink-if-ordinary.bc': (152, 152), '602/double-int.bc': (2683, 2683), '602/tree-switch-conversion.bc': (5998, 5998), '602/langhooks.bc': (3285, 3294), '602/tree-ssa-address.bc': (6095, 6163), '602/tree-ssa-loop-ch.bc': (1828, 1834), '602/regex.bc': (23601, 24207), '602/tree-ssa.bc': (15823, 15890), '602/safe-ctype.bc': (1024, 1024), '602/partition.bc': (840, 840), '602/ipa-type-escape.bc': (11180, 11194), '602/fwprop.bc': (9000, 9017), '602/expmed.bc': (44471, 44731), '602/tree-ssa-operands.bc': (9734, 9782), '602/tree-ssa-loop-im.bc': (15457, 15513), '602/c-lang.bc': (775, 775), '602/sdbout.bc': (536, 536), '602/c-decl.bc': (83884, 84203), '602/tree-ssanames.bc': (1869, 1879), '602/insn-recog.bc': (453517, 453690), '602/tracer.bc': (3160, 3191), '602/bb-reorder.bc': (11044, 11141), '602/cfgbuild.bc': (4011, 4024), '602/sel-sched.bc': (56386, 56610), '602/ira-emit.bc': (9376, 9438), '602/cpp_symtab.bc': (2800, 2853), '602/tree-ssa-uncprop.bc': (3778, 3786), '602/vasprintf.bc': (0, 0), '602/varray.bc': (476, 476), '602/calls.bc': (22767, 22920), '602/jump.bc': (8774, 8798), '602/host-ieee64.bc': (72, 72), '602/varasm.bc': (48233, 48391), '602/fdmatch.bc': (158, 158), '602/c-parser.bc': (58545, 58593), '602/decNumber.bc': (36490, 36769), '602/fixed-value.bc': (10117, 10135), '602/tree-eh.bc': (26749, 26810), '602/tree-phinodes.bc': (3206, 3209), '602/lto-cgraph.bc': (6125, 6144), '602/tree-ssa-threadedge.bc': (4164, 4169), '602/tree-object-size.bc': (9376, 9415), '602/rtl-error.bc': (778, 778), '602/vmsdbgout.bc': (0, 0), '602/tree-ssa-threadupdate.bc': (5862, 5888), '602/ira-lives.bc': (11017, 11082), '602/resource.bc': (6896, 6926), '602/opts.bc': (17050, 17052), '602/function.bc': (32134, 32278), '602/cfgloopanal.bc': (3190, 3210), '602/combine-stack-adj.bc': (2486, 2489), '602/var-tracking.bc': (53310, 53849), '602/md5.bc': (3452, 3452), '602/cgraphbuild.bc': (2133, 2138), '602/ira.bc': (17924, 17984), '602/stor-layout.bc': (15863, 16009), '602/cpp_directives.bc': (17398, 17640), '602/cp-demangle.bc': (24171, 24235), '602/genrtl.bc': (3922, 3922), '602/ipa-prop.bc': (15584, 15595), '602/tree-vect-stmts.bc': (39022, 39315), '602/tree-ssa-copyrename.bc': (2630, 2633), '602/c-semantics.bc': (753, 753), '602/tree-ssa-math-opts.bc': (9282, 9286), '602/pointer-set.bc': (1507, 1545), '602/gimple.bc': (32924, 33025), '602/stub-objc.bc': (1154, 1154), '602/tree-loop-distribution.bc': (10803, 10829), '602/cse.bc': (38818, 39108), '602/tree-outof-ssa.bc': (7968, 7980), '602/coverage.bc': (9943, 9958), '602/sort.bc': (285, 285), '602/rtlanal.bc': (29577, 29652), '602/cpp_line-map.bc': (1761, 1781), '602/tree-ssa-live.bc': (9823, 9901), '602/lcm.bc': (4824, 4832), '602/tree-loop-linear.bc': (3185, 3201), '602/filename_cmp.bc': (53, 53), '602/tree-iterator.bc': (1501, 1517), '602/hashtab.bc': (4900, 4904), '602/getopt.bc': (0, 0), '602/ifcvt.bc': (25106, 25164), '602/make-temp-file.bc': (724, 724), '602/reorg.bc': (164, 164), '602/cgraph.bc': (16407, 16454), '602/c-cppbuiltin.bc': (12507, 12525), '602/modulo-sched.bc': (18235, 18283), '602/tree-vect-data-refs.bc': (25559, 25588), '602/lto-symtab.bc': (4386, 4401), '602/tree-ssa-loop-niter.bc': (24800, 24843), '602/tree-ssa-loop.bc': (1700, 1700), '602/reg-stack.bc': (19794, 19957), '602/loop-init.bc': (1643, 1659), '602/dse.bc': (20933, 21097), '602/rtlhooks.bc': (836, 843), '602/cpp_traditional.bc': (7045, 7049), '602/tree-mudflap.bc': (10584, 10594), '602/sched-vis.bc': (7447, 7449), '602/params.bc': (629, 629), '602/host-linux.bc': (32, 32), '602/gimplify.bc': (48199, 48604), '602/postreload-gcse.bc': (8487, 8490), '602/crc32.bc': (1114, 1114), '602/gimple-low.bc': (4649, 4682), '602/sbitmap.bc': (7359, 7741), '602/regmove.bc': (7858, 7858), '602/insn-attrtab.bc': (972379, 972379), '602/splay-tree.bc': (2006, 2006), '602/ipa-reference.bc': (10538, 10674), '602/tree-ssa-loop-manip.bc': (10082, 10094), '602/cfgcleanup.bc': (14088, 14111), '602/stringpool.bc': (1685, 1685), '602/cpp_lex.bc': (17639, 17696), '602/tree-ssa-loop-ivopts.bc': (39994, 40119), '602/omega.bc': (43388, 43666), '602/objalloc.bc': (823, 828), '602/targhooks.bc': (3998, 3998), '602/ira-build.bc': (18728, 18827), '602/gimple-pretty-print.bc': (17180, 17197), '602/optabs.bc': (57718, 57886), '602/auto-inc-dec.bc': (83, 83), '602/attribs.bc': (2589, 2621), '602/dominance.bc': (10339, 10394), '602/tree-vect-slp.bc': (19173, 19234), '602/mcf.bc': (9206, 9214), '602/sparseset.bc': (1709, 1709), '602/cpp_init.bc': (3689, 3697), '602/tree-sra.bc': (29873, 29917), '602/tree-ssa-sink.bc': (3899, 3922), '602/insn-peep.bc': (0, 0), '602/c-convert.bc': (844, 844), '602/mode-switching.bc': (3282, 3328), '602/lrealpath.bc': (53, 53), '602/dojump.bc': (10285, 10332), '602/lambda-mat.bc': (5104, 5128), '602/insn-opinit.bc': (11848, 11848), '602/fold-const.bc': (151374, 152231), '602/tree-vrp.bc': (49356, 49439), '602/loop-doloop.bc': (0, 0), '602/tree-ssa-propagate.bc': (8260, 8446), '602/cfghooks.bc': (10427, 10570), '602/decimal64.bc': (12020, 12043), '602/pretty-print.bc': (9240, 9452), '602/insn-modes.bc': (2785, 2785), '602/cppdefault.bc': (207, 207), '602/tree-ssa-dse.bc': (3168, 3168), '602/lto-section-out.bc': (2990, 2996), '602/graphite-ppl.bc': (0, 0), '602/fopen_unlocked.bc': (145, 145), '602/tree-tailcall.bc': (8173, 8177), '602/tree-vect-loop.bc': (37348, 37407), '602/tree-vect-patterns.bc': (5290, 5307), '602/reload1.bc': (55622, 55989), '602/graphite-dependences.bc': (0, 0), '602/graphite-clast-to-gimple.bc': (0, 0), '602/intl.bc': (164, 164), '602/tree-if-conv.bc': (8033, 8039), '602/value-prof.bc': (12916, 12931), '602/stmt.bc': (21426, 21623), '602/domwalk.bc': (773, 775), '602/alias.bc': (16412, 16607), '602/tree-data-ref.bc': (42068, 42111), '602/emit-rtl.bc': (33199, 33425), '602/haifa-sched.bc': (35329, 35489), '602/graph.bc': (3049, 3049), '602/tree-nrv.bc': (2349, 2349), '602/sha1.bc': (5985, 6201), '602/final.bc': (19749, 20034), '602/getruntime.bc': (111, 111), '602/tree-ssa-alias.bc': (11378, 11430), '602/gimple-iterator.bc': (5259, 5263), '602/tree-call-cdce.bc': (5443, 5443), '602/ira-conflicts.bc': (7290, 7320), '602/tree-stdarg.bc': (7297, 7340), '602/tree-affine.bc': (7676, 7703), '602/ipa-cp.bc': (9297, 9336), '602/lto-opts.bc': (2386, 2396), '602/loop-invariant.bc': (12581, 12686), '602/xmalloc.bc': (527, 527), '602/xstrndup.bc': (120, 120), '602/lambda-code.bc': (23819, 23893), '602/ipa.bc': (4692, 4723), '602/cfganal.bc': (10940, 10996), '602/physmem.bc': (221, 221), '602/insn-emit.bc': (403981, 404225), '602/lower-subreg.bc': (7533, 7570), '602/cfg.bc': (13034, 13113), '602/c-typeck.bc': (79586, 80049), '602/tree-cfgcleanup.bc': (6552, 6579), '602/concat.bc': (1418, 1418), '602/cfgexpand.bc': (28718, 28777), '602/graphite-blocking.bc': (0, 0), '602/tree-predcom.bc': (16845, 16856), '602/fibheap.bc': (1857, 1857), '602/cpp_identifiers.bc': (852, 867), '602/c-pretty-print.bc': (17287, 17310), '602/dyn-string.bc': (1707, 1707), '602/tree-inline.bc': (34093, 34176), '602/tree-ssa-phiprop.bc': (4590, 4597), '602/cpp_files.bc': (9664, 9692), '602/insn-extract.bc': (37845, 37845), '602/lto-streamer-in.bc': (18635, 18652), '602/timevar.bc': (6941, 6958), '602/profile.bc': (10098, 10114), '602/sched-deps.bc': (27258, 27491), '602/mkstemps.bc': (580, 580), '602/tree-cfg.bc': (55348, 55635), '602/explow.bc': (8586, 8611), '602/print-rtl.bc': (6223, 6254), '602/tree-ssa-ter.bc': (4192, 4203), '602/spaces.bc': (152, 152), '602/tree-complex.bc': (13062, 13062), '602/i386-c.bc': (3300, 3300), '602/cpp_mkdeps.bc': (2632, 2638), '602/convert.bc': (8938, 8954), '602/insn-automata.bc': (148170, 148174), '602/c-pch.bc': (4155, 4158), '602/reginfo.bc': (8691, 8721), '602/gtype-desc.bc': (53226, 53383), '602/bid2dpd_dpd2bid.bc': (92016, 92016), '602/plugin.bc': (5082, 5089), '602/decimal128.bc': (3515, 3564), '602/lto-wpa-fixup.bc': (1416, 1418), '602/cfgrtl.bc': (21908, 22151), '602/dbgcnt.bc': (2016, 2016), '602/c-objc-common.bc': (1001, 1001), '602/varpool.bc': (3698, 3722), '602/insn-output.bc': (334835, 334835), '602/tree-ssa-ccp.bc': (22132, 22143), '602/graphite-interchange.bc': (0, 0), '602/cpp_charset.bc': (13200, 13248), '602/tree-ssa-coalesce.bc': (9854, 9886), '602/regrename.bc': (10584, 10667), '602/hex.bc': (305, 305), '602/version.bc': (21, 21), '602/ipa-utils.bc': (1178, 1197), '602/ggc-page.bc': (6952, 6986), '602/strerror.bc': (7518, 7518), '602/lists.bc': (1026, 1026), '602/xmemdup.bc': (114, 114), '602/combine.bc': (85581, 87608), '602/ira-costs.bc': (13073, 13190), '602/df-problems.bc': (30838, 31154), '602/tree-ssa-copy.bc': (6192, 6195), '602/tree-ssa-dom.bc': (20203, 20210), '602/sreal.bc': (1261, 1276), '602/tree-vectorizer.bc': (2121, 2124), '602/recog.bc': (21252, 21452), '602/decimal32.bc': (2659, 2669), '602/lto-section-in.bc': (2040, 2044), '602/tree-pretty-print.bc': (23458, 23543), '602/init-regs.bc': (760, 760), '602/expr.bc': (74599, 75328), '602/lambda-trans.bc': (293, 293), '602/tree-optimize.bc': (2455, 2458), '602/tree-nested.bc': (15712, 15754), '602/cplus-dem.bc': (27790, 28258), '602/stack-ptr-mod.bc': (360, 360), '602/cpp_macro.bc': (12639, 12784), '602/obstack.bc': (0, 0), '602/cp-demint.bc': (867, 873), '602/bt-load.bc': (11267, 11312), '602/sched-ebb.bc': (4221, 4233), '602/df-scan.bc': (34044, 34191), '602/tree-ssa-loop-prefetch.bc': (9021, 9024), '602/prefix.bc': (870, 871), '602/tree-ssa-sccvn.bc': (25278, 25418), '602/regstat.bc': (4239, 4248), '602/graphite.bc': (103, 103), '602/mini-gmp.bc': (30489, 30767), '602/df-core.bc': (13020, 13129), '602/tree-ssa-pre.bc': (35175, 35397), '602/tree-ssa-loop-ivcanon.bc': (5578, 5592), '602/cfglayout.bc': (8470, 8501), '602/cpp_directives-only.bc': (1357, 1357), '602/et-forest.bc': (2543, 2550), '602/main.bc': (53, 53), '602/ipa-struct-reorg.bc': (23370, 23420), '602/xatexit.bc': (241, 264), '602/lto-streamer.bc': (5814, 5827), '602/vec.bc': (1458, 1458), '602/cc1-checksum.bc': (16, 16), '602/dfp.bc': (4472, 4472), '602/web.bc': (2440, 2440), '602/lbasename.bc': (79, 79), '602/ipa-pure-const.bc': (9080, 9105), '602/tree-parloops.bc': (15863, 15952), '602/cpp_expr.bc': (14336, 14507), '602/passes.bc': (14242, 14256), '602/argv.bc': (1769, 1796), '602/alloc-pool.bc': (830, 842), '602/floatformat.bc': (4508, 4508), '602/ddg.bc': (8672, 8690), '602/except.bc': (17812, 17828), '602/tree-ssa-reassoc.bc': (18189, 18212), '602/ira-color.bc': (24688, 24968), '602/cpp_errors.bc': (578, 578), '602/tree-vect-loop-manip.bc': (16294, 16312), '602/getpwd.bc': (319, 319), '602/simplify-rtx.bc': (41998, 42390), '602/opts-common.bc': (1013, 1016), '602/tree-into-ssa.bc': (25563, 25754), '602/gcse.bc': (26327, 26399), '602/loop-unswitch.bc': (3835, 3841), '602/c-opts.bc': (12984, 13039), '602/ipa-inline.bc': (16113, 16157), '602/lto-streamer-out.bc': (15873, 15887), '602/incpath.bc': (2898, 2939), '602/predict.bc': (16687, 16740), '602/tree-profile.bc': (4398, 4398), '602/real.bc': (22748, 22851), '602/dwarf2asm.bc': (10337, 10337), '602/hooks.bc': (1087, 1087), '602/matrix-reorg.bc': (15264, 15351), '602/tree-ssa-dce.bc': (12071, 12088), '602/postreload.bc': (8682, 8780), '602/cselib.bc': (13340, 13367), '602/sel-sched-dump.bc': (11015, 11015), '602/c-errors.bc': (534, 534), '602/c-lex.bc': (7350, 7357), '602/df-byte-scan.bc': (985, 985), '602/tree-dump.bc': (9214, 9226), '602/i386.bc': (238807, 239127), '602/integrate.bc': (2530, 2547), '602/tree-ssa-forwprop.bc': (10787, 10812), '602/statistics.bc': (2513, 2518), '602/host-ieee128.bc': (80, 80), '602/host-ieee32.bc': (70, 70), '602/xexit.bc': (72, 72), '602/cpp_pch.bc': (5530, 5556), '602/c-ppoutput.bc': (3971, 3972), '602/builtins.bc': (68223, 68549), '602/insn-preds.bc': (11626, 11630), '602/c-dump.bc': (203, 203), '602/rtl.bc': (8309, 8312), '602/loop-iv.bc': (20941, 21087), '602/xcoffout.bc': (0, 0), '602/graphite-scop-detection.bc': (0, 0), '602/tree-ssa-phiopt.bc': (9391, 9401), '602/omp-low.bc': (55666, 56006), '602/c-gimplify.bc': (807, 807), '602/tree.bc': (72327, 72804), '602/c-aux-info.bc': (3269, 3298), '602/ggc-common.bc': (4943, 4949), '602/ebitmap.bc': (6516, 6548), '602/c-format.bc': (60472, 60655), '602/graphds.bc': (3141, 3178), '602/sched-rgn.bc': (26555, 26658), '602/loop-unroll.bc': (14599, 14689), '602/cfgloopmanip.bc': (13538, 13698), '602/store-motion.bc': (8242, 8270), '602/xstrerror.bc': (142, 142), '602/strsignal.bc': (1360, 1360), '602/dwarf2out.bc': (145382, 145941), '602/c-pragma.bc': (11567, 11582), '602/cfgloop.bc': (13996, 14098), '602/xstrdup.bc': (109, 109), '602/bitmap.bc': (11103, 11188), '602/caller-save.bc': (9309, 9421), '602/tree-vect-generic.bc': (5522, 5523), '602/sel-sched-ir.bc': (46716, 46930), '602/graphite-sese-to-poly.bc': (0, 0), '602/toplev.bc': (28456, 28463), '602/tree-scalar-evolution.bc': (20695, 20789), '602/c-common.bc': (155562, 155722), '602/spec_qsort/spec_qsort.bc': (1754, 1754)}
result: 7830759 vs 7857959
